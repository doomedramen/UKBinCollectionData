{"uid":"3bddc5728aedaf3c","name":"Validate Council Output [SouthOxfordshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7f57931d644fea4dd7a0419f9995c47e","time":{"start":1704244776985,"stop":1704244880365,"duration":103380},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f831278bbe0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8300b45180>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f8300b45180>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f831278bbe0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8300b45180>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f8300b45180>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: SouthOxfordshireCouncil","time":{"start":1704244776985,"stop":1704244776986,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SouthOxfordshireCouncil using None and the None is set","time":{"start":1704244776986,"stop":1704244880363,"duration":103377},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704244880364,"stop":1704244880364,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704244880364,"stop":1704244880365,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1432-133"},{"name":"thread","value":"2687-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthOxfordshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":37,"broken":0,"skipped":0,"passed":79,"unknown":0,"total":116},"items":[{"uid":"3fc6222efc448174","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1348//#testresult/3fc6222efc448174","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704180388272,"stop":1704180491793,"duration":103521}},{"uid":"600283c37e8ff991","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1346//#testresult/600283c37e8ff991","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704158452441,"stop":1704158556183,"duration":103742}},{"uid":"d36de7a4701d16f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1345//#testresult/d36de7a4701d16f4","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704114763660,"stop":1704114767317,"duration":3657}},{"uid":"86ebbcfcbe1f5a79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1343//#testresult/86ebbcfcbe1f5a79","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704113860713,"stop":1704113865653,"duration":4940}},{"uid":"83ecff9c56671087","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1341//#testresult/83ecff9c56671087","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704112419952,"stop":1704112425896,"duration":5944}},{"uid":"c3d0e0947efc2e94","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1339//#testresult/c3d0e0947efc2e94","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704112310149,"stop":1704112315033,"duration":4884}},{"uid":"fb73651580bc783a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1338//#testresult/fb73651580bc783a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112250066,"stop":1704112253676,"duration":3610}},{"uid":"c4a5104d04a94716","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1336//#testresult/c4a5104d04a94716","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704111981105,"stop":1704111984795,"duration":3690}},{"uid":"df8314721789ea76","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1335//#testresult/df8314721789ea76","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704111689349,"stop":1704111693054,"duration":3705}},{"uid":"4d49e6423525ce0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1334//#testresult/4d49e6423525ce0a","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704111631175,"stop":1704111635863,"duration":4688}},{"uid":"49fec0da4a85d4a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1332//#testresult/49fec0da4a85d4a4","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704111468187,"stop":1704111471880,"duration":3693}},{"uid":"acf09adf13fe499c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1330//#testresult/acf09adf13fe499c","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704100125805,"stop":1704100133894,"duration":8089}},{"uid":"dc49dfe7afb71aa6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1329//#testresult/dc49dfe7afb71aa6","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704072403978,"stop":1704072408234,"duration":4256}},{"uid":"3b24f92901f8119a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1327//#testresult/3b24f92901f8119a","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1704050548746,"stop":1704050553667,"duration":4921}},{"uid":"71167a2e4db5e2bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1325//#testresult/71167a2e4db5e2bc","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1704044068588,"stop":1704044072983,"duration":4395}},{"uid":"c9ad5f0792e2ae9a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1320//#testresult/c9ad5f0792e2ae9a","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703985971780,"stop":1703985974754,"duration":2974}},{"uid":"9fa81310841a6276","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1316//#testresult/9fa81310841a6276","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703899111248,"stop":1703899115475,"duration":4227}},{"uid":"44a4ecf0f5459eb2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1314//#testresult/44a4ecf0f5459eb2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703853636135,"stop":1703853739959,"duration":103824}},{"uid":"94cb0ff511d56382","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1311//#testresult/94cb0ff511d56382","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703851281768,"stop":1703851385457,"duration":103689}},{"uid":"a983fd18906edfae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1312//#testresult/a983fd18906edfae","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703851267465,"stop":1703851371181,"duration":103716}}]},"tags":[]},"source":"3bddc5728aedaf3c.json","parameterValues":["SouthOxfordshireCouncil","None","None"]}