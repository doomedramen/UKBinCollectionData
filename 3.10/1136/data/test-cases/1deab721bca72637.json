{"uid":"1deab721bca72637","name":"Validate Council Output [HuntingdonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c2822894b8c5df9c3b14f6331988dcc1","time":{"start":1700529888166,"stop":1700529889724,"duration":1558},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f7fb053f400>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f7f9dea39d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f7f9dea39d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f7fb053f400>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f7f9dea39d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f7f9dea39d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: HuntingdonDistrictCouncil","time":{"start":1700529888166,"stop":1700529888167,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from HuntingdonDistrictCouncil using None and the None is set","time":{"start":1700529888167,"stop":1700529889722,"duration":1555},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1700529889722,"stop":1700529889722,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1700529889722,"stop":1700529889724,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az698-468"},{"name":"thread","value":"2718-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"HuntingdonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":19},"items":[{"uid":"53a55191e628cfa8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/53a55191e628cfa8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443141023,"stop":1700443154071,"duration":13048}},{"uid":"37400ecba1d2dea2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/37400ecba1d2dea2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700357001306,"stop":1700357002458,"duration":1152}},{"uid":"954e564d22bbfb4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1133//#testresult/954e564d22bbfb4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270307499,"stop":1700270309115,"duration":1616}},{"uid":"8ae72412f9142a5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1132//#testresult/8ae72412f9142a5b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183935469,"stop":1700183936675,"duration":1206}},{"uid":"68d79880962e477c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1131//#testresult/68d79880962e477c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097556976,"stop":1700097558683,"duration":1707}},{"uid":"4e82837a8bfb93a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1129//#testresult/4e82837a8bfb93a9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700011137825,"stop":1700011139647,"duration":1822}},{"uid":"c97aba12765d2cd5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1128//#testresult/c97aba12765d2cd5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699924632870,"stop":1699924635680,"duration":2810}},{"uid":"fcfda9dbdc92f487","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1127//#testresult/fcfda9dbdc92f487","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699838352937,"stop":1699838354419,"duration":1482}},{"uid":"6a43946f25c810b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1126//#testresult/6a43946f25c810b9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699752090465,"stop":1699752091613,"duration":1148}},{"uid":"6fc662aa1b48dd30","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1125//#testresult/6fc662aa1b48dd30","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699669511269,"stop":1699669513195,"duration":1926}},{"uid":"4cefced487e714a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1124//#testresult/4cefced487e714a2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699578973258,"stop":1699578974874,"duration":1616}},{"uid":"561399221a8de649","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1123//#testresult/561399221a8de649","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699492634035,"stop":1699492635519,"duration":1484}},{"uid":"8518e624b01d3711","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1121//#testresult/8518e624b01d3711","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699481272208,"stop":1699481273449,"duration":1241}},{"uid":"cc6b602bf354df60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1117//#testresult/cc6b602bf354df60","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699445155693,"stop":1699445157848,"duration":2155}},{"uid":"e3f1768087aa47ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1115//#testresult/e3f1768087aa47ba","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699406250295,"stop":1699406251945,"duration":1650}},{"uid":"a3d9e6f8e9408693","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1114//#testresult/a3d9e6f8e9408693","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699320115666,"stop":1699320117140,"duration":1474}},{"uid":"93ee04632559ff5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1113//#testresult/93ee04632559ff5c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699233780162,"stop":1699233781254,"duration":1092}},{"uid":"b3016532b102a83b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1111//#testresult/b3016532b102a83b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699170684979,"stop":1699170686836,"duration":1857}}]},"tags":[]},"source":"1deab721bca72637.json","parameterValues":["HuntingdonDistrictCouncil","None","None"]}