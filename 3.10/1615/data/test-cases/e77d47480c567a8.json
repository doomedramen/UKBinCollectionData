{"uid":"e77d47480c567a8","name":"Validate Council Output [GedlingBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"ea056f0de9fa4e978146da5c02648bd9","time":{"start":1710808070257,"stop":1710808071572,"duration":1315},"status":"failed","statusMessage":"Exception: No results for address lookup found. If correct address is being used, please raise a GitHub issue","statusTrace":"self = <GedlingBoroughCouncil.CouncilClass object at 0x7f81062d17b0>, page = ''\nkwargs = {'headless': True, 'paon': 'Valeside Gardens', 'postcode': None, 'uprn': None, ...}\ndata = {'bins': []}\nuser_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'}\naddress_street = 'Valeside Gardens'\nstage1_url = 'https://apps.gedling.gov.uk/refuse/search.aspx'\nstage1_data = <Response [200]>\nsoup = <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n\n<html><head>\n<title>403 Forbidden</title>\n</head><body>\n<h1>Forbidden</h1>\n<p>You don't have permission to access this resource.</p>\n</body></html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n    \n        data = {\"bins\": []}\n    \n        user_agent = (\n            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) \"\n            \"Chrome/108.0.0.0 Safari/537.36\"\n        )\n        headers = {\"User-Agent\": user_agent}\n    \n        address_street = kwargs.get(\"paon\")\n    \n        # Stage 1 - Fetch initial page to get hidden form values needed for submission\n        stage1_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        stage1_data = requests.get(\n            \"https://apps.gedling.gov.uk/refuse/search.aspx\", headers=headers\n        )\n    \n        soup = BeautifulSoup(stage1_data.text, features=\"html.parser\")\n        try:\n            value_viewstate = soup.find_all(\"input\", {\"id\": \"__VIEWSTATE\"})[0][\"value\"]\n            value_viewstategenerator = soup.find_all(\n                \"input\", {\"id\": \"__VIEWSTATEGENERATOR\"}\n            )[0][\"value\"]\n            value_eventvalidation = soup.find_all(\"input\", {\"id\": \"__EVENTVALIDATION\"})[\n                0\n            ][\"value\"]\n        except:\n            raise Exception(\n                \"Beautiful Soup was not able to get the data back from the Stage 1 URL that we were expecting. Please raise an issue in GitHub\"\n            )\n    \n        # Stage 2 - Now POST the query to get the bin data back\n        stage2_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        post_data = {\n            \"__VIEWSTATE\": value_viewstate,\n            \"__VIEWSTATEGENERATOR\": value_viewstategenerator,\n            \"__EVENTVALIDATION\": value_eventvalidation,\n            \"ctl00$MainContent$street\": address_street,\n            \"ctl00$MainContent$mybutton\": \"Search\",\n        }\n    \n        stage2_request = requests.post(stage2_url, data=post_data, headers=headers)\n    \n        soup = BeautifulSoup(stage2_request.text, features=\"html.parser\")\n        try:\n            bin_refuse_calendar = os.path.basename(\n>               soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_streetgridview_ctl02_calendar1\"}\n                )[0][\"href\"]\n            )\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/GedlingBoroughCouncil.py:64: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nfixturefunc = <function scrape_step at 0x7f810680f250>\nrequest = <FixtureRequest for <Function test_scenario_outline[GedlingBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8105893d90>, 'council': 'GedlingBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <GedlingBoroughCouncil.CouncilClass object at 0x7f81062d17b0>, page = ''\nkwargs = {'headless': True, 'paon': 'Valeside Gardens', 'postcode': None, 'uprn': None, ...}\ndata = {'bins': []}\nuser_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'}\naddress_street = 'Valeside Gardens'\nstage1_url = 'https://apps.gedling.gov.uk/refuse/search.aspx'\nstage1_data = <Response [200]>\nsoup = <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n\n<html><head>\n<title>403 Forbidden</title>\n</head><body>\n<h1>Forbidden</h1>\n<p>You don't have permission to access this resource.</p>\n</body></html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n    \n        data = {\"bins\": []}\n    \n        user_agent = (\n            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) \"\n            \"Chrome/108.0.0.0 Safari/537.36\"\n        )\n        headers = {\"User-Agent\": user_agent}\n    \n        address_street = kwargs.get(\"paon\")\n    \n        # Stage 1 - Fetch initial page to get hidden form values needed for submission\n        stage1_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        stage1_data = requests.get(\n            \"https://apps.gedling.gov.uk/refuse/search.aspx\", headers=headers\n        )\n    \n        soup = BeautifulSoup(stage1_data.text, features=\"html.parser\")\n        try:\n            value_viewstate = soup.find_all(\"input\", {\"id\": \"__VIEWSTATE\"})[0][\"value\"]\n            value_viewstategenerator = soup.find_all(\n                \"input\", {\"id\": \"__VIEWSTATEGENERATOR\"}\n            )[0][\"value\"]\n            value_eventvalidation = soup.find_all(\"input\", {\"id\": \"__EVENTVALIDATION\"})[\n                0\n            ][\"value\"]\n        except:\n            raise Exception(\n                \"Beautiful Soup was not able to get the data back from the Stage 1 URL that we were expecting. Please raise an issue in GitHub\"\n            )\n    \n        # Stage 2 - Now POST the query to get the bin data back\n        stage2_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        post_data = {\n            \"__VIEWSTATE\": value_viewstate,\n            \"__VIEWSTATEGENERATOR\": value_viewstategenerator,\n            \"__EVENTVALIDATION\": value_eventvalidation,\n            \"ctl00$MainContent$street\": address_street,\n            \"ctl00$MainContent$mybutton\": \"Search\",\n        }\n    \n        stage2_request = requests.post(stage2_url, data=post_data, headers=headers)\n    \n        soup = BeautifulSoup(stage2_request.text, features=\"html.parser\")\n        try:\n            bin_refuse_calendar = os.path.basename(\n                soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_streetgridview_ctl02_calendar1\"}\n                )[0][\"href\"]\n            )\n            bin_garden_calendar = os.path.basename(\n                soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_gardenGridView_ctl02_calendar2\"}\n                )[0][\"href\"]\n            )\n        except:\n>           raise Exception(\n                \"No results for address lookup found. If correct address is being used, please raise a GitHub issue\"\n            )\nE           Exception: No results for address lookup found. If correct address is being used, please raise a GitHub issue\n\nuk_bin_collection/uk_bin_collection/councils/GedlingBoroughCouncil.py:74: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Exception: No results for address lookup found. If correct address is being used, please raise a GitHub issue","statusTrace":"self = <GedlingBoroughCouncil.CouncilClass object at 0x7f81062d17b0>, page = ''\nkwargs = {'headless': True, 'paon': 'Valeside Gardens', 'postcode': None, 'uprn': None, ...}\ndata = {'bins': []}\nuser_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'}\naddress_street = 'Valeside Gardens'\nstage1_url = 'https://apps.gedling.gov.uk/refuse/search.aspx'\nstage1_data = <Response [200]>\nsoup = <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n\n<html><head>\n<title>403 Forbidden</title>\n</head><body>\n<h1>Forbidden</h1>\n<p>You don't have permission to access this resource.</p>\n</body></html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n    \n        data = {\"bins\": []}\n    \n        user_agent = (\n            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) \"\n            \"Chrome/108.0.0.0 Safari/537.36\"\n        )\n        headers = {\"User-Agent\": user_agent}\n    \n        address_street = kwargs.get(\"paon\")\n    \n        # Stage 1 - Fetch initial page to get hidden form values needed for submission\n        stage1_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        stage1_data = requests.get(\n            \"https://apps.gedling.gov.uk/refuse/search.aspx\", headers=headers\n        )\n    \n        soup = BeautifulSoup(stage1_data.text, features=\"html.parser\")\n        try:\n            value_viewstate = soup.find_all(\"input\", {\"id\": \"__VIEWSTATE\"})[0][\"value\"]\n            value_viewstategenerator = soup.find_all(\n                \"input\", {\"id\": \"__VIEWSTATEGENERATOR\"}\n            )[0][\"value\"]\n            value_eventvalidation = soup.find_all(\"input\", {\"id\": \"__EVENTVALIDATION\"})[\n                0\n            ][\"value\"]\n        except:\n            raise Exception(\n                \"Beautiful Soup was not able to get the data back from the Stage 1 URL that we were expecting. Please raise an issue in GitHub\"\n            )\n    \n        # Stage 2 - Now POST the query to get the bin data back\n        stage2_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        post_data = {\n            \"__VIEWSTATE\": value_viewstate,\n            \"__VIEWSTATEGENERATOR\": value_viewstategenerator,\n            \"__EVENTVALIDATION\": value_eventvalidation,\n            \"ctl00$MainContent$street\": address_street,\n            \"ctl00$MainContent$mybutton\": \"Search\",\n        }\n    \n        stage2_request = requests.post(stage2_url, data=post_data, headers=headers)\n    \n        soup = BeautifulSoup(stage2_request.text, features=\"html.parser\")\n        try:\n            bin_refuse_calendar = os.path.basename(\n>               soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_streetgridview_ctl02_calendar1\"}\n                )[0][\"href\"]\n            )\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/GedlingBoroughCouncil.py:64: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nfixturefunc = <function scrape_step at 0x7f810680f250>\nrequest = <FixtureRequest for <Function test_scenario_outline[GedlingBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8105893d90>, 'council': 'GedlingBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <GedlingBoroughCouncil.CouncilClass object at 0x7f81062d17b0>, page = ''\nkwargs = {'headless': True, 'paon': 'Valeside Gardens', 'postcode': None, 'uprn': None, ...}\ndata = {'bins': []}\nuser_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'}\naddress_street = 'Valeside Gardens'\nstage1_url = 'https://apps.gedling.gov.uk/refuse/search.aspx'\nstage1_data = <Response [200]>\nsoup = <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n\n<html><head>\n<title>403 Forbidden</title>\n</head><body>\n<h1>Forbidden</h1>\n<p>You don't have permission to access this resource.</p>\n</body></html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n    \n        data = {\"bins\": []}\n    \n        user_agent = (\n            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) \"\n            \"Chrome/108.0.0.0 Safari/537.36\"\n        )\n        headers = {\"User-Agent\": user_agent}\n    \n        address_street = kwargs.get(\"paon\")\n    \n        # Stage 1 - Fetch initial page to get hidden form values needed for submission\n        stage1_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        stage1_data = requests.get(\n            \"https://apps.gedling.gov.uk/refuse/search.aspx\", headers=headers\n        )\n    \n        soup = BeautifulSoup(stage1_data.text, features=\"html.parser\")\n        try:\n            value_viewstate = soup.find_all(\"input\", {\"id\": \"__VIEWSTATE\"})[0][\"value\"]\n            value_viewstategenerator = soup.find_all(\n                \"input\", {\"id\": \"__VIEWSTATEGENERATOR\"}\n            )[0][\"value\"]\n            value_eventvalidation = soup.find_all(\"input\", {\"id\": \"__EVENTVALIDATION\"})[\n                0\n            ][\"value\"]\n        except:\n            raise Exception(\n                \"Beautiful Soup was not able to get the data back from the Stage 1 URL that we were expecting. Please raise an issue in GitHub\"\n            )\n    \n        # Stage 2 - Now POST the query to get the bin data back\n        stage2_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        post_data = {\n            \"__VIEWSTATE\": value_viewstate,\n            \"__VIEWSTATEGENERATOR\": value_viewstategenerator,\n            \"__EVENTVALIDATION\": value_eventvalidation,\n            \"ctl00$MainContent$street\": address_street,\n            \"ctl00$MainContent$mybutton\": \"Search\",\n        }\n    \n        stage2_request = requests.post(stage2_url, data=post_data, headers=headers)\n    \n        soup = BeautifulSoup(stage2_request.text, features=\"html.parser\")\n        try:\n            bin_refuse_calendar = os.path.basename(\n                soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_streetgridview_ctl02_calendar1\"}\n                )[0][\"href\"]\n            )\n            bin_garden_calendar = os.path.basename(\n                soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_gardenGridView_ctl02_calendar2\"}\n                )[0][\"href\"]\n            )\n        except:\n>           raise Exception(\n                \"No results for address lookup found. If correct address is being used, please raise a GitHub issue\"\n            )\nE           Exception: No results for address lookup found. If correct address is being used, please raise a GitHub issue\n\nuk_bin_collection/uk_bin_collection/councils/GedlingBoroughCouncil.py:74: Exception","steps":[{"name":"Given the council: GedlingBoroughCouncil","time":{"start":1710808070257,"stop":1710808070258,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GedlingBoroughCouncil using None and the None is set","time":{"start":1710808070258,"stop":1710808071572,"duration":1314},"status":"failed","statusMessage":"No results for address lookup found. If correct address is being used, please raise a GitHub issue","statusTrace":"Exception: No results for address lookup found. If correct address is being used, please raise a GitHub issue\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az881-639"},{"name":"thread","value":"2721-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GedlingBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":118,"unknown":0,"total":126},"items":[{"uid":"58f74decc075c274","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1609//#testresult/58f74decc075c274","status":"failed","statusDetails":"KeyError: 'Garden%20Waste%20J-2023.pdf'","time":{"start":1710721803097,"stop":1710721804478,"duration":1381}},{"uid":"b9616c70fd9f644","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1608//#testresult/b9616c70fd9f644","status":"failed","statusDetails":"KeyError: 'Garden%20Waste%20J-2023.pdf'","time":{"start":1710635510052,"stop":1710635511248,"duration":1196}},{"uid":"bcb30b74aa6b10b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1607//#testresult/bcb30b74aa6b10b7","status":"failed","statusDetails":"KeyError: 'Garden%20Waste%20J-2023.pdf'","time":{"start":1710548853612,"stop":1710548854807,"duration":1195}},{"uid":"42f92b3a36af2dcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1605//#testresult/42f92b3a36af2dcd","status":"failed","statusDetails":"KeyError: 'Garden%20Waste%20J-2023.pdf'","time":{"start":1710462471328,"stop":1710462473200,"duration":1872}},{"uid":"9770d113221197fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1604//#testresult/9770d113221197fb","status":"failed","statusDetails":"KeyError: 'Garden%20Waste%20J-2023.pdf'","time":{"start":1710452944919,"stop":1710452946880,"duration":1961}},{"uid":"fc920e69eaab07ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1602//#testresult/fc920e69eaab07ac","status":"failed","statusDetails":"KeyError: 'Garden%20Waste%20J-2023.pdf'","time":{"start":1710376134486,"stop":1710376136446,"duration":1960}},{"uid":"8cf26c34d37e641b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1601//#testresult/8cf26c34d37e641b","status":"failed","statusDetails":"KeyError: 'Garden%20Waste%20J-2023.pdf'","time":{"start":1710289647194,"stop":1710289648387,"duration":1193}},{"uid":"36a34704522681ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1600//#testresult/36a34704522681ec","status":"passed","time":{"start":1710203257201,"stop":1710203258493,"duration":1292}},{"uid":"8b04fce6aa7fab43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1599//#testresult/8b04fce6aa7fab43","status":"passed","time":{"start":1710116955408,"stop":1710116956546,"duration":1138}},{"uid":"c1aae9c3dbc89c84","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1598//#testresult/c1aae9c3dbc89c84","status":"passed","time":{"start":1710030629417,"stop":1710030630715,"duration":1298}},{"uid":"db9f5f1dd5d71b9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1597//#testresult/db9f5f1dd5d71b9d","status":"passed","time":{"start":1709944042650,"stop":1709944043870,"duration":1220}},{"uid":"b774d12cb8889e47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1596//#testresult/b774d12cb8889e47","status":"passed","time":{"start":1709857692041,"stop":1709857693131,"duration":1090}},{"uid":"a8891c3008a02e20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1595//#testresult/a8891c3008a02e20","status":"passed","time":{"start":1709771048947,"stop":1709771051059,"duration":2112}},{"uid":"a5d3c7e5b1a648c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1594//#testresult/a5d3c7e5b1a648c","status":"passed","time":{"start":1709684886377,"stop":1709684887714,"duration":1337}},{"uid":"f8b3a6e0dab062f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1593//#testresult/f8b3a6e0dab062f4","status":"passed","time":{"start":1709598426390,"stop":1709598428351,"duration":1961}},{"uid":"61d6e5133e3671b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1592//#testresult/61d6e5133e3671b0","status":"passed","time":{"start":1709512126982,"stop":1709512128140,"duration":1158}},{"uid":"6e80d80b8eff2c2e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1572//#testresult/6e80d80b8eff2c2e","status":"passed","time":{"start":1708561654408,"stop":1708561655575,"duration":1167}},{"uid":"c1ced4b8467c1eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1570//#testresult/c1ced4b8467c1eb","status":"passed","time":{"start":1708475243357,"stop":1708475244488,"duration":1131}},{"uid":"bcb962439546f916","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1569//#testresult/bcb962439546f916","status":"passed","time":{"start":1708388867105,"stop":1708388868259,"duration":1154}},{"uid":"30cdadb1f41df952","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1568//#testresult/30cdadb1f41df952","status":"passed","time":{"start":1708302594139,"stop":1708302595133,"duration":994}}]},"tags":[]},"source":"e77d47480c567a8.json","parameterValues":["GedlingBoroughCouncil","None","None"]}