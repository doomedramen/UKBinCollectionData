{"uid":"86e4e0039351fb3","name":"Validate Council Output [RushmoorCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9e9824bacc749482fde9fb74bc6e375c","time":{"start":1702171529916,"stop":1702171530805,"duration":889},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc30cd84040>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc2f93fe350>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc2f93fe350>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc30cd84040>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc2f93fe350>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc2f93fe350>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: RushmoorCouncil","time":{"start":1702171529916,"stop":1702171529917,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from RushmoorCouncil using None and the None is set","time":{"start":1702171529917,"stop":1702171530803,"duration":886},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1702171530803,"stop":1702171530803,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1702171530803,"stop":1702171530805,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1251-511"},{"name":"thread","value":"2740-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RushmoorCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":63,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":63},"items":[{"uid":"61da78e4208697ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/61da78e4208697ab","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702084729407,"stop":1702084730421,"duration":1014}},{"uid":"8190446e68edd333","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1225//#testresult/8190446e68edd333","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702066786188,"stop":1702066787563,"duration":1375}},{"uid":"b85178cb82ae8b77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1222//#testresult/b85178cb82ae8b77","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702054428093,"stop":1702054429019,"duration":926}},{"uid":"986f40dac6f00987","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1219//#testresult/986f40dac6f00987","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701998452057,"stop":1701998453362,"duration":1305}},{"uid":"3462f38e275a4469","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1218//#testresult/3462f38e275a4469","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701990424350,"stop":1701990425730,"duration":1380}},{"uid":"6b0d133f8820503f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1217//#testresult/6b0d133f8820503f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701990388884,"stop":1701990390026,"duration":1142}},{"uid":"bd7458e47309095d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1215//#testresult/bd7458e47309095d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701942845260,"stop":1701942846639,"duration":1379}},{"uid":"978643fe7fec6782","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1214//#testresult/978643fe7fec6782","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701936587597,"stop":1701936588875,"duration":1278}},{"uid":"f9afeb6c370253eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1213//#testresult/f9afeb6c370253eb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701936529728,"stop":1701936530642,"duration":914}},{"uid":"5727ade1bac7f627","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1211//#testresult/5727ade1bac7f627","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701912037699,"stop":1701912039077,"duration":1378}},{"uid":"7b69a12e19c9856d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1209//#testresult/7b69a12e19c9856d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701904917673,"stop":1701904918752,"duration":1079}},{"uid":"695c9f2592bf21f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1201//#testresult/695c9f2592bf21f5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701882572203,"stop":1701882573098,"duration":895}},{"uid":"7dabd6599799fef7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1199//#testresult/7dabd6599799fef7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701825604535,"stop":1701825605437,"duration":902}},{"uid":"38964568de7dba4f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1198//#testresult/38964568de7dba4f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701795612560,"stop":1701795613839,"duration":1279}},{"uid":"3dc08bc17a423a62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1197//#testresult/3dc08bc17a423a62","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701795668521,"stop":1701795669387,"duration":866}},{"uid":"7b6c644ef572dec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1193//#testresult/7b6c644ef572dec","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701758550428,"stop":1701758551331,"duration":903}},{"uid":"30ef9f64bc8565f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1192//#testresult/30ef9f64bc8565f2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701758704393,"stop":1701758705781,"duration":1388}},{"uid":"3aa959bd1a5e7bd6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1191//#testresult/3aa959bd1a5e7bd6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701739220749,"stop":1701739222096,"duration":1347}},{"uid":"d8c8c80223d8eba3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1187//#testresult/d8c8c80223d8eba3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701714379660,"stop":1701714380720,"duration":1060}},{"uid":"46f1eb03d4f00b72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1186//#testresult/46f1eb03d4f00b72","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701714335586,"stop":1701714336932,"duration":1346}}]},"tags":[]},"source":"86e4e0039351fb3.json","parameterValues":["RushmoorCouncil","None","None"]}