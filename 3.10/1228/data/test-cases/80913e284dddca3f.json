{"uid":"80913e284dddca3f","name":"Validate Council Output [TorridgeDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"da903249529007ec357275ac5f075b6c","time":{"start":1702171584303,"stop":1702171588558,"duration":4255},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f5bee860670>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5bdbcc3a60>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f5bdbcc3a60>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f5bee860670>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5bdbcc3a60>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f5bdbcc3a60>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1702171584303,"stop":1702171584304,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from TorridgeDistrictCouncil using None and the None is set","time":{"start":1702171584304,"stop":1702171588556,"duration":4252},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1702171588556,"stop":1702171588556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1702171588556,"stop":1702171588557,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1251-511"},{"name":"thread","value":"2743-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":48,"unknown":0,"total":63},"items":[{"uid":"5f33225d45ed9209","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/5f33225d45ed9209","status":"passed","time":{"start":1702084754847,"stop":1702084757707,"duration":2860}},{"uid":"a64ce9e4d7a9ae8d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1225//#testresult/a64ce9e4d7a9ae8d","status":"passed","time":{"start":1702066822491,"stop":1702066825558,"duration":3067}},{"uid":"44ed54071ffb5dff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1222//#testresult/44ed54071ffb5dff","status":"passed","time":{"start":1702054467254,"stop":1702054470091,"duration":2837}},{"uid":"5c2dc6709c9a2ee5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1219//#testresult/5c2dc6709c9a2ee5","status":"passed","time":{"start":1701998628666,"stop":1701998631502,"duration":2836}},{"uid":"fda0b2fd297ab2cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1218//#testresult/fda0b2fd297ab2cd","status":"passed","time":{"start":1701990462558,"stop":1701990466605,"duration":4047}},{"uid":"1f9f78a30ea945a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1217//#testresult/1f9f78a30ea945a8","status":"passed","time":{"start":1701990421121,"stop":1701990423942,"duration":2821}},{"uid":"50a6e652f4a81a0f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1215//#testresult/50a6e652f4a81a0f","status":"passed","time":{"start":1701942885994,"stop":1701942888999,"duration":3005}},{"uid":"93cc14296ca93876","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1214//#testresult/93cc14296ca93876","status":"passed","time":{"start":1701936629533,"stop":1701936632239,"duration":2706}},{"uid":"9b3dacc13db7d024","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1213//#testresult/9b3dacc13db7d024","status":"passed","time":{"start":1701936575472,"stop":1701936577966,"duration":2494}},{"uid":"6559f6167dab2b98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1211//#testresult/6559f6167dab2b98","status":"passed","time":{"start":1701912072214,"stop":1701912074973,"duration":2759}},{"uid":"a7de1cd0f5944e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1209//#testresult/a7de1cd0f5944e6","status":"passed","time":{"start":1701904938283,"stop":1701904941702,"duration":3419}},{"uid":"bb24ffc70c3e12a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1201//#testresult/bb24ffc70c3e12a","status":"passed","time":{"start":1701882592823,"stop":1701882595257,"duration":2434}},{"uid":"bf7de487fd1c871f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1199//#testresult/bf7de487fd1c871f","status":"passed","time":{"start":1701825627796,"stop":1701825630521,"duration":2725}},{"uid":"b5d8dc900bef58ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1198//#testresult/b5d8dc900bef58ce","status":"passed","time":{"start":1701795642564,"stop":1701795645274,"duration":2710}},{"uid":"e4ef189bb133ab6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1197//#testresult/e4ef189bb133ab6c","status":"passed","time":{"start":1701795558427,"stop":1701795561021,"duration":2594}},{"uid":"64039562fd30f585","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1193//#testresult/64039562fd30f585","status":"passed","time":{"start":1701758570802,"stop":1701758573627,"duration":2825}},{"uid":"298da2002f704507","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1192//#testresult/298da2002f704507","status":"passed","time":{"start":1701758733349,"stop":1701758736074,"duration":2725}},{"uid":"3909077ee0a4f5a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1191//#testresult/3909077ee0a4f5a8","status":"passed","time":{"start":1701739354018,"stop":1701739357189,"duration":3171}},{"uid":"c050fa9e28d6272b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1187//#testresult/c050fa9e28d6272b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701714476396,"stop":1701714478836,"duration":2440}},{"uid":"4a84465a6bc66fa7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1186//#testresult/4a84465a6bc66fa7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701714472103,"stop":1701714474730,"duration":2627}}]},"tags":[]},"source":"80913e284dddca3f.json","parameterValues":["TorridgeDistrictCouncil","None","None"]}