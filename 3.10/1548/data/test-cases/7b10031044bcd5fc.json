{"uid":"7b10031044bcd5fc","name":"Validate Council Output [ValeofGlamorganCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9cf2d3433b0a6f80c8b05ae26d0f9f5e","time":{"start":1707093040192,"stop":1707093041879,"duration":1687},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7ff17125ee60>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff170c20850>, 'council': 'ValeofGlamorganCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7ff18498a6e0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7ff17125ee60>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff170c20850>, 'council': 'ValeofGlamorganCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7ff18498a6e0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: ValeofGlamorganCouncil","time":{"start":1707093040193,"stop":1707093040193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from ValeofGlamorganCouncil using None and the None is set","time":{"start":1707093040193,"stop":1707093041879,"duration":1686},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1433-971"},{"name":"thread","value":"2915-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ValeofGlamorganCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":169,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":182},"items":[{"uid":"f358e35064561d0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1547//#testresult/f358e35064561d0d","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1707006680151,"stop":1707006681395,"duration":1244}},{"uid":"c1ffa3fe19e421eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1545//#testresult/c1ffa3fe19e421eb","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fc9fbcac490>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1706942002019,"stop":1706942132162,"duration":130143}},{"uid":"1a9630ab29022f6e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1544//#testresult/1a9630ab29022f6e","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706939055526,"stop":1706939056766,"duration":1240}},{"uid":"ebe3039035ec59d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1542//#testresult/ebe3039035ec59d8","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706938573529,"stop":1706938575126,"duration":1597}},{"uid":"46373b4b8dcb05fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1541//#testresult/46373b4b8dcb05fc","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706920164333,"stop":1706920166205,"duration":1872}},{"uid":"868bae6dce677d67","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1540//#testresult/868bae6dce677d67","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706833682826,"stop":1706833683815,"duration":989}},{"uid":"9e1b6229dc5859ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1538//#testresult/9e1b6229dc5859ba","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706747372974,"stop":1706747374186,"duration":1212}},{"uid":"ef8d537b45653c2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1537//#testresult/ef8d537b45653c2a","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706660972156,"stop":1706660973263,"duration":1107}},{"uid":"8f085dc6c68b22aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1535//#testresult/8f085dc6c68b22aa","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706574491727,"stop":1706574492455,"duration":728}},{"uid":"c5827cd283f6ef56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1534//#testresult/c5827cd283f6ef56","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f91dd42f1f0>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1706488158336,"stop":1706488288463,"duration":130127}},{"uid":"1ceee01f7ec20358","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1531//#testresult/1ceee01f7ec20358","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706401975871,"stop":1706401976921,"duration":1050}},{"uid":"8a08537e25dacf9f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1529//#testresult/8a08537e25dacf9f","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706315325734,"stop":1706315327153,"duration":1419}},{"uid":"21e51f2353ef2f32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1528//#testresult/21e51f2353ef2f32","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706228942696,"stop":1706228943814,"duration":1118}},{"uid":"10dd36b5a56d1136","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1523//#testresult/10dd36b5a56d1136","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f2be210a080>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1706142665682,"stop":1706142795993,"duration":130311}},{"uid":"43f3058ab129d20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1522//#testresult/43f3058ab129d20","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706056272905,"stop":1706056274135,"duration":1230}},{"uid":"ceba7ccfd1d673ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1521//#testresult/ceba7ccfd1d673ed","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1705969868490,"stop":1705969870032,"duration":1542}},{"uid":"2ec7f0c488387663","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1520//#testresult/2ec7f0c488387663","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1705883596852,"stop":1705883598279,"duration":1427}},{"uid":"8fe655f5730f0132","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1519//#testresult/8fe655f5730f0132","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1705797205479,"stop":1705797206225,"duration":746}},{"uid":"70982950d355f05d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1515//#testresult/70982950d355f05d","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1705710614772,"stop":1705710615547,"duration":775}},{"uid":"17403bc3ddce7e20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1511//#testresult/17403bc3ddce7e20","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1705624264065,"stop":1705624265253,"duration":1188}}]},"tags":[]},"source":"7b10031044bcd5fc.json","parameterValues":["ValeofGlamorganCouncil","None","None"]}