{"uid":"c03d01a5cc60083e","name":"Validate Council Output [NewcastleCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f8fee070cb49e91fbb5bb87c533c294a","time":{"start":1699060512643,"stop":1699060543145,"duration":30502},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f48d87e67a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f48d81652a0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f48d81652a0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f48d87e67a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f48d81652a0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f48d81652a0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1699060512643,"stop":1699060512644,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from NewcastleCityCouncil","time":{"start":1699060512644,"stop":1699060543142,"duration":30498},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699060543142,"stop":1699060543143,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699060543143,"stop":1699060543145,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az400-886"},{"name":"thread","value":"2565-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":169,"unknown":0,"total":176},"items":[{"uid":"6b98fad6dd01024","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1100//#testresult/6b98fad6dd01024","status":"passed","time":{"start":1699007842134,"stop":1699007873444,"duration":31310}},{"uid":"fab58afd884d557e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1095//#testresult/fab58afd884d557e","status":"passed","time":{"start":1698988599915,"stop":1698988637894,"duration":37979}},{"uid":"10920e361dd0c2b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1094//#testresult/10920e361dd0c2b7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698974199786,"stop":1698974230336,"duration":30550}},{"uid":"37542cba45d6252f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1091//#testresult/37542cba45d6252f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698887679189,"stop":1698887709685,"duration":30496}},{"uid":"a5528606df576aa7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1090//#testresult/a5528606df576aa7","status":"passed","time":{"start":1698878451082,"stop":1698878458996,"duration":7914}},{"uid":"cf044fd83128379f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1086//#testresult/cf044fd83128379f","status":"passed","time":{"start":1698867675767,"stop":1698867684000,"duration":8233}},{"uid":"bba56fbfc5d6b278","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1087//#testresult/bba56fbfc5d6b278","status":"passed","time":{"start":1698867591771,"stop":1698867600433,"duration":8662}},{"uid":"dfead28ea3bb50c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1081//#testresult/dfead28ea3bb50c1","status":"passed","time":{"start":1698801699792,"stop":1698801729648,"duration":29856}},{"uid":"b885f8be75ea137b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/b885f8be75ea137b","status":"passed","time":{"start":1698788607842,"stop":1698788617233,"duration":9391}},{"uid":"ba18abcbadfd66a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/ba18abcbadfd66a","status":"passed","time":{"start":1698715153610,"stop":1698715168600,"duration":14990}},{"uid":"9b3a18b14feeaedc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/9b3a18b14feeaedc","status":"passed","time":{"start":1698701569036,"stop":1698701575752,"duration":6716}},{"uid":"ab1facabe207795e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/ab1facabe207795e","status":"passed","time":{"start":1698700339512,"stop":1698700345556,"duration":6044}},{"uid":"4e0898dd01fcfd7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/4e0898dd01fcfd7c","status":"passed","time":{"start":1698692873197,"stop":1698692879228,"duration":6031}},{"uid":"a3f8524d314ff4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/a3f8524d314ff4","status":"passed","time":{"start":1698692849085,"stop":1698692855350,"duration":6265}},{"uid":"5466236ed2abd5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/5466236ed2abd5b","status":"passed","time":{"start":1698646558874,"stop":1698646565326,"duration":6452}},{"uid":"5825b648c741ce4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/5825b648c741ce4b","status":"passed","time":{"start":1698628546090,"stop":1698628577754,"duration":31664}},{"uid":"e7b871e58bc007d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/e7b871e58bc007d2","status":"passed","time":{"start":1698615183004,"stop":1698615190532,"duration":7528}},{"uid":"7608a669b7694850","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/7608a669b7694850","status":"passed","time":{"start":1698615091534,"stop":1698615098003,"duration":6469}},{"uid":"c37774365e3677d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/c37774365e3677d6","status":"passed","time":{"start":1698542355071,"stop":1698542363065,"duration":7994}},{"uid":"dd41f794ca6d31cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1053//#testresult/dd41f794ca6d31cc","status":"passed","time":{"start":1698455534226,"stop":1698455571927,"duration":37701}}]},"tags":[]},"source":"c03d01a5cc60083e.json","parameterValues":["NewcastleCityCouncil"]}