{"uid":"7bfbc499fb1c41e8","name":"Validate Council Output [KingstonUponThamesCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"5cc54a24c590c0c794126ca22d0562ff","time":{"start":1699060497126,"stop":1699060498052,"duration":926},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f54bf2e2b90>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f54b71d2a40>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f54b71d2a40>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f54bf2e2b90>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f54b71d2a40>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f54b71d2a40>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1699060497126,"stop":1699060497127,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from KingstonUponThamesCouncil","time":{"start":1699060497127,"stop":1699060498049,"duration":922},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699060498049,"stop":1699060498050,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699060498050,"stop":1699060498052,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az400-886"},{"name":"thread","value":"2568-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":31,"broken":0,"skipped":0,"passed":145,"unknown":0,"total":176},"items":[{"uid":"9dbdfdf626f381fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1100//#testresult/9dbdfdf626f381fa","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699007622823,"stop":1699007648198,"duration":25375}},{"uid":"42da6e6b60367bd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1095//#testresult/42da6e6b60367bd8","status":"passed","time":{"start":1698988569693,"stop":1698988571155,"duration":1462}},{"uid":"e24c0a102b1c0d5f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1094//#testresult/e24c0a102b1c0d5f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698974149990,"stop":1698974151794,"duration":1804}},{"uid":"3bdfd6dd7ec8aa8d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1091//#testresult/3bdfd6dd7ec8aa8d","status":"passed","time":{"start":1698887651156,"stop":1698887652805,"duration":1649}},{"uid":"f18249071808a23c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1090//#testresult/f18249071808a23c","status":"failed","statusDetails":"ValueError: time data 'None 2023' does not match format '%A, %d %B %Y'","time":{"start":1698878354863,"stop":1698878356408,"duration":1545}},{"uid":"dde718791d24248d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1086//#testresult/dde718791d24248d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867482391,"stop":1698867483251,"duration":860}},{"uid":"9c3cadb3f6dab5ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1087//#testresult/9c3cadb3f6dab5ea","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867481517,"stop":1698867482187,"duration":670}},{"uid":"6d65a63499300254","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1081//#testresult/6d65a63499300254","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801613292,"stop":1698801613883,"duration":591}},{"uid":"e4768333274f4bfc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/e4768333274f4bfc","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788504272,"stop":1698788504869,"duration":597}},{"uid":"7da128a96f86b78d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/7da128a96f86b78d","status":"passed","time":{"start":1698715005974,"stop":1698715006992,"duration":1018}},{"uid":"1254136e16acf9da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/1254136e16acf9da","status":"passed","time":{"start":1698701378769,"stop":1698701379689,"duration":920}},{"uid":"951fbef95ee9d2b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/951fbef95ee9d2b1","status":"failed","statusDetails":"ValueError: time data 'None 2023' does not match format '%A, %d %B %Y'","time":{"start":1698700236943,"stop":1698700238473,"duration":1530}},{"uid":"c2aa8a1a7d1859de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/c2aa8a1a7d1859de","status":"passed","time":{"start":1698693076416,"stop":1698693077110,"duration":694}},{"uid":"90d742482fec1334","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/90d742482fec1334","status":"failed","statusDetails":"ValueError: time data 'None 2023' does not match format '%A, %d %B %Y'","time":{"start":1698692745409,"stop":1698692746745,"duration":1336}},{"uid":"2cf6d873db9ffcf0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/2cf6d873db9ffcf0","status":"passed","time":{"start":1698646350763,"stop":1698646351630,"duration":867}},{"uid":"92a30e65d756e20b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/92a30e65d756e20b","status":"passed","time":{"start":1698628564446,"stop":1698628565300,"duration":854}},{"uid":"797ce1ab7dd83ced","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/797ce1ab7dd83ced","status":"failed","statusDetails":"ValueError: time data 'None 2023' does not match format '%A, %d %B %Y'","time":{"start":1698615226052,"stop":1698615227834,"duration":1782}},{"uid":"25544284d483389f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/25544284d483389f","status":"passed","time":{"start":1698615113256,"stop":1698615114252,"duration":996}},{"uid":"30ff2e7cec8a3fea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/30ff2e7cec8a3fea","status":"passed","time":{"start":1698542376795,"stop":1698542377566,"duration":771}},{"uid":"31cda999c7b35212","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1053//#testresult/31cda999c7b35212","status":"passed","time":{"start":1698455567330,"stop":1698455567865,"duration":535}}]},"tags":[]},"source":"7bfbc499fb1c41e8.json","parameterValues":["KingstonUponThamesCouncil"]}