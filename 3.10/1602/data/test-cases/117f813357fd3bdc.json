{"uid":"117f813357fd3bdc","name":"Validate Council Output [EastRidingCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"db3e594df94ba6e24f9d458b81f7e5a4","time":{"start":1710376025779,"stop":1710376031073,"duration":5294},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"styled accordion-header closed\" href=\"#when-and-where-should-i-put-my-bin-out\">...</a> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=122.0.6261.111)\nStacktrace:\n#0 0x5805478eaf33 <unknown>\n#1 0x5805475e2ce6 <unknown>\n#2 0x580547634a73 <unknown>\n#3 0x58054763298e <unknown>\n#4 0x580547630367 <unknown>\n#5 0x58054762f732 <unknown>\n#6 0x580547622d27 <unknown>\n#7 0x58054764feb2 <unknown>\n#8 0x5805476226b8 <unknown>\n#9 0x58054765007e <unknown>\n#10 0x58054766e899 <unknown>\n#11 0x58054764fc53 <unknown>\n#12 0x580547620db3 <unknown>\n#13 0x58054762177e <unknown>\n#14 0x5805478b086b <unknown>\n#15 0x5805478b4885 <unknown>\n#16 0x58054789e181 <unknown>\n#17 0x5805478b5412 <unknown>\n#18 0x58054788225f <unknown>\n#19 0x5805478d9528 <unknown>\n#20 0x5805478d9723 <unknown>\n#21 0x5805478ea0e4 <unknown>\n#22 0x71df10e94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fa74180b130>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastRidingCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa740815c90>, 'council': 'EastRidingCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/EastRidingCouncil.py:60: in parse_data\n    expand_postcode_box.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa740a8fa30>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5805478d9723 \\\\u003Cunknown>\\\\n#21 0x5805478ea0e4 \\\\u003Cunknown>\\\\n#22 0x71df10e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"styled accordion-header closed\" href=\"#when-and-where-should-i-put-my-bin-out\">...</a> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\nE         (Session info: chrome-headless-shell=122.0.6261.111)\nE       Stacktrace:\nE       #0 0x5805478eaf33 <unknown>\nE       #1 0x5805475e2ce6 <unknown>\nE       #2 0x580547634a73 <unknown>\nE       #3 0x58054763298e <unknown>\nE       #4 0x580547630367 <unknown>\nE       #5 0x58054762f732 <unknown>\nE       #6 0x580547622d27 <unknown>\nE       #7 0x58054764feb2 <unknown>\nE       #8 0x5805476226b8 <unknown>\nE       #9 0x58054765007e <unknown>\nE       #10 0x58054766e899 <unknown>\nE       #11 0x58054764fc53 <unknown>\nE       #12 0x580547620db3 <unknown>\nE       #13 0x58054762177e <unknown>\nE       #14 0x5805478b086b <unknown>\nE       #15 0x5805478b4885 <unknown>\nE       #16 0x58054789e181 <unknown>\nE       #17 0x5805478b5412 <unknown>\nE       #18 0x58054788225f <unknown>\nE       #19 0x5805478d9528 <unknown>\nE       #20 0x5805478d9723 <unknown>\nE       #21 0x5805478ea0e4 <unknown>\nE       #22 0x71df10e94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"styled accordion-header closed\" href=\"#when-and-where-should-i-put-my-bin-out\">...</a> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=122.0.6261.111)\nStacktrace:\n#0 0x5805478eaf33 <unknown>\n#1 0x5805475e2ce6 <unknown>\n#2 0x580547634a73 <unknown>\n#3 0x58054763298e <unknown>\n#4 0x580547630367 <unknown>\n#5 0x58054762f732 <unknown>\n#6 0x580547622d27 <unknown>\n#7 0x58054764feb2 <unknown>\n#8 0x5805476226b8 <unknown>\n#9 0x58054765007e <unknown>\n#10 0x58054766e899 <unknown>\n#11 0x58054764fc53 <unknown>\n#12 0x580547620db3 <unknown>\n#13 0x58054762177e <unknown>\n#14 0x5805478b086b <unknown>\n#15 0x5805478b4885 <unknown>\n#16 0x58054789e181 <unknown>\n#17 0x5805478b5412 <unknown>\n#18 0x58054788225f <unknown>\n#19 0x5805478d9528 <unknown>\n#20 0x5805478d9723 <unknown>\n#21 0x5805478ea0e4 <unknown>\n#22 0x71df10e94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fa74180b130>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastRidingCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa740815c90>, 'council': 'EastRidingCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/EastRidingCouncil.py:60: in parse_data\n    expand_postcode_box.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa740a8fa30>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5805478d9723 \\\\u003Cunknown>\\\\n#21 0x5805478ea0e4 \\\\u003Cunknown>\\\\n#22 0x71df10e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"styled accordion-header closed\" href=\"#when-and-where-should-i-put-my-bin-out\">...</a> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\nE         (Session info: chrome-headless-shell=122.0.6261.111)\nE       Stacktrace:\nE       #0 0x5805478eaf33 <unknown>\nE       #1 0x5805475e2ce6 <unknown>\nE       #2 0x580547634a73 <unknown>\nE       #3 0x58054763298e <unknown>\nE       #4 0x580547630367 <unknown>\nE       #5 0x58054762f732 <unknown>\nE       #6 0x580547622d27 <unknown>\nE       #7 0x58054764feb2 <unknown>\nE       #8 0x5805476226b8 <unknown>\nE       #9 0x58054765007e <unknown>\nE       #10 0x58054766e899 <unknown>\nE       #11 0x58054764fc53 <unknown>\nE       #12 0x580547620db3 <unknown>\nE       #13 0x58054762177e <unknown>\nE       #14 0x5805478b086b <unknown>\nE       #15 0x5805478b4885 <unknown>\nE       #16 0x58054789e181 <unknown>\nE       #17 0x5805478b5412 <unknown>\nE       #18 0x58054788225f <unknown>\nE       #19 0x5805478d9528 <unknown>\nE       #20 0x5805478d9723 <unknown>\nE       #21 0x5805478ea0e4 <unknown>\nE       #22 0x71df10e94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council: EastRidingCouncil","time":{"start":1710376025779,"stop":1710376025780,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"When we scrape the data from EastRidingCouncil using local and the http://selenium:4444 is set","time":{"start":1710376025780,"stop":1710376031073,"duration":5293},"status":"failed","statusMessage":"Message: element click intercepted: Element <a class=\"styled accordion-header closed\" href=\"#when-and-where-should-i-put-my-bin-out\">...</a> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=122.0.6261.111)\nStacktrace:\n#0 0x5805478eaf33 <unknown>\n#1 0x5805475e2ce6 <unknown>\n#2 0x580547634a73 <unknown>\n#3 0x58054763298e <unknown>\n#4 0x580547630367 <unknown>\n#5 0x58054762f732 <unknown>\n#6 0x580547622d27 <unknown>\n#7 0x58054764feb2 <unknown>\n#8 0x5805476226b8 <unknown>\n#9 0x58054765007e <unknown>\n#10 0x58054766e899 <unknown>\n#11 0x58054764fc53 <unknown>\n#12 0x580547620db3 <unknown>\n#13 0x58054762177e <unknown>\n#14 0x5805478b086b <unknown>\n#15 0x5805478b4885 <unknown>\n#16 0x58054789e181 <unknown>\n#17 0x5805478b5412 <unknown>\n#18 0x58054788225f <unknown>\n#19 0x5805478d9528 <unknown>\n#20 0x5805478d9723 <unknown>\n#21 0x5805478ea0e4 <unknown>\n#22 0x71df10e94ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"styled accordion-header closed\" href=\"#when-and-where-should-i-put-my-bin-out\">...</a> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=122.0.6261.111)\nStacktrace:\n#0 0x5805478eaf33 <unknown>\n#1 0x5805475e2ce6 <unknown>\n#2 0x580547634a73 <unknown>\n#3 0x58054763298e <unknown>\n#4 0x580547630367 <unknown>\n#5 0x58054762f732 <unknown>\n#6 0x580547622d27 <unknown>\n#7 0x58054764feb2 <unknown>\n#8 0x5805476226b8 <unknown>\n#9 0x58054765007e <unknown>\n#10 0x58054766e899 <unknown>\n#11 0x58054764fc53 <unknown>\n#12 0x580547620db3 <unknown>\n#13 0x58054762177e <unknown>\n#14 0x5805478b086b <unknown>\n#15 0x5805478b4885 <unknown>\n#16 0x58054789e181 <unknown>\n#17 0x5805478b5412 <unknown>\n#18 0x58054788225f <unknown>\n#19 0x5805478d9528 <unknown>\n#20 0x5805478d9723 <unknown>\n#21 0x5805478ea0e4 <unknown>\n#22 0x71df10e94ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1247-578"},{"name":"thread","value":"2771-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastRidingCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":92,"broken":0,"skipped":0,"passed":47,"unknown":0,"total":139},"items":[{"uid":"8011964e0a6b04ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1601//#testresult/8011964e0a6b04ad","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"styled accordion-header closed\" href=\"#when-and-where-should-i-put-my-bin-out\">...</a> is not clickable at point (392, 583). Other element would receive the click: <div class=\"toolbar-full-width\">...</div>\n  (Session info: chrome-headless-shell=122.0.6261.94)\nStacktrace:\n#0 0x55dd8dba5f33 <unknown>\n#1 0x55dd8d89dce6 <unknown>\n#2 0x55dd8d8efa73 <unknown>\n#3 0x55dd8d8ed98e <unknown>\n#4 0x55dd8d8eb367 <unknown>\n#5 0x55dd8d8ea732 <unknown>\n#6 0x55dd8d8ddd27 <unknown>\n#7 0x55dd8d90aeb2 <unknown>\n#8 0x55dd8d8dd6b8 <unknown>\n#9 0x55dd8d90b07e <unknown>\n#10 0x55dd8d929899 <unknown>\n#11 0x55dd8d90ac53 <unknown>\n#12 0x55dd8d8dbdb3 <unknown>\n#13 0x55dd8d8dc77e <unknown>\n#14 0x55dd8db6b86b <unknown>\n#15 0x55dd8db6f885 <unknown>\n#16 0x55dd8db59181 <unknown>\n#17 0x55dd8db70412 <unknown>\n#18 0x55dd8db3d25f <unknown>\n#19 0x55dd8db94528 <unknown>\n#20 0x55dd8db94723 <unknown>\n#21 0x55dd8dba50e4 <unknown>\n#22 0x7fb8dc494ac3 <unknown>","time":{"start":1710289540710,"stop":1710289544725,"duration":4015}},{"uid":"d557eacf04e4f1b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1600//#testresult/d557eacf04e4f1b1","status":"passed","time":{"start":1710203141645,"stop":1710203149849,"duration":8204}},{"uid":"16f60d3536e1e1a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1599//#testresult/16f60d3536e1e1a1","status":"passed","time":{"start":1710116849972,"stop":1710116854768,"duration":4796}},{"uid":"6e6e7f377b09d9c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1598//#testresult/6e6e7f377b09d9c3","status":"passed","time":{"start":1710030518576,"stop":1710030523214,"duration":4638}},{"uid":"670fee7faa3b8438","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1597//#testresult/670fee7faa3b8438","status":"passed","time":{"start":1709943924406,"stop":1709943932378,"duration":7972}},{"uid":"315c2eecb08b9581","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1596//#testresult/315c2eecb08b9581","status":"passed","time":{"start":1709857570520,"stop":1709857583710,"duration":13190}},{"uid":"d5d5cdbc7bdfe328","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1595//#testresult/d5d5cdbc7bdfe328","status":"passed","time":{"start":1709770930951,"stop":1709770941363,"duration":10412}},{"uid":"50957fe226ed792f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1594//#testresult/50957fe226ed792f","status":"passed","time":{"start":1709684786480,"stop":1709684791159,"duration":4679}},{"uid":"9896f5873ee86749","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1593//#testresult/9896f5873ee86749","status":"passed","time":{"start":1709598314587,"stop":1709598320895,"duration":6308}},{"uid":"e64d4e60b2a6a86a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1592//#testresult/e64d4e60b2a6a86a","status":"passed","time":{"start":1709512026083,"stop":1709512030522,"duration":4439}},{"uid":"1c57bbb9a51b9f69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1572//#testresult/1c57bbb9a51b9f69","status":"passed","time":{"start":1708561548955,"stop":1708561553333,"duration":4378}},{"uid":"99a28ce36b72697f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1570//#testresult/99a28ce36b72697f","status":"passed","time":{"start":1708475129858,"stop":1708475134518,"duration":4660}},{"uid":"5b1705c8957d902","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1569//#testresult/5b1705c8957d902","status":"passed","time":{"start":1708388759632,"stop":1708388764752,"duration":5120}},{"uid":"2254aabf68678864","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1568//#testresult/2254aabf68678864","status":"passed","time":{"start":1708302480924,"stop":1708302489648,"duration":8724}},{"uid":"419ac2066d0099fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1567//#testresult/419ac2066d0099fd","status":"passed","time":{"start":1708216118549,"stop":1708216123489,"duration":4940}},{"uid":"43ad0e77193c4021","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1566//#testresult/43ad0e77193c4021","status":"passed","time":{"start":1708129544675,"stop":1708129549123,"duration":4448}},{"uid":"be906af82a99129b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1563//#testresult/be906af82a99129b","status":"failed","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=121.0.6167.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5599ba610d93 <unknown>\n#1 0x5599ba2f4337 <unknown>\n#2 0x5599ba2f969a <unknown>\n#3 0x5599ba2fb96f <unknown>\n#4 0x5599ba2fba1c <unknown>\n#5 0x5599ba341a49 <unknown>\n#6 0x5599ba334574 <unknown>\n#7 0x5599ba362442 <unknown>\n#8 0x5599ba334028 <unknown>\n#9 0x5599ba36260e <unknown>\n#10 0x5599ba38112d <unknown>\n#11 0x5599ba3621e3 <unknown>\n#12 0x5599ba332135 <unknown>\n#13 0x5599ba33313e <unknown>\n#14 0x5599ba5d4e4b <unknown>\n#15 0x5599ba5d8dfa <unknown>\n#16 0x5599ba5c16d5 <unknown>\n#17 0x5599ba5d9a6f <unknown>\n#18 0x5599ba5a569f <unknown>\n#19 0x5599ba5fe098 <unknown>\n#20 0x5599ba5fe262 <unknown>\n#21 0x5599ba60ff34 <unknown>\n#22 0x7f2beb294ac3 <unknown>","time":{"start":1708043200527,"stop":1708043207117,"duration":6590}},{"uid":"383121ae52ee87f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1562//#testresult/383121ae52ee87f3","status":"passed","time":{"start":1707956783847,"stop":1707956788107,"duration":4260}},{"uid":"db6be8e2a0a26038","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1561//#testresult/db6be8e2a0a26038","status":"passed","time":{"start":1707870342615,"stop":1707870347636,"duration":5021}},{"uid":"335cba2e6c180bde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1560//#testresult/335cba2e6c180bde","status":"passed","time":{"start":1707783998852,"stop":1707784004228,"duration":5376}}]},"tags":[]},"source":"117f813357fd3bdc.json","parameterValues":["EastRidingCouncil","local","http://selenium:4444"]}