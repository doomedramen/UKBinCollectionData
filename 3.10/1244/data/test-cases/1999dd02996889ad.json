{"uid":"1999dd02996889ad","name":"Validate Council Output [EastLindseyDistrictCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"eb374edb17b4c377c221232fbb03cdfe","time":{"start":1702603189502,"stop":1702603195555,"duration":6053},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7fcdf38d7520>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fcde5bd0c70>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7fcde5bd1c30>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': []}, user_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY'\nweb_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dca0a9a5953b660e4dc7f0caebf61c42\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"dca0a9a5953b660e4dc7f0caebf61c42\", element=\"BFE2558C4DBD4EB9B903B5963D0B9CFE_element_32\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"dca0a9a5953b660e4dc7f0caebf61c42\", element=\"BFE2558C4DBD4EB9B903B5963D0B9CFE_element_34\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7fcdf38d7520>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fcde5bd0c70>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7fcde5bd1c30>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': []}, user_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY'\nweb_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dca0a9a5953b660e4dc7f0caebf61c42\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"dca0a9a5953b660e4dc7f0caebf61c42\", element=\"BFE2558C4DBD4EB9B903B5963D0B9CFE_element_32\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"dca0a9a5953b660e4dc7f0caebf61c42\", element=\"BFE2558C4DBD4EB9B903B5963D0B9CFE_element_34\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","steps":[{"name":"Given the council: EastLindseyDistrictCouncil","time":{"start":1702603189502,"stop":1702603189502,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from EastLindseyDistrictCouncil using local and the http://selenium:4444 is set","time":{"start":1702603189503,"stop":1702603195555,"duration":6052},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1116-276"},{"name":"thread","value":"2754-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastLindseyDistrictCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":48,"broken":0,"skipped":0,"passed":24,"unknown":0,"total":72},"items":[{"uid":"751390b554e45307","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/751390b554e45307","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702540045046,"stop":1702540050533,"duration":5487}},{"uid":"95c3aca3fbab298","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1241//#testresult/95c3aca3fbab298","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702516681019,"stop":1702516687745,"duration":6726}},{"uid":"6a94e3abbfa32609","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1238//#testresult/6a94e3abbfa32609","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55971f3fd5e3 <unknown>\n#1 0x55971f0c00b7 <unknown>\n#2 0x55971f10df53 <unknown>\n#3 0x55971f10e051 <unknown>\n#4 0x55971f1539c4 <unknown>\n#5 0x55971f134f1d <unknown>\n#6 0x55971f150b3d <unknown>\n#7 0x55971f134cc3 <unknown>\n#8 0x55971f1000e4 <unknown>\n#9 0x55971f1010ae <unknown>\n#10 0x55971f3c3ce1 <unknown>\n#11 0x55971f3c7b7e <unknown>\n#12 0x55971f3b14b5 <unknown>\n#13 0x55971f3c87d6 <unknown>\n#14 0x55971f394dbf <unknown>\n#15 0x55971f3eb748 <unknown>\n#16 0x55971f3eb917 <unknown>\n#17 0x55971f3fc773 <unknown>\n#18 0x7f6ee2294ac3 <unknown>","time":{"start":1702447473821,"stop":1702447488174,"duration":14353}},{"uid":"b57b4f954d1fae70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1237//#testresult/b57b4f954d1fae70","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55c8bc816d33 <unknown>\n#1 0x55c8bc4d3f87 <unknown>\n#2 0x55c8bc523c0e <unknown>\n#3 0x55c8bc523d11 <unknown>\n#4 0x55c8bc56f004 <unknown>\n#5 0x55c8bc54d36d <unknown>\n#6 0x55c8bc56c297 <unknown>\n#7 0x55c8bc54d0e3 <unknown>\n#8 0x55c8bc515044 <unknown>\n#9 0x55c8bc51644e <unknown>\n#10 0x55c8bc7db861 <unknown>\n#11 0x55c8bc7df785 <unknown>\n#12 0x55c8bc7c9285 <unknown>\n#13 0x55c8bc7e041f <unknown>\n#14 0x55c8bc7ad20f <unknown>\n#15 0x55c8bc804028 <unknown>\n#16 0x55c8bc8041f7 <unknown>\n#17 0x55c8bc815ed4 <unknown>\n#18 0x7f065aa94ac3 <unknown>","time":{"start":1702447433277,"stop":1702447446892,"duration":13615}},{"uid":"e6acfc01cec0e60d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1236//#testresult/e6acfc01cec0e60d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55a74d5b05e3 <unknown>\n#1 0x55a74d2730b7 <unknown>\n#2 0x55a74d2c0f53 <unknown>\n#3 0x55a74d2c1051 <unknown>\n#4 0x55a74d3069c4 <unknown>\n#5 0x55a74d2e7f1d <unknown>\n#6 0x55a74d303b3d <unknown>\n#7 0x55a74d2e7cc3 <unknown>\n#8 0x55a74d2b30e4 <unknown>\n#9 0x55a74d2b40ae <unknown>\n#10 0x55a74d576ce1 <unknown>\n#11 0x55a74d57ab7e <unknown>\n#12 0x55a74d5644b5 <unknown>\n#13 0x55a74d57b7d6 <unknown>\n#14 0x55a74d547dbf <unknown>\n#15 0x55a74d59e748 <unknown>\n#16 0x55a74d59e917 <unknown>\n#17 0x55a74d5af773 <unknown>\n#18 0x7f3d1e694ac3 <unknown>","time":{"start":1702430335294,"stop":1702430348343,"duration":13049}},{"uid":"de239efc6aa212a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1232//#testresult/de239efc6aa212a2","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702366500325,"stop":1702366505178,"duration":4853}},{"uid":"6976e2b60e8a6c5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1231//#testresult/6976e2b60e8a6c5c","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702343953458,"stop":1702343959889,"duration":6431}},{"uid":"31a0ceecb80fa25d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1229//#testresult/31a0ceecb80fa25d","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702257550432,"stop":1702257556472,"duration":6040}},{"uid":"b845da26cf1965e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1228//#testresult/b845da26cf1965e3","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702171399842,"stop":1702171408623,"duration":8781}},{"uid":"c9eeb86c8ea00cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/c9eeb86c8ea00cd","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702084641767,"stop":1702084647200,"duration":5433}},{"uid":"816043c824c02fe6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1225//#testresult/816043c824c02fe6","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702066728306,"stop":1702066735247,"duration":6941}},{"uid":"be6805e852968d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1222//#testresult/be6805e852968d2","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702054361961,"stop":1702054367261,"duration":5300}},{"uid":"96b0af63a2a09f46","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1219//#testresult/96b0af63a2a09f46","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701998375250,"stop":1701998382610,"duration":7360}},{"uid":"bbf4c6e3c43bfc44","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1218//#testresult/bbf4c6e3c43bfc44","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701990381090,"stop":1701990387282,"duration":6192}},{"uid":"2a3bcdc95d86d881","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1217//#testresult/2a3bcdc95d86d881","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701990340073,"stop":1701990345484,"duration":5411}},{"uid":"30ffc266b7737585","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1215//#testresult/30ffc266b7737585","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701942783014,"stop":1701942790458,"duration":7444}},{"uid":"98a209e2c5db5668","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1214//#testresult/98a209e2c5db5668","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701936488149,"stop":1701936494352,"duration":6203}},{"uid":"2263c7c5920995f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1213//#testresult/2263c7c5920995f5","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701936447819,"stop":1701936453233,"duration":5414}},{"uid":"352a5802590ae9fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1211//#testresult/352a5802590ae9fa","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701911927866,"stop":1701911936248,"duration":8382}},{"uid":"fb557d268af06a73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1209//#testresult/fb557d268af06a73","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701904851165,"stop":1701904857393,"duration":6228}}]},"tags":[]},"source":"1999dd02996889ad.json","parameterValues":["EastLindseyDistrictCouncil","local","http://selenium:4444"]}