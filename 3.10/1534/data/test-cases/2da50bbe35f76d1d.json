{"uid":"2da50bbe35f76d1d","name":"Validate Council Output [MaldonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d7ae259690887cdb3dd06225c666392f","time":{"start":1706488054150,"stop":1706488085637,"duration":31487},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7fa8e8c2b1c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa8e7cc8b50>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7fa8e7bdd510>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7fa8e8c2b1c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa8e7cc8b50>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7fa8e7bdd510>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council: MaldonDistrictCouncil","time":{"start":1706488054151,"stop":1706488054151,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MaldonDistrictCouncil using None and the None is set","time":{"start":1706488054151,"stop":1706488085637,"duration":31486},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1427-315"},{"name":"thread","value":"2850-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":165,"unknown":0,"total":172},"items":[{"uid":"eb7d9fa96e36b078","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1531//#testresult/eb7d9fa96e36b078","status":"passed","time":{"start":1706401752790,"stop":1706401764262,"duration":11472}},{"uid":"3333c0484eeb9acf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1529//#testresult/3333c0484eeb9acf","status":"passed","time":{"start":1706315212974,"stop":1706315223120,"duration":10146}},{"uid":"4a0d63b9acbef16a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1528//#testresult/4a0d63b9acbef16a","status":"passed","time":{"start":1706228842673,"stop":1706228854530,"duration":11857}},{"uid":"c3f80b225682f99e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1523//#testresult/c3f80b225682f99e","status":"passed","time":{"start":1706142541836,"stop":1706142549946,"duration":8110}},{"uid":"662f1d1c2fe1d54f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1522//#testresult/662f1d1c2fe1d54f","status":"passed","time":{"start":1706056154156,"stop":1706056159665,"duration":5509}},{"uid":"613d895f06396ea3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1521//#testresult/613d895f06396ea3","status":"passed","time":{"start":1705969766799,"stop":1705969767926,"duration":1127}},{"uid":"20a60be9ad6b3a73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1520//#testresult/20a60be9ad6b3a73","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1705883538911,"stop":1705883570322,"duration":31411}},{"uid":"ab593e490ab4db2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1519//#testresult/ab593e490ab4db2c","status":"passed","time":{"start":1705797071113,"stop":1705797082276,"duration":11163}},{"uid":"860f4973d2be09e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1515//#testresult/860f4973d2be09e9","status":"passed","time":{"start":1705710469493,"stop":1705710479971,"duration":10478}},{"uid":"9f963ab26dc65aa9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1511//#testresult/9f963ab26dc65aa9","status":"passed","time":{"start":1705624128429,"stop":1705624134834,"duration":6405}},{"uid":"dd6e0e851a5527c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1505//#testresult/dd6e0e851a5527c5","status":"passed","time":{"start":1705537699250,"stop":1705537708332,"duration":9082}},{"uid":"7d37f1d675a735d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1500//#testresult/7d37f1d675a735d","status":"passed","time":{"start":1705451313267,"stop":1705451314292,"duration":1025}},{"uid":"d274fadecd9d2537","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1499//#testresult/d274fadecd9d2537","status":"passed","time":{"start":1705365063899,"stop":1705365074056,"duration":10157}},{"uid":"b0158ee29b0ea37a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1492//#testresult/b0158ee29b0ea37a","status":"passed","time":{"start":1705295649303,"stop":1705295650535,"duration":1232}},{"uid":"410c15c15caa575f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1491//#testresult/410c15c15caa575f","status":"passed","time":{"start":1705295141984,"stop":1705295147562,"duration":5578}},{"uid":"7feadb250f71ab96","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1490//#testresult/7feadb250f71ab96","status":"passed","time":{"start":1705278554958,"stop":1705278565397,"duration":10439}},{"uid":"d4974dee9a447372","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1485//#testresult/d4974dee9a447372","status":"passed","time":{"start":1705192220383,"stop":1705192231769,"duration":11386}},{"uid":"de3603d72b4fd771","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1484//#testresult/de3603d72b4fd771","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1705105650669,"stop":1705105681544,"duration":30875}},{"uid":"51641f1ea583a821","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1482//#testresult/51641f1ea583a821","status":"passed","time":{"start":1705019246994,"stop":1705019252605,"duration":5611}},{"uid":"c42373fad7f30b04","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1478//#testresult/c42373fad7f30b04","status":"passed","time":{"start":1704932849415,"stop":1704932858717,"duration":9302}}]},"tags":[]},"source":"2da50bbe35f76d1d.json","parameterValues":["MaldonDistrictCouncil","None","None"]}