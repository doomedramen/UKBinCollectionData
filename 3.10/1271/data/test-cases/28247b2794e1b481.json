{"uid":"28247b2794e1b481","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1702843583371,"stop":1702843887295,"duration":303924},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x556c96d5dd33 <unknown>\n#1 0x556c96a1af87 <unknown>\n#2 0x556c96a009c8 <unknown>\n#3 0x556c96a006fa <unknown>\n#4 0x556c969fea99 <unknown>\n#5 0x556c969ff43a <unknown>\n#6 0x556c96a1030c <unknown>\n#7 0x556c96a28a51 <unknown>\n#8 0x556c96a2e93b <unknown>\n#9 0x556c969ffbdd <unknown>\n#10 0x556c96a28852 <unknown>\n#11 0x556c96ab3496 <unknown>\n#12 0x556c96a940e3 <unknown>\n#13 0x556c96a5c044 <unknown>\n#14 0x556c96a5d44e <unknown>\n#15 0x556c96d22861 <unknown>\n#16 0x556c96d26785 <unknown>\n#17 0x556c96d10285 <unknown>\n#18 0x556c96d2741f <unknown>\n#19 0x556c96cf420f <unknown>\n#20 0x556c96d4b028 <unknown>\n#21 0x556c96d4b1f7 <unknown>\n#22 0x556c96d5ced4 <unknown>\n#23 0x7f356f694ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fd0154f30a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd00379d2a0>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:49: in parse_data\n    ))).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd003be8b20>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x556c96d4b1f7 \\\\u003Cunknown>\\\\n#22 0x556c96d5ced4 \\\\u003Cunknown>\\\\n#23 0x7f356f694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x556c96d5dd33 <unknown>\nE       #1 0x556c96a1af87 <unknown>\nE       #2 0x556c96a009c8 <unknown>\nE       #3 0x556c96a006fa <unknown>\nE       #4 0x556c969fea99 <unknown>\nE       #5 0x556c969ff43a <unknown>\nE       #6 0x556c96a1030c <unknown>\nE       #7 0x556c96a28a51 <unknown>\nE       #8 0x556c96a2e93b <unknown>\nE       #9 0x556c969ffbdd <unknown>\nE       #10 0x556c96a28852 <unknown>\nE       #11 0x556c96ab3496 <unknown>\nE       #12 0x556c96a940e3 <unknown>\nE       #13 0x556c96a5c044 <unknown>\nE       #14 0x556c96a5d44e <unknown>\nE       #15 0x556c96d22861 <unknown>\nE       #16 0x556c96d26785 <unknown>\nE       #17 0x556c96d10285 <unknown>\nE       #18 0x556c96d2741f <unknown>\nE       #19 0x556c96cf420f <unknown>\nE       #20 0x556c96d4b028 <unknown>\nE       #21 0x556c96d4b1f7 <unknown>\nE       #22 0x556c96d5ced4 <unknown>\nE       #23 0x7f356f694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x556c96d5dd33 <unknown>\n#1 0x556c96a1af87 <unknown>\n#2 0x556c96a009c8 <unknown>\n#3 0x556c96a006fa <unknown>\n#4 0x556c969fea99 <unknown>\n#5 0x556c969ff43a <unknown>\n#6 0x556c96a1030c <unknown>\n#7 0x556c96a28a51 <unknown>\n#8 0x556c96a2e93b <unknown>\n#9 0x556c969ffbdd <unknown>\n#10 0x556c96a28852 <unknown>\n#11 0x556c96ab3496 <unknown>\n#12 0x556c96a940e3 <unknown>\n#13 0x556c96a5c044 <unknown>\n#14 0x556c96a5d44e <unknown>\n#15 0x556c96d22861 <unknown>\n#16 0x556c96d26785 <unknown>\n#17 0x556c96d10285 <unknown>\n#18 0x556c96d2741f <unknown>\n#19 0x556c96cf420f <unknown>\n#20 0x556c96d4b028 <unknown>\n#21 0x556c96d4b1f7 <unknown>\n#22 0x556c96d5ced4 <unknown>\n#23 0x7f356f694ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fd0154f30a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd00379d2a0>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:49: in parse_data\n    ))).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd003be8b20>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x556c96d4b1f7 \\\\u003Cunknown>\\\\n#22 0x556c96d5ced4 \\\\u003Cunknown>\\\\n#23 0x7f356f694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x556c96d5dd33 <unknown>\nE       #1 0x556c96a1af87 <unknown>\nE       #2 0x556c96a009c8 <unknown>\nE       #3 0x556c96a006fa <unknown>\nE       #4 0x556c969fea99 <unknown>\nE       #5 0x556c969ff43a <unknown>\nE       #6 0x556c96a1030c <unknown>\nE       #7 0x556c96a28a51 <unknown>\nE       #8 0x556c96a2e93b <unknown>\nE       #9 0x556c969ffbdd <unknown>\nE       #10 0x556c96a28852 <unknown>\nE       #11 0x556c96ab3496 <unknown>\nE       #12 0x556c96a940e3 <unknown>\nE       #13 0x556c96a5c044 <unknown>\nE       #14 0x556c96a5d44e <unknown>\nE       #15 0x556c96d22861 <unknown>\nE       #16 0x556c96d26785 <unknown>\nE       #17 0x556c96d10285 <unknown>\nE       #18 0x556c96d2741f <unknown>\nE       #19 0x556c96cf420f <unknown>\nE       #20 0x556c96d4b028 <unknown>\nE       #21 0x556c96d4b1f7 <unknown>\nE       #22 0x556c96d5ced4 <unknown>\nE       #23 0x7f356f694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1702843583371,"stop":1702843583371,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1702843583372,"stop":1702843887295,"duration":303923},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x556c96d5dd33 <unknown>\n#1 0x556c96a1af87 <unknown>\n#2 0x556c96a009c8 <unknown>\n#3 0x556c96a006fa <unknown>\n#4 0x556c969fea99 <unknown>\n#5 0x556c969ff43a <unknown>\n#6 0x556c96a1030c <unknown>\n#7 0x556c96a28a51 <unknown>\n#8 0x556c96a2e93b <unknown>\n#9 0x556c969ffbdd <unknown>\n#10 0x556c96a28852 <unknown>\n#11 0x556c96ab3496 <unknown>\n#12 0x556c96a940e3 <unknown>\n#13 0x556c96a5c044 <unknown>\n#14 0x556c96a5d44e <unknown>\n#15 0x556c96d22861 <unknown>\n#16 0x556c96d26785 <unknown>\n#17 0x556c96d10285 <unknown>\n#18 0x556c96d2741f <unknown>\n#19 0x556c96cf420f <unknown>\n#20 0x556c96d4b028 <unknown>\n#21 0x556c96d4b1f7 <unknown>\n#22 0x556c96d5ced4 <unknown>\n#23 0x7f356f694ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x556c96d5dd33 <unknown>\n#1 0x556c96a1af87 <unknown>\n#2 0x556c96a009c8 <unknown>\n#3 0x556c96a006fa <unknown>\n#4 0x556c969fea99 <unknown>\n#5 0x556c969ff43a <unknown>\n#6 0x556c96a1030c <unknown>\n#7 0x556c96a28a51 <unknown>\n#8 0x556c96a2e93b <unknown>\n#9 0x556c969ffbdd <unknown>\n#10 0x556c96a28852 <unknown>\n#11 0x556c96ab3496 <unknown>\n#12 0x556c96a940e3 <unknown>\n#13 0x556c96a5c044 <unknown>\n#14 0x556c96a5d44e <unknown>\n#15 0x556c96d22861 <unknown>\n#16 0x556c96d26785 <unknown>\n#17 0x556c96d10285 <unknown>\n#18 0x556c96d2741f <unknown>\n#19 0x556c96cf420f <unknown>\n#20 0x556c96d4b028 <unknown>\n#21 0x556c96d4b1f7 <unknown>\n#22 0x556c96d5ced4 <unknown>\n#23 0x7f356f694ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1251-712"},{"name":"thread","value":"2778-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":67,"unknown":0,"total":75},"items":[{"uid":"2529626871238dfa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/2529626871238dfa","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x5611a036bd33 <unknown>\n#1 0x5611a0028f87 <unknown>\n#2 0x5611a000e9c8 <unknown>\n#3 0x5611a000e6fa <unknown>\n#4 0x5611a000ca99 <unknown>\n#5 0x5611a000d43a <unknown>\n#6 0x5611a001e30c <unknown>\n#7 0x5611a0036a51 <unknown>\n#8 0x5611a003c93b <unknown>\n#9 0x5611a000dbdd <unknown>\n#10 0x5611a0036852 <unknown>\n#11 0x5611a00c1496 <unknown>\n#12 0x5611a00a20e3 <unknown>\n#13 0x5611a006a044 <unknown>\n#14 0x5611a006b44e <unknown>\n#15 0x5611a0330861 <unknown>\n#16 0x5611a0334785 <unknown>\n#17 0x5611a031e285 <unknown>\n#18 0x5611a033541f <unknown>\n#19 0x5611a030220f <unknown>\n#20 0x5611a0359028 <unknown>\n#21 0x5611a03591f7 <unknown>\n#22 0x5611a036aed4 <unknown>\n#23 0x7ff75aa94ac3 <unknown>","time":{"start":1702809374067,"stop":1702809678854,"duration":304787}},{"uid":"1834cdea810499e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/1834cdea810499e9","status":"passed","time":{"start":1702657191232,"stop":1702657197982,"duration":6750}},{"uid":"b4c42b5df762d64c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/b4c42b5df762d64c","status":"passed","time":{"start":1702603163182,"stop":1702603176327,"duration":13145}},{"uid":"3e6235f4b8dfa4d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/3e6235f4b8dfa4d0","status":"passed","time":{"start":1702540032472,"stop":1702540040558,"duration":8086}},{"uid":"d5ed607103d4dec1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1241//#testresult/d5ed607103d4dec1","status":"passed","time":{"start":1702516660059,"stop":1702516668178,"duration":8119}},{"uid":"999486bb3be6e579","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1238//#testresult/999486bb3be6e579","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=119.0.6045.199)\nStacktrace:\n#0 0x5611e379a5e3 <unknown>\n#1 0x5611e345d0b7 <unknown>\n#2 0x5611e344323a <unknown>\n#3 0x5611e34430a9 <unknown>\n#4 0x5611e3441481 <unknown>\n#5 0x5611e3441e39 <unknown>\n#6 0x5611e34528ac <unknown>\n#7 0x5611e346a4c1 <unknown>\n#8 0x5611e347013b <unknown>\n#9 0x5611e34425ce <unknown>\n#10 0x5611e346a2c4 <unknown>\n#11 0x5611e34edd42 <unknown>\n#12 0x5611e34d1cc3 <unknown>\n#13 0x5611e349d0e4 <unknown>\n#14 0x5611e349e0ae <unknown>\n#15 0x5611e3760ce1 <unknown>\n#16 0x5611e3764b7e <unknown>\n#17 0x5611e374e4b5 <unknown>\n#18 0x5611e37657d6 <unknown>\n#19 0x5611e3731dbf <unknown>\n#20 0x5611e3788748 <unknown>\n#21 0x5611e3788917 <unknown>\n#22 0x5611e3799773 <unknown>\n#23 0x7f2007094ac3 <unknown>","time":{"start":1702447463721,"stop":1702447769310,"duration":305589}},{"uid":"f01d7cdcd15e1fc2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1237//#testresult/f01d7cdcd15e1fc2","status":"passed","time":{"start":1702447424031,"stop":1702447431478,"duration":7447}},{"uid":"fb0a680a573c9771","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1236//#testresult/fb0a680a573c9771","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=119.0.6045.199)\nStacktrace:\n#0 0x55e8d94bc5e3 <unknown>\n#1 0x55e8d917f0b7 <unknown>\n#2 0x55e8d916523a <unknown>\n#3 0x55e8d91650a9 <unknown>\n#4 0x55e8d9163481 <unknown>\n#5 0x55e8d9163e39 <unknown>\n#6 0x55e8d91748ac <unknown>\n#7 0x55e8d918c4c1 <unknown>\n#8 0x55e8d919213b <unknown>\n#9 0x55e8d91645ce <unknown>\n#10 0x55e8d918c2c4 <unknown>\n#11 0x55e8d920fd42 <unknown>\n#12 0x55e8d91f3cc3 <unknown>\n#13 0x55e8d91bf0e4 <unknown>\n#14 0x55e8d91c00ae <unknown>\n#15 0x55e8d9482ce1 <unknown>\n#16 0x55e8d9486b7e <unknown>\n#17 0x55e8d94704b5 <unknown>\n#18 0x55e8d94877d6 <unknown>\n#19 0x55e8d9453dbf <unknown>\n#20 0x55e8d94aa748 <unknown>\n#21 0x55e8d94aa917 <unknown>\n#22 0x55e8d94bb773 <unknown>\n#23 0x7f7a1b094ac3 <unknown>","time":{"start":1702430346526,"stop":1702430656526,"duration":310000}},{"uid":"fe5762a99557afbb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1232//#testresult/fe5762a99557afbb","status":"passed","time":{"start":1702366504362,"stop":1702366511303,"duration":6941}},{"uid":"4dd5b0c5ca11b646","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1231//#testresult/4dd5b0c5ca11b646","status":"passed","time":{"start":1702343965924,"stop":1702343974400,"duration":8476}},{"uid":"d2afe1eaf3e5b1d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1229//#testresult/d2afe1eaf3e5b1d7","status":"passed","time":{"start":1702257566058,"stop":1702257573125,"duration":7067}},{"uid":"6d278f39db9d762c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1228//#testresult/6d278f39db9d762c","status":"passed","time":{"start":1702171418041,"stop":1702171426205,"duration":8164}},{"uid":"46b0b257cc7f3421","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/46b0b257cc7f3421","status":"passed","time":{"start":1702084652005,"stop":1702084668187,"duration":16182}},{"uid":"a93fccecebe79251","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1225//#testresult/a93fccecebe79251","status":"passed","time":{"start":1702066738861,"stop":1702066747477,"duration":8616}},{"uid":"590dd4af9da402d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1222//#testresult/590dd4af9da402d1","status":"passed","time":{"start":1702054374121,"stop":1702054381076,"duration":6955}},{"uid":"486d0b9327e5d18a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1219//#testresult/486d0b9327e5d18a","status":"passed","time":{"start":1701998393879,"stop":1701998403405,"duration":9526}},{"uid":"676f1aae3cceb168","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1218//#testresult/676f1aae3cceb168","status":"passed","time":{"start":1701990385202,"stop":1701990393715,"duration":8513}},{"uid":"d4b7b7cbbce404f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1217//#testresult/d4b7b7cbbce404f7","status":"passed","time":{"start":1701990351639,"stop":1701990359474,"duration":7835}},{"uid":"97c1ecf5c12f835f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1215//#testresult/97c1ecf5c12f835f","status":"passed","time":{"start":1701942781593,"stop":1701942791970,"duration":10377}},{"uid":"600138a72eddcfea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1214//#testresult/600138a72eddcfea","status":"passed","time":{"start":1701936491014,"stop":1701936499930,"duration":8916}}]},"tags":[]},"source":"28247b2794e1b481.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}