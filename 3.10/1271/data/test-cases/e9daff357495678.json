{"uid":"e9daff357495678","name":"Validate Council Output [WealdenDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b3ddf98c8383031d63a6bd27b361f868","time":{"start":1702843754253,"stop":1702843755816,"duration":1563},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f13ac12f6d0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f139aa84370>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f139aa84370>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f13ac12f6d0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f139aa84370>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f139aa84370>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: WealdenDistrictCouncil","time":{"start":1702843754253,"stop":1702843754254,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WealdenDistrictCouncil using None and the None is set","time":{"start":1702843754254,"stop":1702843755814,"duration":1560},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1702843755814,"stop":1702843755815,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1702843755815,"stop":1702843755816,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1251-712"},{"name":"thread","value":"2781-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WealdenDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":68,"unknown":0,"total":75},"items":[{"uid":"393008de66b024af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/393008de66b024af","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702809528505,"stop":1702809530241,"duration":1736}},{"uid":"498557bf849f5c4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/498557bf849f5c4d","status":"passed","time":{"start":1702657387709,"stop":1702657389148,"duration":1439}},{"uid":"2966644c3a8f1276","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/2966644c3a8f1276","status":"passed","time":{"start":1702603290547,"stop":1702603293056,"duration":2509}},{"uid":"9ef047840444deb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/9ef047840444deb3","status":"passed","time":{"start":1702540148065,"stop":1702540149784,"duration":1719}},{"uid":"d61040793c19794a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1241//#testresult/d61040793c19794a","status":"passed","time":{"start":1702516832011,"stop":1702516833736,"duration":1725}},{"uid":"efc7d727a0eb2e84","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1238//#testresult/efc7d727a0eb2e84","status":"passed","time":{"start":1702447767499,"stop":1702447769556,"duration":2057}},{"uid":"27733a1d98309142","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1237//#testresult/27733a1d98309142","status":"passed","time":{"start":1702447547275,"stop":1702447548904,"duration":1629}},{"uid":"da4b81d391d8fa10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1236//#testresult/da4b81d391d8fa10","status":"passed","time":{"start":1702430604546,"stop":1702430606607,"duration":2061}},{"uid":"1ed30f827508b661","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1232//#testresult/1ed30f827508b661","status":"passed","time":{"start":1702366593741,"stop":1702366595497,"duration":1756}},{"uid":"d04f02f1c55841fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1231//#testresult/d04f02f1c55841fd","status":"passed","time":{"start":1702344062477,"stop":1702344064285,"duration":1808}},{"uid":"79b4e01170b47ac8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1229//#testresult/79b4e01170b47ac8","status":"passed","time":{"start":1702257656864,"stop":1702257658602,"duration":1738}},{"uid":"c96c094368615668","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1228//#testresult/c96c094368615668","status":"passed","time":{"start":1702171604477,"stop":1702171606250,"duration":1773}},{"uid":"6d3f9483e51b4a0f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/6d3f9483e51b4a0f","status":"passed","time":{"start":1702084855633,"stop":1702084858031,"duration":2398}},{"uid":"a5da03b7bd0a7b48","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1225//#testresult/a5da03b7bd0a7b48","status":"passed","time":{"start":1702066843446,"stop":1702066845375,"duration":1929}},{"uid":"466c2e7d354fb643","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1222//#testresult/466c2e7d354fb643","status":"passed","time":{"start":1702054484382,"stop":1702054485981,"duration":1599}},{"uid":"e701236b2602c45d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1219//#testresult/e701236b2602c45d","status":"passed","time":{"start":1701998520720,"stop":1701998523360,"duration":2640}},{"uid":"9e0ec8fd80cccf4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1218//#testresult/9e0ec8fd80cccf4b","status":"passed","time":{"start":1701990483038,"stop":1701990484848,"duration":1810}},{"uid":"257390573c8e8a34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1217//#testresult/257390573c8e8a34","status":"passed","time":{"start":1701990443065,"stop":1701990444773,"duration":1708}},{"uid":"5a39e95ad8ea2591","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1215//#testresult/5a39e95ad8ea2591","status":"passed","time":{"start":1701942904557,"stop":1701942906963,"duration":2406}},{"uid":"6b3d29c141248e37","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1214//#testresult/6b3d29c141248e37","status":"passed","time":{"start":1701936647947,"stop":1701936649625,"duration":1678}}]},"tags":[]},"source":"e9daff357495678.json","parameterValues":["WealdenDistrictCouncil","None","None"]}