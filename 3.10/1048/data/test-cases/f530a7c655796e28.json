{"uid":"f530a7c655796e28","name":"Validate Council Output [SalfordCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"46bdc81110002bd93542f111d9af2812","time":{"start":1698178414134,"stop":1698178417020,"duration":2886},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f66a0bd2c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[SalfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6694bf77c0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f6694bf77c0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f66a0bd2c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[SalfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6694bf77c0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f6694bf77c0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","steps":[{"name":"Given the council: SalfordCityCouncil","time":{"start":1698178414135,"stop":1698178414135,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from SalfordCityCouncil","time":{"start":1698178414136,"stop":1698178417013,"duration":2877},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698178417014,"stop":1698178417014,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698178417014,"stop":1698178417019,"duration":5},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az620-913"},{"name":"thread","value":"2137-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SalfordCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":140,"unknown":0,"total":152},"items":[{"uid":"3eb0bca34815960e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1047//#testresult/3eb0bca34815960e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178353224,"stop":1698178356053,"duration":2829}},{"uid":"c0ca6c80f5897814","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1046//#testresult/c0ca6c80f5897814","status":"passed","time":{"start":1698110270708,"stop":1698110272682,"duration":1974}},{"uid":"c255926a9a174a1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1044//#testresult/c255926a9a174a1c","status":"passed","time":{"start":1698065038239,"stop":1698065041795,"duration":3556}},{"uid":"53c705f7e783190b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1045//#testresult/53c705f7e783190b","status":"passed","time":{"start":1698065247514,"stop":1698065251607,"duration":4093}},{"uid":"cbae7a99061fd8a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1042//#testresult/cbae7a99061fd8a9","status":"passed","time":{"start":1698023954998,"stop":1698023958016,"duration":3018}},{"uid":"1006d6c1c53500af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1040//#testresult/1006d6c1c53500af","status":"passed","time":{"start":1697937834696,"stop":1697937837499,"duration":2803}},{"uid":"d3dae8ba630688d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1039//#testresult/d3dae8ba630688d0","status":"passed","time":{"start":1697850998084,"stop":1697851000515,"duration":2431}},{"uid":"d2390b2b40403759","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1037//#testresult/d2390b2b40403759","status":"passed","time":{"start":1697790427969,"stop":1697790430374,"duration":2405}},{"uid":"8082a1b6d420576f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1036//#testresult/8082a1b6d420576f","status":"passed","time":{"start":1697790443313,"stop":1697790445753,"duration":2440}},{"uid":"47edadfeef8bc2ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1034//#testresult/47edadfeef8bc2ac","status":"passed","time":{"start":1697764553242,"stop":1697764556450,"duration":3208}},{"uid":"5a21eab206d2410f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1033//#testresult/5a21eab206d2410f","status":"passed","time":{"start":1697706690486,"stop":1697706693741,"duration":3255}},{"uid":"86ea5df075646005","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1032//#testresult/86ea5df075646005","status":"passed","time":{"start":1697706656862,"stop":1697706659548,"duration":2686}},{"uid":"f34f1555d0890f01","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1030//#testresult/f34f1555d0890f01","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","time":{"start":1697702048830,"stop":1697702048831,"duration":1}},{"uid":"ad80fa9895ed96da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/ad80fa9895ed96da","status":"passed","time":{"start":1697696389254,"stop":1697696392360,"duration":3106}},{"uid":"4ddca8fb9abb53a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/4ddca8fb9abb53a9","status":"passed","time":{"start":1697678302949,"stop":1697678305096,"duration":2147}},{"uid":"86c164ae280cd115","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/86c164ae280cd115","status":"passed","time":{"start":1697666796425,"stop":1697666798644,"duration":2219}},{"uid":"bfd068c5d73a38ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/bfd068c5d73a38ab","status":"passed","time":{"start":1697666693802,"stop":1697666695601,"duration":1799}},{"uid":"dbe97f5e034f81cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/dbe97f5e034f81cc","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1697657032261,"stop":1697657038013,"duration":5752}},{"uid":"853d48f4e30676d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/853d48f4e30676d2","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1697656994600,"stop":1697657000033,"duration":5433}},{"uid":"8002fa4dc3b384b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/8002fa4dc3b384b8","status":"passed","time":{"start":1697650212941,"stop":1697650216772,"duration":3831}}]},"tags":[]},"source":"f530a7c655796e28.json","parameterValues":["SalfordCityCouncil"]}