{"uid":"4f4442bfac8c5ab","name":"Validate Council Output [BexleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b14d94c00a7a02b15ede5862fe9627b6","time":{"start":1698369151404,"stop":1698369151819,"duration":415},"status":"failed","statusMessage":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"fixturefunc = <function scrape_step at 0x7fa56b8528c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa5648f70a0>, 'council': 'BexleyCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BexleyCouncil.CouncilClass object at 0x7fa56480bf70>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': 'spamstorage@live.co.uk', 'url': 'https://www.bexley.gov.uk/', ...}\nuser_email = 'spamstorage@live.co.uk'\nheaders = {'Connection': 'Keep-Alive', 'X-country': 'gb', 'X-email': 'spamstorage@live.co.uk'}\nresponse = <Response [400]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # User email from @Home app as UPRN\n        user_email = kwargs.get(\"uprn\")\n        headers = {\n            \"X-country\": \"gb\",\n            \"X-email\": user_email,\n            \"Connection\": \"Keep-Alive\",\n        }\n    \n        # Sniffed from the app\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://services.athomeapp.net/ServiceData/GetUserRoundJson\",\n            headers=headers,\n        )\n    \n        # 200 is OK. Sometimes it times out and gives this, but I'm not parsing HTTP codes\n        if response.status_code != 200:\n>           raise ValueError(\n                \"Error parsing API. Please check your email is correct and registered on the @Home app.\"\n            )\nE           ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:34: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"fixturefunc = <function scrape_step at 0x7fa56b8528c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa5648f70a0>, 'council': 'BexleyCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BexleyCouncil.CouncilClass object at 0x7fa56480bf70>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': 'spamstorage@live.co.uk', 'url': 'https://www.bexley.gov.uk/', ...}\nuser_email = 'spamstorage@live.co.uk'\nheaders = {'Connection': 'Keep-Alive', 'X-country': 'gb', 'X-email': 'spamstorage@live.co.uk'}\nresponse = <Response [400]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # User email from @Home app as UPRN\n        user_email = kwargs.get(\"uprn\")\n        headers = {\n            \"X-country\": \"gb\",\n            \"X-email\": user_email,\n            \"Connection\": \"Keep-Alive\",\n        }\n    \n        # Sniffed from the app\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://services.athomeapp.net/ServiceData/GetUserRoundJson\",\n            headers=headers,\n        )\n    \n        # 200 is OK. Sometimes it times out and gives this, but I'm not parsing HTTP codes\n        if response.status_code != 200:\n>           raise ValueError(\n                \"Error parsing API. Please check your email is correct and registered on the @Home app.\"\n            )\nE           ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:34: ValueError","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1698369151404,"stop":1698369151405,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BexleyCouncil","time":{"start":1698369151405,"stop":1698369151819,"duration":414},"status":"failed","statusMessage":"Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az359-154"},{"name":"thread","value":"2192-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":103,"broken":0,"skipped":0,"passed":52,"unknown":0,"total":155},"items":[{"uid":"dc1c297f7e114c5a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1050//#testresult/dc1c297f7e114c5a","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698282737922,"stop":1698282738513,"duration":591}},{"uid":"9b7de5a0e376b35d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1049//#testresult/9b7de5a0e376b35d","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698196411191,"stop":1698196411757,"duration":566}},{"uid":"ea041f52d764a1ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1048//#testresult/ea041f52d764a1ab","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698178137378,"stop":1698178138043,"duration":665}},{"uid":"7e6e54e12127fbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1047//#testresult/7e6e54e12127fbc","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698178093687,"stop":1698178094195,"duration":508}},{"uid":"1e692a6bde4f8336","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1046//#testresult/1e692a6bde4f8336","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698110009476,"stop":1698110009945,"duration":469}},{"uid":"bab3f0f15b38a1bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1044//#testresult/bab3f0f15b38a1bf","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698064775333,"stop":1698064775840,"duration":507}},{"uid":"34244c5e88a06c0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1045//#testresult/34244c5e88a06c0c","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698064814404,"stop":1698064814905,"duration":501}},{"uid":"8b0565bdb6444ff2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1042//#testresult/8b0565bdb6444ff2","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698023658183,"stop":1698023658812,"duration":629}},{"uid":"caa227d3519f6e7f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1040//#testresult/caa227d3519f6e7f","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697937522863,"stop":1697937523525,"duration":662}},{"uid":"1786dcf16d126e49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1039//#testresult/1786dcf16d126e49","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697850712338,"stop":1697850712946,"duration":608}},{"uid":"63677a638298d5b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1037//#testresult/63677a638298d5b3","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697790311892,"stop":1697790312324,"duration":432}},{"uid":"2357602315f96407","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1036//#testresult/2357602315f96407","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697790303457,"stop":1697790303968,"duration":511}},{"uid":"c9953e7dd9659964","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1034//#testresult/c9953e7dd9659964","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697764430269,"stop":1697764430881,"duration":612}},{"uid":"5cbe378e7115c6d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1033//#testresult/5cbe378e7115c6d","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697706459202,"stop":1697706459837,"duration":635}},{"uid":"58674ef94dd1c12a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1032//#testresult/58674ef94dd1c12a","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697706415940,"stop":1697706416371,"duration":431}},{"uid":"7c658c0a3fffd313","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1030//#testresult/7c658c0a3fffd313","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","time":{"start":1697702047480,"stop":1697702047480,"duration":0}},{"uid":"6d7e643c2a17a822","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/6d7e643c2a17a822","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697696107832,"stop":1697696108539,"duration":707}},{"uid":"46fbe1298b7f8a9c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/46fbe1298b7f8a9c","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697678032963,"stop":1697678033470,"duration":507}},{"uid":"873d6cfda2febc5a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/873d6cfda2febc5a","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697666528269,"stop":1697666528872,"duration":603}},{"uid":"7bcd5e9c0b106838","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/7bcd5e9c0b106838","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697666481697,"stop":1697666482197,"duration":500}}]},"tags":[]},"source":"4f4442bfac8c5ab.json","parameterValues":["BexleyCouncil"]}