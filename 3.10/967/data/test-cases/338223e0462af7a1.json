{"uid":"338223e0462af7a1","name":"Validate Council Output [CharnwoodBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"801248c9ab954856945dc1ac5bef1fab","time":{"start":1696209263483,"stop":1696209265585,"duration":2102},"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CharnwoodBoroughCouncil]>>\n_pytest_bdd_example = {'council': 'CharnwoodBoroughCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CharnwoodBoroughCouncil.py:31: in parse_data\n    collection_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%a %d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CharnwoodBoroughCouncil]>>\n_pytest_bdd_example = {'council': 'CharnwoodBoroughCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CharnwoodBoroughCouncil.py:31: in parse_data\n    collection_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%a %d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: CharnwoodBoroughCouncil","time":{"start":1696209263484,"stop":1696209263484,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from CharnwoodBoroughCouncil","time":{"start":1696209263484,"stop":1696209265585,"duration":2101},"status":"failed","statusMessage":"time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az248-154"},{"name":"thread","value":"2094-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CharnwoodBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":90,"unknown":0,"total":104},"items":[{"uid":"458a75495ba7b838","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/966//#testresult/458a75495ba7b838","status":"passed","time":{"start":1696123356375,"stop":1696123358077,"duration":1702}},{"uid":"c3abd883188a5039","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/965//#testresult/c3abd883188a5039","status":"passed","time":{"start":1696036316185,"stop":1696036317811,"duration":1626}},{"uid":"577c35dc18b85eef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/964//#testresult/577c35dc18b85eef","status":"passed","time":{"start":1695950004487,"stop":1695950006388,"duration":1901}},{"uid":"a3ab0fc277e121a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/963//#testresult/a3ab0fc277e121a7","status":"passed","time":{"start":1695930328162,"stop":1695930329652,"duration":1490}},{"uid":"23badf0228591836","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/962//#testresult/23badf0228591836","status":"passed","time":{"start":1695930256329,"stop":1695930257891,"duration":1562}},{"uid":"358f34046896aa91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/960//#testresult/358f34046896aa91","status":"passed","time":{"start":1695863612451,"stop":1695863614645,"duration":2194}},{"uid":"d56e7c77dc0664eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/958//#testresult/d56e7c77dc0664eb","status":"passed","time":{"start":1695852450376,"stop":1695852452170,"duration":1794}},{"uid":"3fde2482e65d234b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/957//#testresult/3fde2482e65d234b","status":"passed","time":{"start":1695852408516,"stop":1695852410277,"duration":1761}},{"uid":"444e889b31ed8bed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/954//#testresult/444e889b31ed8bed","status":"passed","time":{"start":1695841407129,"stop":1695841408769,"duration":1640}},{"uid":"3697a588e0daf933","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/953//#testresult/3697a588e0daf933","status":"passed","time":{"start":1695841366648,"stop":1695841368397,"duration":1749}},{"uid":"5daf397c3bc69b57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/948//#testresult/5daf397c3bc69b57","status":"passed","time":{"start":1695777240797,"stop":1695777242605,"duration":1808}},{"uid":"2251de4baaf321d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/947//#testresult/2251de4baaf321d8","status":"passed","time":{"start":1695690835463,"stop":1695690837083,"duration":1620}},{"uid":"545e5e3eb6e7055f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/946//#testresult/545e5e3eb6e7055f","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1695604447304,"stop":1695604449311,"duration":2007}},{"uid":"60b21f498728775a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/945//#testresult/60b21f498728775a","status":"passed","time":{"start":1695518226965,"stop":1695518228967,"duration":2002}},{"uid":"467edcb1f21f350a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/944//#testresult/467edcb1f21f350a","status":"passed","time":{"start":1695431461306,"stop":1695431463149,"duration":1843}},{"uid":"9f703f9b5a73b421","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/943//#testresult/9f703f9b5a73b421","status":"passed","time":{"start":1695345190505,"stop":1695345191829,"duration":1324}},{"uid":"8c8d5c5e9504490d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/942//#testresult/8c8d5c5e9504490d","status":"passed","time":{"start":1695258740870,"stop":1695258742729,"duration":1859}},{"uid":"8911cd6e501058e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/941//#testresult/8911cd6e501058e1","status":"passed","time":{"start":1695206123878,"stop":1695206125286,"duration":1408}},{"uid":"837689b8bf990c77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/939//#testresult/837689b8bf990c77","status":"passed","time":{"start":1695193583748,"stop":1695193584851,"duration":1103}},{"uid":"e85b7f70d64506ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/937//#testresult/e85b7f70d64506ff","status":"passed","time":{"start":1695172374681,"stop":1695172376238,"duration":1557}}]},"tags":[]},"source":"338223e0462af7a1.json","parameterValues":["CharnwoodBoroughCouncil"]}