{"uid":"6c0e68ad71df952a","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1704496235359,"stop":1704496236249,"duration":890},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f68d097bb50>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f68cfab5a50>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f68cfab5a50>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f68d097bb50>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f68cfab5a50>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f68cfab5a50>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1704496235360,"stop":1704496235360,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1704496235360,"stop":1704496236247,"duration":887},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704496236247,"stop":1704496236247,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704496236247,"stop":1704496236249,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1493-787"},{"name":"thread","value":"2700-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":126,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":139},"items":[{"uid":"e643d7c60a6d4972","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1406//#testresult/e643d7c60a6d4972","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704453417716,"stop":1704453419320,"duration":1604}},{"uid":"2fc2db13044c09c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1407//#testresult/2fc2db13044c09c5","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time)\\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1704453427163,"stop":1704453428882,"duration":1719}},{"uid":"8cca486f4e2deb0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1405//#testresult/8cca486f4e2deb0e","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time)\\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1704452631778,"stop":1704452633454,"duration":1676}},{"uid":"a05facf525a00143","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1400//#testresult/a05facf525a00143","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704443771819,"stop":1704443772695,"duration":876}},{"uid":"e75ed060e073298","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1399//#testresult/e75ed060e073298","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time)\\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1704443361767,"stop":1704443363374,"duration":1607}},{"uid":"f61383da75b2d85c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1397//#testresult/f61383da75b2d85c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704442497981,"stop":1704442498541,"duration":560}},{"uid":"e4761b950b5ca596","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1390//#testresult/e4761b950b5ca596","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704417546457,"stop":1704417547055,"duration":598}},{"uid":"d3bcc53c032f7f26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1379//#testresult/d3bcc53c032f7f26","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704406032853,"stop":1704406033722,"duration":869}},{"uid":"4cbf315caf488333","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1378//#testresult/4cbf315caf488333","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704405973229,"stop":1704405973870,"duration":641}},{"uid":"9eb4b215e9251b69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1376//#testresult/9eb4b215e9251b69","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704398814350,"stop":1704398815164,"duration":814}},{"uid":"e95696386322bf09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1375//#testresult/e95696386322bf09","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704398756911,"stop":1704398757670,"duration":759}},{"uid":"83605f089f602585","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1373//#testresult/83605f089f602585","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704388317662,"stop":1704388318648,"duration":986}},{"uid":"5a41833151ce5430","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1372//#testresult/5a41833151ce5430","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2024' does not match format '%A, %d %B %Y'","time":{"start":1704388271568,"stop":1704388273362,"duration":1794}},{"uid":"145d518ee3989b26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1369//#testresult/145d518ee3989b26","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704378367388,"stop":1704378389408,"duration":22020}},{"uid":"be5c158f06a22c7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1367//#testresult/be5c158f06a22c7e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704378117634,"stop":1704378118361,"duration":727}},{"uid":"ae9ae9bc83045eaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1366//#testresult/ae9ae9bc83045eaf","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2024' does not match format '%A, %d %B %Y'","time":{"start":1704375872256,"stop":1704375873639,"duration":1383}},{"uid":"354eb5fc3a5dcfa2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1363//#testresult/354eb5fc3a5dcfa2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704356770539,"stop":1704356771133,"duration":594}},{"uid":"eff56eb277e9d645","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1361//#testresult/eff56eb277e9d645","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704355955055,"stop":1704355956107,"duration":1052}},{"uid":"767f7e96c86b3477","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1359//#testresult/767f7e96c86b3477","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704331109414,"stop":1704331110022,"duration":608}},{"uid":"7f1e97a258965cbf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1355//#testresult/7f1e97a258965cbf","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704303719806,"stop":1704303720949,"duration":1143}}]},"tags":[]},"source":"6c0e68ad71df952a.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}