{"uid":"932dd1a4b21f6724","name":"Validate Council Output [MalvernHillsDC-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aa5bb0fc8895f376e02d5eea8573242b","time":{"start":1704496241485,"stop":1704496242947,"duration":1462},"status":"failed","statusMessage":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7ff9509fb010>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff95046af50>, 'council': 'MalvernHillsDC', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MalvernHillsDC.py:50: in parse_data\n    date = datetime.strptime(thisCollection[1], \"%A %d/%m/%Y\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Please refer to the  christmas collection calendar.'\nformat = '%A %d/%m/%Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7ff9509fb010>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff95046af50>, 'council': 'MalvernHillsDC', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MalvernHillsDC.py:50: in parse_data\n    date = datetime.strptime(thisCollection[1], \"%A %d/%m/%Y\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Please refer to the  christmas collection calendar.'\nformat = '%A %d/%m/%Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: MalvernHillsDC","time":{"start":1704496241485,"stop":1704496241485,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MalvernHillsDC using None and the None is set","time":{"start":1704496241485,"stop":1704496242947,"duration":1462},"status":"failed","statusMessage":"time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1493-787"},{"name":"thread","value":"2694-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MalvernHillsDC"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":87,"broken":0,"skipped":0,"passed":52,"unknown":0,"total":139},"items":[{"uid":"ab1edfa3cf19ac06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1406//#testresult/ab1edfa3cf19ac06","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704453443216,"stop":1704453444749,"duration":1533}},{"uid":"e0c781c9113a45c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1407//#testresult/e0c781c9113a45c1","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704453451551,"stop":1704453452529,"duration":978}},{"uid":"f3e867e0797d8ef3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1405//#testresult/f3e867e0797d8ef3","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704452673019,"stop":1704452674008,"duration":989}},{"uid":"e178c6cbf6944d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1400//#testresult/e178c6cbf6944d0","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704443791772,"stop":1704443792871,"duration":1099}},{"uid":"6b88708c7d6e44d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1399//#testresult/6b88708c7d6e44d6","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704443380336,"stop":1704443381450,"duration":1114}},{"uid":"c201c3e82ccab43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1397//#testresult/c201c3e82ccab43","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704442525650,"stop":1704442526646,"duration":996}},{"uid":"a3bd487055bd9d88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1390//#testresult/a3bd487055bd9d88","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704417579684,"stop":1704417580562,"duration":878}},{"uid":"6a83f165c7a21cb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1379//#testresult/6a83f165c7a21cb9","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704406037282,"stop":1704406038692,"duration":1410}},{"uid":"e1a3bc03e6f2a5fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1378//#testresult/e1a3bc03e6f2a5fb","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704405985378,"stop":1704405986421,"duration":1043}},{"uid":"12ca72e5e948b316","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1376//#testresult/12ca72e5e948b316","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704398829825,"stop":1704398830818,"duration":993}},{"uid":"16d02122a30ab442","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1375//#testresult/16d02122a30ab442","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704398781040,"stop":1704398782073,"duration":1033}},{"uid":"1b99c7c5dfaa57a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1373//#testresult/1b99c7c5dfaa57a5","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704388354718,"stop":1704388356163,"duration":1445}},{"uid":"75eadb198e18606e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1372//#testresult/75eadb198e18606e","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704388296463,"stop":1704388297609,"duration":1146}},{"uid":"f7278ad6b4236b3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1369//#testresult/f7278ad6b4236b3c","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704378382276,"stop":1704378383692,"duration":1416}},{"uid":"fccc5d3406fb27b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1367//#testresult/fccc5d3406fb27b1","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704378060568,"stop":1704378061522,"duration":954}},{"uid":"c7202726b3dbd3f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1366//#testresult/c7202726b3dbd3f0","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704375884410,"stop":1704375885274,"duration":864}},{"uid":"91406696118c2979","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1363//#testresult/91406696118c2979","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704356793729,"stop":1704356794611,"duration":882}},{"uid":"6cf214d18797e2b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1361//#testresult/6cf214d18797e2b4","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704355944828,"stop":1704355946086,"duration":1258}},{"uid":"395008689e4945e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1359//#testresult/395008689e4945e","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704331213545,"stop":1704331214533,"duration":988}},{"uid":"11e48b65e30b8b7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1355//#testresult/11e48b65e30b8b7b","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704303741638,"stop":1704303742786,"duration":1148}}]},"tags":[]},"source":"932dd1a4b21f6724.json","parameterValues":["MalvernHillsDC","None","None"]}