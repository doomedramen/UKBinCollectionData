{"uid":"f9379d289d04046","name":"Validate Council Output [ChelmsfordCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"ca53b6762a00c9270716d2dce73b5f79","time":{"start":1699101469969,"stop":1699101478308,"duration":8339},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fca281d6b90>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChelmsfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fca23dff670>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fca23dff670>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fca281d6b90>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChelmsfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fca23dff670>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fca23dff670>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","steps":[{"name":"Given the council: ChelmsfordCityCouncil","time":{"start":1699101469969,"stop":1699101469970,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from ChelmsfordCityCouncil","time":{"start":1699101469970,"stop":1699101478305,"duration":8335},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699101478305,"stop":1699101478306,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699101478306,"stop":1699101478308,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az245-440"},{"name":"thread","value":"2717-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ChelmsfordCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":163,"unknown":0,"total":177},"items":[{"uid":"db8b16ebb7eaee7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1106//#testresult/db8b16ebb7eaee7a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699060442604,"stop":1699060461923,"duration":19319}},{"uid":"fdfc20182933d943","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1100//#testresult/fdfc20182933d943","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699007585200,"stop":1699007606024,"duration":20824}},{"uid":"51da5f09bccc97ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1095//#testresult/51da5f09bccc97ff","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698988560029,"stop":1698988569149,"duration":9120}},{"uid":"1e38e3a2799a6da0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1094//#testresult/1e38e3a2799a6da0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698974105923,"stop":1698974126516,"duration":20593}},{"uid":"1485e223005c0d5f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1091//#testresult/1485e223005c0d5f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698887640117,"stop":1698887649145,"duration":9028}},{"uid":"a4ea8adc3ff3cdc4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1090//#testresult/a4ea8adc3ff3cdc4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878275490,"stop":1698878284379,"duration":8889}},{"uid":"5872a347e47bc2cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1086//#testresult/5872a347e47bc2cb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867395648,"stop":1698867405052,"duration":9404}},{"uid":"9e73f5ff67b4f23e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1087//#testresult/9e73f5ff67b4f23e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867410807,"stop":1698867419830,"duration":9023}},{"uid":"6518411bcb9d4606","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1081//#testresult/6518411bcb9d4606","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801511806,"stop":1698801532048,"duration":20242}},{"uid":"4ef0013123c7582f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/4ef0013123c7582f","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788426297,"stop":1698788434619,"duration":8322}},{"uid":"996c4d2396372cfb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/996c4d2396372cfb","status":"passed","time":{"start":1698714894594,"stop":1698714915578,"duration":20984}},{"uid":"5c710dc0a9dc8dc9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/5c710dc0a9dc8dc9","status":"passed","time":{"start":1698701283814,"stop":1698701293352,"duration":9538}},{"uid":"7ed4cbe0852679fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/7ed4cbe0852679fc","status":"passed","time":{"start":1698700157051,"stop":1698700166310,"duration":9259}},{"uid":"8e26263904dde94d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/8e26263904dde94d","status":"passed","time":{"start":1698692702744,"stop":1698692711923,"duration":9179}},{"uid":"e9fe127668872a23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/e9fe127668872a23","status":"passed","time":{"start":1698692665395,"stop":1698692674617,"duration":9222}},{"uid":"eea380275a545d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/eea380275a545d5","status":"passed","time":{"start":1698646228896,"stop":1698646238582,"duration":9686}},{"uid":"861573d4e436f2af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/861573d4e436f2af","status":"passed","time":{"start":1698628473193,"stop":1698628480253,"duration":7060}},{"uid":"2e5dbc620bb660d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/2e5dbc620bb660d6","status":"passed","time":{"start":1698615116102,"stop":1698615123533,"duration":7431}},{"uid":"8e7f8ac96dbfcfae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/8e7f8ac96dbfcfae","status":"passed","time":{"start":1698615039831,"stop":1698615046361,"duration":6530}},{"uid":"78d78ee068946305","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/78d78ee068946305","status":"passed","time":{"start":1698542282561,"stop":1698542292041,"duration":9480}}]},"tags":[]},"source":"f9379d289d04046.json","parameterValues":["ChelmsfordCityCouncil"]}