{"uid":"6518411bcb9d4606","name":"Validate Council Output [ChelmsfordCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"ca53b6762a00c9270716d2dce73b5f79","time":{"start":1698801511806,"stop":1698801532048,"duration":20242},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc9fdb72d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChelmsfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc9fdf646a0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:86: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc9fdf646a0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:82: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc9fdb72d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChelmsfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc9fdf646a0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:86: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc9fdf646a0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:82: AssertionError","steps":[{"name":"Given the council: ChelmsfordCityCouncil","time":{"start":1698801511806,"stop":1698801511807,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from ChelmsfordCityCouncil","time":{"start":1698801511807,"stop":1698801532045,"duration":20238},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698801532045,"stop":1698801532046,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698801532046,"stop":1698801532048,"duration":2},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az441-541"},{"name":"thread","value":"2182-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ChelmsfordCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":163,"unknown":0,"total":168},"items":[{"uid":"4ef0013123c7582f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/4ef0013123c7582f","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788426297,"stop":1698788434619,"duration":8322}},{"uid":"996c4d2396372cfb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/996c4d2396372cfb","status":"passed","time":{"start":1698714894594,"stop":1698714915578,"duration":20984}},{"uid":"5c710dc0a9dc8dc9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/5c710dc0a9dc8dc9","status":"passed","time":{"start":1698701283814,"stop":1698701293352,"duration":9538}},{"uid":"7ed4cbe0852679fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/7ed4cbe0852679fc","status":"passed","time":{"start":1698700157051,"stop":1698700166310,"duration":9259}},{"uid":"8e26263904dde94d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/8e26263904dde94d","status":"passed","time":{"start":1698692702744,"stop":1698692711923,"duration":9179}},{"uid":"e9fe127668872a23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/e9fe127668872a23","status":"passed","time":{"start":1698692665395,"stop":1698692674617,"duration":9222}},{"uid":"eea380275a545d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/eea380275a545d5","status":"passed","time":{"start":1698646228896,"stop":1698646238582,"duration":9686}},{"uid":"861573d4e436f2af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/861573d4e436f2af","status":"passed","time":{"start":1698628473193,"stop":1698628480253,"duration":7060}},{"uid":"2e5dbc620bb660d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/2e5dbc620bb660d6","status":"passed","time":{"start":1698615116102,"stop":1698615123533,"duration":7431}},{"uid":"8e7f8ac96dbfcfae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/8e7f8ac96dbfcfae","status":"passed","time":{"start":1698615039831,"stop":1698615046361,"duration":6530}},{"uid":"78d78ee068946305","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/78d78ee068946305","status":"passed","time":{"start":1698542282561,"stop":1698542292041,"duration":9480}},{"uid":"2d5ea1f5580fb0b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1053//#testresult/2d5ea1f5580fb0b7","status":"passed","time":{"start":1698455471246,"stop":1698455491661,"duration":20415}},{"uid":"2009f8cdc0450e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1051//#testresult/2009f8cdc0450e6","status":"passed","time":{"start":1698369158097,"stop":1698369167381,"duration":9284}},{"uid":"4ef3e25660884b3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1050//#testresult/4ef3e25660884b3a","status":"passed","time":{"start":1698282745704,"stop":1698282766751,"duration":21047}},{"uid":"672efc77f51fb059","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1049//#testresult/672efc77f51fb059","status":"passed","time":{"start":1698196416091,"stop":1698196437015,"duration":20924}},{"uid":"9b4adda0e928d378","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1048//#testresult/9b4adda0e928d378","status":"passed","time":{"start":1698178145011,"stop":1698178154661,"duration":9650}},{"uid":"1e6240dd31a03404","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1047//#testresult/1e6240dd31a03404","status":"passed","time":{"start":1698178109103,"stop":1698178118822,"duration":9719}},{"uid":"be46ce797763fe56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1046//#testresult/be46ce797763fe56","status":"passed","time":{"start":1698110012846,"stop":1698110021997,"duration":9151}},{"uid":"b986703b4d9cc467","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1044//#testresult/b986703b4d9cc467","status":"passed","time":{"start":1698064779440,"stop":1698064788644,"duration":9204}},{"uid":"c04a9f5f407afd02","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1045//#testresult/c04a9f5f407afd02","status":"passed","time":{"start":1698064819045,"stop":1698064828264,"duration":9219}}]},"tags":[]},"source":"6518411bcb9d4606.json","parameterValues":["ChelmsfordCityCouncil"]}