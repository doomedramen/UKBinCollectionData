{"uid":"ee1fd5b4177c0e6b","name":"Validate Council Output [SwaleBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"af246d65f1eea891cf11ee497308965a","time":{"start":1698023992149,"stop":1698024024735,"duration":32586},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f54629128c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5454d05000>, 'council': 'SwaleBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f5454baf9d0>, page = ''\nkwargs = {'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', 'url': 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:42: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f54629128c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5454d05000>, 'council': 'SwaleBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f5454baf9d0>, page = ''\nkwargs = {'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', 'url': 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:42: AttributeError","steps":[{"name":"Given the council: SwaleBoroughCouncil","time":{"start":1698023992150,"stop":1698023992150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from SwaleBoroughCouncil","time":{"start":1698023992151,"stop":1698024024735,"duration":32584},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az471-844"},{"name":"thread","value":"2240-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwaleBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":137,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":147},"items":[{"uid":"92be22781077bcaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1040//#testresult/92be22781077bcaf","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1697937859985,"stop":1697937861626,"duration":1641}},{"uid":"b8803eaaa9d433ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1039//#testresult/b8803eaaa9d433ba","status":"passed","time":{"start":1697851017602,"stop":1697851031602,"duration":14000}},{"uid":"1d7722c77aaef2d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1037//#testresult/1d7722c77aaef2d9","status":"passed","time":{"start":1697790464714,"stop":1697790466501,"duration":1787}},{"uid":"42b7395ab99c49e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1036//#testresult/42b7395ab99c49e3","status":"passed","time":{"start":1697790466313,"stop":1697790467696,"duration":1383}},{"uid":"ccd2be3453ee88d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1034//#testresult/ccd2be3453ee88d7","status":"passed","time":{"start":1697764594360,"stop":1697764626115,"duration":31755}},{"uid":"a12912eab847eeec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1033//#testresult/a12912eab847eeec","status":"passed","time":{"start":1697706728240,"stop":1697706730188,"duration":1948}},{"uid":"224311ba4b440788","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1032//#testresult/224311ba4b440788","status":"passed","time":{"start":1697706690501,"stop":1697706692183,"duration":1682}},{"uid":"9530c43a82697536","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1030//#testresult/9530c43a82697536","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","time":{"start":1697702049229,"stop":1697702049230,"duration":1}},{"uid":"2bc78be1c7712810","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/2bc78be1c7712810","status":"passed","time":{"start":1697696414305,"stop":1697696415701,"duration":1396}},{"uid":"f1e615b8a2b8a64d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/f1e615b8a2b8a64d","status":"passed","time":{"start":1697678333070,"stop":1697678356067,"duration":22997}},{"uid":"433f16e2b07cf0ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/433f16e2b07cf0ee","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697666831281,"stop":1697666832857,"duration":1576}},{"uid":"ff7588fae9cf70ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/ff7588fae9cf70ed","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697666724452,"stop":1697666725877,"duration":1425}},{"uid":"e6ecbdff8fbbe0c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/e6ecbdff8fbbe0c0","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697657070724,"stop":1697657072288,"duration":1564}},{"uid":"1e85832d6cdadda1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/1e85832d6cdadda1","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697657000969,"stop":1697657003709,"duration":2740}},{"uid":"96ddcc3e538778df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/96ddcc3e538778df","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697650243969,"stop":1697650245255,"duration":1286}},{"uid":"378446a26adeff34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/378446a26adeff34","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697618505143,"stop":1697618507259,"duration":2116}},{"uid":"cd88784e8bb28a47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/cd88784e8bb28a47","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697618434343,"stop":1697618446220,"duration":11877}},{"uid":"520085b000d4dcfb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/520085b000d4dcfb","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697591956846,"stop":1697591958142,"duration":1296}},{"uid":"b8b5bc954a5c9167","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/b8b5bc954a5c9167","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697542832906,"stop":1697542834248,"duration":1342}},{"uid":"1767f8a24c0853bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/1767f8a24c0853bf","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697505579399,"stop":1697505588203,"duration":8804}}]},"tags":[]},"source":"ee1fd5b4177c0e6b.json","parameterValues":["SwaleBoroughCouncil"]}