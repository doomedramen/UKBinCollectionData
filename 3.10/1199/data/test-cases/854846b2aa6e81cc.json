{"uid":"854846b2aa6e81cc","name":"Validate Council Output [LondonBoroughHounslow-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2d5d41f2f80a2dfc213e6858543e98d5","time":{"start":1701825686540,"stop":1701825689800,"duration":3260},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f50d4d62dd0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f50c336bfd0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f50c336bfd0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f50d4d62dd0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f50c336bfd0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f50c336bfd0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1701825686540,"stop":1701825686541,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from LondonBoroughHounslow using None and the None is set","time":{"start":1701825686541,"stop":1701825689797,"duration":3256},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1701825689797,"stop":1701825689797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1701825689797,"stop":1701825689800,"duration":3},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1016-860"},{"name":"thread","value":"2719-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":50,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":50},"items":[{"uid":"c2e660caedb19b9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1198//#testresult/c2e660caedb19b9d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701795735099,"stop":1701795738262,"duration":3163}},{"uid":"294c51eb3ba2add2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1197//#testresult/294c51eb3ba2add2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701795624581,"stop":1701795626971,"duration":2390}},{"uid":"982491f41f0cccf8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1193//#testresult/982491f41f0cccf8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701758622917,"stop":1701758625656,"duration":2739}},{"uid":"874db25c52f1c47e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1192//#testresult/874db25c52f1c47e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701758715864,"stop":1701758719417,"duration":3553}},{"uid":"4b31b24ffe8530a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1191//#testresult/4b31b24ffe8530a5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701739372322,"stop":1701739375302,"duration":2980}},{"uid":"41645afde2201351","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1187//#testresult/41645afde2201351","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701714472378,"stop":1701714475132,"duration":2754}},{"uid":"f642fabedc7e06f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1186//#testresult/f642fabedc7e06f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701714485779,"stop":1701714488570,"duration":2791}},{"uid":"173a0fd2440a255b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1184//#testresult/173a0fd2440a255b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701652865072,"stop":1701652867614,"duration":2542}},{"uid":"eea954729f5cd0ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1183//#testresult/eea954729f5cd0ab","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701566723602,"stop":1701566726685,"duration":3083}},{"uid":"3f170f9f01d8d62d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1182//#testresult/3f170f9f01d8d62d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701479923126,"stop":1701479928542,"duration":5416}},{"uid":"42230ee947ebc7e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1179//#testresult/42230ee947ebc7e4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418966860,"stop":1701418969484,"duration":2624}},{"uid":"7e222007fc9a70db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1176//#testresult/7e222007fc9a70db","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418898187,"stop":1701418900672,"duration":2485}},{"uid":"8ab418c326f6642c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1175//#testresult/8ab418c326f6642c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701414480972,"stop":1701414483808,"duration":2836}},{"uid":"645c73def896d93e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1174//#testresult/645c73def896d93e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701414423900,"stop":1701414426531,"duration":2631}},{"uid":"d6f8f842bec9a82e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1173//#testresult/d6f8f842bec9a82e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701394023672,"stop":1701394026420,"duration":2748}},{"uid":"64509a679b788c44","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1169//#testresult/64509a679b788c44","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701353481748,"stop":1701353485412,"duration":3664}},{"uid":"31fc885551b7ee43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1163//#testresult/31fc885551b7ee43","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701307205035,"stop":1701307207760,"duration":2725}},{"uid":"764ae13bc81c52a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1161//#testresult/764ae13bc81c52a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701279535351,"stop":1701279538383,"duration":3032}},{"uid":"e2ef0988b9790c4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1162//#testresult/e2ef0988b9790c4a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701279540960,"stop":1701279543552,"duration":2592}},{"uid":"e2125aaacbec8017","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1156//#testresult/e2125aaacbec8017","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701220751166,"stop":1701220756342,"duration":5176}}]},"tags":[]},"source":"854846b2aa6e81cc.json","parameterValues":["LondonBoroughHounslow","None","None"]}