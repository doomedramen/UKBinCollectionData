{"uid":"8f445954e4e7a419","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1703717309191,"stop":1703717614584,"duration":305393},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55843e0d0f83 <unknown>\n#1 0x55843dd89cf7 <unknown>\n#2 0x55843dd6f7a1 <unknown>\n#3 0x55843dd6f44a <unknown>\n#4 0x55843dd6d7e1 <unknown>\n#5 0x55843dd6e18a <unknown>\n#6 0x55843dd7f07c <unknown>\n#7 0x55843dd977c1 <unknown>\n#8 0x55843dd9d6bb <unknown>\n#9 0x55843dd6e92d <unknown>\n#10 0x55843dd975c2 <unknown>\n#11 0x55843de22204 <unknown>\n#12 0x55843de02e53 <unknown>\n#13 0x55843ddcadd4 <unknown>\n#14 0x55843ddcc1de <unknown>\n#15 0x55843e095531 <unknown>\n#16 0x55843e099455 <unknown>\n#17 0x55843e081f55 <unknown>\n#18 0x55843e09a0ef <unknown>\n#19 0x55843e06599f <unknown>\n#20 0x55843e0be008 <unknown>\n#21 0x55843e0be1d7 <unknown>\n#22 0x55843e0d0124 <unknown>\n#23 0x7f0629494ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f8f5530fc70>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8f439fe770>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:49: in parse_data\n    ))).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f8f438909a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55843e0be1d7 \\\\u003Cunknown>\\\\n#22 0x55843e0d0124 \\\\u003Cunknown>\\\\n#23 0x7f0629494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55843e0d0f83 <unknown>\nE       #1 0x55843dd89cf7 <unknown>\nE       #2 0x55843dd6f7a1 <unknown>\nE       #3 0x55843dd6f44a <unknown>\nE       #4 0x55843dd6d7e1 <unknown>\nE       #5 0x55843dd6e18a <unknown>\nE       #6 0x55843dd7f07c <unknown>\nE       #7 0x55843dd977c1 <unknown>\nE       #8 0x55843dd9d6bb <unknown>\nE       #9 0x55843dd6e92d <unknown>\nE       #10 0x55843dd975c2 <unknown>\nE       #11 0x55843de22204 <unknown>\nE       #12 0x55843de02e53 <unknown>\nE       #13 0x55843ddcadd4 <unknown>\nE       #14 0x55843ddcc1de <unknown>\nE       #15 0x55843e095531 <unknown>\nE       #16 0x55843e099455 <unknown>\nE       #17 0x55843e081f55 <unknown>\nE       #18 0x55843e09a0ef <unknown>\nE       #19 0x55843e06599f <unknown>\nE       #20 0x55843e0be008 <unknown>\nE       #21 0x55843e0be1d7 <unknown>\nE       #22 0x55843e0d0124 <unknown>\nE       #23 0x7f0629494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55843e0d0f83 <unknown>\n#1 0x55843dd89cf7 <unknown>\n#2 0x55843dd6f7a1 <unknown>\n#3 0x55843dd6f44a <unknown>\n#4 0x55843dd6d7e1 <unknown>\n#5 0x55843dd6e18a <unknown>\n#6 0x55843dd7f07c <unknown>\n#7 0x55843dd977c1 <unknown>\n#8 0x55843dd9d6bb <unknown>\n#9 0x55843dd6e92d <unknown>\n#10 0x55843dd975c2 <unknown>\n#11 0x55843de22204 <unknown>\n#12 0x55843de02e53 <unknown>\n#13 0x55843ddcadd4 <unknown>\n#14 0x55843ddcc1de <unknown>\n#15 0x55843e095531 <unknown>\n#16 0x55843e099455 <unknown>\n#17 0x55843e081f55 <unknown>\n#18 0x55843e09a0ef <unknown>\n#19 0x55843e06599f <unknown>\n#20 0x55843e0be008 <unknown>\n#21 0x55843e0be1d7 <unknown>\n#22 0x55843e0d0124 <unknown>\n#23 0x7f0629494ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f8f5530fc70>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8f439fe770>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:49: in parse_data\n    ))).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f8f438909a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55843e0be1d7 \\\\u003Cunknown>\\\\n#22 0x55843e0d0124 \\\\u003Cunknown>\\\\n#23 0x7f0629494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55843e0d0f83 <unknown>\nE       #1 0x55843dd89cf7 <unknown>\nE       #2 0x55843dd6f7a1 <unknown>\nE       #3 0x55843dd6f44a <unknown>\nE       #4 0x55843dd6d7e1 <unknown>\nE       #5 0x55843dd6e18a <unknown>\nE       #6 0x55843dd7f07c <unknown>\nE       #7 0x55843dd977c1 <unknown>\nE       #8 0x55843dd9d6bb <unknown>\nE       #9 0x55843dd6e92d <unknown>\nE       #10 0x55843dd975c2 <unknown>\nE       #11 0x55843de22204 <unknown>\nE       #12 0x55843de02e53 <unknown>\nE       #13 0x55843ddcadd4 <unknown>\nE       #14 0x55843ddcc1de <unknown>\nE       #15 0x55843e095531 <unknown>\nE       #16 0x55843e099455 <unknown>\nE       #17 0x55843e081f55 <unknown>\nE       #18 0x55843e09a0ef <unknown>\nE       #19 0x55843e06599f <unknown>\nE       #20 0x55843e0be008 <unknown>\nE       #21 0x55843e0be1d7 <unknown>\nE       #22 0x55843e0d0124 <unknown>\nE       #23 0x7f0629494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1703717309191,"stop":1703717309191,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1703717309192,"stop":1703717614584,"duration":305392},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55843e0d0f83 <unknown>\n#1 0x55843dd89cf7 <unknown>\n#2 0x55843dd6f7a1 <unknown>\n#3 0x55843dd6f44a <unknown>\n#4 0x55843dd6d7e1 <unknown>\n#5 0x55843dd6e18a <unknown>\n#6 0x55843dd7f07c <unknown>\n#7 0x55843dd977c1 <unknown>\n#8 0x55843dd9d6bb <unknown>\n#9 0x55843dd6e92d <unknown>\n#10 0x55843dd975c2 <unknown>\n#11 0x55843de22204 <unknown>\n#12 0x55843de02e53 <unknown>\n#13 0x55843ddcadd4 <unknown>\n#14 0x55843ddcc1de <unknown>\n#15 0x55843e095531 <unknown>\n#16 0x55843e099455 <unknown>\n#17 0x55843e081f55 <unknown>\n#18 0x55843e09a0ef <unknown>\n#19 0x55843e06599f <unknown>\n#20 0x55843e0be008 <unknown>\n#21 0x55843e0be1d7 <unknown>\n#22 0x55843e0d0124 <unknown>\n#23 0x7f0629494ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55843e0d0f83 <unknown>\n#1 0x55843dd89cf7 <unknown>\n#2 0x55843dd6f7a1 <unknown>\n#3 0x55843dd6f44a <unknown>\n#4 0x55843dd6d7e1 <unknown>\n#5 0x55843dd6e18a <unknown>\n#6 0x55843dd7f07c <unknown>\n#7 0x55843dd977c1 <unknown>\n#8 0x55843dd9d6bb <unknown>\n#9 0x55843dd6e92d <unknown>\n#10 0x55843dd975c2 <unknown>\n#11 0x55843de22204 <unknown>\n#12 0x55843de02e53 <unknown>\n#13 0x55843ddcadd4 <unknown>\n#14 0x55843ddcc1de <unknown>\n#15 0x55843e095531 <unknown>\n#16 0x55843e099455 <unknown>\n#17 0x55843e081f55 <unknown>\n#18 0x55843e09a0ef <unknown>\n#19 0x55843e06599f <unknown>\n#20 0x55843e0be008 <unknown>\n#21 0x55843e0be1d7 <unknown>\n#22 0x55843e0d0124 <unknown>\n#23 0x7f0629494ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az914-521"},{"name":"thread","value":"2701-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":80,"unknown":0,"total":92},"items":[{"uid":"6bc009a31527c67e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1303//#testresult/6bc009a31527c67e","status":"passed","time":{"start":1703717264430,"stop":1703717271539,"duration":7109}},{"uid":"c1287b5148c6305e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1301//#testresult/c1287b5148c6305e","status":"passed","time":{"start":1703639716874,"stop":1703639724540,"duration":7666}},{"uid":"f605d7e02704beb5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1300//#testresult/f605d7e02704beb5","status":"passed","time":{"start":1703553305502,"stop":1703553313159,"duration":7657}},{"uid":"89bf3ed6d79cddf1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1298//#testresult/89bf3ed6d79cddf1","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55d7b039ef83 <unknown>\n#1 0x55d7b0057cf7 <unknown>\n#2 0x55d7b003d7a1 <unknown>\n#3 0x55d7b003d44a <unknown>\n#4 0x55d7b003b7e1 <unknown>\n#5 0x55d7b003c18a <unknown>\n#6 0x55d7b004d07c <unknown>\n#7 0x55d7b00657c1 <unknown>\n#8 0x55d7b006b6bb <unknown>\n#9 0x55d7b003c92d <unknown>\n#10 0x55d7b00655c2 <unknown>\n#11 0x55d7b00f0204 <unknown>\n#12 0x55d7b00d0e53 <unknown>\n#13 0x55d7b0098dd4 <unknown>\n#14 0x55d7b009a1de <unknown>\n#15 0x55d7b0363531 <unknown>\n#16 0x55d7b0367455 <unknown>\n#17 0x55d7b034ff55 <unknown>\n#18 0x55d7b03680ef <unknown>\n#19 0x55d7b033399f <unknown>\n#20 0x55d7b038c008 <unknown>\n#21 0x55d7b038c1d7 <unknown>\n#22 0x55d7b039e124 <unknown>\n#23 0x7fed0aa94ac3 <unknown>","time":{"start":1703541107155,"stop":1703541411304,"duration":304149}},{"uid":"1ca4f5592b6c24b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1295//#testresult/1ca4f5592b6c24b1","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55b74ec83f83 <unknown>\n#1 0x55b74e93ccf7 <unknown>\n#2 0x55b74e9227a1 <unknown>\n#3 0x55b74e92244a <unknown>\n#4 0x55b74e9207e1 <unknown>\n#5 0x55b74e92118a <unknown>\n#6 0x55b74e93207c <unknown>\n#7 0x55b74e94a7c1 <unknown>\n#8 0x55b74e9506bb <unknown>\n#9 0x55b74e92192d <unknown>\n#10 0x55b74e94a5c2 <unknown>\n#11 0x55b74e9d5204 <unknown>\n#12 0x55b74e9b5e53 <unknown>\n#13 0x55b74e97ddd4 <unknown>\n#14 0x55b74e97f1de <unknown>\n#15 0x55b74ec48531 <unknown>\n#16 0x55b74ec4c455 <unknown>\n#17 0x55b74ec34f55 <unknown>\n#18 0x55b74ec4d0ef <unknown>\n#19 0x55b74ec1899f <unknown>\n#20 0x55b74ec71008 <unknown>\n#21 0x55b74ec711d7 <unknown>\n#22 0x55b74ec83124 <unknown>\n#23 0x7f6891494ac3 <unknown>","time":{"start":1703467097587,"stop":1703467402283,"duration":304696}},{"uid":"6c0696a336cc5120","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1292//#testresult/6c0696a336cc5120","status":"passed","time":{"start":1703416377972,"stop":1703416386740,"duration":8768}},{"uid":"b36b06e7e2f2f1e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1291//#testresult/b36b06e7e2f2f1e7","status":"passed","time":{"start":1703416343890,"stop":1703416351046,"duration":7156}},{"uid":"5d66d2178ae9ca3b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1289//#testresult/5d66d2178ae9ca3b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5610e85cff83 <unknown>\n#1 0x5610e8288cf7 <unknown>\n#2 0x5610e826e7a1 <unknown>\n#3 0x5610e826e44a <unknown>\n#4 0x5610e826c7e1 <unknown>\n#5 0x5610e826d18a <unknown>\n#6 0x5610e827e07c <unknown>\n#7 0x5610e82967c1 <unknown>\n#8 0x5610e829c6bb <unknown>\n#9 0x5610e826d92d <unknown>\n#10 0x5610e82965c2 <unknown>\n#11 0x5610e8321204 <unknown>\n#12 0x5610e8301e53 <unknown>\n#13 0x5610e82c9dd4 <unknown>\n#14 0x5610e82cb1de <unknown>\n#15 0x5610e8594531 <unknown>\n#16 0x5610e8598455 <unknown>\n#17 0x5610e8580f55 <unknown>\n#18 0x5610e85990ef <unknown>\n#19 0x5610e856499f <unknown>\n#20 0x5610e85bd008 <unknown>\n#21 0x5610e85bd1d7 <unknown>\n#22 0x5610e85cf124 <unknown>\n#23 0x7f073a894ac3 <unknown>","time":{"start":1703380957726,"stop":1703381263035,"duration":305309}},{"uid":"231603ef8d0bf3f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1287//#testresult/231603ef8d0bf3f5","status":"passed","time":{"start":1703294108777,"stop":1703294116174,"duration":7397}},{"uid":"f47e3168098ab7c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1282//#testresult/f47e3168098ab7c4","status":"passed","time":{"start":1703207852971,"stop":1703207862181,"duration":9210}},{"uid":"a07fa2bd368e6907","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1281//#testresult/a07fa2bd368e6907","status":"passed","time":{"start":1703121487406,"stop":1703121494377,"duration":6971}},{"uid":"9128f9520dfb2f1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1280//#testresult/9128f9520dfb2f1c","status":"passed","time":{"start":1703034314001,"stop":1703034323350,"duration":9349}},{"uid":"eb95dbe3761ba068","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1279//#testresult/eb95dbe3761ba068","status":"passed","time":{"start":1703024908328,"stop":1703024915059,"duration":6731}},{"uid":"7f85f9a6c7fcfb25","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1276//#testresult/7f85f9a6c7fcfb25","status":"passed","time":{"start":1702948742245,"stop":1702948751039,"duration":8794}},{"uid":"fb8aa9a16b1da990","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1275//#testresult/fb8aa9a16b1da990","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x5570e3ed3d33 <unknown>\n#1 0x5570e3b90f87 <unknown>\n#2 0x5570e3b769c8 <unknown>\n#3 0x5570e3b766fa <unknown>\n#4 0x5570e3b74a99 <unknown>\n#5 0x5570e3b7543a <unknown>\n#6 0x5570e3b8630c <unknown>\n#7 0x5570e3b9ea51 <unknown>\n#8 0x5570e3ba493b <unknown>\n#9 0x5570e3b75bdd <unknown>\n#10 0x5570e3b9e852 <unknown>\n#11 0x5570e3c29496 <unknown>\n#12 0x5570e3c0a0e3 <unknown>\n#13 0x5570e3bd2044 <unknown>\n#14 0x5570e3bd344e <unknown>\n#15 0x5570e3e98861 <unknown>\n#16 0x5570e3e9c785 <unknown>\n#17 0x5570e3e86285 <unknown>\n#18 0x5570e3e9d41f <unknown>\n#19 0x5570e3e6a20f <unknown>\n#20 0x5570e3ec1028 <unknown>\n#21 0x5570e3ec11f7 <unknown>\n#22 0x5570e3ed2ed4 <unknown>\n#23 0x7fabb7894ac3 <unknown>","time":{"start":1702862354149,"stop":1702862658250,"duration":304101}},{"uid":"db6ca121f15892e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1274//#testresult/db6ca121f15892e4","status":"passed","time":{"start":1702859996643,"stop":1702860011761,"duration":15118}},{"uid":"448dfcf06c358b0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1272//#testresult/448dfcf06c358b0e","status":"passed","time":{"start":1702843602162,"stop":1702843609303,"duration":7141}},{"uid":"2529626871238dfa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/2529626871238dfa","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x5611a036bd33 <unknown>\n#1 0x5611a0028f87 <unknown>\n#2 0x5611a000e9c8 <unknown>\n#3 0x5611a000e6fa <unknown>\n#4 0x5611a000ca99 <unknown>\n#5 0x5611a000d43a <unknown>\n#6 0x5611a001e30c <unknown>\n#7 0x5611a0036a51 <unknown>\n#8 0x5611a003c93b <unknown>\n#9 0x5611a000dbdd <unknown>\n#10 0x5611a0036852 <unknown>\n#11 0x5611a00c1496 <unknown>\n#12 0x5611a00a20e3 <unknown>\n#13 0x5611a006a044 <unknown>\n#14 0x5611a006b44e <unknown>\n#15 0x5611a0330861 <unknown>\n#16 0x5611a0334785 <unknown>\n#17 0x5611a031e285 <unknown>\n#18 0x5611a033541f <unknown>\n#19 0x5611a030220f <unknown>\n#20 0x5611a0359028 <unknown>\n#21 0x5611a03591f7 <unknown>\n#22 0x5611a036aed4 <unknown>\n#23 0x7ff75aa94ac3 <unknown>","time":{"start":1702809374067,"stop":1702809678854,"duration":304787}},{"uid":"1834cdea810499e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/1834cdea810499e9","status":"passed","time":{"start":1702657191232,"stop":1702657197982,"duration":6750}},{"uid":"b4c42b5df762d64c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/b4c42b5df762d64c","status":"passed","time":{"start":1702603163182,"stop":1702603176327,"duration":13145}}]},"tags":[]},"source":"8f445954e4e7a419.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}