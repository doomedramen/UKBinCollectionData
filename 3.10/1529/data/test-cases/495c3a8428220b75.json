{"uid":"495c3a8428220b75","name":"Validate Council Output [FenlandDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"07f2231fc726086b1d0d561ac97c3485","time":{"start":1706315178347,"stop":1706315189073,"duration":10726},"status":"failed","statusMessage":"KeyError: 'features'","statusTrace":"fixturefunc = <function scrape_step at 0x7f724960f250>\nrequest = <FixtureRequest for <Function test_scenario_outline[FenlandDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f72486aa260>, 'council': 'FenlandDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <FenlandDistrictCouncil.CouncilClass object at 0x7f72495c06a0>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '200002981143', ...}\nuser_uprn = '200002981143'\nheaders = {'Accept': 'application/json, text/javascript, */*; q=0.01', 'Accept-Language': 'en-GB,en;q=0.7', 'Connection': 'keep-alive', 'Content-Type': 'application/json; charset=utf-8', ...}\nparams = {'lat': '0.000000000001', 'layerId': '2', 'lng': '0.000000000001', 'type': 'loadlayer', ...}\nresponse = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"Accept\": \"application/json, text/javascript, */*; q=0.01\",\n            \"Accept-Language\": \"en-GB,en;q=0.7\",\n            \"Connection\": \"keep-alive\",\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            \"Referer\": \"https://www.fenland.gov.uk/article/13114/?uprn=200002981143&lat=52.665569590474&lng=0.177905443639&postcode=PE13+3SL&line1=20+Felsted+Avenue&rad=5m&layers=2%2C3%2C1\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"same-origin\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"X-Requested-With\": \"XMLHttpRequest\",\n        }\n    \n        # It needs lat and lng for point data, but we don't need it >:)\n        params = {\n            \"type\": \"loadlayer\",\n            \"layerId\": \"2\",\n            \"uprn\": user_uprn,\n            \"lat\": \"0.000000000001\",\n            \"lng\": \"0.000000000001\",\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://www.fenland.gov.uk/article/13114/\", params=params, headers=headers\n        )\n    \n        # Returned data is just json, so we can get what we need\n>       json_data = json.loads(response.text)[\"features\"][0][\"properties\"][\"upcoming\"]\nE       KeyError: 'features'\n\nuk_bin_collection/uk_bin_collection/councils/FenlandDistrictCouncil.py:49: KeyError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"KeyError: 'features'","statusTrace":"fixturefunc = <function scrape_step at 0x7f724960f250>\nrequest = <FixtureRequest for <Function test_scenario_outline[FenlandDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f72486aa260>, 'council': 'FenlandDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <FenlandDistrictCouncil.CouncilClass object at 0x7f72495c06a0>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '200002981143', ...}\nuser_uprn = '200002981143'\nheaders = {'Accept': 'application/json, text/javascript, */*; q=0.01', 'Accept-Language': 'en-GB,en;q=0.7', 'Connection': 'keep-alive', 'Content-Type': 'application/json; charset=utf-8', ...}\nparams = {'lat': '0.000000000001', 'layerId': '2', 'lng': '0.000000000001', 'type': 'loadlayer', ...}\nresponse = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"Accept\": \"application/json, text/javascript, */*; q=0.01\",\n            \"Accept-Language\": \"en-GB,en;q=0.7\",\n            \"Connection\": \"keep-alive\",\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            \"Referer\": \"https://www.fenland.gov.uk/article/13114/?uprn=200002981143&lat=52.665569590474&lng=0.177905443639&postcode=PE13+3SL&line1=20+Felsted+Avenue&rad=5m&layers=2%2C3%2C1\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"same-origin\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"X-Requested-With\": \"XMLHttpRequest\",\n        }\n    \n        # It needs lat and lng for point data, but we don't need it >:)\n        params = {\n            \"type\": \"loadlayer\",\n            \"layerId\": \"2\",\n            \"uprn\": user_uprn,\n            \"lat\": \"0.000000000001\",\n            \"lng\": \"0.000000000001\",\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://www.fenland.gov.uk/article/13114/\", params=params, headers=headers\n        )\n    \n        # Returned data is just json, so we can get what we need\n>       json_data = json.loads(response.text)[\"features\"][0][\"properties\"][\"upcoming\"]\nE       KeyError: 'features'\n\nuk_bin_collection/uk_bin_collection/councils/FenlandDistrictCouncil.py:49: KeyError","steps":[{"name":"Given the council: FenlandDistrictCouncil","time":{"start":1706315178347,"stop":1706315178347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from FenlandDistrictCouncil using None and the None is set","time":{"start":1706315178347,"stop":1706315189073,"duration":10726},"status":"failed","statusMessage":"'features'","statusTrace":"KeyError: 'features'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1208-470"},{"name":"thread","value":"2873-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"FenlandDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":166,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":170},"items":[{"uid":"6c8dc351491930fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1528//#testresult/6c8dc351491930fe","status":"passed","time":{"start":1706228813607,"stop":1706228818421,"duration":4814}},{"uid":"2210f4fdd47287c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1523//#testresult/2210f4fdd47287c6","status":"passed","time":{"start":1706142505358,"stop":1706142511003,"duration":5645}},{"uid":"eab225c4053e1885","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1522//#testresult/eab225c4053e1885","status":"passed","time":{"start":1706056119436,"stop":1706056123790,"duration":4354}},{"uid":"9689c22d8e1a07cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1521//#testresult/9689c22d8e1a07cf","status":"passed","time":{"start":1705969734396,"stop":1705969736538,"duration":2142}},{"uid":"ec80380760d83c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1520//#testresult/ec80380760d83c9","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705883387281,"stop":1705883387899,"duration":618}},{"uid":"4fa3a2fd86f69e19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1519//#testresult/4fa3a2fd86f69e19","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705797078665,"stop":1705797079404,"duration":739}},{"uid":"78d9fb94312720c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1515//#testresult/78d9fb94312720c6","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705710468647,"stop":1705710469309,"duration":662}},{"uid":"9594eeeae2226165","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1511//#testresult/9594eeeae2226165","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705624210024,"stop":1705624210734,"duration":710}},{"uid":"38be456d2ea8766b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1505//#testresult/38be456d2ea8766b","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705537676753,"stop":1705537677211,"duration":458}},{"uid":"a82b6ded2a39821f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1500//#testresult/a82b6ded2a39821f","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705451274826,"stop":1705451275351,"duration":525}},{"uid":"1222d0d76f268593","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1499//#testresult/1222d0d76f268593","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705364925601,"stop":1705364926074,"duration":473}},{"uid":"d0101e22e71b09f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1492//#testresult/d0101e22e71b09f5","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705295639119,"stop":1705295639740,"duration":621}},{"uid":"be0a94e505efffc6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1491//#testresult/be0a94e505efffc6","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705295145799,"stop":1705295146524,"duration":725}},{"uid":"f62750289e70bdfc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1490//#testresult/f62750289e70bdfc","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705278559650,"stop":1705278560349,"duration":699}},{"uid":"11fff2eb4995eb6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1485//#testresult/11fff2eb4995eb6c","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705192217645,"stop":1705192218443,"duration":798}},{"uid":"c89d62d1f57865c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1484//#testresult/c89d62d1f57865c5","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705105642715,"stop":1705105643678,"duration":963}},{"uid":"649bd236449ae61f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1482//#testresult/649bd236449ae61f","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705019248904,"stop":1705019249624,"duration":720}},{"uid":"246758c2b7e3263d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1478//#testresult/246758c2b7e3263d","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1704932833951,"stop":1704932834561,"duration":610}},{"uid":"c57788b9eb11846e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1472//#testresult/c57788b9eb11846e","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1704846463813,"stop":1704846464570,"duration":757}},{"uid":"81c73946737f86f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1456//#testresult/81c73946737f86f5","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1704760180261,"stop":1704760180764,"duration":503}}]},"tags":[]},"source":"495c3a8428220b75.json","parameterValues":["FenlandDistrictCouncil","None","None"]}