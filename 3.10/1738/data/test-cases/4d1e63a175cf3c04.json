{"uid":"4d1e63a175cf3c04","name":"Validate Council Output [WestSuffolkCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"446a4369fb450b9e3ee2f74bbf8ed65b","time":{"start":1714609865392,"stop":1714609878606,"duration":13214},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7f3e6e272e60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3e6d4d8610>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"282c743c266a94a858b2b90568016fbb\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f3e6d551750>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7f3e6e272e60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3e6d4d8610>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"282c743c266a94a858b2b90568016fbb\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f3e6d551750>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Given the council: WestSuffolkCouncil","time":{"start":1714609865392,"stop":1714609865393,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestSuffolkCouncil using local and the http://selenium:4444 is set","time":{"start":1714609865393,"stop":1714609878606,"duration":13213},"status":"failed","statusMessage":"Message: \n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1116-412"},{"name":"thread","value":"2744-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":236,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":236},"items":[{"uid":"a7bbbf402a006fdc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1735//#testresult/a7bbbf402a006fdc","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714523614825,"stop":1714523626414,"duration":11589}},{"uid":"9ccad47d00232970","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1734//#testresult/9ccad47d00232970","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714437062621,"stop":1714437078901,"duration":16280}},{"uid":"f7aae091ae31abf9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1732//#testresult/f7aae091ae31abf9","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714350862506,"stop":1714350878609,"duration":16103}},{"uid":"85896a485cfd141b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1724//#testresult/85896a485cfd141b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714264579365,"stop":1714264591072,"duration":11707}},{"uid":"f7da44746fe72911","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1722//#testresult/f7da44746fe72911","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714234328856,"stop":1714234344408,"duration":15552}},{"uid":"2fbb6f7c1110cfde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1714//#testresult/2fbb6f7c1110cfde","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714232929775,"stop":1714232941105,"duration":11330}},{"uid":"b53483a9a7d9632b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1713//#testresult/b53483a9a7d9632b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714177970807,"stop":1714177983425,"duration":12618}},{"uid":"9d1ab9eefc0c5bd3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1712//#testresult/9d1ab9eefc0c5bd3","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714091574182,"stop":1714091585425,"duration":11243}},{"uid":"b9e79d9689048433","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1711//#testresult/b9e79d9689048433","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714005180713,"stop":1714005194779,"duration":14066}},{"uid":"4a5816ffa1a055c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1710//#testresult/4a5816ffa1a055c3","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713918799587,"stop":1713918812826,"duration":13239}},{"uid":"b260f48851ac5afc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1709//#testresult/b260f48851ac5afc","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713832792638,"stop":1713832802971,"duration":10333}},{"uid":"1e54e0e78cbe50b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1708//#testresult/1e54e0e78cbe50b2","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713745926688,"stop":1713745942312,"duration":15624}},{"uid":"4b1b0689505ac0c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1707//#testresult/4b1b0689505ac0c8","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713659635982,"stop":1713659646138,"duration":10156}},{"uid":"21db68503481b8da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1706//#testresult/21db68503481b8da","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713573065815,"stop":1713573079875,"duration":14060}},{"uid":"5642bbe19a67cd47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1702//#testresult/5642bbe19a67cd47","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713486735404,"stop":1713486750151,"duration":14747}},{"uid":"1e16cf6c2cfd452e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1698//#testresult/1e16cf6c2cfd452e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713400271387,"stop":1713400284920,"duration":13533}},{"uid":"b4ecd000f3f55a78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1697//#testresult/b4ecd000f3f55a78","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713313865643,"stop":1713313878219,"duration":12576}},{"uid":"131de2d1cbad21ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1696//#testresult/131de2d1cbad21ec","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713252913337,"stop":1713252926264,"duration":12927}},{"uid":"9ba6580dba011c29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1695//#testresult/9ba6580dba011c29","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713227436569,"stop":1713227450283,"duration":13714}},{"uid":"b5ab9a01cacf6c37","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1692//#testresult/b5ab9a01cacf6c37","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713207940785,"stop":1713207950932,"duration":10147}}]},"tags":[]},"source":"4d1e63a175cf3c04.json","parameterValues":["WestSuffolkCouncil","local","http://selenium:4444"]}