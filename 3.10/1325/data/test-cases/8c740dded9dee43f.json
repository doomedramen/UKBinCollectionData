{"uid":"8c740dded9dee43f","name":"Validate Council Output [EastLindseyDistrictCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"eb374edb17b4c377c221232fbb03cdfe","time":{"start":1704043930941,"stop":1704043936779,"duration":5838},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7ff5070daf80>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff4f9715d20>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7ff4f92395a0>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': []}, user_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY'\nweb_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a23f2626df0cb1e391d3490e79189098\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"a23f2626df0cb1e391d3490e79189098\", element=\"221B37C1E631170A14589A1F059C2799_element_13\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"a23f2626df0cb1e391d3490e79189098\", element=\"221B37C1E631170A14589A1F059C2799_element_15\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7ff5070daf80>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff4f9715d20>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7ff4f92395a0>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': []}, user_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY'\nweb_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a23f2626df0cb1e391d3490e79189098\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"a23f2626df0cb1e391d3490e79189098\", element=\"221B37C1E631170A14589A1F059C2799_element_13\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"a23f2626df0cb1e391d3490e79189098\", element=\"221B37C1E631170A14589A1F059C2799_element_15\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","steps":[{"name":"Given the council: EastLindseyDistrictCouncil","time":{"start":1704043930941,"stop":1704043930942,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from EastLindseyDistrictCouncil using local and the http://selenium:4444 is set","time":{"start":1704043930942,"stop":1704043936779,"duration":5837},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1198-580"},{"name":"thread","value":"2678-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastLindseyDistrictCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":77,"broken":0,"skipped":0,"passed":24,"unknown":0,"total":101},"items":[{"uid":"187e085a3c8f1e41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1320//#testresult/187e085a3c8f1e41","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703985745162,"stop":1703985752164,"duration":7002}},{"uid":"d277c33585065133","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1316//#testresult/d277c33585065133","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703898919264,"stop":1703898924907,"duration":5643}},{"uid":"f7316b04b01a9fe0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1314//#testresult/f7316b04b01a9fe0","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703853515825,"stop":1703853522026,"duration":6201}},{"uid":"ce9ab35e797bb6cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1311//#testresult/ce9ab35e797bb6cb","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703851079720,"stop":1703851086214,"duration":6494}},{"uid":"9d856c940a8c258b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1312//#testresult/9d856c940a8c258b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703851112814,"stop":1703851119559,"duration":6745}},{"uid":"e9371e8f2a3ac439","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1309//#testresult/e9371e8f2a3ac439","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703812027031,"stop":1703812032097,"duration":5066}},{"uid":"1c14b4bdedf258fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1306//#testresult/1c14b4bdedf258fa","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703756150217,"stop":1703756155301,"duration":5084}},{"uid":"4827a837531c6a5a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1305//#testresult/4827a837531c6a5a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703726136510,"stop":1703726142806,"duration":6296}},{"uid":"7d87f6db3a7a55d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1304//#testresult/7d87f6db3a7a55d5","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703717322024,"stop":1703717327754,"duration":5730}},{"uid":"6daadede77e40b9c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1303//#testresult/6daadede77e40b9c","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703717274225,"stop":1703717278657,"duration":4432}},{"uid":"b1ba85b3039dc3fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1301//#testresult/b1ba85b3039dc3fb","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703639728636,"stop":1703639733956,"duration":5320}},{"uid":"ffcd467bc6ebd031","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1300//#testresult/ffcd467bc6ebd031","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703553319308,"stop":1703553324742,"duration":5434}},{"uid":"6e957fc5025b107f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1298//#testresult/6e957fc5025b107f","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703541115704,"stop":1703541121647,"duration":5943}},{"uid":"b71937276bbddfe3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1295//#testresult/b71937276bbddfe3","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703467111537,"stop":1703467117425,"duration":5888}},{"uid":"8f574ef4b2b95fb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1292//#testresult/8f574ef4b2b95fb9","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703416394509,"stop":1703416400463,"duration":5954}},{"uid":"87dc5c1c65e4e26a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1291//#testresult/87dc5c1c65e4e26a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703416351929,"stop":1703416356679,"duration":4750}},{"uid":"a308ee6fac3c5afe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1289//#testresult/a308ee6fac3c5afe","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703381107223,"stop":1703381115372,"duration":8149}},{"uid":"23182e2535581e9c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1287//#testresult/23182e2535581e9c","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703294074075,"stop":1703294080609,"duration":6534}},{"uid":"863de12e71117efb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1282//#testresult/863de12e71117efb","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703207853861,"stop":1703207862517,"duration":8656}},{"uid":"b4c914400ce8914","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1281//#testresult/b4c914400ce8914","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703121431003,"stop":1703121438108,"duration":7105}}]},"tags":[]},"source":"8c740dded9dee43f.json","parameterValues":["EastLindseyDistrictCouncil","local","http://selenium:4444"]}