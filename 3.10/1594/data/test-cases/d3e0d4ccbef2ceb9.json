{"uid":"d3e0d4ccbef2ceb9","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1709684812335,"stop":1709684823389,"duration":11054},"status":"failed","statusMessage":"ValueError: time data 'Wednesday, 6 March\\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f4dd461f7f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4dd3400460>, 'council': 'KingstonUponThamesCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/KingstonUponThamesCouncil.py:57: in parse_data\n    datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Wednesday, 6 March\\n              \\n              (In progress) 2024'\nformat = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Wednesday, 6 March\\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Wednesday, 6 March\\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f4dd461f7f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4dd3400460>, 'council': 'KingstonUponThamesCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/KingstonUponThamesCouncil.py:57: in parse_data\n    datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Wednesday, 6 March\\n              \\n              (In progress) 2024'\nformat = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Wednesday, 6 March\\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1709684812335,"stop":1709684812336,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1709684812336,"stop":1709684823389,"duration":11053},"status":"failed","statusMessage":"time data 'Wednesday, 6 March\\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"ValueError: time data 'Wednesday, 6 March\\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1391-787"},{"name":"thread","value":"2723-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":147,"broken":0,"skipped":0,"passed":58,"unknown":0,"total":205},"items":[{"uid":"764df08ec7e57d72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1593//#testresult/764df08ec7e57d72","status":"passed","time":{"start":1709598375155,"stop":1709598383183,"duration":8028}},{"uid":"ab8e1f31b343a38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1592//#testresult/ab8e1f31b343a38","status":"passed","time":{"start":1709512045577,"stop":1709512053006,"duration":7429}},{"uid":"538e394595a32e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1572//#testresult/538e394595a32e0","status":"passed","time":{"start":1708561663134,"stop":1708561671956,"duration":8822}},{"uid":"ab0ffd0c79033f38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1570//#testresult/ab0ffd0c79033f38","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 21 February\\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1708475201424,"stop":1708475214330,"duration":12906}},{"uid":"14a9af2ab505b3d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1569//#testresult/14a9af2ab505b3d8","status":"passed","time":{"start":1708388800347,"stop":1708388807909,"duration":7562}},{"uid":"69b3666bb6dc8985","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1568//#testresult/69b3666bb6dc8985","status":"passed","time":{"start":1708302503824,"stop":1708302510514,"duration":6690}},{"uid":"8861ce9601bb339","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1567//#testresult/8861ce9601bb339","status":"passed","time":{"start":1708216139105,"stop":1708216145847,"duration":6742}},{"uid":"fafc3f9d23c00b08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1566//#testresult/fafc3f9d23c00b08","status":"passed","time":{"start":1708129600110,"stop":1708129607101,"duration":6991}},{"uid":"b48ae008fe79fd0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1563//#testresult/b48ae008fe79fd0d","status":"passed","time":{"start":1708043174775,"stop":1708043184743,"duration":9968}},{"uid":"8584a8761e16eb37","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1562//#testresult/8584a8761e16eb37","status":"passed","time":{"start":1707956799049,"stop":1707956806203,"duration":7154}},{"uid":"eb2bebd1467b03f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1561//#testresult/eb2bebd1467b03f8","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 14 February\\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1707870415530,"stop":1707870425007,"duration":9477}},{"uid":"66045e5c03c96670","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1560//#testresult/66045e5c03c96670","status":"passed","time":{"start":1707784063763,"stop":1707784074742,"duration":10979}},{"uid":"cdea116084daa96f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1559//#testresult/cdea116084daa96f","status":"passed","time":{"start":1707697691592,"stop":1707697700640,"duration":9048}},{"uid":"5b47f0120444bf27","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1556//#testresult/5b47f0120444bf27","status":"passed","time":{"start":1707611364700,"stop":1707611373334,"duration":8634}},{"uid":"e975061a5ab9424b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1554//#testresult/e975061a5ab9424b","status":"passed","time":{"start":1707524771879,"stop":1707524783681,"duration":11802}},{"uid":"c7f761cc3367d1e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1553//#testresult/c7f761cc3367d1e9","status":"passed","time":{"start":1707438430132,"stop":1707438444281,"duration":14149}},{"uid":"9eede4185960722f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1552//#testresult/9eede4185960722f","status":"passed","time":{"start":1707352027431,"stop":1707352040495,"duration":13064}},{"uid":"df1eb53c6ab4c82","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1551//#testresult/df1eb53c6ab4c82","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 7 February\\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1707265532512,"stop":1707265543379,"duration":10867}},{"uid":"bead2c601df9fbae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1549//#testresult/bead2c601df9fbae","status":"passed","time":{"start":1707179224066,"stop":1707179235232,"duration":11166}},{"uid":"6c268c0b6674e3f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1548//#testresult/6c268c0b6674e3f6","status":"passed","time":{"start":1707092965909,"stop":1707092976714,"duration":10805}}]},"tags":[]},"source":"d3e0d4ccbef2ceb9.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}