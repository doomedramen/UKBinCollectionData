{"uid":"ee7bb741162eb09f","name":"Validate Council Output [WestSuffolkCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"446a4369fb450b9e3ee2f74bbf8ed65b","time":{"start":1704711661768,"stop":1704711675849,"duration":14081},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7fd9fa51f250>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9f90ce0e0>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"54006942e05c275458836e16b36fe951\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fd9f95d5ab0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7fd9fa51f250>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9f90ce0e0>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"54006942e05c275458836e16b36fe951\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fd9f95d5ab0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Given the council: WestSuffolkCouncil","time":{"start":1704711661768,"stop":1704711661769,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestSuffolkCouncil using local and the http://selenium:4444 is set","time":{"start":1704711661769,"stop":1704711675849,"duration":14080},"status":"failed","statusMessage":"Message: \n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1433-659"},{"name":"thread","value":"2714-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":118,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":118},"items":[{"uid":"5a5832d7df5894af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1450//#testresult/5a5832d7df5894af","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704710872171,"stop":1704710888028,"duration":15857}},{"uid":"13bec2615bb2f698","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1448//#testresult/13bec2615bb2f698","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704710256401,"stop":1704710267872,"duration":11471}},{"uid":"9d3c744afd718647","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1446//#testresult/9d3c744afd718647","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704709741031,"stop":1704709752263,"duration":11232}},{"uid":"dddd19d0140cc1ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1443//#testresult/dddd19d0140cc1ea","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704704262847,"stop":1704704276302,"duration":13455}},{"uid":"3c16c9bddf308724","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1441//#testresult/3c16c9bddf308724","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704673923335,"stop":1704673936155,"duration":12820}},{"uid":"3c386770cb1ddbab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1429//#testresult/3c386770cb1ddbab","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704626542758,"stop":1704626554767,"duration":12009}},{"uid":"fbdcb30f971decfa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1426//#testresult/fbdcb30f971decfa","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704615581551,"stop":1704615594720,"duration":13169}},{"uid":"833322b44b93664c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1423//#testresult/833322b44b93664c","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704614911858,"stop":1704614924648,"duration":12790}},{"uid":"accbd04f836a0a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1421//#testresult/accbd04f836a0a8","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704614353211,"stop":1704614365663,"duration":12452}},{"uid":"6ff9e815841e99ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1420//#testresult/6ff9e815841e99ac","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704587660189,"stop":1704587674589,"duration":14400}},{"uid":"92f0676c083520ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1413//#testresult/92f0676c083520ce","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704542911216,"stop":1704542926798,"duration":15582}},{"uid":"b25a8a7ef79842f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1408//#testresult/b25a8a7ef79842f3","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704496394498,"stop":1704496408165,"duration":13667}},{"uid":"118ae48535887840","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1406//#testresult/118ae48535887840","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704453644642,"stop":1704453666460,"duration":21818}},{"uid":"2bc9e4c9ed02895a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1407//#testresult/2bc9e4c9ed02895a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704453598648,"stop":1704453611704,"duration":13056}},{"uid":"df8b03dcc37f6b6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1405//#testresult/df8b03dcc37f6b6c","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704452825241,"stop":1704452841653,"duration":16412}},{"uid":"556dd32523da99fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1400//#testresult/556dd32523da99fe","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704443925431,"stop":1704443936357,"duration":10926}},{"uid":"8fe88cacad403207","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1399//#testresult/8fe88cacad403207","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704443481151,"stop":1704443494803,"duration":13652}},{"uid":"5b13d393ae0a1c65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1397//#testresult/5b13d393ae0a1c65","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704442643287,"stop":1704442657553,"duration":14266}},{"uid":"38be8a9d37fe7805","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1390//#testresult/38be8a9d37fe7805","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704417685369,"stop":1704417698134,"duration":12765}},{"uid":"21a6992874b070fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1379//#testresult/21a6992874b070fe","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704406172314,"stop":1704406190056,"duration":17742}}]},"tags":[]},"source":"ee7bb741162eb09f.json","parameterValues":["WestSuffolkCouncil","local","http://selenium:4444"]}