{"uid":"9cc34a3b34a98daf","name":"Validate Council Output [LondonBoroughHounslow-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2d5d41f2f80a2dfc213e6858543e98d5","time":{"start":1704496309118,"stop":1704496311733,"duration":2615},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f5656ac7b50>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5655b4f400>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f5655b4f400>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f5656ac7b50>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5655b4f400>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f5655b4f400>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1704496309118,"stop":1704496309119,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from LondonBoroughHounslow using None and the None is set","time":{"start":1704496309119,"stop":1704496311729,"duration":2610},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704496311730,"stop":1704496311730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704496311730,"stop":1704496311733,"duration":3},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1433-659"},{"name":"thread","value":"2692-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":139,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":139},"items":[{"uid":"dcb855743cebcb3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1406//#testresult/dcb855743cebcb3f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704453438035,"stop":1704453443057,"duration":5022}},{"uid":"12a8e81b852eb7ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1407//#testresult/12a8e81b852eb7ac","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704453449215,"stop":1704453452260,"duration":3045}},{"uid":"8a259bcc63ca7f1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1405//#testresult/8a259bcc63ca7f1a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704452654076,"stop":1704452658030,"duration":3954}},{"uid":"fd904e5eb170d78d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1400//#testresult/fd904e5eb170d78d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704443791066,"stop":1704443794062,"duration":2996}},{"uid":"df6920e2cecc7b37","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1399//#testresult/df6920e2cecc7b37","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704443380398,"stop":1704443383196,"duration":2798}},{"uid":"1a4a2441a63696ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1397//#testresult/1a4a2441a63696ae","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704442516011,"stop":1704442519009,"duration":2998}},{"uid":"1539d166b43983ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1390//#testresult/1539d166b43983ed","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704417564181,"stop":1704417567773,"duration":3592}},{"uid":"e2e905a16c49e12a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1379//#testresult/e2e905a16c49e12a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704406052028,"stop":1704406054714,"duration":2686}},{"uid":"2490838d025f1a6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1378//#testresult/2490838d025f1a6c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704405994253,"stop":1704405996939,"duration":2686}},{"uid":"b2fb35ce7e42fdc6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1376//#testresult/b2fb35ce7e42fdc6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704398833416,"stop":1704398836309,"duration":2893}},{"uid":"5b49775def4f0471","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1375//#testresult/5b49775def4f0471","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704398776340,"stop":1704398779240,"duration":2900}},{"uid":"c5f33de6d1b472ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1373//#testresult/c5f33de6d1b472ab","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704388337909,"stop":1704388341124,"duration":3215}},{"uid":"7b7cce262e8c6af2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1372//#testresult/7b7cce262e8c6af2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704388291494,"stop":1704388294139,"duration":2645}},{"uid":"152a6b1781f57d58","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1369//#testresult/152a6b1781f57d58","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704378363606,"stop":1704378367534,"duration":3928}},{"uid":"84ab289f33837a03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1367//#testresult/84ab289f33837a03","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704378045519,"stop":1704378048912,"duration":3393}},{"uid":"9df92d1f4238ccd0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1366//#testresult/9df92d1f4238ccd0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704375890373,"stop":1704375893351,"duration":2978}},{"uid":"9f07bc40ab0fb25c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1363//#testresult/9f07bc40ab0fb25c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704356790638,"stop":1704356793574,"duration":2936}},{"uid":"a51ebaad9ea5c777","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1361//#testresult/a51ebaad9ea5c777","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704355973108,"stop":1704355976846,"duration":3738}},{"uid":"8a3f6da359fd40b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1359//#testresult/8a3f6da359fd40b9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704331126900,"stop":1704331129368,"duration":2468}},{"uid":"63c60ab17fce93c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1355//#testresult/63c60ab17fce93c4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704304030019,"stop":1704304033100,"duration":3081}}]},"tags":[]},"source":"9cc34a3b34a98daf.json","parameterValues":["LondonBoroughHounslow","None","None"]}