{"uid":"dba18ca60e0a5944","name":"Validate Council Output [SouthTynesideCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"efde6c2c8e15955ad5fa48845f3c2c06","time":{"start":1697702049036,"stop":1697702049037,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthTynesideCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d11174850>, 'council_name': 'SouthTynesideCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthTynesideCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d11174850>, 'council_name': 'SouthTynesideCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: SouthTynesideCouncil","time":{"start":1697702049036,"stop":1697702049037,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2116-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthTynesideCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":53,"broken":0,"skipped":0,"passed":86,"unknown":0,"total":139},"items":[{"uid":"4025ce8dfb0a8614","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/4025ce8dfb0a8614","status":"passed","time":{"start":1697696404745,"stop":1697696407529,"duration":2784}},{"uid":"aa37ee97ab3eabd2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/aa37ee97ab3eabd2","status":"passed","time":{"start":1697678326199,"stop":1697678328174,"duration":1975}},{"uid":"1d76661d3c22da9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/1d76661d3c22da9b","status":"passed","time":{"start":1697666821963,"stop":1697666824590,"duration":2627}},{"uid":"920c44ac67942b76","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/920c44ac67942b76","status":"passed","time":{"start":1697666714370,"stop":1697666716310,"duration":1940}},{"uid":"da1911d5ff638f1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/da1911d5ff638f1f","status":"passed","time":{"start":1697657061183,"stop":1697657063493,"duration":2310}},{"uid":"56fa638109ca0468","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/56fa638109ca0468","status":"passed","time":{"start":1697656989991,"stop":1697656992041,"duration":2050}},{"uid":"488a8703e765712e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/488a8703e765712e","status":"passed","time":{"start":1697650237616,"stop":1697650239525,"duration":1909}},{"uid":"a51988ca5d6b41fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/a51988ca5d6b41fd","status":"passed","time":{"start":1697618497183,"stop":1697618499767,"duration":2584}},{"uid":"1437633fdeb8ecf7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/1437633fdeb8ecf7","status":"passed","time":{"start":1697618430272,"stop":1697618432249,"duration":1977}},{"uid":"81418d99a3c790","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/81418d99a3c790","status":"passed","time":{"start":1697591958748,"stop":1697591960799,"duration":2051}},{"uid":"1b6dbbdb8212e7eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/1b6dbbdb8212e7eb","status":"passed","time":{"start":1697542835347,"stop":1697542837489,"duration":2142}},{"uid":"8ba9f36f190b4b69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/8ba9f36f190b4b69","status":"passed","time":{"start":1697505567562,"stop":1697505572725,"duration":5163}},{"uid":"94dd7cdb162d6c45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/94dd7cdb162d6c45","status":"passed","time":{"start":1697484845866,"stop":1697484847956,"duration":2090}},{"uid":"b842c1775b6b2f43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/b842c1775b6b2f43","status":"passed","time":{"start":1697484773073,"stop":1697484774531,"duration":1458}},{"uid":"4b356898e80eeb9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/4b356898e80eeb9b","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697419207962,"stop":1697419208858,"duration":896}},{"uid":"606a5dbb7884f0cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/606a5dbb7884f0cb","status":"passed","time":{"start":1697403337097,"stop":1697403338607,"duration":1510}},{"uid":"7b6dc760b9bc12a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/7b6dc760b9bc12a9","status":"passed","time":{"start":1697399882117,"stop":1697399883642,"duration":1525}},{"uid":"b024aff2e9bfec24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/b024aff2e9bfec24","status":"passed","time":{"start":1697367147143,"stop":1697367148912,"duration":1769}},{"uid":"cb3f13eb5a7e2cbe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/cb3f13eb5a7e2cbe","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697333052981,"stop":1697333055484,"duration":2503}},{"uid":"f9170a08be822dd5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/f9170a08be822dd5","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697246229748,"stop":1697246230703,"duration":955}}]},"tags":[]},"source":"dba18ca60e0a5944.json","parameterValues":["SouthTynesideCouncil"]}