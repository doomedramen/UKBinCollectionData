{"uid":"83265aac8dfa66c9","name":"Validate Council Output [RhonddaCynonTaffCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"dd9e500503c1050ad4a094bf9d94ac37","time":{"start":1697702048868,"stop":1697702048869,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[RhonddaCynonTaffCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aaf9eeaa0>, 'council_name': 'RhonddaCynonTaffCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[RhonddaCynonTaffCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aaf9eeaa0>, 'council_name': 'RhonddaCynonTaffCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: RhonddaCynonTaffCouncil","time":{"start":1697702048868,"stop":1697702048869,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2113-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RhonddaCynonTaffCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":24,"unknown":0,"total":25},"items":[{"uid":"5ebe73a3cc53e7e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/5ebe73a3cc53e7e0","status":"passed","time":{"start":1697696362139,"stop":1697696379130,"duration":16991}},{"uid":"944b28f17733050a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/944b28f17733050a","status":"passed","time":{"start":1697678330367,"stop":1697678333066,"duration":2699}},{"uid":"2cd0ace62585949e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/2cd0ace62585949e","status":"passed","time":{"start":1697666784241,"stop":1697666786971,"duration":2730}},{"uid":"dc2bf2f2649194a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/dc2bf2f2649194a","status":"passed","time":{"start":1697666727366,"stop":1697666730614,"duration":3248}},{"uid":"317a59fad9f57c5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/317a59fad9f57c5b","status":"passed","time":{"start":1697657019751,"stop":1697657022435,"duration":2684}},{"uid":"1f0f6e8a66aa3930","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/1f0f6e8a66aa3930","status":"passed","time":{"start":1697656983728,"stop":1697656986595,"duration":2867}},{"uid":"b89790c69a15d88d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/b89790c69a15d88d","status":"passed","time":{"start":1697650201833,"stop":1697650204895,"duration":3062}},{"uid":"7477f3ee17a8a932","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/7477f3ee17a8a932","status":"passed","time":{"start":1697618470570,"stop":1697618473521,"duration":2951}},{"uid":"f13e85929afce8df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/f13e85929afce8df","status":"passed","time":{"start":1697618407491,"stop":1697618410065,"duration":2574}},{"uid":"d2845ba7522c4bff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/d2845ba7522c4bff","status":"passed","time":{"start":1697591936093,"stop":1697591938637,"duration":2544}},{"uid":"10430753c9391eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/10430753c9391eb","status":"passed","time":{"start":1697542795677,"stop":1697542798381,"duration":2704}},{"uid":"c86bb896121269e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/c86bb896121269e9","status":"passed","time":{"start":1697505525101,"stop":1697505528063,"duration":2962}},{"uid":"42aecdcb4457e157","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/42aecdcb4457e157","status":"passed","time":{"start":1697484818902,"stop":1697484821424,"duration":2522}},{"uid":"7dc2376a11bffe1b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/7dc2376a11bffe1b","status":"passed","time":{"start":1697484754315,"stop":1697484756489,"duration":2174}},{"uid":"be347a0f6f86ee13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/be347a0f6f86ee13","status":"passed","time":{"start":1697419171606,"stop":1697419174132,"duration":2526}},{"uid":"ab10bfc7a4e56ad0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/ab10bfc7a4e56ad0","status":"passed","time":{"start":1697403304686,"stop":1697403307115,"duration":2429}},{"uid":"fed8817925c09e50","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/fed8817925c09e50","status":"passed","time":{"start":1697399860170,"stop":1697399862325,"duration":2155}},{"uid":"a234c019b0ade924","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/a234c019b0ade924","status":"passed","time":{"start":1697367116353,"stop":1697367118479,"duration":2126}},{"uid":"41d2b8c1c94f557c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/41d2b8c1c94f557c","status":"passed","time":{"start":1697333008585,"stop":1697333013934,"duration":5349}},{"uid":"1e47dee0abb8c093","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/1e47dee0abb8c093","status":"passed","time":{"start":1697246199392,"stop":1697246202432,"duration":3040}}]},"tags":[]},"source":"83265aac8dfa66c9.json","parameterValues":["RhonddaCynonTaffCouncil"]}