{"uid":"2281fbcad874b313","name":"Validate Council Output [MaldonDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"53c5720a05c261e2bad5904bb33e19b7","time":{"start":1697702048276,"stop":1697702048277,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aaf5765c0>, 'council_name': 'MaldonDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aaf5765c0>, 'council_name': 'MaldonDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: MaldonDistrictCouncil","time":{"start":1697702048276,"stop":1697702048277,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2113-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":134,"unknown":0,"total":139},"items":[{"uid":"8b02bfe10018de39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/8b02bfe10018de39","status":"passed","time":{"start":1697696156553,"stop":1697696157740,"duration":1187}},{"uid":"f3234587b488216c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/f3234587b488216c","status":"passed","time":{"start":1697678083888,"stop":1697678085043,"duration":1155}},{"uid":"f0f320d9ee2764d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/f0f320d9ee2764d7","status":"passed","time":{"start":1697666569780,"stop":1697666571271,"duration":1491}},{"uid":"ee9520164551f00c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/ee9520164551f00c","status":"passed","time":{"start":1697666518425,"stop":1697666519897,"duration":1472}},{"uid":"772a882ebf02867e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/772a882ebf02867e","status":"passed","time":{"start":1697656811617,"stop":1697656812884,"duration":1267}},{"uid":"5c6a5b84919c00f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/5c6a5b84919c00f9","status":"passed","time":{"start":1697656771678,"stop":1697656772683,"duration":1005}},{"uid":"1972bf000e1408ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/1972bf000e1408ad","status":"passed","time":{"start":1697650207408,"stop":1697650208444,"duration":1036}},{"uid":"1049c73363837196","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/1049c73363837196","status":"passed","time":{"start":1697618471439,"stop":1697618472597,"duration":1158}},{"uid":"91aa802880eef809","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/91aa802880eef809","status":"passed","time":{"start":1697618399879,"stop":1697618401049,"duration":1170}},{"uid":"6985f915d039f741","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/6985f915d039f741","status":"passed","time":{"start":1697591925260,"stop":1697591926459,"duration":1199}},{"uid":"68d0767a4ddfefdf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/68d0767a4ddfefdf","status":"passed","time":{"start":1697542788277,"stop":1697542789348,"duration":1071}},{"uid":"cfb928cc7161ec13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/cfb928cc7161ec13","status":"passed","time":{"start":1697505570989,"stop":1697505572194,"duration":1205}},{"uid":"f6cbede9b861972d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/f6cbede9b861972d","status":"passed","time":{"start":1697484817204,"stop":1697484818266,"duration":1062}},{"uid":"ff24485ffbacfd34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/ff24485ffbacfd34","status":"passed","time":{"start":1697484726427,"stop":1697484727447,"duration":1020}},{"uid":"bd1f7a561e499b3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/bd1f7a561e499b3a","status":"passed","time":{"start":1697419164689,"stop":1697419165781,"duration":1092}},{"uid":"2b51e011a6e41c6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/2b51e011a6e41c6c","status":"passed","time":{"start":1697403289639,"stop":1697403290694,"duration":1055}},{"uid":"40533f7db8e25485","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/40533f7db8e25485","status":"passed","time":{"start":1697399840986,"stop":1697399841952,"duration":966}},{"uid":"3767a91f2608ed43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/3767a91f2608ed43","status":"passed","time":{"start":1697367099565,"stop":1697367100447,"duration":882}},{"uid":"bdc6e73abcb2f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/bdc6e73abcb2f9","status":"passed","time":{"start":1697333046859,"stop":1697333048124,"duration":1265}},{"uid":"7b212e4b4adddb08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/7b212e4b4adddb08","status":"passed","time":{"start":1697246212561,"stop":1697246213751,"duration":1190}}]},"tags":[]},"source":"2281fbcad874b313.json","parameterValues":["MaldonDistrictCouncil"]}