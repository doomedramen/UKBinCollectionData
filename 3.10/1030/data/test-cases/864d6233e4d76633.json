{"uid":"864d6233e4d76633","name":"Validate Council Output [SouthNorfolkCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"484d0c5e2def185d103e4e0bbf55c9cd","time":{"start":1697702048940,"stop":1697702048941,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d1110be80>, 'council_name': 'SouthNorfolkCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d1110be80>, 'council_name': 'SouthNorfolkCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: SouthNorfolkCouncil","time":{"start":1697702048940,"stop":1697702048940,"duration":0},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2116-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthNorfolkCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"5136035ecb306e99","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/5136035ecb306e99","status":"passed","time":{"start":1697696410602,"stop":1697696412890,"duration":2288}},{"uid":"7316d2fa588e34fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/7316d2fa588e34fd","status":"passed","time":{"start":1697678320573,"stop":1697678322498,"duration":1925}},{"uid":"b5582ddefca6c53c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/b5582ddefca6c53c","status":"passed","time":{"start":1697666815809,"stop":1697666817688,"duration":1879}},{"uid":"bbb72b481d780876","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/bbb72b481d780876","status":"passed","time":{"start":1697666709709,"stop":1697666711325,"duration":1616}},{"uid":"212e4e3fddc0058f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/212e4e3fddc0058f","status":"passed","time":{"start":1697657054989,"stop":1697657056741,"duration":1752}},{"uid":"1217aa976add8e78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/1217aa976add8e78","status":"passed","time":{"start":1697656984360,"stop":1697656986152,"duration":1792}},{"uid":"692772c29a9a54db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/692772c29a9a54db","status":"passed","time":{"start":1697650232001,"stop":1697650233978,"duration":1977}},{"uid":"f7d42621e2468ad4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/f7d42621e2468ad4","status":"passed","time":{"start":1697618506305,"stop":1697618507803,"duration":1498}},{"uid":"5d6a7edd3c86e79c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/5d6a7edd3c86e79c","status":"passed","time":{"start":1697618432849,"stop":1697618434339,"duration":1490}},{"uid":"9bfab93de1e276eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/9bfab93de1e276eb","status":"passed","time":{"start":1697591955315,"stop":1697591956843,"duration":1528}},{"uid":"f2fbc51c81d204b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/f2fbc51c81d204b","status":"passed","time":{"start":1697542827842,"stop":1697542831213,"duration":3371}},{"uid":"4c6c647252811e62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/4c6c647252811e62","status":"passed","time":{"start":1697505561993,"stop":1697505563612,"duration":1619}},{"uid":"27e2ef58dec3b3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/27e2ef58dec3b3a","status":"passed","time":{"start":1697484849593,"stop":1697484851385,"duration":1792}},{"uid":"a167949ede164ccc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/a167949ede164ccc","status":"passed","time":{"start":1697484791024,"stop":1697484792675,"duration":1651}},{"uid":"c7e37efde1340291","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/c7e37efde1340291","status":"passed","time":{"start":1697419202406,"stop":1697419203833,"duration":1427}},{"uid":"a7a1e4a4622799bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/a7a1e4a4622799bf","status":"passed","time":{"start":1697403333173,"stop":1697403334653,"duration":1480}},{"uid":"f74eeff09e0dcfda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/f74eeff09e0dcfda","status":"passed","time":{"start":1697399894315,"stop":1697399896084,"duration":1769}},{"uid":"2789b79528954a93","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/2789b79528954a93","status":"passed","time":{"start":1697367147979,"stop":1697367149607,"duration":1628}},{"uid":"a734dfe9a3ebd782","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/a734dfe9a3ebd782","status":"passed","time":{"start":1697333047234,"stop":1697333048935,"duration":1701}},{"uid":"81a3824d3fe30e6e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/81a3824d3fe30e6e","status":"passed","time":{"start":1697246223442,"stop":1697246225339,"duration":1897}}]},"tags":[]},"source":"864d6233e4d76633.json","parameterValues":["SouthNorfolkCouncil"]}