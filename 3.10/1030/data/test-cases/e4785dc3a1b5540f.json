{"uid":"e4785dc3a1b5540f","name":"Validate Council Output [NorthEastLincs]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"5bf150f9d14a36325cbfaf9b6349d178","time":{"start":1697702048438,"stop":1697702048439,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthEastLincs]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d112168c0>, 'council_name': 'NorthEastLincs'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthEastLincs]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d112168c0>, 'council_name': 'NorthEastLincs'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: NorthEastLincs","time":{"start":1697702048438,"stop":1697702048439,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2116-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthEastLincs"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":139,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":139},"items":[{"uid":"421ae5c5a30b876a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/421ae5c5a30b876a","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697696184615,"stop":1697696184619,"duration":4}},{"uid":"52e748e3942e12a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/52e748e3942e12a2","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697678161443,"stop":1697678161447,"duration":4}},{"uid":"8dcae69429e82e68","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/8dcae69429e82e68","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697666599297,"stop":1697666599302,"duration":5}},{"uid":"a331fb7fafd570b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/a331fb7fafd570b9","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697666544825,"stop":1697666544829,"duration":4}},{"uid":"ad979d4a6f4af8e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/ad979d4a6f4af8e1","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697656837286,"stop":1697656837291,"duration":5}},{"uid":"6dd2501c173c0513","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/6dd2501c173c0513","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697656812951,"stop":1697656812955,"duration":4}},{"uid":"55f61361fe348172","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/55f61361fe348172","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697650243887,"stop":1697650243891,"duration":4}},{"uid":"389cf6a8c4ade8aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/389cf6a8c4ade8aa","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697618492934,"stop":1697618492939,"duration":5}},{"uid":"f20518dd2781b503","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/f20518dd2781b503","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697618419962,"stop":1697618419966,"duration":4}},{"uid":"59a789b94ea72cf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/59a789b94ea72cf6","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697591942341,"stop":1697591942345,"duration":4}},{"uid":"9d040ba298b9fcec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/9d040ba298b9fcec","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697542832857,"stop":1697542832862,"duration":5}},{"uid":"4375b5439037fce0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/4375b5439037fce0","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697505608494,"stop":1697505608499,"duration":5}},{"uid":"a3d1336061cd9942","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/a3d1336061cd9942","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697484842125,"stop":1697484842129,"duration":4}},{"uid":"c6688bbb78013100","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/c6688bbb78013100","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697484754271,"stop":1697484754275,"duration":4}},{"uid":"50ab66e672cee46a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/50ab66e672cee46a","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697419224619,"stop":1697419224623,"duration":4}},{"uid":"3391af0df10c9cfe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/3391af0df10c9cfe","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697403304645,"stop":1697403304648,"duration":3}},{"uid":"90ca31bdd491f071","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/90ca31bdd491f071","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697399860126,"stop":1697399860131,"duration":5}},{"uid":"a7ae8966ca91d30a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/a7ae8966ca91d30a","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697367116297,"stop":1697367116301,"duration":4}},{"uid":"b91c51701c52251a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/b91c51701c52251a","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697332832612,"stop":1697332832617,"duration":5}},{"uid":"bb8ca391d1be4536","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/bb8ca391d1be4536","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697246023852,"stop":1697246023857,"duration":5}}]},"tags":[]},"source":"e4785dc3a1b5540f.json","parameterValues":["NorthEastLincs"]}