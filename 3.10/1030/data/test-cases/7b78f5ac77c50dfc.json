{"uid":"7b78f5ac77c50dfc","name":"Validate Council Output [WiltshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aedb86c72e1849b4679ed1a7ee37cf59","time":{"start":1697702049469,"stop":1697702049470,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiltshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aaf4a7310>, 'council_name': 'WiltshireCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiltshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aaf4a7310>, 'council_name': 'WiltshireCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: WiltshireCouncil","time":{"start":1697702049469,"stop":1697702049470,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2113-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiltshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"2a89f6d8a398e8e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/2a89f6d8a398e8e4","status":"passed","time":{"start":1697696442814,"stop":1697696445952,"duration":3138}},{"uid":"1b1feefa5eb8ad0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/1b1feefa5eb8ad0","status":"passed","time":{"start":1697678367518,"stop":1697678375371,"duration":7853}},{"uid":"2d1a132352abb9ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/2d1a132352abb9ff","status":"passed","time":{"start":1697666868366,"stop":1697666871264,"duration":2898}},{"uid":"66cec11a9acc8e4e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/66cec11a9acc8e4e","status":"passed","time":{"start":1697666876402,"stop":1697666886534,"duration":10132}},{"uid":"ab08e1909017981f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/ab08e1909017981f","status":"passed","time":{"start":1697657116921,"stop":1697657121348,"duration":4427}},{"uid":"9c1bb827068aa570","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/9c1bb827068aa570","status":"passed","time":{"start":1697657030522,"stop":1697657034342,"duration":3820}},{"uid":"40cbd399fc79ee0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/40cbd399fc79ee0d","status":"passed","time":{"start":1697650271975,"stop":1697650274065,"duration":2090}},{"uid":"8f53f0a9d2ce7ba9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/8f53f0a9d2ce7ba9","status":"passed","time":{"start":1697618540392,"stop":1697618543029,"duration":2637}},{"uid":"7b50e4955032604","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/7b50e4955032604","status":"passed","time":{"start":1697618469651,"stop":1697618471841,"duration":2190}},{"uid":"83b4381def5a770","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/83b4381def5a770","status":"passed","time":{"start":1697591989984,"stop":1697591992446,"duration":2462}},{"uid":"870ccc797172cfe2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/870ccc797172cfe2","status":"passed","time":{"start":1697542874488,"stop":1697542876724,"duration":2236}},{"uid":"7f2359e5f18b102e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/7f2359e5f18b102e","status":"passed","time":{"start":1697505647385,"stop":1697505651204,"duration":3819}},{"uid":"eae3fc87707da29a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/eae3fc87707da29a","status":"passed","time":{"start":1697484877599,"stop":1697484880054,"duration":2455}},{"uid":"859fcecee7dd7d6e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/859fcecee7dd7d6e","status":"passed","time":{"start":1697484817126,"stop":1697484819370,"duration":2244}},{"uid":"85478e6a8bc44c18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/85478e6a8bc44c18","status":"passed","time":{"start":1697419269227,"stop":1697419272499,"duration":3272}},{"uid":"ec6ee3e441ea0b01","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/ec6ee3e441ea0b01","status":"passed","time":{"start":1697403365666,"stop":1697403372163,"duration":6497}},{"uid":"1bae8b8050389f8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/1bae8b8050389f8f","status":"passed","time":{"start":1697399920732,"stop":1697399922545,"duration":1813}},{"uid":"b9bf973e524dc8b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/b9bf973e524dc8b8","status":"passed","time":{"start":1697367179216,"stop":1697367184682,"duration":5466}},{"uid":"9fa990444c7cfcd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/9fa990444c7cfcd8","status":"passed","time":{"start":1697333111975,"stop":1697333114974,"duration":2999}},{"uid":"aae0292d7d9a4ef7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/aae0292d7d9a4ef7","status":"passed","time":{"start":1697246269805,"stop":1697246272785,"duration":2980}}]},"tags":[]},"source":"7b78f5ac77c50dfc.json","parameterValues":["WiltshireCouncil"]}