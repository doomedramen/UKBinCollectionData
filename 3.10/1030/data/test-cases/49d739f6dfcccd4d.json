{"uid":"49d739f6dfcccd4d","name":"Validate Council Output [BristolCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9ccf2d38c1146637d9a0560b2cb0f48e","time":{"start":1697702047635,"stop":1697702047636,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[BristolCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aaf5def20>, 'council_name': 'BristolCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[BristolCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aaf5def20>, 'council_name': 'BristolCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: BristolCityCouncil","time":{"start":1697702047636,"stop":1697702047636,"duration":0},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2113-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BristolCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"68d7c7c3e5d8356d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/68d7c7c3e5d8356d","status":"passed","time":{"start":1697696113407,"stop":1697696118558,"duration":5151}},{"uid":"c58d30c1add846d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/c58d30c1add846d1","status":"passed","time":{"start":1697678040956,"stop":1697678046921,"duration":5965}},{"uid":"6639797ff810e19c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/6639797ff810e19c","status":"passed","time":{"start":1697666534953,"stop":1697666540280,"duration":5327}},{"uid":"da48dfae87790cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/da48dfae87790cd","status":"passed","time":{"start":1697666486228,"stop":1697666490777,"duration":4549}},{"uid":"329525324fc36fe9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/329525324fc36fe9","status":"passed","time":{"start":1697656778960,"stop":1697656784268,"duration":5308}},{"uid":"5c812904d779aba2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/5c812904d779aba2","status":"passed","time":{"start":1697656737453,"stop":1697656742406,"duration":4953}},{"uid":"efaa29f2eec63056","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/efaa29f2eec63056","status":"passed","time":{"start":1697649977183,"stop":1697649981997,"duration":4814}},{"uid":"d64e916136675319","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/d64e916136675319","status":"passed","time":{"start":1697618210917,"stop":1697618217703,"duration":6786}},{"uid":"7dc3e10d31274886","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/7dc3e10d31274886","status":"passed","time":{"start":1697618166685,"stop":1697618173268,"duration":6583}},{"uid":"fbd60db3df018cbb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/fbd60db3df018cbb","status":"passed","time":{"start":1697591670446,"stop":1697591675172,"duration":4726}},{"uid":"92ded9869aa0e53e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/92ded9869aa0e53e","status":"passed","time":{"start":1697542552952,"stop":1697542558087,"duration":5135}},{"uid":"7c9a2c8cd7f487e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/7c9a2c8cd7f487e6","status":"passed","time":{"start":1697505279268,"stop":1697505284927,"duration":5659}},{"uid":"863640ec8c889cc1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/863640ec8c889cc1","status":"passed","time":{"start":1697484593314,"stop":1697484598442,"duration":5128}},{"uid":"dbf0584a1e25b8c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/dbf0584a1e25b8c9","status":"passed","time":{"start":1697484550759,"stop":1697484555454,"duration":4695}},{"uid":"8c8ff822c0fd1a6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/8c8ff822c0fd1a6c","status":"passed","time":{"start":1697418930554,"stop":1697418935469,"duration":4915}},{"uid":"b457b7532e62069d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/b457b7532e62069d","status":"passed","time":{"start":1697403120685,"stop":1697403126507,"duration":5822}},{"uid":"e240330f43edb169","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/e240330f43edb169","status":"passed","time":{"start":1697399675093,"stop":1697399679663,"duration":4570}},{"uid":"d632bb6f9f9222b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/d632bb6f9f9222b8","status":"passed","time":{"start":1697366929323,"stop":1697366933832,"duration":4509}},{"uid":"386d4ed49c41beee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/386d4ed49c41beee","status":"passed","time":{"start":1697332751501,"stop":1697332765781,"duration":14280}},{"uid":"866c547be6772575","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/866c547be6772575","status":"passed","time":{"start":1697245925449,"stop":1697245930601,"duration":5152}}]},"tags":[]},"source":"49d739f6dfcccd4d.json","parameterValues":["BristolCityCouncil"]}