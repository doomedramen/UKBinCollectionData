{"uid":"d5ce9d448326e5a3","name":"Validate Council Output [ManchesterCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"6c9ed2342b08e1ed67054efc9a5b20e8","time":{"start":1697702048370,"stop":1697702048371,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[ManchesterCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aafa15ae0>, 'council_name': 'ManchesterCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[ManchesterCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aafa15ae0>, 'council_name': 'ManchesterCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: ManchesterCityCouncil","time":{"start":1697702048370,"stop":1697702048371,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2113-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ManchesterCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"2757e07fcb816df9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/2757e07fcb816df9","status":"passed","time":{"start":1697696159077,"stop":1697696163322,"duration":4245}},{"uid":"f734996496a1af25","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/f734996496a1af25","status":"passed","time":{"start":1697678086187,"stop":1697678091818,"duration":5631}},{"uid":"2c787df5fab78e46","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/2c787df5fab78e46","status":"passed","time":{"start":1697666572708,"stop":1697666576416,"duration":3708}},{"uid":"2f47a541b6a6227","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/2f47a541b6a6227","status":"passed","time":{"start":1697666520995,"stop":1697666524734,"duration":3739}},{"uid":"ad32007169b289b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/ad32007169b289b2","status":"passed","time":{"start":1697656814372,"stop":1697656817829,"duration":3457}},{"uid":"74cde8fb14b2b2f1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/74cde8fb14b2b2f1","status":"passed","time":{"start":1697656773754,"stop":1697656776936,"duration":3182}},{"uid":"8c3ef64d6d6b1fe0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/8c3ef64d6d6b1fe0","status":"passed","time":{"start":1697650209773,"stop":1697650214836,"duration":5063}},{"uid":"89b7ab236b08bfe9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/89b7ab236b08bfe9","status":"passed","time":{"start":1697618474094,"stop":1697618478138,"duration":4044}},{"uid":"6c6bb33a8f7eb666","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/6c6bb33a8f7eb666","status":"passed","time":{"start":1697618402219,"stop":1697618406388,"duration":4169}},{"uid":"f807746352600866","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/f807746352600866","status":"passed","time":{"start":1697591927650,"stop":1697591931409,"duration":3759}},{"uid":"de5fdfe186fd081a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/de5fdfe186fd081a","status":"passed","time":{"start":1697542790694,"stop":1697542794584,"duration":3890}},{"uid":"9419342d8260862","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/9419342d8260862","status":"passed","time":{"start":1697505573499,"stop":1697505579489,"duration":5990}},{"uid":"41ef02bbfda5223f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/41ef02bbfda5223f","status":"passed","time":{"start":1697484819399,"stop":1697484823802,"duration":4403}},{"uid":"a7301df504f9a5f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/a7301df504f9a5f7","status":"passed","time":{"start":1697484728332,"stop":1697484731635,"duration":3303}},{"uid":"b4054a3360efb22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/b4054a3360efb22","status":"passed","time":{"start":1697419166986,"stop":1697419190957,"duration":23971}},{"uid":"8e6ba63832edd808","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/8e6ba63832edd808","status":"passed","time":{"start":1697403291703,"stop":1697403294942,"duration":3239}},{"uid":"368b3539470d9290","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/368b3539470d9290","status":"passed","time":{"start":1697399842976,"stop":1697399846405,"duration":3429}},{"uid":"c2c6acddbc104eb2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/c2c6acddbc104eb2","status":"passed","time":{"start":1697367101635,"stop":1697367105032,"duration":3397}},{"uid":"507c3e88b8be42ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/507c3e88b8be42ad","status":"passed","time":{"start":1697333049019,"stop":1697333053465,"duration":4446}},{"uid":"43c20fc502af496d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/43c20fc502af496d","status":"passed","time":{"start":1697246214872,"stop":1697246219359,"duration":4487}}]},"tags":[]},"source":"d5ce9d448326e5a3.json","parameterValues":["ManchesterCityCouncil"]}