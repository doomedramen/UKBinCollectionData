{"uid":"d313a42e5f30dd63","name":"Validate Council Output [NewarkAndSherwoodDC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4d76ea9dcf3a3c0d5f40470e07f35ac0","time":{"start":1697702048330,"stop":1697702048331,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewarkAndSherwoodDC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d110a6290>, 'council_name': 'NewarkAndSherwoodDC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewarkAndSherwoodDC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d110a6290>, 'council_name': 'NewarkAndSherwoodDC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: NewarkAndSherwoodDC","time":{"start":1697702048330,"stop":1697702048331,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2116-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewarkAndSherwoodDC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"593ed97121ca6b05","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/593ed97121ca6b05","status":"passed","time":{"start":1697696176409,"stop":1697696177601,"duration":1192}},{"uid":"74ab19f1aaff366e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/74ab19f1aaff366e","status":"passed","time":{"start":1697678099171,"stop":1697678100259,"duration":1088}},{"uid":"d5a733a8439bffeb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/d5a733a8439bffeb","status":"passed","time":{"start":1697666590666,"stop":1697666591933,"duration":1267}},{"uid":"ee8d4330e785dc0f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/ee8d4330e785dc0f","status":"passed","time":{"start":1697666536653,"stop":1697666537466,"duration":813}},{"uid":"9f41df8e26e2e3ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/9f41df8e26e2e3ea","status":"passed","time":{"start":1697656824739,"stop":1697656826439,"duration":1700}},{"uid":"730e8a699df17d3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/730e8a699df17d3a","status":"passed","time":{"start":1697656784688,"stop":1697656785710,"duration":1022}},{"uid":"c30b6ee36fda71b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/c30b6ee36fda71b4","status":"passed","time":{"start":1697650221748,"stop":1697650223022,"duration":1274}},{"uid":"45d235978ea4f431","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/45d235978ea4f431","status":"passed","time":{"start":1697618485143,"stop":1697618486445,"duration":1302}},{"uid":"64bc193fb0cbd0e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/64bc193fb0cbd0e7","status":"passed","time":{"start":1697618410145,"stop":1697618411198,"duration":1053}},{"uid":"cc0888d4329c7175","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/cc0888d4329c7175","status":"passed","time":{"start":1697591934732,"stop":1697591936107,"duration":1375}},{"uid":"52a4bfbe3df86457","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/52a4bfbe3df86457","status":"passed","time":{"start":1697542798245,"stop":1697542799288,"duration":1043}},{"uid":"90181572e572986b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/90181572e572986b","status":"passed","time":{"start":1697505583202,"stop":1697505584896,"duration":1694}},{"uid":"4cd1555a83642a4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/4cd1555a83642a4b","status":"passed","time":{"start":1697484830653,"stop":1697484831841,"duration":1188}},{"uid":"2cad866f6c975356","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/2cad866f6c975356","status":"passed","time":{"start":1697484737966,"stop":1697484738865,"duration":899}},{"uid":"b2191a7a456c8be8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/b2191a7a456c8be8","status":"passed","time":{"start":1697419193849,"stop":1697419194858,"duration":1009}},{"uid":"8791078c2c822c7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/8791078c2c822c7e","status":"passed","time":{"start":1697403297234,"stop":1697403298176,"duration":942}},{"uid":"172ba32938901b17","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/172ba32938901b17","status":"passed","time":{"start":1697399852871,"stop":1697399853661,"duration":790}},{"uid":"41b2618760c5eda9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/41b2618760c5eda9","status":"passed","time":{"start":1697367107861,"stop":1697367108833,"duration":972}},{"uid":"211cfdf131e281b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/211cfdf131e281b3","status":"passed","time":{"start":1697332806637,"stop":1697332808061,"duration":1424}},{"uid":"b95668f9abb8051c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/b95668f9abb8051c","status":"passed","time":{"start":1697245973500,"stop":1697245974770,"duration":1270}}]},"tags":[]},"source":"d313a42e5f30dd63.json","parameterValues":["NewarkAndSherwoodDC"]}