{"uid":"678ceb020ad938de","name":"Validate Council Output [SheffieldCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"44ddd5985badeba6e2bcae7f904bc14a","time":{"start":1697702048879,"stop":1697702048880,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[SheffieldCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d1118d1b0>, 'council_name': 'SheffieldCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[SheffieldCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d1118d1b0>, 'council_name': 'SheffieldCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: SheffieldCityCouncil","time":{"start":1697702048879,"stop":1697702048880,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2116-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SheffieldCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"5add56ba82630072","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/5add56ba82630072","status":"passed","time":{"start":1697696392363,"stop":1697696394854,"duration":2491}},{"uid":"c5e2ddc2f95bc336","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/c5e2ddc2f95bc336","status":"passed","time":{"start":1697678305099,"stop":1697678307568,"duration":2469}},{"uid":"a1452b581de20ee5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/a1452b581de20ee5","status":"passed","time":{"start":1697666798648,"stop":1697666801498,"duration":2850}},{"uid":"bc8113daf130bd00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/bc8113daf130bd00","status":"passed","time":{"start":1697666695604,"stop":1697666697869,"duration":2265}},{"uid":"23fd5af8340a7aeb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/23fd5af8340a7aeb","status":"passed","time":{"start":1697657038077,"stop":1697657040049,"duration":1972}},{"uid":"482628e88f570a7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/482628e88f570a7c","status":"passed","time":{"start":1697656969560,"stop":1697656971917,"duration":2357}},{"uid":"710aea97316c7d11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/710aea97316c7d11","status":"passed","time":{"start":1697650216777,"stop":1697650218914,"duration":2137}},{"uid":"8d31da50049bda28","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/8d31da50049bda28","status":"passed","time":{"start":1697618489685,"stop":1697618492229,"duration":2544}},{"uid":"8cffda050f69ee8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/8cffda050f69ee8b","status":"passed","time":{"start":1697618424356,"stop":1697618426628,"duration":2272}},{"uid":"4a2f00f599e10f9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/4a2f00f599e10f9d","status":"passed","time":{"start":1697591952009,"stop":1697591954721,"duration":2712}},{"uid":"692ce263a33ba6d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/692ce263a33ba6d0","status":"passed","time":{"start":1697542811939,"stop":1697542814143,"duration":2204}},{"uid":"c7885b8cd7c2423d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/c7885b8cd7c2423d","status":"passed","time":{"start":1697505544570,"stop":1697505547033,"duration":2463}},{"uid":"228919b59e8713a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/228919b59e8713a7","status":"passed","time":{"start":1697484834723,"stop":1697484837050,"duration":2327}},{"uid":"9794b8895d4d848e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/9794b8895d4d848e","status":"passed","time":{"start":1697484767357,"stop":1697484769393,"duration":2036}},{"uid":"666abf4b29792e1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/666abf4b29792e1a","status":"passed","time":{"start":1697419186553,"stop":1697419189329,"duration":2776}},{"uid":"41dc56f78552b99e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/41dc56f78552b99e","status":"passed","time":{"start":1697403319059,"stop":1697403321435,"duration":2376}},{"uid":"1d761a38dd131d0f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/1d761a38dd131d0f","status":"passed","time":{"start":1697399876489,"stop":1697399878582,"duration":2093}},{"uid":"f12e9a84aadb1323","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/f12e9a84aadb1323","status":"passed","time":{"start":1697367132753,"stop":1697367134964,"duration":2211}},{"uid":"b4af6ebd11f480aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/b4af6ebd11f480aa","status":"passed","time":{"start":1697333030459,"stop":1697333032878,"duration":2419}},{"uid":"9d4f53e25efffcc5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/9d4f53e25efffcc5","status":"passed","time":{"start":1697246224001,"stop":1697246226650,"duration":2649}}]},"tags":[]},"source":"678ceb020ad938de.json","parameterValues":["SheffieldCityCouncil"]}