{"uid":"f36dbf6cfe1ca7ed","name":"Validate Council Output [CroydonCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cc336f6dd92ae6b8042805cd6f13d13e","time":{"start":1697702047630,"stop":1697702047631,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d1113cfd0>, 'council_name': 'CroydonCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d1113cfd0>, 'council_name': 'CroydonCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: CroydonCouncil","time":{"start":1697702047630,"stop":1697702047631,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2116-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":91,"broken":0,"skipped":0,"passed":48,"unknown":0,"total":139},"items":[{"uid":"83f6d7d0b102605a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/83f6d7d0b102605a","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697696140979,"stop":1697696142787,"duration":1808}},{"uid":"f4b840b1bae5d092","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/f4b840b1bae5d092","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1697678062546,"stop":1697678066903,"duration":4357}},{"uid":"eeab67678da97f6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/eeab67678da97f6b","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697666550138,"stop":1697666552443,"duration":2305}},{"uid":"b0d3cc4c81cfe54e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/b0d3cc4c81cfe54e","status":"passed","time":{"start":1697666502020,"stop":1697666506403,"duration":4383}},{"uid":"aa12cd6538d28c25","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/aa12cd6538d28c25","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697656794999,"stop":1697656796845,"duration":1846}},{"uid":"93d49d432db15084","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/93d49d432db15084","status":"passed","time":{"start":1697656749969,"stop":1697656754772,"duration":4803}},{"uid":"b6e538598f9884cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/b6e538598f9884cb","status":"passed","time":{"start":1697650014798,"stop":1697650019736,"duration":4938}},{"uid":"e652384dcd9cdf68","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/e652384dcd9cdf68","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697618246692,"stop":1697618248593,"duration":1901}},{"uid":"f0262a6f690c2a00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/f0262a6f690c2a00","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697618210401,"stop":1697618212013,"duration":1612}},{"uid":"173e59915a4d7742","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/173e59915a4d7742","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697591737840,"stop":1697591739665,"duration":1825}},{"uid":"f859a8ecce3e4ea9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/f859a8ecce3e4ea9","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697542596982,"stop":1697542598471,"duration":1489}},{"uid":"cc5c7bdb2790781f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/cc5c7bdb2790781f","status":"passed","time":{"start":1697505320413,"stop":1697505325992,"duration":5579}},{"uid":"c38f946bf447e712","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/c38f946bf447e712","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697484624716,"stop":1697484626408,"duration":1692}},{"uid":"5e5cb6a9a9936670","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/5e5cb6a9a9936670","status":"passed","time":{"start":1697484577978,"stop":1697484581933,"duration":3955}},{"uid":"46a73003bd812a6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/46a73003bd812a6c","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697418984560,"stop":1697418986229,"duration":1669}},{"uid":"4294c4fe5c95d3b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/4294c4fe5c95d3b6","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697403147125,"stop":1697403148283,"duration":1158}},{"uid":"adec718085df97e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/adec718085df97e9","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697399704824,"stop":1697399706050,"duration":1226}},{"uid":"186674935ac7ca04","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/186674935ac7ca04","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697366959469,"stop":1697366960711,"duration":1242}},{"uid":"5552af2f832df8e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/5552af2f832df8e2","status":"passed","time":{"start":1697332794330,"stop":1697332798895,"duration":4565}},{"uid":"ca1dd5a162d41a18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/ca1dd5a162d41a18","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697245964512,"stop":1697245966305,"duration":1793}}]},"tags":[]},"source":"f36dbf6cfe1ca7ed.json","parameterValues":["CroydonCouncil"]}