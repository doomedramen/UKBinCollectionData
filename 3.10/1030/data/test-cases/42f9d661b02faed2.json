{"uid":"42f9d661b02faed2","name":"Validate Council Output [TonbridgeAndMallingBC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"702154f20d1bb392cb26213b3a14a202","time":{"start":1697702049192,"stop":1697702049193,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[TonbridgeAndMallingBC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d10ec99c0>, 'council_name': 'TonbridgeAndMallingBC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[TonbridgeAndMallingBC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d10ec99c0>, 'council_name': 'TonbridgeAndMallingBC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: TonbridgeAndMallingBC","time":{"start":1697702049192,"stop":1697702049193,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2116-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TonbridgeAndMallingBC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":135,"unknown":0,"total":139},"items":[{"uid":"d15e15f869f59e0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/d15e15f869f59e0a","status":"passed","time":{"start":1697696546875,"stop":1697696549748,"duration":2873}},{"uid":"c3824d780d8998a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/c3824d780d8998a7","status":"passed","time":{"start":1697678486762,"stop":1697678489866,"duration":3104}},{"uid":"4be8614855a2b54a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/4be8614855a2b54a","status":"passed","time":{"start":1697666963025,"stop":1697666966152,"duration":3127}},{"uid":"b285dc8558e9d783","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/b285dc8558e9d783","status":"passed","time":{"start":1697666855715,"stop":1697666864398,"duration":8683}},{"uid":"c1f3b6fe5dc00e0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/c1f3b6fe5dc00e0e","status":"passed","time":{"start":1697657202883,"stop":1697657206188,"duration":3305}},{"uid":"94c5dffaf2944cc7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/94c5dffaf2944cc7","status":"passed","time":{"start":1697657130792,"stop":1697657133847,"duration":3055}},{"uid":"120ba53ac23bf69f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/120ba53ac23bf69f","status":"passed","time":{"start":1697650376868,"stop":1697650380165,"duration":3297}},{"uid":"82231d1b081f0b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/82231d1b081f0b","status":"passed","time":{"start":1697618638808,"stop":1697618642152,"duration":3344}},{"uid":"ce1715b36f6cafcc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/ce1715b36f6cafcc","status":"passed","time":{"start":1697618577923,"stop":1697618581021,"duration":3098}},{"uid":"d1ea15b1e88a13e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/d1ea15b1e88a13e6","status":"passed","time":{"start":1697592088239,"stop":1697592090905,"duration":2666}},{"uid":"fbb15582e1888bf9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/fbb15582e1888bf9","status":"passed","time":{"start":1697542964256,"stop":1697542972817,"duration":8561}},{"uid":"8782a672de41e4d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/8782a672de41e4d4","status":"passed","time":{"start":1697505719520,"stop":1697505722841,"duration":3321}},{"uid":"c6c2e3ab1154eba1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/c6c2e3ab1154eba1","status":"passed","time":{"start":1697484984742,"stop":1697484987522,"duration":2780}},{"uid":"21d5efb56dcffd56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/21d5efb56dcffd56","status":"passed","time":{"start":1697484931308,"stop":1697484934805,"duration":3497}},{"uid":"fb8da667c3ca47bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/fb8da667c3ca47bb","status":"passed","time":{"start":1697419342273,"stop":1697419345254,"duration":2981}},{"uid":"eed60fb95d3284f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/eed60fb95d3284f8","status":"passed","time":{"start":1697403466514,"stop":1697403476045,"duration":9531}},{"uid":"7eb6fd2a8d0bfdbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/7eb6fd2a8d0bfdbc","status":"passed","time":{"start":1697400016621,"stop":1697400019603,"duration":2982}},{"uid":"a281f981912e78f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/a281f981912e78f","status":"passed","time":{"start":1697367280484,"stop":1697367283228,"duration":2744}},{"uid":"994cd4feb5dc4885","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/994cd4feb5dc4885","status":"passed","time":{"start":1697333191476,"stop":1697333194605,"duration":3129}},{"uid":"be61cbf00312a6a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/be61cbf00312a6a","status":"passed","time":{"start":1697246368467,"stop":1697246371690,"duration":3223}}]},"tags":[]},"source":"42f9d661b02faed2.json","parameterValues":["TonbridgeAndMallingBC"]}