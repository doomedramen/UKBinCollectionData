{"uid":"41065285249ad46","name":"Validate Council Output [HighPeakCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f014a970b405df22a91c3a1e6926ba51","time":{"start":1697702047934,"stop":1697702047935,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[HighPeakCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aafa15240>, 'council_name': 'HighPeakCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[HighPeakCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aafa15240>, 'council_name': 'HighPeakCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: HighPeakCouncil","time":{"start":1697702047934,"stop":1697702047934,"duration":0},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2113-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"HighPeakCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":33,"broken":0,"skipped":0,"passed":106,"unknown":0,"total":139},"items":[{"uid":"d9389bbf16ee30f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/d9389bbf16ee30f4","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697696169611,"stop":1697696179905,"duration":10294}},{"uid":"ab10fe080d71a2c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/ab10fe080d71a2c5","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697678092925,"stop":1697678102611,"duration":9686}},{"uid":"5fa1214d30639eb7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/5fa1214d30639eb7","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697666585877,"stop":1697666594925,"duration":9048}},{"uid":"c0dca0eabe7e1222","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/c0dca0eabe7e1222","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697666534078,"stop":1697666540551,"duration":6473}},{"uid":"a063d1271376b4b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/a063d1271376b4b0","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697656844023,"stop":1697656853350,"duration":9327}},{"uid":"9957ce3471e884e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/9957ce3471e884e3","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697656784402,"stop":1697656792623,"duration":8221}},{"uid":"27b188ff7603b9e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/27b188ff7603b9e8","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697650013474,"stop":1697650022575,"duration":9101}},{"uid":"a707f97e0231159c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/a707f97e0231159c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697618269897,"stop":1697618281602,"duration":11705}},{"uid":"a08d7ebafd3f92d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/a08d7ebafd3f92d1","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697618207731,"stop":1697618216953,"duration":9222}},{"uid":"98534d626126b097","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/98534d626126b097","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697591740269,"stop":1697591748737,"duration":8468}},{"uid":"ef0ef121fa387089","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/ef0ef121fa387089","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697542608690,"stop":1697542616548,"duration":7858}},{"uid":"602b8d2f00fe34eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/602b8d2f00fe34eb","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697505325513,"stop":1697505334978,"duration":9465}},{"uid":"1e81b2535f1e3770","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/1e81b2535f1e3770","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484628576,"stop":1697484638165,"duration":9589}},{"uid":"68755b9547c89052","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/68755b9547c89052","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484583429,"stop":1697484590145,"duration":6716}},{"uid":"61a8560bb64c7647","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/61a8560bb64c7647","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697418967201,"stop":1697418974296,"duration":7095}},{"uid":"8168d36cb95b743f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/8168d36cb95b743f","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697403148765,"stop":1697403155900,"duration":7135}},{"uid":"456ae82b90b2549b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/456ae82b90b2549b","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697399705650,"stop":1697399711970,"duration":6320}},{"uid":"30c4d615260a5019","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/30c4d615260a5019","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697366963414,"stop":1697366970277,"duration":6863}},{"uid":"7ca4656b3c7897b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/7ca4656b3c7897b2","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697332800026,"stop":1697332810268,"duration":10242}},{"uid":"5d085b4df30e566a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/5d085b4df30e566a","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697245963061,"stop":1697245973584,"duration":10523}}]},"tags":[]},"source":"41065285249ad46.json","parameterValues":["HighPeakCouncil"]}