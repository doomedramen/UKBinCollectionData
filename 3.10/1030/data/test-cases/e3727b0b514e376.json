{"uid":"e3727b0b514e376","name":"Validate Council Output [WaverleyBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"64028773adeaa616798d2ec053582700","time":{"start":1697702049374,"stop":1697702049375,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[WaverleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aaf4e1cf0>, 'council_name': 'WaverleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[WaverleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aaf4e1cf0>, 'council_name': 'WaverleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: WaverleyBoroughCouncil","time":{"start":1697702049374,"stop":1697702049375,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2113-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WaverleyBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"6573d41cdea40db4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/6573d41cdea40db4","status":"passed","time":{"start":1697696432491,"stop":1697696436844,"duration":4353}},{"uid":"daaca587b88d55bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/daaca587b88d55bb","status":"passed","time":{"start":1697678357599,"stop":1697678362088,"duration":4489}},{"uid":"9e85b2d6066dc9fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/9e85b2d6066dc9fe","status":"passed","time":{"start":1697666855943,"stop":1697666861610,"duration":5667}},{"uid":"f3981e98f15d72a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/f3981e98f15d72a2","status":"passed","time":{"start":1697666865816,"stop":1697666870473,"duration":4657}},{"uid":"c15ec0890b94f894","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/c15ec0890b94f894","status":"passed","time":{"start":1697657105846,"stop":1697657110273,"duration":4427}},{"uid":"d86277598e5457bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/d86277598e5457bf","status":"passed","time":{"start":1697657019818,"stop":1697657024159,"duration":4341}},{"uid":"493b236a038c0a8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/493b236a038c0a8b","status":"passed","time":{"start":1697650260846,"stop":1697650266086,"duration":5240}},{"uid":"8d02175e3dd7d954","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/8d02175e3dd7d954","status":"passed","time":{"start":1697618528988,"stop":1697618533457,"duration":4469}},{"uid":"cb526b72f4491f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/cb526b72f4491f","status":"passed","time":{"start":1697618455773,"stop":1697618462979,"duration":7206}},{"uid":"5710a69e54e0cee3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/5710a69e54e0cee3","status":"passed","time":{"start":1697591979996,"stop":1697591984263,"duration":4267}},{"uid":"1759210f3b50ef5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/1759210f3b50ef5d","status":"passed","time":{"start":1697542863300,"stop":1697542867682,"duration":4382}},{"uid":"1ae50571f6c9c4ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/1ae50571f6c9c4ea","status":"passed","time":{"start":1697505633169,"stop":1697505640053,"duration":6884}},{"uid":"de8c9ea9c5e97df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/de8c9ea9c5e97df","status":"passed","time":{"start":1697484867979,"stop":1697484872197,"duration":4218}},{"uid":"65b9ae9f9230cfcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/65b9ae9f9230cfcd","status":"passed","time":{"start":1697484807796,"stop":1697484812632,"duration":4836}},{"uid":"5dda189a4c658fcb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/5dda189a4c658fcb","status":"passed","time":{"start":1697419256446,"stop":1697419263413,"duration":6967}},{"uid":"abb248fba77f0470","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/abb248fba77f0470","status":"passed","time":{"start":1697403355193,"stop":1697403360425,"duration":5232}},{"uid":"fc13eef630a6d45a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/fc13eef630a6d45a","status":"passed","time":{"start":1697399910379,"stop":1697399914474,"duration":4095}},{"uid":"9f35a5aeb766caba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/9f35a5aeb766caba","status":"passed","time":{"start":1697367169398,"stop":1697367173524,"duration":4126}},{"uid":"beaca53d220d3732","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/beaca53d220d3732","status":"passed","time":{"start":1697333099840,"stop":1697333104407,"duration":4567}},{"uid":"eb1a3d8fedf74ef7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/eb1a3d8fedf74ef7","status":"passed","time":{"start":1697246258631,"stop":1697246263220,"duration":4589}}]},"tags":[]},"source":"e3727b0b514e376.json","parameterValues":["WaverleyBoroughCouncil"]}