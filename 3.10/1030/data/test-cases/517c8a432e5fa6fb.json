{"uid":"517c8a432e5fa6fb","name":"Validate Council Output [NorthLanarkshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c3b97046df734f921dcc37a130cf4bef","time":{"start":1697702048533,"stop":1697702048534,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthLanarkshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d1118cc70>, 'council_name': 'NorthLanarkshireCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f2d111d6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthLanarkshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d1118cc70>, 'council_name': 'NorthLanarkshireCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f2d11c4e710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: NorthLanarkshireCouncil","time":{"start":1697702048533,"stop":1697702048534,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2116-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthLanarkshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"b66208a260d2a0da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/b66208a260d2a0da","status":"passed","time":{"start":1697696188476,"stop":1697696189726,"duration":1250}},{"uid":"c7c53aa8c49aee4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/c7c53aa8c49aee4a","status":"passed","time":{"start":1697678165054,"stop":1697678165957,"duration":903}},{"uid":"182971559562a5d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/182971559562a5d3","status":"passed","time":{"start":1697666603527,"stop":1697666604806,"duration":1279}},{"uid":"64b5890e260befa1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/64b5890e260befa1","status":"passed","time":{"start":1697666548519,"stop":1697666549239,"duration":720}},{"uid":"a44e14fbde4cc3a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/a44e14fbde4cc3a4","status":"passed","time":{"start":1697656841575,"stop":1697656842459,"duration":884}},{"uid":"89292fffc660ce3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/89292fffc660ce3c","status":"passed","time":{"start":1697656816845,"stop":1697656817705,"duration":860}},{"uid":"6e0f24202dcb338c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/6e0f24202dcb338c","status":"passed","time":{"start":1697650034717,"stop":1697650035587,"duration":870}},{"uid":"d653ff9de4be3530","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/d653ff9de4be3530","status":"passed","time":{"start":1697618294058,"stop":1697618294962,"duration":904}},{"uid":"5f348a1decb86314","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/5f348a1decb86314","status":"passed","time":{"start":1697618231811,"stop":1697618233049,"duration":1238}},{"uid":"351a820b9e163fcc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/351a820b9e163fcc","status":"passed","time":{"start":1697591760432,"stop":1697591761456,"duration":1024}},{"uid":"b4661c5a68814d4c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/b4661c5a68814d4c","status":"passed","time":{"start":1697542628303,"stop":1697542629139,"duration":836}},{"uid":"c4ea807b6cd9eb64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/c4ea807b6cd9eb64","status":"passed","time":{"start":1697505353848,"stop":1697505355239,"duration":1391}},{"uid":"4769c449f20d0551","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/4769c449f20d0551","status":"passed","time":{"start":1697484650478,"stop":1697484651340,"duration":862}},{"uid":"9a569365ede28a8e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/9a569365ede28a8e","status":"passed","time":{"start":1697484601916,"stop":1697484602979,"duration":1063}},{"uid":"d8ab70fa6ab69e26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/d8ab70fa6ab69e26","status":"passed","time":{"start":1697418998278,"stop":1697418999200,"duration":922}},{"uid":"1b91aba2c29847f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/1b91aba2c29847f2","status":"passed","time":{"start":1697403168296,"stop":1697403169338,"duration":1042}},{"uid":"71dedbc7fe7c9b4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/71dedbc7fe7c9b4b","status":"passed","time":{"start":1697399724293,"stop":1697399725036,"duration":743}},{"uid":"e34aa8abfd75698e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/e34aa8abfd75698e","status":"passed","time":{"start":1697366981477,"stop":1697366982239,"duration":762}},{"uid":"2e33e43b0aa2732f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/2e33e43b0aa2732f","status":"passed","time":{"start":1697332836808,"stop":1697332837936,"duration":1128}},{"uid":"5c3f33af94953738","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/5c3f33af94953738","status":"passed","time":{"start":1697246027815,"stop":1697246028708,"duration":893}}]},"tags":[]},"source":"517c8a432e5fa6fb.json","parameterValues":["NorthLanarkshireCouncil"]}