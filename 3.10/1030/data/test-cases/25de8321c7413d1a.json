{"uid":"25de8321c7413d1a","name":"Validate Council Output [LondonBoroughHounslow]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e674cebf616dd1178743c85688db8654","time":{"start":1697702048228,"stop":1697702048229,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aafa16230>, 'council_name': 'LondonBoroughHounslow'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f0aaf646710>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0aafa16230>, 'council_name': 'LondonBoroughHounslow'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0ab4086710>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1697702048228,"stop":1697702048229,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az399-129"},{"name":"thread","value":"2113-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":135,"unknown":0,"total":139},"items":[{"uid":"14965825f6dae71a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/14965825f6dae71a","status":"passed","time":{"start":1697696153015,"stop":1697696156550,"duration":3535}},{"uid":"d0ca1c3cdd30b040","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/d0ca1c3cdd30b040","status":"passed","time":{"start":1697678081329,"stop":1697678083883,"duration":2554}},{"uid":"790b6be75112b2d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/790b6be75112b2d3","status":"passed","time":{"start":1697666566798,"stop":1697666569776,"duration":2978}},{"uid":"a6c5a8fe80b50d0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/a6c5a8fe80b50d0e","status":"passed","time":{"start":1697666515949,"stop":1697666518422,"duration":2473}},{"uid":"bf45a321393d7db9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/bf45a321393d7db9","status":"passed","time":{"start":1697656808640,"stop":1697656811613,"duration":2973}},{"uid":"724d52cb32fd2409","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/724d52cb32fd2409","status":"passed","time":{"start":1697656768609,"stop":1697656771674,"duration":3065}},{"uid":"335d2af3737ad807","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/335d2af3737ad807","status":"passed","time":{"start":1697650204249,"stop":1697650207402,"duration":3153}},{"uid":"74d81d450c45ddf7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/74d81d450c45ddf7","status":"passed","time":{"start":1697618467659,"stop":1697618471436,"duration":3777}},{"uid":"4505cf6d3644cec3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/4505cf6d3644cec3","status":"passed","time":{"start":1697618396345,"stop":1697618399876,"duration":3531}},{"uid":"6bcfc6fac26f96da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/6bcfc6fac26f96da","status":"passed","time":{"start":1697591922388,"stop":1697591925257,"duration":2869}},{"uid":"65338420f87facfd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/65338420f87facfd","status":"passed","time":{"start":1697542784111,"stop":1697542788270,"duration":4159}},{"uid":"daf7cc501d9c13c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/daf7cc501d9c13c6","status":"passed","time":{"start":1697505567993,"stop":1697505570985,"duration":2992}},{"uid":"b43a47de1ac32511","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/b43a47de1ac32511","status":"passed","time":{"start":1697484814644,"stop":1697484817200,"duration":2556}},{"uid":"57253cd27d3d12b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/57253cd27d3d12b3","status":"passed","time":{"start":1697484723855,"stop":1697484726424,"duration":2569}},{"uid":"4b49609a0db8c640","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/4b49609a0db8c640","status":"passed","time":{"start":1697419162135,"stop":1697419164685,"duration":2550}},{"uid":"5eb44364ab58a3a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/5eb44364ab58a3a6","status":"passed","time":{"start":1697403286846,"stop":1697403289637,"duration":2791}},{"uid":"812f55093d3e2cf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/812f55093d3e2cf6","status":"passed","time":{"start":1697399838396,"stop":1697399840981,"duration":2585}},{"uid":"24521ebe4b888572","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/24521ebe4b888572","status":"passed","time":{"start":1697367097060,"stop":1697367099561,"duration":2501}},{"uid":"16e7360a8ebe993c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/16e7360a8ebe993c","status":"passed","time":{"start":1697333043955,"stop":1697333046855,"duration":2900}},{"uid":"915e84753b18dd9c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/915e84753b18dd9c","status":"passed","time":{"start":1697246209567,"stop":1697246212558,"duration":2991}}]},"tags":[]},"source":"25de8321c7413d1a.json","parameterValues":["LondonBoroughHounslow"]}