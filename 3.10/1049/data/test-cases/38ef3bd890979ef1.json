{"uid":"38ef3bd890979ef1","name":"Validate Council Output [WiganBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d724d8b9a4d0593a99f53e95b03e558b","time":{"start":1698196782265,"stop":1698196785996,"duration":3731},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f267e9d2c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2672a02710>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2672a02710>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f267e9d2c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2672a02710>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2672a02710>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","steps":[{"name":"Given the council: WiganBoroughCouncil","time":{"start":1698196782265,"stop":1698196782266,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WiganBoroughCouncil","time":{"start":1698196782266,"stop":1698196785993,"duration":3727},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698196785994,"stop":1698196785994,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698196785994,"stop":1698196785996,"duration":2},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az673-898"},{"name":"thread","value":"2135-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiganBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":81,"broken":0,"skipped":0,"passed":72,"unknown":0,"total":153},"items":[{"uid":"199ce4ac4540e5ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1048//#testresult/199ce4ac4540e5ba","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178517795,"stop":1698178521667,"duration":3872}},{"uid":"ebf06efca2570b2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1047//#testresult/ebf06efca2570b2c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178451795,"stop":1698178455134,"duration":3339}},{"uid":"4e5b810c832a7959","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1046//#testresult/4e5b810c832a7959","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698110422371,"stop":1698110425703,"duration":3332}},{"uid":"dc0e74a4041a63e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1044//#testresult/dc0e74a4041a63e3","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698065266069,"stop":1698065269482,"duration":3413}},{"uid":"7a7f5b8cc47dbbda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1045//#testresult/7a7f5b8cc47dbbda","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698065207342,"stop":1698065211059,"duration":3717}},{"uid":"16774b5d5330186e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1042//#testresult/16774b5d5330186e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698024043151,"stop":1698024047466,"duration":4315}},{"uid":"b22be167281b5999","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1040//#testresult/b22be167281b5999","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697937874253,"stop":1697937878673,"duration":4420}},{"uid":"5e81670ec9250112","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1039//#testresult/5e81670ec9250112","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697851071715,"stop":1697851075711,"duration":3996}},{"uid":"68161bc7fd81224","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1037//#testresult/68161bc7fd81224","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697790608538,"stop":1697790612761,"duration":4223}},{"uid":"fc25c4db1d9080c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1036//#testresult/fc25c4db1d9080c4","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697790607078,"stop":1697790613118,"duration":6040}},{"uid":"a52c15105d6dd3f1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1034//#testresult/a52c15105d6dd3f1","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697764787939,"stop":1697764792771,"duration":4832}},{"uid":"7a8667ea3fc922a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1033//#testresult/7a8667ea3fc922a7","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697706897981,"stop":1697706908746,"duration":10765}},{"uid":"92df40293d5b22f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1032//#testresult/92df40293d5b22f8","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697706841128,"stop":1697706844503,"duration":3375}},{"uid":"a68749d622148b27","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1030//#testresult/a68749d622148b27","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","time":{"start":1697702049431,"stop":1697702049432,"duration":1}},{"uid":"d63c3f5725d938e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/d63c3f5725d938e0","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697696438859,"stop":1697696442781,"duration":3922}},{"uid":"17ee122cf46d3aa5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/17ee122cf46d3aa5","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697678363857,"stop":1697678367485,"duration":3628}},{"uid":"1a9d25a973dba7cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/1a9d25a973dba7cc","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697666864020,"stop":1697666868322,"duration":4302}},{"uid":"166833060b387650","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/166833060b387650","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697666872139,"stop":1697666876326,"duration":4187}},{"uid":"f5b4ce65ea444826","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/f5b4ce65ea444826","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697657112359,"stop":1697657116881,"duration":4522}},{"uid":"7351173ad8e41d08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/7351173ad8e41d08","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697657025884,"stop":1697657030487,"duration":4603}}]},"tags":[]},"source":"38ef3bd890979ef1.json","parameterValues":["WiganBoroughCouncil"]}