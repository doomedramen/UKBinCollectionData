{"uid":"545e5e3eb6e7055f","name":"Validate Council Output [CharnwoodBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"801248c9ab954856945dc1ac5bef1fab","time":{"start":1695604447304,"stop":1695604449311,"duration":2007},"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CharnwoodBoroughCouncil]>>\n_pytest_bdd_example = {'council': 'CharnwoodBoroughCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CharnwoodBoroughCouncil.py:31: in parse_data\n    collection_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%a %d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CharnwoodBoroughCouncil]>>\n_pytest_bdd_example = {'council': 'CharnwoodBoroughCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CharnwoodBoroughCouncil.py:31: in parse_data\n    collection_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%a %d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: CharnwoodBoroughCouncil","time":{"start":1695604447304,"stop":1695604447305,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from CharnwoodBoroughCouncil","time":{"start":1695604447305,"stop":1695604449311,"duration":2006},"status":"failed","statusMessage":"time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az993-492"},{"name":"thread","value":"2113-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CharnwoodBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":78,"unknown":0,"total":91},"items":[{"uid":"60b21f498728775a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/945//#testresult/60b21f498728775a","status":"passed","time":{"start":1695518226965,"stop":1695518228967,"duration":2002}},{"uid":"467edcb1f21f350a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/944//#testresult/467edcb1f21f350a","status":"passed","time":{"start":1695431461306,"stop":1695431463149,"duration":1843}},{"uid":"9f703f9b5a73b421","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/943//#testresult/9f703f9b5a73b421","status":"passed","time":{"start":1695345190505,"stop":1695345191829,"duration":1324}},{"uid":"8c8d5c5e9504490d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/942//#testresult/8c8d5c5e9504490d","status":"passed","time":{"start":1695258740870,"stop":1695258742729,"duration":1859}},{"uid":"8911cd6e501058e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/941//#testresult/8911cd6e501058e1","status":"passed","time":{"start":1695206123878,"stop":1695206125286,"duration":1408}},{"uid":"837689b8bf990c77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/939//#testresult/837689b8bf990c77","status":"passed","time":{"start":1695193583748,"stop":1695193584851,"duration":1103}},{"uid":"e85b7f70d64506ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/937//#testresult/e85b7f70d64506ff","status":"passed","time":{"start":1695172374681,"stop":1695172376238,"duration":1557}},{"uid":"b28f0672aa553a25","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/936//#testresult/b28f0672aa553a25","status":"passed","time":{"start":1695161879473,"stop":1695161880776,"duration":1303}},{"uid":"4c67095d16bdf615","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/935//#testresult/4c67095d16bdf615","status":"passed","time":{"start":1695159840271,"stop":1695159842120,"duration":1849}},{"uid":"15e5e4b6db759cc8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/932//#testresult/15e5e4b6db759cc8","status":"passed","time":{"start":1695156910971,"stop":1695156912268,"duration":1297}},{"uid":"b76550c9da30d5dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/930//#testresult/b76550c9da30d5dd","status":"passed","time":{"start":1695086038752,"stop":1695086040359,"duration":1607}},{"uid":"31982d060d7ec7d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/929//#testresult/31982d060d7ec7d","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1694999568792,"stop":1694999570252,"duration":1460}},{"uid":"89625a5276a3d371","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/928//#testresult/89625a5276a3d371","status":"passed","time":{"start":1694987805749,"stop":1694987807562,"duration":1813}},{"uid":"1a71fec14a1c8a20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/926//#testresult/1a71fec14a1c8a20","status":"passed","time":{"start":1694987649918,"stop":1694987652116,"duration":2198}},{"uid":"485fb5960bb47dd2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/922//#testresult/485fb5960bb47dd2","status":"passed","time":{"start":1694971592688,"stop":1694971594033,"duration":1345}},{"uid":"91a7b87faa8ce609","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/920//#testresult/91a7b87faa8ce609","status":"passed","time":{"start":1694913402560,"stop":1694913404450,"duration":1890}},{"uid":"d4fb506b5e03de68","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/919//#testresult/d4fb506b5e03de68","status":"passed","time":{"start":1694892713388,"stop":1694892714703,"duration":1315}},{"uid":"9021d4673e7f3e77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/917//#testresult/9021d4673e7f3e77","status":"passed","time":{"start":1694889716458,"stop":1694889717793,"duration":1335}},{"uid":"3b58f2ceea8d3dd7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/915//#testresult/3b58f2ceea8d3dd7","status":"passed","time":{"start":1694864578636,"stop":1694864579857,"duration":1221}},{"uid":"73499d0a6d5f9cbe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/913//#testresult/73499d0a6d5f9cbe","status":"passed","time":{"start":1694840269019,"stop":1694840270610,"duration":1591}}]},"tags":[]},"source":"545e5e3eb6e7055f.json","parameterValues":["CharnwoodBoroughCouncil"]}