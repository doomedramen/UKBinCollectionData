{"uid":"b4ae414260109c02","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1705105652583,"stop":1705105683466,"duration":30883},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fb3dfc07250>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb3def58eb0>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fb3f338a6e0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fb3dfc07250>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb3def58eb0>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fb3f338a6e0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1705105652583,"stop":1705105652583,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1705105652583,"stop":1705105683466,"duration":30883},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az802-515"},{"name":"thread","value":"2730-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":151,"unknown":0,"total":154},"items":[{"uid":"90232b458b5a9436","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1482//#testresult/90232b458b5a9436","status":"passed","time":{"start":1705019286291,"stop":1705019291783,"duration":5492}},{"uid":"ca22351773ecf6e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1478//#testresult/ca22351773ecf6e4","status":"passed","time":{"start":1704932842115,"stop":1704932845511,"duration":3396}},{"uid":"1acc57b93bcc518e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1472//#testresult/1acc57b93bcc518e","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704846490725,"stop":1704846521584,"duration":30859}},{"uid":"4073c1b8fdc126a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1456//#testresult/4073c1b8fdc126a9","status":"passed","time":{"start":1704760222188,"stop":1704760230515,"duration":8327}},{"uid":"8bb627e43cdfbb6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1452//#testresult/8bb627e43cdfbb6","status":"passed","time":{"start":1704711567818,"stop":1704711568424,"duration":606}},{"uid":"703e8864f302dbba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1450//#testresult/703e8864f302dbba","status":"passed","time":{"start":1704710791872,"stop":1704710792513,"duration":641}},{"uid":"da80c68f01c11b33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1448//#testresult/da80c68f01c11b33","status":"passed","time":{"start":1704710193393,"stop":1704710194067,"duration":674}},{"uid":"7d36e641bc4dcf22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1446//#testresult/7d36e641bc4dcf22","status":"passed","time":{"start":1704709699313,"stop":1704709700090,"duration":777}},{"uid":"4c634c006efe92b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1443//#testresult/4c634c006efe92b0","status":"passed","time":{"start":1704704182414,"stop":1704704183417,"duration":1003}},{"uid":"a73c4ab46a8952d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1441//#testresult/a73c4ab46a8952d","status":"passed","time":{"start":1704673843864,"stop":1704673848804,"duration":4940}},{"uid":"7236a196cefdbbf3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1426//#testresult/7236a196cefdbbf3","status":"passed","time":{"start":1704615509242,"stop":1704615510517,"duration":1275}},{"uid":"bb7c160864381c6d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1423//#testresult/bb7c160864381c6d","status":"passed","time":{"start":1704614831251,"stop":1704614832125,"duration":874}},{"uid":"7c8cfff50b8e2e58","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1420//#testresult/7c8cfff50b8e2e58","status":"passed","time":{"start":1704587565673,"stop":1704587569025,"duration":3352}},{"uid":"46f2a734c122f071","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1413//#testresult/46f2a734c122f071","status":"passed","time":{"start":1704542832213,"stop":1704542833348,"duration":1135}},{"uid":"9ae61a396d4908ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1408//#testresult/9ae61a396d4908ae","status":"passed","time":{"start":1704496288318,"stop":1704496289263,"duration":945}},{"uid":"b4f30febc2d81070","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1406//#testresult/b4f30febc2d81070","status":"passed","time":{"start":1704453494066,"stop":1704453495038,"duration":972}},{"uid":"3c195761223824b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1407//#testresult/3c195761223824b2","status":"passed","time":{"start":1704453491591,"stop":1704453492532,"duration":941}},{"uid":"62bef0e96af4028d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1405//#testresult/62bef0e96af4028d","status":"passed","time":{"start":1704452716580,"stop":1704452717414,"duration":834}},{"uid":"5db8581358f24c2e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1400//#testresult/5db8581358f24c2e","status":"passed","time":{"start":1704443833378,"stop":1704443834014,"duration":636}},{"uid":"be8b606928942b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1399//#testresult/be8b606928942b5","status":"passed","time":{"start":1704443410169,"stop":1704443411044,"duration":875}}]},"tags":[]},"source":"b4ae414260109c02.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}