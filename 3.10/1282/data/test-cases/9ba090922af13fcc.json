{"uid":"9ba090922af13fcc","name":"Validate Council Output [NewcastleCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a63cb1391c4aa4a9ce00ac5e7dcb85fb","time":{"start":1703207815728,"stop":1703207846451,"duration":30723},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa2c77e41f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa2b9a7f310>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa2b9a7f310>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa2c77e41f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa2b9a7f310>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa2b9a7f310>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1703207815729,"stop":1703207815729,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NewcastleCityCouncil using None and the None is set","time":{"start":1703207815729,"stop":1703207846450,"duration":30721},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1703207846450,"stop":1703207846450,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1703207846450,"stop":1703207846451,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1429-131"},{"name":"thread","value":"2683-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":0,"skipped":0,"passed":64,"unknown":0,"total":82},"items":[{"uid":"37da37853f839a58","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1281//#testresult/37da37853f839a58","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703121477601,"stop":1703121508047,"duration":30446}},{"uid":"8dce26385602889f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1280//#testresult/8dce26385602889f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703034307449,"stop":1703034338166,"duration":30717}},{"uid":"f8b2584e8b21679","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1279//#testresult/f8b2584e8b21679","status":"passed","time":{"start":1703024934406,"stop":1703024943138,"duration":8732}},{"uid":"3bcdc5373c45d05f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1276//#testresult/3bcdc5373c45d05f","status":"passed","time":{"start":1702948728284,"stop":1702948751798,"duration":23514}},{"uid":"db10d12242b8b8cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1275//#testresult/db10d12242b8b8cf","status":"passed","time":{"start":1702862377444,"stop":1702862386465,"duration":9021}},{"uid":"2ca848de69cb9da6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1274//#testresult/2ca848de69cb9da6","status":"passed","time":{"start":1702860014386,"stop":1702860029820,"duration":15434}},{"uid":"99bb446e4a82a99c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1272//#testresult/99bb446e4a82a99c","status":"passed","time":{"start":1702843563342,"stop":1702843572508,"duration":9166}},{"uid":"f17e320a7edd5008","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/f17e320a7edd5008","status":"passed","time":{"start":1702809397225,"stop":1702809408409,"duration":11184}},{"uid":"c5c0a9f1ed93a729","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/c5c0a9f1ed93a729","status":"passed","time":{"start":1702657179840,"stop":1702657207499,"duration":27659}},{"uid":"c5b0fbc30199a423","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/c5b0fbc30199a423","status":"passed","time":{"start":1702603195624,"stop":1702603204394,"duration":8770}},{"uid":"ca50fa2b86b4f53f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/ca50fa2b86b4f53f","status":"passed","time":{"start":1702540061553,"stop":1702540070296,"duration":8743}},{"uid":"b8848a69ee7bafb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1241//#testresult/b8848a69ee7bafb9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702516695113,"stop":1702516737648,"duration":42535}},{"uid":"f276382f5d73adda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1238//#testresult/f276382f5d73adda","status":"passed","time":{"start":1702447513568,"stop":1702447526439,"duration":12871}},{"uid":"7c4b8ea23065f610","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1237//#testresult/7c4b8ea23065f610","status":"passed","time":{"start":1702447451569,"stop":1702447465078,"duration":13509}},{"uid":"cef2beaa2495d261","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1236//#testresult/cef2beaa2495d261","status":"passed","time":{"start":1702430366534,"stop":1702430394774,"duration":28240}},{"uid":"9f4489eb0fc588ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1232//#testresult/9f4489eb0fc588ea","status":"passed","time":{"start":1702366511910,"stop":1702366522820,"duration":10910}},{"uid":"69bb7a20fe81a5db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1231//#testresult/69bb7a20fe81a5db","status":"passed","time":{"start":1702343972532,"stop":1702343983334,"duration":10802}},{"uid":"661e51b078f52510","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1229//#testresult/661e51b078f52510","status":"passed","time":{"start":1702257565780,"stop":1702257593997,"duration":28217}},{"uid":"4b91b783660b3c65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1228//#testresult/4b91b783660b3c65","status":"passed","time":{"start":1702171465406,"stop":1702171484492,"duration":19086}},{"uid":"cedcb8dccb59a873","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/cedcb8dccb59a873","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702084657526,"stop":1702084688045,"duration":30519}}]},"tags":[]},"source":"9ba090922af13fcc.json","parameterValues":["NewcastleCityCouncil","None","None"]}