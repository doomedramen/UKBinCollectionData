{"uid":"ee6d092b14f9a769","name":"Validate Council Output [HuntingdonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c2822894b8c5df9c3b14f6331988dcc1","time":{"start":1703121512998,"stop":1703121514171,"duration":1173},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f071ba87760>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f070c9ce4d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f070c9ce4d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f071ba87760>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f070c9ce4d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f070c9ce4d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: HuntingdonDistrictCouncil","time":{"start":1703121512998,"stop":1703121512999,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from HuntingdonDistrictCouncil using None and the None is set","time":{"start":1703121512999,"stop":1703121514168,"duration":1169},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1703121514168,"stop":1703121514168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1703121514169,"stop":1703121514171,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1016-625"},{"name":"thread","value":"2671-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"HuntingdonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":81,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":81},"items":[{"uid":"be208aa5e16dc5e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1280//#testresult/be208aa5e16dc5e5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703034347196,"stop":1703034349850,"duration":2654}},{"uid":"aa0ed0075ddc531a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1279//#testresult/aa0ed0075ddc531a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703024932384,"stop":1703024934380,"duration":1996}},{"uid":"1795766b8d33a19a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1276//#testresult/1795766b8d33a19a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702948772900,"stop":1702948774174,"duration":1274}},{"uid":"14ef42517db12a52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1275//#testresult/14ef42517db12a52","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702862676759,"stop":1702862677846,"duration":1087}},{"uid":"1437c01131445f7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1274//#testresult/1437c01131445f7b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702860034121,"stop":1702860035142,"duration":1021}},{"uid":"d5dd646ae9b30925","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1272//#testresult/d5dd646ae9b30925","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702843630237,"stop":1702843631413,"duration":1176}},{"uid":"e70a886de9498a48","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/e70a886de9498a48","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702809702133,"stop":1702809703642,"duration":1509}},{"uid":"ccfa3e1c54e9a457","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/ccfa3e1c54e9a457","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702657131627,"stop":1702657132667,"duration":1040}},{"uid":"3b1e44cb967a4a90","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/3b1e44cb967a4a90","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702603189792,"stop":1702603190873,"duration":1081}},{"uid":"dd714482047adfdb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/dd714482047adfdb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702540055774,"stop":1702540056921,"duration":1147}},{"uid":"8e466eab2d965f1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1241//#testresult/8e466eab2d965f1c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702516683900,"stop":1702516685141,"duration":1241}},{"uid":"b9c6c6866579e5c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1238//#testresult/b9c6c6866579e5c3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702447789243,"stop":1702447790863,"duration":1620}},{"uid":"825efcfe3cc531fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1237//#testresult/825efcfe3cc531fc","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702447445789,"stop":1702447446855,"duration":1066}},{"uid":"b37e689797721328","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1236//#testresult/b37e689797721328","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702430336620,"stop":1702430337657,"duration":1037}},{"uid":"36da5dbd8768a11c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1232//#testresult/36da5dbd8768a11c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702366503144,"stop":1702366504270,"duration":1126}},{"uid":"1aa5c9c24d34fa98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1231//#testresult/1aa5c9c24d34fa98","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702343965939,"stop":1702343967126,"duration":1187}},{"uid":"abd8928dd28f3b42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1229//#testresult/abd8928dd28f3b42","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702257553220,"stop":1702257554509,"duration":1289}},{"uid":"221c8554131ac2e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1228//#testresult/221c8554131ac2e3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702171417365,"stop":1702171418455,"duration":1090}},{"uid":"df5557a9e1e7bdd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/df5557a9e1e7bdd8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702084686516,"stop":1702084687717,"duration":1201}},{"uid":"84ca0cf44852c0ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1225//#testresult/84ca0cf44852c0ff","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702066730966,"stop":1702066732665,"duration":1699}}]},"tags":[]},"source":"ee6d092b14f9a769.json","parameterValues":["HuntingdonDistrictCouncil","None","None"]}