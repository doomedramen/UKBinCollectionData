{"uid":"be906af82a99129b","name":"Validate Council Output [EastRidingCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"db3e594df94ba6e24f9d458b81f7e5a4","time":{"start":1708043200527,"stop":1708043207117,"duration":6590},"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=121.0.6167.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5599ba610d93 <unknown>\n#1 0x5599ba2f4337 <unknown>\n#2 0x5599ba2f969a <unknown>\n#3 0x5599ba2fb96f <unknown>\n#4 0x5599ba2fba1c <unknown>\n#5 0x5599ba341a49 <unknown>\n#6 0x5599ba334574 <unknown>\n#7 0x5599ba362442 <unknown>\n#8 0x5599ba334028 <unknown>\n#9 0x5599ba36260e <unknown>\n#10 0x5599ba38112d <unknown>\n#11 0x5599ba3621e3 <unknown>\n#12 0x5599ba332135 <unknown>\n#13 0x5599ba33313e <unknown>\n#14 0x5599ba5d4e4b <unknown>\n#15 0x5599ba5d8dfa <unknown>\n#16 0x5599ba5c16d5 <unknown>\n#17 0x5599ba5d9a6f <unknown>\n#18 0x5599ba5a569f <unknown>\n#19 0x5599ba5fe098 <unknown>\n#20 0x5599ba5fe262 <unknown>\n#21 0x5599ba60ff34 <unknown>\n#22 0x7f2beb294ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb834a6ae60>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastRidingCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb834438700>, 'council': 'EastRidingCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/EastRidingCouncil.py:89: in parse_data\n    drop.select_by_visible_text(str(user_paon))\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/select.py:117: in select_by_visible_text\n    self._set_selected(opt)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/select.py:214: in _set_selected\n    option.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb833cb2b90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#20 0x5599ba5fe262 \\\\u003Cunknown>\\\\n#21 0x5599ba60ff34 \\\\u003Cunknown>\\\\n#22 0x7f2beb294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=121.0.6167.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5599ba610d93 <unknown>\nE       #1 0x5599ba2f4337 <unknown>\nE       #2 0x5599ba2f969a <unknown>\nE       #3 0x5599ba2fb96f <unknown>\nE       #4 0x5599ba2fba1c <unknown>\nE       #5 0x5599ba341a49 <unknown>\nE       #6 0x5599ba334574 <unknown>\nE       #7 0x5599ba362442 <unknown>\nE       #8 0x5599ba334028 <unknown>\nE       #9 0x5599ba36260e <unknown>\nE       #10 0x5599ba38112d <unknown>\nE       #11 0x5599ba3621e3 <unknown>\nE       #12 0x5599ba332135 <unknown>\nE       #13 0x5599ba33313e <unknown>\nE       #14 0x5599ba5d4e4b <unknown>\nE       #15 0x5599ba5d8dfa <unknown>\nE       #16 0x5599ba5c16d5 <unknown>\nE       #17 0x5599ba5d9a6f <unknown>\nE       #18 0x5599ba5a569f <unknown>\nE       #19 0x5599ba5fe098 <unknown>\nE       #20 0x5599ba5fe262 <unknown>\nE       #21 0x5599ba60ff34 <unknown>\nE       #22 0x7f2beb294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=121.0.6167.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5599ba610d93 <unknown>\n#1 0x5599ba2f4337 <unknown>\n#2 0x5599ba2f969a <unknown>\n#3 0x5599ba2fb96f <unknown>\n#4 0x5599ba2fba1c <unknown>\n#5 0x5599ba341a49 <unknown>\n#6 0x5599ba334574 <unknown>\n#7 0x5599ba362442 <unknown>\n#8 0x5599ba334028 <unknown>\n#9 0x5599ba36260e <unknown>\n#10 0x5599ba38112d <unknown>\n#11 0x5599ba3621e3 <unknown>\n#12 0x5599ba332135 <unknown>\n#13 0x5599ba33313e <unknown>\n#14 0x5599ba5d4e4b <unknown>\n#15 0x5599ba5d8dfa <unknown>\n#16 0x5599ba5c16d5 <unknown>\n#17 0x5599ba5d9a6f <unknown>\n#18 0x5599ba5a569f <unknown>\n#19 0x5599ba5fe098 <unknown>\n#20 0x5599ba5fe262 <unknown>\n#21 0x5599ba60ff34 <unknown>\n#22 0x7f2beb294ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb834a6ae60>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastRidingCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb834438700>, 'council': 'EastRidingCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/EastRidingCouncil.py:89: in parse_data\n    drop.select_by_visible_text(str(user_paon))\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/select.py:117: in select_by_visible_text\n    self._set_selected(opt)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/select.py:214: in _set_selected\n    option.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb833cb2b90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#20 0x5599ba5fe262 \\\\u003Cunknown>\\\\n#21 0x5599ba60ff34 \\\\u003Cunknown>\\\\n#22 0x7f2beb294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=121.0.6167.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5599ba610d93 <unknown>\nE       #1 0x5599ba2f4337 <unknown>\nE       #2 0x5599ba2f969a <unknown>\nE       #3 0x5599ba2fb96f <unknown>\nE       #4 0x5599ba2fba1c <unknown>\nE       #5 0x5599ba341a49 <unknown>\nE       #6 0x5599ba334574 <unknown>\nE       #7 0x5599ba362442 <unknown>\nE       #8 0x5599ba334028 <unknown>\nE       #9 0x5599ba36260e <unknown>\nE       #10 0x5599ba38112d <unknown>\nE       #11 0x5599ba3621e3 <unknown>\nE       #12 0x5599ba332135 <unknown>\nE       #13 0x5599ba33313e <unknown>\nE       #14 0x5599ba5d4e4b <unknown>\nE       #15 0x5599ba5d8dfa <unknown>\nE       #16 0x5599ba5c16d5 <unknown>\nE       #17 0x5599ba5d9a6f <unknown>\nE       #18 0x5599ba5a569f <unknown>\nE       #19 0x5599ba5fe098 <unknown>\nE       #20 0x5599ba5fe262 <unknown>\nE       #21 0x5599ba60ff34 <unknown>\nE       #22 0x7f2beb294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Given the council: EastRidingCouncil","time":{"start":1708043200527,"stop":1708043200527,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from EastRidingCouncil using local and the http://selenium:4444 is set","time":{"start":1708043200528,"stop":1708043207117,"duration":6589},"status":"failed","statusMessage":"Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=121.0.6167.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5599ba610d93 <unknown>\n#1 0x5599ba2f4337 <unknown>\n#2 0x5599ba2f969a <unknown>\n#3 0x5599ba2fb96f <unknown>\n#4 0x5599ba2fba1c <unknown>\n#5 0x5599ba341a49 <unknown>\n#6 0x5599ba334574 <unknown>\n#7 0x5599ba362442 <unknown>\n#8 0x5599ba334028 <unknown>\n#9 0x5599ba36260e <unknown>\n#10 0x5599ba38112d <unknown>\n#11 0x5599ba3621e3 <unknown>\n#12 0x5599ba332135 <unknown>\n#13 0x5599ba33313e <unknown>\n#14 0x5599ba5d4e4b <unknown>\n#15 0x5599ba5d8dfa <unknown>\n#16 0x5599ba5c16d5 <unknown>\n#17 0x5599ba5d9a6f <unknown>\n#18 0x5599ba5a569f <unknown>\n#19 0x5599ba5fe098 <unknown>\n#20 0x5599ba5fe262 <unknown>\n#21 0x5599ba60ff34 <unknown>\n#22 0x7f2beb294ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=121.0.6167.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5599ba610d93 <unknown>\n#1 0x5599ba2f4337 <unknown>\n#2 0x5599ba2f969a <unknown>\n#3 0x5599ba2fb96f <unknown>\n#4 0x5599ba2fba1c <unknown>\n#5 0x5599ba341a49 <unknown>\n#6 0x5599ba334574 <unknown>\n#7 0x5599ba362442 <unknown>\n#8 0x5599ba334028 <unknown>\n#9 0x5599ba36260e <unknown>\n#10 0x5599ba38112d <unknown>\n#11 0x5599ba3621e3 <unknown>\n#12 0x5599ba332135 <unknown>\n#13 0x5599ba33313e <unknown>\n#14 0x5599ba5d4e4b <unknown>\n#15 0x5599ba5d8dfa <unknown>\n#16 0x5599ba5c16d5 <unknown>\n#17 0x5599ba5d9a6f <unknown>\n#18 0x5599ba5a569f <unknown>\n#19 0x5599ba5fe098 <unknown>\n#20 0x5599ba5fe262 <unknown>\n#21 0x5599ba60ff34 <unknown>\n#22 0x7f2beb294ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az773-747"},{"name":"thread","value":"2722-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastRidingCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":90,"broken":0,"skipped":0,"passed":32,"unknown":0,"total":122},"items":[{"uid":"383121ae52ee87f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1562//#testresult/383121ae52ee87f3","status":"passed","time":{"start":1707956783847,"stop":1707956788107,"duration":4260}},{"uid":"db6be8e2a0a26038","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1561//#testresult/db6be8e2a0a26038","status":"passed","time":{"start":1707870342615,"stop":1707870347636,"duration":5021}},{"uid":"335cba2e6c180bde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1560//#testresult/335cba2e6c180bde","status":"passed","time":{"start":1707783998852,"stop":1707784004228,"duration":5376}},{"uid":"62ccfd60b50045f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1559//#testresult/62ccfd60b50045f0","status":"passed","time":{"start":1707697615285,"stop":1707697619744,"duration":4459}},{"uid":"ca6abd74c7f7e176","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1556//#testresult/ca6abd74c7f7e176","status":"passed","time":{"start":1707611308588,"stop":1707611312946,"duration":4358}},{"uid":"12c0571ea1e2faf9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1554//#testresult/12c0571ea1e2faf9","status":"passed","time":{"start":1707524692972,"stop":1707524699436,"duration":6464}},{"uid":"529f8c4ad9ee9955","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1553//#testresult/529f8c4ad9ee9955","status":"passed","time":{"start":1707438320310,"stop":1707438326128,"duration":5818}},{"uid":"13c05349a4773a7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1552//#testresult/13c05349a4773a7e","status":"passed","time":{"start":1707351945399,"stop":1707351950091,"duration":4692}},{"uid":"b06001846bc510b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1551//#testresult/b06001846bc510b4","status":"passed","time":{"start":1707265486606,"stop":1707265495427,"duration":8821}},{"uid":"ced70c3c2c25b2c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1549//#testresult/ced70c3c2c25b2c1","status":"passed","time":{"start":1707179143107,"stop":1707179147464,"duration":4357}},{"uid":"92c0bcae35f8e5cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1548//#testresult/92c0bcae35f8e5cb","status":"passed","time":{"start":1707092920496,"stop":1707092924914,"duration":4418}},{"uid":"744d5ca9af704fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1547//#testresult/744d5ca9af704fe","status":"passed","time":{"start":1707006511094,"stop":1707006519862,"duration":8768}},{"uid":"80fd1264d92fb941","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1545//#testresult/80fd1264d92fb941","status":"passed","time":{"start":1706941881761,"stop":1706941886461,"duration":4700}},{"uid":"4078202ad86868dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1544//#testresult/4078202ad86868dd","status":"passed","time":{"start":1706938959005,"stop":1706938968050,"duration":9045}},{"uid":"3ad4ac43a5f44d8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1542//#testresult/3ad4ac43a5f44d8a","status":"passed","time":{"start":1706938446205,"stop":1706938457890,"duration":11685}},{"uid":"ce99668734a2d7b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1541//#testresult/ce99668734a2d7b1","status":"passed","time":{"start":1706919983195,"stop":1706919993695,"duration":10500}},{"uid":"b2588485dc45452e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1540//#testresult/b2588485dc45452e","status":"passed","time":{"start":1706833537434,"stop":1706833541769,"duration":4335}},{"uid":"99cd20ac5d8fbe65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1538//#testresult/99cd20ac5d8fbe65","status":"passed","time":{"start":1706747229118,"stop":1706747233485,"duration":4367}},{"uid":"490c5fbe25897fc9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1537//#testresult/490c5fbe25897fc9","status":"failed","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.224); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x562108c9bf83 <unknown>\n#1 0x562108954cf7 <unknown>\n#2 0x56210895b2a3 <unknown>\n#3 0x56210895d798 <unknown>\n#4 0x56210895d8ec <unknown>\n#5 0x56210899e6e2 <unknown>\n#6 0x5621089ce0b2 <unknown>\n#7 0x562108997b49 <unknown>\n#8 0x5621089ce4ce <unknown>\n#9 0x5621089ed006 <unknown>\n#10 0x5621089cde53 <unknown>\n#11 0x562108995dd4 <unknown>\n#12 0x5621089971de <unknown>\n#13 0x562108c60531 <unknown>\n#14 0x562108c64455 <unknown>\n#15 0x562108c4cf55 <unknown>\n#16 0x562108c650ef <unknown>\n#17 0x562108c3099f <unknown>\n#18 0x562108c89008 <unknown>\n#19 0x562108c891d7 <unknown>\n#20 0x562108c9b124 <unknown>\n#21 0x7f70f7094ac3 <unknown>","time":{"start":1706660833290,"stop":1706660839542,"duration":6252}},{"uid":"87a7e9263ed7524c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1535//#testresult/87a7e9263ed7524c","status":"passed","time":{"start":1706574343031,"stop":1706574351519,"duration":8488}}]},"tags":[]},"source":"be906af82a99129b.json","parameterValues":["EastRidingCouncil","local","http://selenium:4444"]}