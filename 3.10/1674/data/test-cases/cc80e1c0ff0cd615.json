{"uid":"cc80e1c0ff0cd615","name":"Validate Council Output [CroydonCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"45037cd07f0522bb0563bf59883b0382","time":{"start":1712795208315,"stop":1712795213123,"duration":4808},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"fixturefunc = <function scrape_step at 0x7fcac29ff250>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fcad569ca60>, 'council': 'CroydonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7fcac253ffa0>, page = ''\nkwargs = {'headless': True, 'paon': '13', 'postcode': 'SE25 5DW', 'uprn': None, ...}\ns = <requests.sessions.Session object at 0x7fcac253c040>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '854db6a9a31c4003c5a1d3afd3dd850f889bafac', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:274: AttributeError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"fixturefunc = <function scrape_step at 0x7fcac29ff250>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fcad569ca60>, 'council': 'CroydonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7fcac253ffa0>, page = ''\nkwargs = {'headless': True, 'paon': '13', 'postcode': 'SE25 5DW', 'uprn': None, ...}\ns = <requests.sessions.Session object at 0x7fcac253c040>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '854db6a9a31c4003c5a1d3afd3dd850f889bafac', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:274: AttributeError","steps":[{"name":"Given the council: CroydonCouncil","time":{"start":1712795208315,"stop":1712795208316,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from CroydonCouncil using None and the None is set","time":{"start":1712795208316,"stop":1712795213123,"duration":4807},"status":"failed","statusMessage":"'NoneType' object has no attribute 'attrs'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'attrs'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1532-673"},{"name":"thread","value":"2765-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":139,"broken":0,"skipped":0,"passed":102,"unknown":0,"total":241},"items":[{"uid":"6a3d32440c4f32f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1673//#testresult/6a3d32440c4f32f0","status":"passed","time":{"start":1712708752822,"stop":1712708757275,"duration":4453}},{"uid":"d977a6c7e7ee9029","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1671//#testresult/d977a6c7e7ee9029","status":"passed","time":{"start":1712700310831,"stop":1712700317980,"duration":7149}},{"uid":"19daf1b9ab9cbd53","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1668//#testresult/19daf1b9ab9cbd53","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1712622383478,"stop":1712622385139,"duration":1661}},{"uid":"f17d2c339fc8008b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1667//#testresult/f17d2c339fc8008b","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1712536046691,"stop":1712536048129,"duration":1438}},{"uid":"11b34f326d6eda20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1666//#testresult/11b34f326d6eda20","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1712449773282,"stop":1712449774758,"duration":1476}},{"uid":"ae4731ce2bdf3fc8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1665//#testresult/ae4731ce2bdf3fc8","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1712363121254,"stop":1712363122817,"duration":1563}},{"uid":"4d06be1a07fdf24a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1664//#testresult/4d06be1a07fdf24a","status":"passed","time":{"start":1712276771747,"stop":1712276776957,"duration":5210}},{"uid":"75ba70934dbd936","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1660//#testresult/75ba70934dbd936","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1712190448007,"stop":1712190449628,"duration":1621}},{"uid":"64b870f33e9e3a1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1657//#testresult/64b870f33e9e3a1a","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1712136875131,"stop":1712136876456,"duration":1325}},{"uid":"b05df6c42b9b38ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1655//#testresult/b05df6c42b9b38ab","status":"passed","time":{"start":1712103938606,"stop":1712103943730,"duration":5124}},{"uid":"bca7179c44e890ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1654//#testresult/bca7179c44e890ef","status":"passed","time":{"start":1712017569727,"stop":1712017574800,"duration":5073}},{"uid":"b9cf3b0070c5613d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1653//#testresult/b9cf3b0070c5613d","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1711931396432,"stop":1711931398079,"duration":1647}},{"uid":"393e2c8903b6acc5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1652//#testresult/393e2c8903b6acc5","status":"passed","time":{"start":1711844954067,"stop":1711844959341,"duration":5274}},{"uid":"7780636b83c16ec3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1649//#testresult/7780636b83c16ec3","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1711671956062,"stop":1711671957693,"duration":1631}},{"uid":"fbe390d0cd08e9d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1648//#testresult/fbe390d0cd08e9d9","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1711585559849,"stop":1711585565248,"duration":5399}},{"uid":"9ec564c50afc8f95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1646//#testresult/9ec564c50afc8f95","status":"passed","time":{"start":1711499124767,"stop":1711499130473,"duration":5706}},{"uid":"d86a9761b5d4b03a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1645//#testresult/d86a9761b5d4b03a","status":"passed","time":{"start":1711412710174,"stop":1711412716258,"duration":6084}},{"uid":"64b6d704b23c001e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1641//#testresult/64b6d704b23c001e","status":"passed","time":{"start":1711326426721,"stop":1711326432246,"duration":5525}},{"uid":"a00fde7fdca18324","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1634//#testresult/a00fde7fdca18324","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1711240115362,"stop":1711240116576,"duration":1214}},{"uid":"33c86ab4c401cc7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1626//#testresult/33c86ab4c401cc7b","status":"passed","time":{"start":1711153496571,"stop":1711153501308,"duration":4737}}]},"tags":[]},"source":"cc80e1c0ff0cd615.json","parameterValues":["CroydonCouncil","None","None"]}