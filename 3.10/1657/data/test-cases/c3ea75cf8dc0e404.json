{"uid":"c3ea75cf8dc0e404","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1712136873456,"stop":1712136893760,"duration":20304},"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=123.0.6312.58)\nStacktrace:\n#0 0x55b87ae718a3 <unknown>\n#1 0x55b87ab67717 <unknown>\n#2 0x55b87abac70f <unknown>\n#3 0x55b87abaab60 <unknown>\n#4 0x55b87abd45a2 <unknown>\n#5 0x55b87aba6e98 <unknown>\n#6 0x55b87abd476e <unknown>\n#7 0x55b87abf2c19 <unknown>\n#8 0x55b87abd4343 <unknown>\n#9 0x55b87aba5593 <unknown>\n#10 0x55b87aba5f5e <unknown>\n#11 0x55b87ae3588b <unknown>\n#12 0x55b87ae397e5 <unknown>\n#13 0x55b87ae235b1 <unknown>\n#14 0x55b87ae3a372 <unknown>\n#15 0x55b87ae088bf <unknown>\n#16 0x55b87ae60768 <unknown>\n#17 0x55b87ae6093b <unknown>\n#18 0x55b87ae709f4 <unknown>\n#19 0x7eff18694ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f1d1546aef0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f1d152ccaf0>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1d15303f10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55b87ae6093b \\\\u003Cunknown>\\\\n#18 0x55b87ae709f4 \\\\u003Cunknown>\\\\n#19 0x7eff18694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=123.0.6312.58)\nE       Stacktrace:\nE       #0 0x55b87ae718a3 <unknown>\nE       #1 0x55b87ab67717 <unknown>\nE       #2 0x55b87abac70f <unknown>\nE       #3 0x55b87abaab60 <unknown>\nE       #4 0x55b87abd45a2 <unknown>\nE       #5 0x55b87aba6e98 <unknown>\nE       #6 0x55b87abd476e <unknown>\nE       #7 0x55b87abf2c19 <unknown>\nE       #8 0x55b87abd4343 <unknown>\nE       #9 0x55b87aba5593 <unknown>\nE       #10 0x55b87aba5f5e <unknown>\nE       #11 0x55b87ae3588b <unknown>\nE       #12 0x55b87ae397e5 <unknown>\nE       #13 0x55b87ae235b1 <unknown>\nE       #14 0x55b87ae3a372 <unknown>\nE       #15 0x55b87ae088bf <unknown>\nE       #16 0x55b87ae60768 <unknown>\nE       #17 0x55b87ae6093b <unknown>\nE       #18 0x55b87ae709f4 <unknown>\nE       #19 0x7eff18694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=123.0.6312.58)\nStacktrace:\n#0 0x55b87ae718a3 <unknown>\n#1 0x55b87ab67717 <unknown>\n#2 0x55b87abac70f <unknown>\n#3 0x55b87abaab60 <unknown>\n#4 0x55b87abd45a2 <unknown>\n#5 0x55b87aba6e98 <unknown>\n#6 0x55b87abd476e <unknown>\n#7 0x55b87abf2c19 <unknown>\n#8 0x55b87abd4343 <unknown>\n#9 0x55b87aba5593 <unknown>\n#10 0x55b87aba5f5e <unknown>\n#11 0x55b87ae3588b <unknown>\n#12 0x55b87ae397e5 <unknown>\n#13 0x55b87ae235b1 <unknown>\n#14 0x55b87ae3a372 <unknown>\n#15 0x55b87ae088bf <unknown>\n#16 0x55b87ae60768 <unknown>\n#17 0x55b87ae6093b <unknown>\n#18 0x55b87ae709f4 <unknown>\n#19 0x7eff18694ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f1d1546aef0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f1d152ccaf0>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1d15303f10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55b87ae6093b \\\\u003Cunknown>\\\\n#18 0x55b87ae709f4 \\\\u003Cunknown>\\\\n#19 0x7eff18694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=123.0.6312.58)\nE       Stacktrace:\nE       #0 0x55b87ae718a3 <unknown>\nE       #1 0x55b87ab67717 <unknown>\nE       #2 0x55b87abac70f <unknown>\nE       #3 0x55b87abaab60 <unknown>\nE       #4 0x55b87abd45a2 <unknown>\nE       #5 0x55b87aba6e98 <unknown>\nE       #6 0x55b87abd476e <unknown>\nE       #7 0x55b87abf2c19 <unknown>\nE       #8 0x55b87abd4343 <unknown>\nE       #9 0x55b87aba5593 <unknown>\nE       #10 0x55b87aba5f5e <unknown>\nE       #11 0x55b87ae3588b <unknown>\nE       #12 0x55b87ae397e5 <unknown>\nE       #13 0x55b87ae235b1 <unknown>\nE       #14 0x55b87ae3a372 <unknown>\nE       #15 0x55b87ae088bf <unknown>\nE       #16 0x55b87ae60768 <unknown>\nE       #17 0x55b87ae6093b <unknown>\nE       #18 0x55b87ae709f4 <unknown>\nE       #19 0x7eff18694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1712136873456,"stop":1712136873457,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1712136873457,"stop":1712136893760,"duration":20303},"status":"failed","statusMessage":"Message: element not interactable\n  (Session info: chrome-headless-shell=123.0.6312.58)\nStacktrace:\n#0 0x55b87ae718a3 <unknown>\n#1 0x55b87ab67717 <unknown>\n#2 0x55b87abac70f <unknown>\n#3 0x55b87abaab60 <unknown>\n#4 0x55b87abd45a2 <unknown>\n#5 0x55b87aba6e98 <unknown>\n#6 0x55b87abd476e <unknown>\n#7 0x55b87abf2c19 <unknown>\n#8 0x55b87abd4343 <unknown>\n#9 0x55b87aba5593 <unknown>\n#10 0x55b87aba5f5e <unknown>\n#11 0x55b87ae3588b <unknown>\n#12 0x55b87ae397e5 <unknown>\n#13 0x55b87ae235b1 <unknown>\n#14 0x55b87ae3a372 <unknown>\n#15 0x55b87ae088bf <unknown>\n#16 0x55b87ae60768 <unknown>\n#17 0x55b87ae6093b <unknown>\n#18 0x55b87ae709f4 <unknown>\n#19 0x7eff18694ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=123.0.6312.58)\nStacktrace:\n#0 0x55b87ae718a3 <unknown>\n#1 0x55b87ab67717 <unknown>\n#2 0x55b87abac70f <unknown>\n#3 0x55b87abaab60 <unknown>\n#4 0x55b87abd45a2 <unknown>\n#5 0x55b87aba6e98 <unknown>\n#6 0x55b87abd476e <unknown>\n#7 0x55b87abf2c19 <unknown>\n#8 0x55b87abd4343 <unknown>\n#9 0x55b87aba5593 <unknown>\n#10 0x55b87aba5f5e <unknown>\n#11 0x55b87ae3588b <unknown>\n#12 0x55b87ae397e5 <unknown>\n#13 0x55b87ae235b1 <unknown>\n#14 0x55b87ae3a372 <unknown>\n#15 0x55b87ae088bf <unknown>\n#16 0x55b87ae60768 <unknown>\n#17 0x55b87ae6093b <unknown>\n#18 0x55b87ae709f4 <unknown>\n#19 0x7eff18694ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1498-885"},{"name":"thread","value":"2776-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":55,"broken":0,"skipped":0,"passed":95,"unknown":0,"total":150},"items":[{"uid":"141501898e44f171","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1655//#testresult/141501898e44f171","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1712103932750,"stop":1712103963289,"duration":30539}},{"uid":"31611d40dd6b1f40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1654//#testresult/31611d40dd6b1f40","status":"passed","time":{"start":1712017567714,"stop":1712017606546,"duration":38832}},{"uid":"66ba0aa32ad874fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1653//#testresult/66ba0aa32ad874fa","status":"passed","time":{"start":1711931393707,"stop":1711931437005,"duration":43298}},{"uid":"ee367e302948513","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1652//#testresult/ee367e302948513","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55af546808a3 <unknown>\n#1 0x55af543768c6 <unknown>\n#2 0x55af543c1618 <unknown>\n#3 0x55af543c16d1 <unknown>\n#4 0x55af54404744 <unknown>\n#5 0x55af543e35cd <unknown>\n#6 0x55af54401c19 <unknown>\n#7 0x55af543e3343 <unknown>\n#8 0x55af543b4593 <unknown>\n#9 0x55af543b4f5e <unknown>\n#10 0x55af5464488b <unknown>\n#11 0x55af546487e5 <unknown>\n#12 0x55af546325b1 <unknown>\n#13 0x55af54649372 <unknown>\n#14 0x55af546178bf <unknown>\n#15 0x55af5466f768 <unknown>\n#16 0x55af5466f93b <unknown>\n#17 0x55af5467f9f4 <unknown>\n#18 0x7fad28a94ac3 <unknown>","time":{"start":1711844951544,"stop":1711845026639,"duration":75095}},{"uid":"89760df895cf803b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1649//#testresult/89760df895cf803b","status":"passed","time":{"start":1711671954521,"stop":1711671976046,"duration":21525}},{"uid":"9d84b011d3850fb2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1648//#testresult/9d84b011d3850fb2","status":"passed","time":{"start":1711585557455,"stop":1711585582877,"duration":25422}},{"uid":"8c3c92d302a3940d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1646//#testresult/8c3c92d302a3940d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561e04468f33 <unknown>\n#1 0x561e04160ce6 <unknown>\n#2 0x561e041abe48 <unknown>\n#3 0x561e041abf01 <unknown>\n#4 0x561e041ef3f4 <unknown>\n#5 0x561e041cdedd <unknown>\n#6 0x561e041ec899 <unknown>\n#7 0x561e041cdc53 <unknown>\n#8 0x561e0419edb3 <unknown>\n#9 0x561e0419f77e <unknown>\n#10 0x561e0442e86b <unknown>\n#11 0x561e04432885 <unknown>\n#12 0x561e0441c181 <unknown>\n#13 0x561e04433412 <unknown>\n#14 0x561e0440025f <unknown>\n#15 0x561e04457528 <unknown>\n#16 0x561e04457723 <unknown>\n#17 0x561e044680e4 <unknown>\n#18 0x7f35cd494ac3 <unknown>","time":{"start":1711499121963,"stop":1711499205968,"duration":84005}},{"uid":"9699a0f96b9b9060","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1645//#testresult/9699a0f96b9b9060","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5597ab8f4f33 <unknown>\n#1 0x5597ab5ecce6 <unknown>\n#2 0x5597ab637e48 <unknown>\n#3 0x5597ab637f01 <unknown>\n#4 0x5597ab67b3f4 <unknown>\n#5 0x5597ab659edd <unknown>\n#6 0x5597ab678899 <unknown>\n#7 0x5597ab659c53 <unknown>\n#8 0x5597ab62adb3 <unknown>\n#9 0x5597ab62b77e <unknown>\n#10 0x5597ab8ba86b <unknown>\n#11 0x5597ab8be885 <unknown>\n#12 0x5597ab8a8181 <unknown>\n#13 0x5597ab8bf412 <unknown>\n#14 0x5597ab88c25f <unknown>\n#15 0x5597ab8e3528 <unknown>\n#16 0x5597ab8e3723 <unknown>\n#17 0x5597ab8f40e4 <unknown>\n#18 0x7f89d3294ac3 <unknown>","time":{"start":1711412703637,"stop":1711412776672,"duration":73035}},{"uid":"1152ec41058168ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1641//#testresult/1152ec41058168ee","status":"passed","time":{"start":1711326424323,"stop":1711326448989,"duration":24666}},{"uid":"912c4df460ab53cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1634//#testresult/912c4df460ab53cb","status":"passed","time":{"start":1711240114065,"stop":1711240159082,"duration":45017}},{"uid":"6e6963cba0bc69e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1626//#testresult/6e6963cba0bc69e7","status":"passed","time":{"start":1711153517940,"stop":1711153542377,"duration":24437}},{"uid":"4dde45b617cfccb2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1625//#testresult/4dde45b617cfccb2","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d3ed0f1f33 <unknown>\n#1 0x55d3ecde9ce6 <unknown>\n#2 0x55d3ece34e48 <unknown>\n#3 0x55d3ece34f01 <unknown>\n#4 0x55d3ece783f4 <unknown>\n#5 0x55d3ece56edd <unknown>\n#6 0x55d3ece75899 <unknown>\n#7 0x55d3ece56c53 <unknown>\n#8 0x55d3ece27db3 <unknown>\n#9 0x55d3ece2877e <unknown>\n#10 0x55d3ed0b786b <unknown>\n#11 0x55d3ed0bb885 <unknown>\n#12 0x55d3ed0a5181 <unknown>\n#13 0x55d3ed0bc412 <unknown>\n#14 0x55d3ed08925f <unknown>\n#15 0x55d3ed0e0528 <unknown>\n#16 0x55d3ed0e0723 <unknown>\n#17 0x55d3ed0f10e4 <unknown>\n#18 0x7f4531294ac3 <unknown>","time":{"start":1711067140760,"stop":1711067210049,"duration":69289}},{"uid":"1ea73c23c0baea87","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1624//#testresult/1ea73c23c0baea87","status":"passed","time":{"start":1710980813711,"stop":1710980836708,"duration":22997}},{"uid":"b586e7c4159219a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1621//#testresult/b586e7c4159219a9","status":"passed","time":{"start":1710970921032,"stop":1710970936428,"duration":15396}},{"uid":"71a32dbf0c5f44b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1619//#testresult/71a32dbf0c5f44b9","status":"passed","time":{"start":1710894341169,"stop":1710894354714,"duration":13545}},{"uid":"f8f7498a5b831e40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1615//#testresult/f8f7498a5b831e40","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1710807952869,"stop":1710807976068,"duration":23199}},{"uid":"9e6c3b1c76ef2678","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1609//#testresult/9e6c3b1c76ef2678","status":"passed","time":{"start":1710721674950,"stop":1710721694854,"duration":19904}},{"uid":"fa04517702aaa530","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1608//#testresult/fa04517702aaa530","status":"passed","time":{"start":1710635336281,"stop":1710635354995,"duration":18714}},{"uid":"a53e789304bda091","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1607//#testresult/a53e789304bda091","status":"passed","time":{"start":1710548657662,"stop":1710548677260,"duration":19598}},{"uid":"670eba3b8c24cd28","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1605//#testresult/670eba3b8c24cd28","status":"passed","time":{"start":1710462336226,"stop":1710462353911,"duration":17685}}]},"tags":[]},"source":"c3ea75cf8dc0e404.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}