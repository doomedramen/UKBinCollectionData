{"uid":"5b9fb10c8ca55ec8","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1700874940330,"stop":1700874971243,"duration":30913},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f53bc34b0a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f53b6d16200>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f53bcf8a770>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f53bc34b0a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f53b6d16200>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f53bcf8a770>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1700874940330,"stop":1700874940331,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1700874940331,"stop":1700874971243,"duration":30912},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az847-548"},{"name":"thread","value":"2764-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":23,"unknown":0,"total":24},"items":[{"uid":"184741c557807286","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1146//#testresult/184741c557807286","status":"passed","time":{"start":1700788611872,"stop":1700788612995,"duration":1123}},{"uid":"2b17ed0f9a6642aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1145//#testresult/2b17ed0f9a6642aa","status":"passed","time":{"start":1700702312738,"stop":1700702317104,"duration":4366}},{"uid":"1fa8ac843af4ebc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1143//#testresult/1fa8ac843af4ebc","status":"passed","time":{"start":1700646383050,"stop":1700646384314,"duration":1264}},{"uid":"bb0098c2d567b3c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1141//#testresult/bb0098c2d567b3c9","status":"passed","time":{"start":1700616071080,"stop":1700616072846,"duration":1766}},{"uid":"f34bb53bbac09a93","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1136//#testresult/f34bb53bbac09a93","status":"passed","time":{"start":1700529718268,"stop":1700529720586,"duration":2318}},{"uid":"129f108bff447374","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/129f108bff447374","status":"passed","time":{"start":1700443190267,"stop":1700443192638,"duration":2371}},{"uid":"da8efe6effe9399e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/da8efe6effe9399e","status":"passed","time":{"start":1700357006694,"stop":1700357008422,"duration":1728}},{"uid":"1f6a51d4625c4768","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1133//#testresult/1f6a51d4625c4768","status":"passed","time":{"start":1700270324942,"stop":1700270325973,"duration":1031}},{"uid":"9375a86f57ddae09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1132//#testresult/9375a86f57ddae09","status":"passed","time":{"start":1700183940859,"stop":1700183941753,"duration":894}},{"uid":"5142a7fd649f3f5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1131//#testresult/5142a7fd649f3f5c","status":"passed","time":{"start":1700097558707,"stop":1700097559971,"duration":1264}},{"uid":"e926b8cb0b2d4c94","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1129//#testresult/e926b8cb0b2d4c94","status":"passed","time":{"start":1700011162250,"stop":1700011162995,"duration":745}},{"uid":"ec34ddd3db2656c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1128//#testresult/ec34ddd3db2656c1","status":"passed","time":{"start":1699924756751,"stop":1699924757762,"duration":1011}},{"uid":"5a8fe8357fab1baf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1127//#testresult/5a8fe8357fab1baf","status":"passed","time":{"start":1699838441216,"stop":1699838442057,"duration":841}},{"uid":"92ac476c225b0acd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1126//#testresult/92ac476c225b0acd","status":"passed","time":{"start":1699752097365,"stop":1699752098093,"duration":728}},{"uid":"49fd84010b5fc2b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1125//#testresult/49fd84010b5fc2b1","status":"passed","time":{"start":1699669524613,"stop":1699669526706,"duration":2093}},{"uid":"f212fcb1bc96fbe0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1124//#testresult/f212fcb1bc96fbe0","status":"passed","time":{"start":1699578974899,"stop":1699578976018,"duration":1119}},{"uid":"b45ec03fc0012b78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1123//#testresult/b45ec03fc0012b78","status":"passed","time":{"start":1699492647520,"stop":1699492653184,"duration":5664}},{"uid":"a9f301511a9dadca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1121//#testresult/a9f301511a9dadca","status":"passed","time":{"start":1699481276694,"stop":1699481278072,"duration":1378}},{"uid":"e3e636bd66d7f5ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1117//#testresult/e3e636bd66d7f5ad","status":"passed","time":{"start":1699445180826,"stop":1699445181521,"duration":695}},{"uid":"1f6eb6bd3016d4ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1115//#testresult/1f6eb6bd3016d4ec","status":"passed","time":{"start":1699406278169,"stop":1699406279187,"duration":1018}}]},"tags":[]},"source":"5b9fb10c8ca55ec8.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}