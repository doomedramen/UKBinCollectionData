{"uid":"1b0e70f439954d14","name":"Validate Council Output [WealdenDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b3ddf98c8383031d63a6bd27b361f868","time":{"start":1700875044340,"stop":1700875045785,"duration":1445},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb6f82bf400>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb6e5db6f20>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb6e5db6f20>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb6f82bf400>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb6e5db6f20>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb6e5db6f20>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: WealdenDistrictCouncil","time":{"start":1700875044340,"stop":1700875044340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WealdenDistrictCouncil using None and the None is set","time":{"start":1700875044340,"stop":1700875045782,"duration":1442},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1700875045783,"stop":1700875045783,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1700875045783,"stop":1700875045785,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az847-548"},{"name":"thread","value":"2761-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WealdenDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":23,"unknown":0,"total":24},"items":[{"uid":"525607a0c3573bb5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1146//#testresult/525607a0c3573bb5","status":"passed","time":{"start":1700788677193,"stop":1700788679223,"duration":2030}},{"uid":"99fddd9b406cc89f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1145//#testresult/99fddd9b406cc89f","status":"passed","time":{"start":1700702388786,"stop":1700702390403,"duration":1617}},{"uid":"436999cf1a0290e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1143//#testresult/436999cf1a0290e1","status":"passed","time":{"start":1700646438804,"stop":1700646440223,"duration":1419}},{"uid":"ecb589246913af1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1141//#testresult/ecb589246913af1c","status":"passed","time":{"start":1700616136952,"stop":1700616138870,"duration":1918}},{"uid":"baad81b328308ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1136//#testresult/baad81b328308ad","status":"passed","time":{"start":1700529894078,"stop":1700529896100,"duration":2022}},{"uid":"747b1d9a79407412","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/747b1d9a79407412","status":"passed","time":{"start":1700443247876,"stop":1700443250211,"duration":2335}},{"uid":"d0ed769aecf351cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/d0ed769aecf351cd","status":"passed","time":{"start":1700357097184,"stop":1700357098796,"duration":1612}},{"uid":"698b09d8b6a60a8e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1133//#testresult/698b09d8b6a60a8e","status":"passed","time":{"start":1700270399871,"stop":1700270401786,"duration":1915}},{"uid":"993c970589bc9951","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1132//#testresult/993c970589bc9951","status":"passed","time":{"start":1700184061745,"stop":1700184063651,"duration":1906}},{"uid":"ec27030354325052","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1131//#testresult/ec27030354325052","status":"passed","time":{"start":1700097645538,"stop":1700097648121,"duration":2583}},{"uid":"3b89850e275b376e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1129//#testresult/3b89850e275b376e","status":"passed","time":{"start":1700011370333,"stop":1700011371786,"duration":1453}},{"uid":"20c28da819870f91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1128//#testresult/20c28da819870f91","status":"passed","time":{"start":1699924968626,"stop":1699924970869,"duration":2243}},{"uid":"b3678c77fc49a488","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1127//#testresult/b3678c77fc49a488","status":"passed","time":{"start":1699838626304,"stop":1699838627945,"duration":1641}},{"uid":"f5dcb93114d88ee6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1126//#testresult/f5dcb93114d88ee6","status":"passed","time":{"start":1699752240027,"stop":1699752241518,"duration":1491}},{"uid":"96ef525eec4357d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1125//#testresult/96ef525eec4357d6","status":"passed","time":{"start":1699669645476,"stop":1699669647294,"duration":1818}},{"uid":"a9218ee98b503592","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1124//#testresult/a9218ee98b503592","status":"passed","time":{"start":1699579049822,"stop":1699579051811,"duration":1989}},{"uid":"20044647a7806352","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1123//#testresult/20044647a7806352","status":"passed","time":{"start":1699492735246,"stop":1699492737772,"duration":2526}},{"uid":"4ac721052d1fe95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1121//#testresult/4ac721052d1fe95","status":"passed","time":{"start":1699481338693,"stop":1699481340218,"duration":1525}},{"uid":"2ed5fa0aa58239c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1117//#testresult/2ed5fa0aa58239c1","status":"passed","time":{"start":1699445380206,"stop":1699445381715,"duration":1509}},{"uid":"ec44f8b6444b5163","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1115//#testresult/ec44f8b6444b5163","status":"passed","time":{"start":1699406578258,"stop":1699406580293,"duration":2035}}]},"tags":[]},"source":"1b0e70f439954d14.json","parameterValues":["WealdenDistrictCouncil","None","None"]}