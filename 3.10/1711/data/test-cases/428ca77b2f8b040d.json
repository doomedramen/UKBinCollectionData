{"uid":"428ca77b2f8b040d","name":"Validate Council Output [CroydonCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"45037cd07f0522bb0563bf59883b0382","time":{"start":1714004886202,"stop":1714004890725,"duration":4523},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6f9a793130>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6f9a2bc940>, 'council': 'CroydonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7f6fad39a0e0>, page = ''\nkwargs = {'headless': True, 'paon': '13', 'postcode': 'SE25 5DW', 'uprn': None, ...}\ns = <requests.sessions.Session object at 0x7f6fad399060>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '9f7daa1046d62e9b0542eba6e8a632df92a1f2cd', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:274: AttributeError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6f9a793130>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6f9a2bc940>, 'council': 'CroydonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7f6fad39a0e0>, page = ''\nkwargs = {'headless': True, 'paon': '13', 'postcode': 'SE25 5DW', 'uprn': None, ...}\ns = <requests.sessions.Session object at 0x7f6fad399060>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '9f7daa1046d62e9b0542eba6e8a632df92a1f2cd', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:274: AttributeError","steps":[{"name":"Given the council: CroydonCouncil","time":{"start":1714004886202,"stop":1714004886203,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from CroydonCouncil using None and the None is set","time":{"start":1714004886203,"stop":1714004890725,"duration":4522},"status":"failed","statusMessage":"'NoneType' object has no attribute 'attrs'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'attrs'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az887-248"},{"name":"thread","value":"2754-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":148,"broken":0,"skipped":0,"passed":110,"unknown":0,"total":258},"items":[{"uid":"cd2ca1b6195da11b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1710//#testresult/cd2ca1b6195da11b","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1713918415581,"stop":1713918416822,"duration":1241}},{"uid":"92ac95bdb3e97c11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1709//#testresult/92ac95bdb3e97c11","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1713832502106,"stop":1713832503374,"duration":1268}},{"uid":"469f9245801da968","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1708//#testresult/469f9245801da968","status":"passed","time":{"start":1713745661317,"stop":1713745666834,"duration":5517}},{"uid":"6307dba2a7df1306","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1707//#testresult/6307dba2a7df1306","status":"passed","time":{"start":1713659326040,"stop":1713659331090,"duration":5050}},{"uid":"dc25586ff3b05d72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1706//#testresult/dc25586ff3b05d72","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1713572740481,"stop":1713572742283,"duration":1802}},{"uid":"9768b5cb350b80db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1702//#testresult/9768b5cb350b80db","status":"passed","time":{"start":1713486386295,"stop":1713486391464,"duration":5169}},{"uid":"367b9585b1cb33a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1698//#testresult/367b9585b1cb33a7","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1713399960359,"stop":1713399961823,"duration":1464}},{"uid":"7e8a4beccb530234","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1697//#testresult/7e8a4beccb530234","status":"passed","time":{"start":1713313594296,"stop":1713313599695,"duration":5399}},{"uid":"ba149fbf9724a41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1696//#testresult/ba149fbf9724a41","status":"passed","time":{"start":1713252693377,"stop":1713252699535,"duration":6158}},{"uid":"95af4728659afc2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1695//#testresult/95af4728659afc2c","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1713227147045,"stop":1713227149034,"duration":1989}},{"uid":"65e727147e34cba7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1692//#testresult/65e727147e34cba7","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1713207726659,"stop":1713207727887,"duration":1228}},{"uid":"ed4abecaa3f1f595","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1683//#testresult/ed4abecaa3f1f595","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1713188270511,"stop":1713188272299,"duration":1788}},{"uid":"d657b7715f5e383","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1682//#testresult/d657b7715f5e383","status":"passed","time":{"start":1713149739253,"stop":1713149744674,"duration":5421}},{"uid":"dfbf7c6d0dfcfc6a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1681//#testresult/dfbf7c6d0dfcfc6a","status":"passed","time":{"start":1713053234722,"stop":1713053240123,"duration":5401}},{"uid":"1d0060bd50a15bb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1677//#testresult/1d0060bd50a15bb3","status":"passed","time":{"start":1712967732850,"stop":1712967738641,"duration":5791}},{"uid":"ce00de311a8841d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1675//#testresult/ce00de311a8841d2","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1712881617557,"stop":1712881619303,"duration":1746}},{"uid":"cc80e1c0ff0cd615","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1674//#testresult/cc80e1c0ff0cd615","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1712795208315,"stop":1712795213123,"duration":4808}},{"uid":"6a3d32440c4f32f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1673//#testresult/6a3d32440c4f32f0","status":"passed","time":{"start":1712708752822,"stop":1712708757275,"duration":4453}},{"uid":"d977a6c7e7ee9029","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1671//#testresult/d977a6c7e7ee9029","status":"passed","time":{"start":1712700310831,"stop":1712700317980,"duration":7149}},{"uid":"19daf1b9ab9cbd53","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1668//#testresult/19daf1b9ab9cbd53","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1712622383478,"stop":1712622385139,"duration":1661}}]},"tags":[]},"source":"428ca77b2f8b040d.json","parameterValues":["CroydonCouncil","None","None"]}