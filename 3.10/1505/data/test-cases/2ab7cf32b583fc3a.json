{"uid":"2ab7cf32b583fc3a","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1705537744714,"stop":1705538048696,"duration":303982},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x5589ecdf8f83 <unknown>\n#1 0x5589ecab1cf7 <unknown>\n#2 0x5589eca977a1 <unknown>\n#3 0x5589eca9744a <unknown>\n#4 0x5589eca957e1 <unknown>\n#5 0x5589eca9618a <unknown>\n#6 0x5589ecaa707c <unknown>\n#7 0x5589ecabf7c1 <unknown>\n#8 0x5589ecac56bb <unknown>\n#9 0x5589eca9692d <unknown>\n#10 0x5589ecabf5c2 <unknown>\n#11 0x5589ecb4a204 <unknown>\n#12 0x5589ecb2ae53 <unknown>\n#13 0x5589ecaf2dd4 <unknown>\n#14 0x5589ecaf41de <unknown>\n#15 0x5589ecdbd531 <unknown>\n#16 0x5589ecdc1455 <unknown>\n#17 0x5589ecda9f55 <unknown>\n#18 0x5589ecdc20ef <unknown>\n#19 0x5589ecd8d99f <unknown>\n#20 0x5589ecde6008 <unknown>\n#21 0x5589ecde61d7 <unknown>\n#22 0x5589ecdf8124 <unknown>\n#23 0x7f13c3a94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb65ef2b7f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb65e2a3010>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:61: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb65df6b010>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x5589ecde61d7 \\\\u003Cunknown>\\\\n#22 0x5589ecdf8124 \\\\u003Cunknown>\\\\n#23 0x7f13c3a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.216)\nE       Stacktrace:\nE       #0 0x5589ecdf8f83 <unknown>\nE       #1 0x5589ecab1cf7 <unknown>\nE       #2 0x5589eca977a1 <unknown>\nE       #3 0x5589eca9744a <unknown>\nE       #4 0x5589eca957e1 <unknown>\nE       #5 0x5589eca9618a <unknown>\nE       #6 0x5589ecaa707c <unknown>\nE       #7 0x5589ecabf7c1 <unknown>\nE       #8 0x5589ecac56bb <unknown>\nE       #9 0x5589eca9692d <unknown>\nE       #10 0x5589ecabf5c2 <unknown>\nE       #11 0x5589ecb4a204 <unknown>\nE       #12 0x5589ecb2ae53 <unknown>\nE       #13 0x5589ecaf2dd4 <unknown>\nE       #14 0x5589ecaf41de <unknown>\nE       #15 0x5589ecdbd531 <unknown>\nE       #16 0x5589ecdc1455 <unknown>\nE       #17 0x5589ecda9f55 <unknown>\nE       #18 0x5589ecdc20ef <unknown>\nE       #19 0x5589ecd8d99f <unknown>\nE       #20 0x5589ecde6008 <unknown>\nE       #21 0x5589ecde61d7 <unknown>\nE       #22 0x5589ecdf8124 <unknown>\nE       #23 0x7f13c3a94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x5589ecdf8f83 <unknown>\n#1 0x5589ecab1cf7 <unknown>\n#2 0x5589eca977a1 <unknown>\n#3 0x5589eca9744a <unknown>\n#4 0x5589eca957e1 <unknown>\n#5 0x5589eca9618a <unknown>\n#6 0x5589ecaa707c <unknown>\n#7 0x5589ecabf7c1 <unknown>\n#8 0x5589ecac56bb <unknown>\n#9 0x5589eca9692d <unknown>\n#10 0x5589ecabf5c2 <unknown>\n#11 0x5589ecb4a204 <unknown>\n#12 0x5589ecb2ae53 <unknown>\n#13 0x5589ecaf2dd4 <unknown>\n#14 0x5589ecaf41de <unknown>\n#15 0x5589ecdbd531 <unknown>\n#16 0x5589ecdc1455 <unknown>\n#17 0x5589ecda9f55 <unknown>\n#18 0x5589ecdc20ef <unknown>\n#19 0x5589ecd8d99f <unknown>\n#20 0x5589ecde6008 <unknown>\n#21 0x5589ecde61d7 <unknown>\n#22 0x5589ecdf8124 <unknown>\n#23 0x7f13c3a94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb65ef2b7f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb65e2a3010>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:61: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb65df6b010>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x5589ecde61d7 \\\\u003Cunknown>\\\\n#22 0x5589ecdf8124 \\\\u003Cunknown>\\\\n#23 0x7f13c3a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.216)\nE       Stacktrace:\nE       #0 0x5589ecdf8f83 <unknown>\nE       #1 0x5589ecab1cf7 <unknown>\nE       #2 0x5589eca977a1 <unknown>\nE       #3 0x5589eca9744a <unknown>\nE       #4 0x5589eca957e1 <unknown>\nE       #5 0x5589eca9618a <unknown>\nE       #6 0x5589ecaa707c <unknown>\nE       #7 0x5589ecabf7c1 <unknown>\nE       #8 0x5589ecac56bb <unknown>\nE       #9 0x5589eca9692d <unknown>\nE       #10 0x5589ecabf5c2 <unknown>\nE       #11 0x5589ecb4a204 <unknown>\nE       #12 0x5589ecb2ae53 <unknown>\nE       #13 0x5589ecaf2dd4 <unknown>\nE       #14 0x5589ecaf41de <unknown>\nE       #15 0x5589ecdbd531 <unknown>\nE       #16 0x5589ecdc1455 <unknown>\nE       #17 0x5589ecda9f55 <unknown>\nE       #18 0x5589ecdc20ef <unknown>\nE       #19 0x5589ecd8d99f <unknown>\nE       #20 0x5589ecde6008 <unknown>\nE       #21 0x5589ecde61d7 <unknown>\nE       #22 0x5589ecdf8124 <unknown>\nE       #23 0x7f13c3a94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1705537744714,"stop":1705537744715,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1705537744715,"stop":1705538048696,"duration":303981},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x5589ecdf8f83 <unknown>\n#1 0x5589ecab1cf7 <unknown>\n#2 0x5589eca977a1 <unknown>\n#3 0x5589eca9744a <unknown>\n#4 0x5589eca957e1 <unknown>\n#5 0x5589eca9618a <unknown>\n#6 0x5589ecaa707c <unknown>\n#7 0x5589ecabf7c1 <unknown>\n#8 0x5589ecac56bb <unknown>\n#9 0x5589eca9692d <unknown>\n#10 0x5589ecabf5c2 <unknown>\n#11 0x5589ecb4a204 <unknown>\n#12 0x5589ecb2ae53 <unknown>\n#13 0x5589ecaf2dd4 <unknown>\n#14 0x5589ecaf41de <unknown>\n#15 0x5589ecdbd531 <unknown>\n#16 0x5589ecdc1455 <unknown>\n#17 0x5589ecda9f55 <unknown>\n#18 0x5589ecdc20ef <unknown>\n#19 0x5589ecd8d99f <unknown>\n#20 0x5589ecde6008 <unknown>\n#21 0x5589ecde61d7 <unknown>\n#22 0x5589ecdf8124 <unknown>\n#23 0x7f13c3a94ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x5589ecdf8f83 <unknown>\n#1 0x5589ecab1cf7 <unknown>\n#2 0x5589eca977a1 <unknown>\n#3 0x5589eca9744a <unknown>\n#4 0x5589eca957e1 <unknown>\n#5 0x5589eca9618a <unknown>\n#6 0x5589ecaa707c <unknown>\n#7 0x5589ecabf7c1 <unknown>\n#8 0x5589ecac56bb <unknown>\n#9 0x5589eca9692d <unknown>\n#10 0x5589ecabf5c2 <unknown>\n#11 0x5589ecb4a204 <unknown>\n#12 0x5589ecb2ae53 <unknown>\n#13 0x5589ecaf2dd4 <unknown>\n#14 0x5589ecaf41de <unknown>\n#15 0x5589ecdbd531 <unknown>\n#16 0x5589ecdc1455 <unknown>\n#17 0x5589ecda9f55 <unknown>\n#18 0x5589ecdc20ef <unknown>\n#19 0x5589ecd8d99f <unknown>\n#20 0x5589ecde6008 <unknown>\n#21 0x5589ecde61d7 <unknown>\n#22 0x5589ecdf8124 <unknown>\n#23 0x7f13c3a94ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1024-70"},{"name":"thread","value":"2766-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":164},"items":[{"uid":"66adddecc01dfef3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1500//#testresult/66adddecc01dfef3","status":"passed","time":{"start":1705451342334,"stop":1705451349378,"duration":7044}},{"uid":"d24ff3cc4e460646","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1499//#testresult/d24ff3cc4e460646","status":"passed","time":{"start":1705364994104,"stop":1705365001758,"duration":7654}},{"uid":"37bf621c413dd1dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1497//#testresult/37bf621c413dd1dc","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.199)\nStacktrace:\n#0 0x55f9ee151f83 <unknown>\n#1 0x55f9ede0acf7 <unknown>\n#2 0x55f9eddf07a1 <unknown>\n#3 0x55f9eddf044a <unknown>\n#4 0x55f9eddee7e1 <unknown>\n#5 0x55f9eddef18a <unknown>\n#6 0x55f9ede0007c <unknown>\n#7 0x55f9ede187c1 <unknown>\n#8 0x55f9ede1e6bb <unknown>\n#9 0x55f9eddef92d <unknown>\n#10 0x55f9ede185c2 <unknown>\n#11 0x55f9edea3204 <unknown>\n#12 0x55f9ede83e53 <unknown>\n#13 0x55f9ede4bdd4 <unknown>\n#14 0x55f9ede4d1de <unknown>\n#15 0x55f9ee116531 <unknown>\n#16 0x55f9ee11a455 <unknown>\n#17 0x55f9ee102f55 <unknown>\n#18 0x55f9ee11b0ef <unknown>\n#19 0x55f9ee0e699f <unknown>\n#20 0x55f9ee13f008 <unknown>\n#21 0x55f9ee13f1d7 <unknown>\n#22 0x55f9ee151124 <unknown>\n#23 0x7fabc9a94ac3 <unknown>","time":{"start":1705318509081,"stop":1705318813701,"duration":304620}},{"uid":"9d80c2521443ae7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1492//#testresult/9d80c2521443ae7a","status":"passed","time":{"start":1705295708572,"stop":1705295718679,"duration":10107}},{"uid":"bfd762075eec7e3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1491//#testresult/bfd762075eec7e3a","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705295146775,"stop":1705295146975,"duration":200}},{"uid":"97a5dfba6ea868f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1490//#testresult/97a5dfba6ea868f","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705278560585,"stop":1705278560729,"duration":144}},{"uid":"4d69d467358c0251","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1485//#testresult/4d69d467358c0251","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705192218681,"stop":1705192218760,"duration":79}},{"uid":"267b4ae55b172b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1484//#testresult/267b4ae55b172b3","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705105643913,"stop":1705105644149,"duration":236}},{"uid":"e8d046beb618aed1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1482//#testresult/e8d046beb618aed1","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705019249869,"stop":1705019250037,"duration":168}},{"uid":"5eb68715669cd9e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1478//#testresult/5eb68715669cd9e","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1704932834807,"stop":1704932835209,"duration":402}},{"uid":"a5c56e3ef401e8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1472//#testresult/a5c56e3ef401e8f","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1704846464835,"stop":1704846465104,"duration":269}},{"uid":"7f88738467b1aea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1456//#testresult/7f88738467b1aea","status":"passed","time":{"start":1704760143865,"stop":1704760156902,"duration":13037}},{"uid":"80c61b4c26a9e9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1452//#testresult/80c61b4c26a9e9b","status":"passed","time":{"start":1704711550117,"stop":1704711561780,"duration":11663}},{"uid":"5443429957f4bbb8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1450//#testresult/5443429957f4bbb8","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x556bb06c0f83 <unknown>\n#1 0x556bb0379cf7 <unknown>\n#2 0x556bb035f7a1 <unknown>\n#3 0x556bb035f44a <unknown>\n#4 0x556bb035d7e1 <unknown>\n#5 0x556bb035e18a <unknown>\n#6 0x556bb036f07c <unknown>\n#7 0x556bb03877c1 <unknown>\n#8 0x556bb038d6bb <unknown>\n#9 0x556bb035e92d <unknown>\n#10 0x556bb03875c2 <unknown>\n#11 0x556bb0412204 <unknown>\n#12 0x556bb03f2e53 <unknown>\n#13 0x556bb03badd4 <unknown>\n#14 0x556bb03bc1de <unknown>\n#15 0x556bb0685531 <unknown>\n#16 0x556bb0689455 <unknown>\n#17 0x556bb0671f55 <unknown>\n#18 0x556bb068a0ef <unknown>\n#19 0x556bb065599f <unknown>\n#20 0x556bb06ae008 <unknown>\n#21 0x556bb06ae1d7 <unknown>\n#22 0x556bb06c0124 <unknown>\n#23 0x7fa9db694ac3 <unknown>","time":{"start":1704710761423,"stop":1704711103509,"duration":342086}},{"uid":"9b4047466a5a78ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1448//#testresult/9b4047466a5a78ba","status":"passed","time":{"start":1704710154639,"stop":1704710163195,"duration":8556}},{"uid":"f2f5a49af600d06c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1446//#testresult/f2f5a49af600d06c","status":"passed","time":{"start":1704709622266,"stop":1704709629141,"duration":6875}},{"uid":"356537b0caa6fbe1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1443//#testresult/356537b0caa6fbe1","status":"passed","time":{"start":1704704141891,"stop":1704704150487,"duration":8596}},{"uid":"bf771b7ec56321cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1441//#testresult/bf771b7ec56321cf","status":"passed","time":{"start":1704673718763,"stop":1704673727348,"duration":8585}},{"uid":"93197d05482a5f84","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1429//#testresult/93197d05482a5f84","status":"passed","time":{"start":1704626463235,"stop":1704626472390,"duration":9155}},{"uid":"1d98254c19b9376d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1426//#testresult/1d98254c19b9376d","status":"passed","time":{"start":1704615499643,"stop":1704615508110,"duration":8467}}]},"tags":[]},"source":"2ab7cf32b583fc3a.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}