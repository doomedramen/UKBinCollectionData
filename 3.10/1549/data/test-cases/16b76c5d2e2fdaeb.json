{"uid":"16b76c5d2e2fdaeb","name":"Validate Council Output [LiverpoolCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"fa4aaa0dd252fd9a79edc6c4503ba92d","time":{"start":1707179198075,"stop":1707179199523,"duration":1448},"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fcd00b1b010>\nrequest = <FixtureRequest for <Function test_scenario_outline[LiverpoolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fccfff24df0>, 'council': 'LiverpoolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/LiverpoolCityCouncil.py:38: in parse_data\n    bin_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%A, %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fcd00b1b010>\nrequest = <FixtureRequest for <Function test_scenario_outline[LiverpoolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fccfff24df0>, 'council': 'LiverpoolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/LiverpoolCityCouncil.py:38: in parse_data\n    bin_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%A, %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: LiverpoolCityCouncil","time":{"start":1707179198075,"stop":1707179198076,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from LiverpoolCityCouncil using None and the None is set","time":{"start":1707179198076,"stop":1707179199523,"duration":1447},"status":"failed","statusMessage":"time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1393-919"},{"name":"thread","value":"2761-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LiverpoolCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":110,"broken":0,"skipped":0,"passed":68,"unknown":0,"total":178},"items":[{"uid":"aa54a1525ada6bd1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1548//#testresult/aa54a1525ada6bd1","status":"passed","time":{"start":1707092941636,"stop":1707092942664,"duration":1028}},{"uid":"1d7aa0143ba2cdb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1547//#testresult/1d7aa0143ba2cdb3","status":"passed","time":{"start":1707006551324,"stop":1707006552527,"duration":1203}},{"uid":"c898ace302fdddca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1545//#testresult/c898ace302fdddca","status":"passed","time":{"start":1706941901267,"stop":1706941902388,"duration":1121}},{"uid":"68407a4d4fdddb1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1544//#testresult/68407a4d4fdddb1","status":"passed","time":{"start":1706938980057,"stop":1706938981255,"duration":1198}},{"uid":"717e99be61728054","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1542//#testresult/717e99be61728054","status":"passed","time":{"start":1706938492517,"stop":1706938493556,"duration":1039}},{"uid":"a0db47400c956a60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1541//#testresult/a0db47400c956a60","status":"passed","time":{"start":1706920026695,"stop":1706920028370,"duration":1675}},{"uid":"59475ab9bd58ae6a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1540//#testresult/59475ab9bd58ae6a","status":"passed","time":{"start":1706833584636,"stop":1706833585231,"duration":595}},{"uid":"8b230b6d05aaed53","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1538//#testresult/8b230b6d05aaed53","status":"passed","time":{"start":1706747273625,"stop":1706747274807,"duration":1182}},{"uid":"9708ad5e5d85fe86","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1537//#testresult/9708ad5e5d85fe86","status":"passed","time":{"start":1706660867640,"stop":1706660869546,"duration":1906}},{"uid":"82283ccf9503a947","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1535//#testresult/82283ccf9503a947","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","time":{"start":1706574371853,"stop":1706574373025,"duration":1172}},{"uid":"447e7d1ff3944fbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1534//#testresult/447e7d1ff3944fbc","status":"passed","time":{"start":1706488031667,"stop":1706488033346,"duration":1679}},{"uid":"cc5ec4f3e15a17cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1531//#testresult/cc5ec4f3e15a17cd","status":"passed","time":{"start":1706401729681,"stop":1706401730925,"duration":1244}},{"uid":"5bbe1cdd3554ef19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1529//#testresult/5bbe1cdd3554ef19","status":"passed","time":{"start":1706315190166,"stop":1706315191452,"duration":1286}},{"uid":"16a7a6ed91567b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1528//#testresult/16a7a6ed91567b","status":"passed","time":{"start":1706228821131,"stop":1706228822909,"duration":1778}},{"uid":"fe97df998ba59aeb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1523//#testresult/fe97df998ba59aeb","status":"passed","time":{"start":1706142517255,"stop":1706142518505,"duration":1250}},{"uid":"6a2d694419ff9db5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1522//#testresult/6a2d694419ff9db5","status":"passed","time":{"start":1706056130344,"stop":1706056130989,"duration":645}},{"uid":"a257358f57cd1950","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1521//#testresult/a257358f57cd1950","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","time":{"start":1705969747032,"stop":1705969748494,"duration":1462}},{"uid":"359c2ae321652c42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1520//#testresult/359c2ae321652c42","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='liverpool.gov.uk', port=443): Max retries exceeded with url: /Bins/BinDatesTable?UPRN=38164600&User-Agent=Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F108.0.0.0+Safari%2F537.36 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f6a4bc62bf0>, 'Connection to liverpool.gov.uk timed out. (connect timeout=None)'))","time":{"start":1705883382373,"stop":1705883512342,"duration":129969}},{"uid":"26737e020ad9a811","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1519//#testresult/26737e020ad9a811","status":"passed","time":{"start":1705797048150,"stop":1705797049541,"duration":1391}},{"uid":"153ff1a3fbd05e45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1515//#testresult/153ff1a3fbd05e45","status":"passed","time":{"start":1705710447862,"stop":1705710449035,"duration":1173}}]},"tags":[]},"source":"16b76c5d2e2fdaeb.json","parameterValues":["LiverpoolCityCouncil","None","None"]}