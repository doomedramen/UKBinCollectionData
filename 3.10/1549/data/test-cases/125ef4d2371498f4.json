{"uid":"125ef4d2371498f4","name":"Validate Council Output [WestSuffolkCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"446a4369fb450b9e3ee2f74bbf8ed65b","time":{"start":1707179340596,"stop":1707179351051,"duration":10455},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7fcd00b1b010>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fccff931c90>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4a19c1d15d33794d5c14a7444db1ce56\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fccffced6c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7fcd00b1b010>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fccff931c90>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4a19c1d15d33794d5c14a7444db1ce56\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fccffced6c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Given the council: WestSuffolkCouncil","time":{"start":1707179340596,"stop":1707179340597,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestSuffolkCouncil using local and the http://selenium:4444 is set","time":{"start":1707179340597,"stop":1707179351051,"duration":10454},"status":"failed","statusMessage":"Message: \n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1393-919"},{"name":"thread","value":"2761-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":152,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":152},"items":[{"uid":"2aa75b9b7917e54e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1548//#testresult/2aa75b9b7917e54e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707093056472,"stop":1707093067241,"duration":10769}},{"uid":"3d05800c52a4bc38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1547//#testresult/3d05800c52a4bc38","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707006699206,"stop":1707006709978,"duration":10772}},{"uid":"fbd785e90edbb66e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1545//#testresult/fbd785e90edbb66e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706942041826,"stop":1706942052252,"duration":10426}},{"uid":"1428f7fba54ca94e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1544//#testresult/1428f7fba54ca94e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706939071048,"stop":1706939084344,"duration":13296}},{"uid":"b128e989965d9b91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1542//#testresult/b128e989965d9b91","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706938590941,"stop":1706938603572,"duration":12631}},{"uid":"21bee9fb1e0eb72d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1541//#testresult/21bee9fb1e0eb72d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706920185375,"stop":1706920197722,"duration":12347}},{"uid":"8ce0b350c0330e7f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1540//#testresult/8ce0b350c0330e7f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706833711946,"stop":1706833722672,"duration":10726}},{"uid":"facba88110a06d54","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1538//#testresult/facba88110a06d54","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706747392578,"stop":1706747403510,"duration":10932}},{"uid":"6e910a519db7509f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1537//#testresult/6e910a519db7509f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706660986149,"stop":1706660999933,"duration":13784}},{"uid":"1f501d6c4d6c50c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1535//#testresult/1f501d6c4d6c50c","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706574506876,"stop":1706574519920,"duration":13044}},{"uid":"fa53bdd443b56b26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1534//#testresult/fa53bdd443b56b26","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706488211377,"stop":1706488225498,"duration":14121}},{"uid":"446c5589fd803ac5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1531//#testresult/446c5589fd803ac5","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706401863272,"stop":1706401875534,"duration":12262}},{"uid":"219777786c5c76dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1529//#testresult/219777786c5c76dc","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706315363554,"stop":1706315373859,"duration":10305}},{"uid":"c8b0d48f3d783d35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1528//#testresult/c8b0d48f3d783d35","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706228978966,"stop":1706228991458,"duration":12492}},{"uid":"261130eab3360eb1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1523//#testresult/261130eab3360eb1","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706142794439,"stop":1706142805457,"duration":11018}},{"uid":"6922caa09883a5cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1522//#testresult/6922caa09883a5cf","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706056307749,"stop":1706056322772,"duration":15023}},{"uid":"cc30a9cf368851db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1521//#testresult/cc30a9cf368851db","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705969894698,"stop":1705969905525,"duration":10827}},{"uid":"14c93c3147ade8ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1520//#testresult/14c93c3147ade8ae","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705883629695,"stop":1705883643771,"duration":14076}},{"uid":"d9c9a7dc6e162fbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1519//#testresult/d9c9a7dc6e162fbc","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705797232586,"stop":1705797243077,"duration":10491}},{"uid":"20848aa849918d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1515//#testresult/20848aa849918d8","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705710642450,"stop":1705710652400,"duration":9950}}]},"tags":[]},"source":"125ef4d2371498f4.json","parameterValues":["WestSuffolkCouncil","local","http://selenium:4444"]}