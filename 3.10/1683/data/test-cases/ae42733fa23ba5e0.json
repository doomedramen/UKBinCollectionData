{"uid":"ae42733fa23ba5e0","name":"Validate Council Output [WestSuffolkCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"446a4369fb450b9e3ee2f74bbf8ed65b","time":{"start":1713188471198,"stop":1713188484871,"duration":13673},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7f55fcd2feb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f55fbd3c820>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a51a7bca0b61ec14f0fe780be0486df0\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f55fcabbd00>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7f55fcd2feb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f55fbd3c820>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a51a7bca0b61ec14f0fe780be0486df0\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f55fcabbd00>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Given the council: WestSuffolkCouncil","time":{"start":1713188471198,"stop":1713188471198,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestSuffolkCouncil using local and the http://selenium:4444 is set","time":{"start":1713188471199,"stop":1713188484871,"duration":13672},"status":"failed","statusMessage":"Message: \n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az773-806"},{"name":"thread","value":"2787-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":215,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":215},"items":[{"uid":"5e208c501a7cd9d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1682//#testresult/5e208c501a7cd9d5","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713149944139,"stop":1713149956664,"duration":12525}},{"uid":"4e96d82169ad45c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1681//#testresult/4e96d82169ad45c8","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713053414703,"stop":1713053426369,"duration":11666}},{"uid":"4a92efb532a5cdec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1677//#testresult/4a92efb532a5cdec","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712968140753,"stop":1712968151973,"duration":11220}},{"uid":"6a070a18e9e7c728","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1675//#testresult/6a070a18e9e7c728","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712881896332,"stop":1712881909530,"duration":13198}},{"uid":"fdd827e4a18c01c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1674//#testresult/fdd827e4a18c01c7","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712795519406,"stop":1712795530940,"duration":11534}},{"uid":"214eb13cdb882087","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1673//#testresult/214eb13cdb882087","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712709050195,"stop":1712709063398,"duration":13203}},{"uid":"4bd8aaa1828e3d03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1671//#testresult/4bd8aaa1828e3d03","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712700495348,"stop":1712700507716,"duration":12368}},{"uid":"22b17b7d537a13e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1668//#testresult/22b17b7d537a13e8","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712622705730,"stop":1712622720063,"duration":14333}},{"uid":"680dc93312b3d0cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1667//#testresult/680dc93312b3d0cc","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712536403902,"stop":1712536417873,"duration":13971}},{"uid":"e16b330430ebfb43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1666//#testresult/e16b330430ebfb43","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712450080071,"stop":1712450091844,"duration":11773}},{"uid":"8596fa26f1918744","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1665//#testresult/8596fa26f1918744","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712363477971,"stop":1712363491456,"duration":13485}},{"uid":"3fae931351d38256","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1664//#testresult/3fae931351d38256","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712277043876,"stop":1712277055009,"duration":11133}},{"uid":"7494025ec21da0b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1660//#testresult/7494025ec21da0b3","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712190779243,"stop":1712190796042,"duration":16799}},{"uid":"e652480f44a23fd2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1657//#testresult/e652480f44a23fd2","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712137080797,"stop":1712137091463,"duration":10666}},{"uid":"f6ecb84eaedd42a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1655//#testresult/f6ecb84eaedd42a8","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712104202565,"stop":1712104213049,"duration":10484}},{"uid":"2777a5593f69672b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1654//#testresult/2777a5593f69672b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1712017828345,"stop":1712017840581,"duration":12236}},{"uid":"4dcf039f9fbb0650","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1653//#testresult/4dcf039f9fbb0650","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1711931688129,"stop":1711931699600,"duration":11471}},{"uid":"be7ec904b8a9c31d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1652//#testresult/be7ec904b8a9c31d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1711845191429,"stop":1711845202657,"duration":11228}},{"uid":"7bb552c463f1fa38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1649//#testresult/7bb552c463f1fa38","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1711672209154,"stop":1711672220772,"duration":11618}},{"uid":"8ec89812cc263e3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1648//#testresult/8ec89812cc263e3c","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1711585814932,"stop":1711585856189,"duration":41257}}]},"tags":[]},"source":"ae42733fa23ba5e0.json","parameterValues":["WestSuffolkCouncil","local","http://selenium:4444"]}