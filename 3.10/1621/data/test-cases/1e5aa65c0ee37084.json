{"uid":"1e5aa65c0ee37084","name":"Validate Council Output [SwaleBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f1a7ca7ddbe9ab56a3a4fd742de0d5ec","time":{"start":1710971040411,"stop":1710971042017,"duration":1606},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f7cb9987400>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f7ca5c4d120>, 'council': 'SwaleBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f7ca5e53100>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:41: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f7cb9987400>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f7ca5c4d120>, 'council': 'SwaleBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f7ca5e53100>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:41: AttributeError","steps":[{"name":"Given the council: SwaleBoroughCouncil","time":{"start":1710971040412,"stop":1710971040412,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SwaleBoroughCouncil using None and the None is set","time":{"start":1710971040412,"stop":1710971042017,"duration":1605},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1429-274"},{"name":"thread","value":"2918-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwaleBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":214,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":218},"items":[{"uid":"4fb015119cd9f374","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1619//#testresult/4fb015119cd9f374","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1710894498452,"stop":1710894499155,"duration":703}},{"uid":"810d47ac9e18bc3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1615//#testresult/810d47ac9e18bc3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1710808118458,"stop":1710808119558,"duration":1100}},{"uid":"fdb72b229a9fc8c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1609//#testresult/fdb72b229a9fc8c3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1710721835220,"stop":1710721835935,"duration":715}},{"uid":"ef2e22ebb152bd08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1608//#testresult/ef2e22ebb152bd08","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1710635510507,"stop":1710635511428,"duration":921}},{"uid":"d8d81ad1c70c51dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1607//#testresult/d8d81ad1c70c51dd","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1710548850020,"stop":1710548850966,"duration":946}},{"uid":"adaa79befaa733ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1605//#testresult/adaa79befaa733ee","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1710462525411,"stop":1710462527137,"duration":1726}},{"uid":"8474017715bd032e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1604//#testresult/8474017715bd032e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1710452956397,"stop":1710452957284,"duration":887}},{"uid":"5404bab7d4ced012","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1602//#testresult/5404bab7d4ced012","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1710376170113,"stop":1710376171107,"duration":994}},{"uid":"c23a31f47eb40823","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1601//#testresult/c23a31f47eb40823","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1710289682077,"stop":1710289683051,"duration":974}},{"uid":"3608caafecaabef6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1600//#testresult/3608caafecaabef6","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1710203320238,"stop":1710203327065,"duration":6827}},{"uid":"e4f58fc82173eccd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1599//#testresult/e4f58fc82173eccd","status":"passed","time":{"start":1710116989729,"stop":1710116993050,"duration":3321}},{"uid":"3c85d998b45dc6b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1598//#testresult/3c85d998b45dc6b9","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1710030695129,"stop":1710030726395,"duration":31266}},{"uid":"cc84c3935e435953","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1597//#testresult/cc84c3935e435953","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1709944144103,"stop":1709944175608,"duration":31505}},{"uid":"81ff78e1781bf9fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1596//#testresult/81ff78e1781bf9fd","status":"passed","time":{"start":1709857727743,"stop":1709857744354,"duration":16611}},{"uid":"c7f3398ad9d63aaa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1595//#testresult/c7f3398ad9d63aaa","status":"passed","time":{"start":1709771041212,"stop":1709771042846,"duration":1634}},{"uid":"6c4937ed8568cc0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1594//#testresult/6c4937ed8568cc0d","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1709684927608,"stop":1709684928705,"duration":1097}},{"uid":"be75e80f744ca00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1593//#testresult/be75e80f744ca00","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1709598469337,"stop":1709598472018,"duration":2681}},{"uid":"1f5bc30d553cae8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1592//#testresult/1f5bc30d553cae8b","status":"passed","time":{"start":1709512159456,"stop":1709512181344,"duration":21888}},{"uid":"482712de4b47fbf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1572//#testresult/482712de4b47fbf","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1007)')))","time":{"start":1708561697622,"stop":1708561698415,"duration":793}},{"uid":"a476408fea5e0515","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1570//#testresult/a476408fea5e0515","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1007)')))","time":{"start":1708475274384,"stop":1708475274949,"duration":565}}]},"tags":[]},"source":"1e5aa65c0ee37084.json","parameterValues":["SwaleBoroughCouncil","None","None"]}