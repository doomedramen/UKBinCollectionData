{"uid":"40fe29e81a7b081d","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1707006517715,"stop":1707006528656,"duration":10941},"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=121.0.6167.139)\nStacktrace:\n#0 0x55a3f1c24d93 <unknown>\n#1 0x55a3f1908177 <unknown>\n#2 0x55a3f194dcef <unknown>\n#3 0x55a3f194c05b <unknown>\n#4 0x55a3f1976442 <unknown>\n#5 0x55a3f1948028 <unknown>\n#6 0x55a3f197660e <unknown>\n#7 0x55a3f199512d <unknown>\n#8 0x55a3f19761e3 <unknown>\n#9 0x55a3f1946135 <unknown>\n#10 0x55a3f194713e <unknown>\n#11 0x55a3f1be8e4b <unknown>\n#12 0x55a3f1becdfa <unknown>\n#13 0x55a3f1bd56d5 <unknown>\n#14 0x55a3f1beda6f <unknown>\n#15 0x55a3f1bb969f <unknown>\n#16 0x55a3f1c12098 <unknown>\n#17 0x55a3f1c12262 <unknown>\n#18 0x55a3f1c23f34 <unknown>\n#19 0x7fd3e5294ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fece5c46e60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fece565b070>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fece5633c10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55a3f1c12262 \\\\u003Cunknown>\\\\n#18 0x55a3f1c23f34 \\\\u003Cunknown>\\\\n#19 0x7fd3e5294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=121.0.6167.139)\nE       Stacktrace:\nE       #0 0x55a3f1c24d93 <unknown>\nE       #1 0x55a3f1908177 <unknown>\nE       #2 0x55a3f194dcef <unknown>\nE       #3 0x55a3f194c05b <unknown>\nE       #4 0x55a3f1976442 <unknown>\nE       #5 0x55a3f1948028 <unknown>\nE       #6 0x55a3f197660e <unknown>\nE       #7 0x55a3f199512d <unknown>\nE       #8 0x55a3f19761e3 <unknown>\nE       #9 0x55a3f1946135 <unknown>\nE       #10 0x55a3f194713e <unknown>\nE       #11 0x55a3f1be8e4b <unknown>\nE       #12 0x55a3f1becdfa <unknown>\nE       #13 0x55a3f1bd56d5 <unknown>\nE       #14 0x55a3f1beda6f <unknown>\nE       #15 0x55a3f1bb969f <unknown>\nE       #16 0x55a3f1c12098 <unknown>\nE       #17 0x55a3f1c12262 <unknown>\nE       #18 0x55a3f1c23f34 <unknown>\nE       #19 0x7fd3e5294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=121.0.6167.139)\nStacktrace:\n#0 0x55a3f1c24d93 <unknown>\n#1 0x55a3f1908177 <unknown>\n#2 0x55a3f194dcef <unknown>\n#3 0x55a3f194c05b <unknown>\n#4 0x55a3f1976442 <unknown>\n#5 0x55a3f1948028 <unknown>\n#6 0x55a3f197660e <unknown>\n#7 0x55a3f199512d <unknown>\n#8 0x55a3f19761e3 <unknown>\n#9 0x55a3f1946135 <unknown>\n#10 0x55a3f194713e <unknown>\n#11 0x55a3f1be8e4b <unknown>\n#12 0x55a3f1becdfa <unknown>\n#13 0x55a3f1bd56d5 <unknown>\n#14 0x55a3f1beda6f <unknown>\n#15 0x55a3f1bb969f <unknown>\n#16 0x55a3f1c12098 <unknown>\n#17 0x55a3f1c12262 <unknown>\n#18 0x55a3f1c23f34 <unknown>\n#19 0x7fd3e5294ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fece5c46e60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fece565b070>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fece5633c10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55a3f1c12262 \\\\u003Cunknown>\\\\n#18 0x55a3f1c23f34 \\\\u003Cunknown>\\\\n#19 0x7fd3e5294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=121.0.6167.139)\nE       Stacktrace:\nE       #0 0x55a3f1c24d93 <unknown>\nE       #1 0x55a3f1908177 <unknown>\nE       #2 0x55a3f194dcef <unknown>\nE       #3 0x55a3f194c05b <unknown>\nE       #4 0x55a3f1976442 <unknown>\nE       #5 0x55a3f1948028 <unknown>\nE       #6 0x55a3f197660e <unknown>\nE       #7 0x55a3f199512d <unknown>\nE       #8 0x55a3f19761e3 <unknown>\nE       #9 0x55a3f1946135 <unknown>\nE       #10 0x55a3f194713e <unknown>\nE       #11 0x55a3f1be8e4b <unknown>\nE       #12 0x55a3f1becdfa <unknown>\nE       #13 0x55a3f1bd56d5 <unknown>\nE       #14 0x55a3f1beda6f <unknown>\nE       #15 0x55a3f1bb969f <unknown>\nE       #16 0x55a3f1c12098 <unknown>\nE       #17 0x55a3f1c12262 <unknown>\nE       #18 0x55a3f1c23f34 <unknown>\nE       #19 0x7fd3e5294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1707006517715,"stop":1707006517715,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1707006517716,"stop":1707006528656,"duration":10940},"status":"failed","statusMessage":"Message: element not interactable\n  (Session info: chrome-headless-shell=121.0.6167.139)\nStacktrace:\n#0 0x55a3f1c24d93 <unknown>\n#1 0x55a3f1908177 <unknown>\n#2 0x55a3f194dcef <unknown>\n#3 0x55a3f194c05b <unknown>\n#4 0x55a3f1976442 <unknown>\n#5 0x55a3f1948028 <unknown>\n#6 0x55a3f197660e <unknown>\n#7 0x55a3f199512d <unknown>\n#8 0x55a3f19761e3 <unknown>\n#9 0x55a3f1946135 <unknown>\n#10 0x55a3f194713e <unknown>\n#11 0x55a3f1be8e4b <unknown>\n#12 0x55a3f1becdfa <unknown>\n#13 0x55a3f1bd56d5 <unknown>\n#14 0x55a3f1beda6f <unknown>\n#15 0x55a3f1bb969f <unknown>\n#16 0x55a3f1c12098 <unknown>\n#17 0x55a3f1c12262 <unknown>\n#18 0x55a3f1c23f34 <unknown>\n#19 0x7fd3e5294ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=121.0.6167.139)\nStacktrace:\n#0 0x55a3f1c24d93 <unknown>\n#1 0x55a3f1908177 <unknown>\n#2 0x55a3f194dcef <unknown>\n#3 0x55a3f194c05b <unknown>\n#4 0x55a3f1976442 <unknown>\n#5 0x55a3f1948028 <unknown>\n#6 0x55a3f197660e <unknown>\n#7 0x55a3f199512d <unknown>\n#8 0x55a3f19761e3 <unknown>\n#9 0x55a3f1946135 <unknown>\n#10 0x55a3f194713e <unknown>\n#11 0x55a3f1be8e4b <unknown>\n#12 0x55a3f1becdfa <unknown>\n#13 0x55a3f1bd56d5 <unknown>\n#14 0x55a3f1beda6f <unknown>\n#15 0x55a3f1bb969f <unknown>\n#16 0x55a3f1c12098 <unknown>\n#17 0x55a3f1c12262 <unknown>\n#18 0x55a3f1c23f34 <unknown>\n#19 0x7fd3e5294ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az738-762"},{"name":"thread","value":"2780-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":38,"broken":0,"skipped":0,"passed":61,"unknown":0,"total":99},"items":[{"uid":"c9fe890f16310175","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1545//#testresult/c9fe890f16310175","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=121.0.6167.85)\nStacktrace:\n#0 0x55dcab361d93 <unknown>\n#1 0x55dcab045177 <unknown>\n#2 0x55dcab08acef <unknown>\n#3 0x55dcab08905b <unknown>\n#4 0x55dcab0b3442 <unknown>\n#5 0x55dcab085028 <unknown>\n#6 0x55dcab0b360e <unknown>\n#7 0x55dcab0d212d <unknown>\n#8 0x55dcab0b31e3 <unknown>\n#9 0x55dcab083135 <unknown>\n#10 0x55dcab08413e <unknown>\n#11 0x55dcab325e4b <unknown>\n#12 0x55dcab329dfa <unknown>\n#13 0x55dcab3126d5 <unknown>\n#14 0x55dcab32aa6f <unknown>\n#15 0x55dcab2f669f <unknown>\n#16 0x55dcab34f098 <unknown>\n#17 0x55dcab34f262 <unknown>\n#18 0x55dcab360f34 <unknown>\n#19 0x7fcbb4694ac3 <unknown>","time":{"start":1706941884289,"stop":1706941894533,"duration":10244}},{"uid":"730180f6d7031e19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1544//#testresult/730180f6d7031e19","status":"passed","time":{"start":1706938960800,"stop":1706938978434,"duration":17634}},{"uid":"62059712e86f82da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1542//#testresult/62059712e86f82da","status":"passed","time":{"start":1706938443220,"stop":1706938465909,"duration":22689}},{"uid":"3960b31842cf1e97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1541//#testresult/3960b31842cf1e97","status":"passed","time":{"start":1706919985403,"stop":1706920003979,"duration":18576}},{"uid":"71db4e6e32a5c68b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1540//#testresult/71db4e6e32a5c68b","status":"passed","time":{"start":1706833539805,"stop":1706833556317,"duration":16512}},{"uid":"ed6e455aff1a5630","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1538//#testresult/ed6e455aff1a5630","status":"passed","time":{"start":1706747227365,"stop":1706747244445,"duration":17080}},{"uid":"2dc158b5ddae1b29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1537//#testresult/2dc158b5ddae1b29","status":"passed","time":{"start":1706660834373,"stop":1706660858672,"duration":24299}},{"uid":"10c55504f025990a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1535//#testresult/10c55504f025990a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556b4b829f83 <unknown>\n#1 0x556b4b4e2cf7 <unknown>\n#2 0x556b4b53299e <unknown>\n#3 0x556b4b532aa1 <unknown>\n#4 0x556b4b57dd64 <unknown>\n#5 0x556b4b55c0dd <unknown>\n#6 0x556b4b57b006 <unknown>\n#7 0x556b4b55be53 <unknown>\n#8 0x556b4b523dd4 <unknown>\n#9 0x556b4b5251de <unknown>\n#10 0x556b4b7ee531 <unknown>\n#11 0x556b4b7f2455 <unknown>\n#12 0x556b4b7daf55 <unknown>\n#13 0x556b4b7f30ef <unknown>\n#14 0x556b4b7be99f <unknown>\n#15 0x556b4b817008 <unknown>\n#16 0x556b4b8171d7 <unknown>\n#17 0x556b4b829124 <unknown>\n#18 0x7f4780894ac3 <unknown>","time":{"start":1706574332002,"stop":1706574411654,"duration":79652}},{"uid":"ad015162e3d46c42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1534//#testresult/ad015162e3d46c42","status":"passed","time":{"start":1706488008660,"stop":1706488024805,"duration":16145}},{"uid":"a9aaa134fd909040","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1531//#testresult/a9aaa134fd909040","status":"passed","time":{"start":1706401689096,"stop":1706401716040,"duration":26944}},{"uid":"39e230ee2a611a97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1529//#testresult/39e230ee2a611a97","status":"passed","time":{"start":1706315143126,"stop":1706315158721,"duration":15595}},{"uid":"27ee38f5c72fa4c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1528//#testresult/27ee38f5c72fa4c5","status":"passed","time":{"start":1706228782071,"stop":1706228802006,"duration":19935}},{"uid":"22a90d6e0420c5ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1523//#testresult/22a90d6e0420c5ce","status":"passed","time":{"start":1706142478559,"stop":1706142497190,"duration":18631}},{"uid":"d88051eeff8fa3af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1522//#testresult/d88051eeff8fa3af","status":"passed","time":{"start":1706056087161,"stop":1706056100771,"duration":13610}},{"uid":"dec6d4e1d5acc875","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1521//#testresult/dec6d4e1d5acc875","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1705969697236,"stop":1705969719231,"duration":21995}},{"uid":"4aa47c5e96c5012","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1520//#testresult/4aa47c5e96c5012","status":"passed","time":{"start":1705883349807,"stop":1705883366587,"duration":16780}},{"uid":"ee95c1a764d68718","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1519//#testresult/ee95c1a764d68718","status":"passed","time":{"start":1705797011308,"stop":1705797034194,"duration":22886}},{"uid":"27e51c0ad2f30537","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1515//#testresult/27e51c0ad2f30537","status":"passed","time":{"start":1705710407430,"stop":1705710421496,"duration":14066}},{"uid":"953963a09db966f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1511//#testresult/953963a09db966f4","status":"passed","time":{"start":1705624061528,"stop":1705624085492,"duration":23964}},{"uid":"7d3de9cf9845f789","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1505//#testresult/7d3de9cf9845f789","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5597b0fdbf83 <unknown>\n#1 0x5597b0c94cf7 <unknown>\n#2 0x5597b0ce499e <unknown>\n#3 0x5597b0ce4aa1 <unknown>\n#4 0x5597b0d2fd64 <unknown>\n#5 0x5597b0d0e0dd <unknown>\n#6 0x5597b0d2d006 <unknown>\n#7 0x5597b0d0de53 <unknown>\n#8 0x5597b0cd5dd4 <unknown>\n#9 0x5597b0cd71de <unknown>\n#10 0x5597b0fa0531 <unknown>\n#11 0x5597b0fa4455 <unknown>\n#12 0x5597b0f8cf55 <unknown>\n#13 0x5597b0fa50ef <unknown>\n#14 0x5597b0f7099f <unknown>\n#15 0x5597b0fc9008 <unknown>\n#16 0x5597b0fc91d7 <unknown>\n#17 0x5597b0fdb124 <unknown>\n#18 0x7f271f294ac3 <unknown>","time":{"start":1705537636291,"stop":1705537713320,"duration":77029}}]},"tags":[]},"source":"40fe29e81a7b081d.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}