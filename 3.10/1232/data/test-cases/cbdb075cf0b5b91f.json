{"uid":"cbdb075cf0b5b91f","name":"Validate Council Output [MidAndEastAntrimBoroughCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b599a4dd435703dc5f9937f69cb0d25f","time":{"start":1702366515283,"stop":1702366532380,"duration":17097},"status":"failed","statusMessage":"ValueError: unconverted data remains: (Adjusted","statusTrace":"fixturefunc = <function scrape_step at 0x7ffb0689b9a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidAndEastAntrimBoroughCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ffaf3617a30>, 'council': 'MidAndEastAntrimBoroughCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MidAndEastAntrimBoroughCouncil.py:102: in parse_data\n    date = datetime.strptime(' '.join(binDict[bin][1:]), \"%d %b\").replace(year=datetime.today().year)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = '23 Dec(Adjusted', format = '%d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n            raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\n        if len(data_string) != found.end():\n>           raise ValueError(\"unconverted data remains: %s\" %\n                              data_string[found.end():])\nE           ValueError: unconverted data remains: (Adjusted\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:352: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: unconverted data remains: (Adjusted","statusTrace":"fixturefunc = <function scrape_step at 0x7ffb0689b9a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidAndEastAntrimBoroughCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ffaf3617a30>, 'council': 'MidAndEastAntrimBoroughCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MidAndEastAntrimBoroughCouncil.py:102: in parse_data\n    date = datetime.strptime(' '.join(binDict[bin][1:]), \"%d %b\").replace(year=datetime.today().year)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = '23 Dec(Adjusted', format = '%d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n            raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\n        if len(data_string) != found.end():\n>           raise ValueError(\"unconverted data remains: %s\" %\n                              data_string[found.end():])\nE           ValueError: unconverted data remains: (Adjusted\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:352: ValueError","steps":[{"name":"Given the council: MidAndEastAntrimBoroughCouncil","time":{"start":1702366515283,"stop":1702366515284,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MidAndEastAntrimBoroughCouncil using local and the http://selenium:4444 is set","time":{"start":1702366515284,"stop":1702366532380,"duration":17096},"status":"failed","statusMessage":"unconverted data remains: (Adjusted","statusTrace":"ValueError: unconverted data remains: (Adjusted\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az777-825"},{"name":"thread","value":"2717-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MidAndEastAntrimBoroughCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":39,"unknown":0,"total":41},"items":[{"uid":"97dd88f05653a97b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1231//#testresult/97dd88f05653a97b","status":"failed","statusDetails":"ValueError: unconverted data remains: (Adjusted","time":{"start":1702343984606,"stop":1702344002888,"duration":18282}},{"uid":"7c9f8a93a90aba60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1229//#testresult/7c9f8a93a90aba60","status":"passed","time":{"start":1702257570042,"stop":1702257587092,"duration":17050}},{"uid":"8c1a4208d9a85246","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1228//#testresult/8c1a4208d9a85246","status":"passed","time":{"start":1702171442595,"stop":1702171459754,"duration":17159}},{"uid":"b305e3d6f9fee91c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/b305e3d6f9fee91c","status":"passed","time":{"start":1702084712258,"stop":1702084729405,"duration":17147}},{"uid":"da5d49a3418a2d57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1225//#testresult/da5d49a3418a2d57","status":"passed","time":{"start":1702066744639,"stop":1702066762767,"duration":18128}},{"uid":"1932a09f447cbc60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1222//#testresult/1932a09f447cbc60","status":"passed","time":{"start":1702054380866,"stop":1702054397994,"duration":17128}},{"uid":"afd80ba0c7363389","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1219//#testresult/afd80ba0c7363389","status":"passed","time":{"start":1701998397828,"stop":1701998416412,"duration":18584}},{"uid":"a74127ae19585307","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1218//#testresult/a74127ae19585307","status":"passed","time":{"start":1701990389604,"stop":1701990407665,"duration":18061}},{"uid":"f7f742a93fa8d411","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1217//#testresult/f7f742a93fa8d411","status":"passed","time":{"start":1701990357139,"stop":1701990373927,"duration":16788}},{"uid":"b77ac0868a629735","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1215//#testresult/b77ac0868a629735","status":"passed","time":{"start":1701942818341,"stop":1701942836817,"duration":18476}},{"uid":"ddbbd83d378b48bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1214//#testresult/ddbbd83d378b48bd","status":"passed","time":{"start":1701936524184,"stop":1701936541866,"duration":17682}},{"uid":"b54975924402b105","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1213//#testresult/b54975924402b105","status":"passed","time":{"start":1701936478823,"stop":1701936495596,"duration":16773}},{"uid":"5153e8358af88997","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1211//#testresult/5153e8358af88997","status":"passed","time":{"start":1701911957580,"stop":1701911975852,"duration":18272}},{"uid":"8dbb96ad6873702","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1209//#testresult/8dbb96ad6873702","status":"passed","time":{"start":1701904866139,"stop":1701904883690,"duration":17551}},{"uid":"6bc209478db17645","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1201//#testresult/6bc209478db17645","status":"passed","time":{"start":1701882526233,"stop":1701882543233,"duration":17000}},{"uid":"b3eec4e7abf56161","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1199//#testresult/b3eec4e7abf56161","status":"passed","time":{"start":1701825568241,"stop":1701825585111,"duration":16870}},{"uid":"8be3e8d530ad2501","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1198//#testresult/8be3e8d530ad2501","status":"passed","time":{"start":1701795579953,"stop":1701795597623,"duration":17670}},{"uid":"daa4070d33cb444f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1197//#testresult/daa4070d33cb444f","status":"passed","time":{"start":1701795504381,"stop":1701795521318,"duration":16937}},{"uid":"924c5540fac6d834","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1193//#testresult/924c5540fac6d834","status":"passed","time":{"start":1701758522447,"stop":1701758539098,"duration":16651}},{"uid":"31eb1f6b7e17e8ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1192//#testresult/31eb1f6b7e17e8ca","status":"passed","time":{"start":1701758527524,"stop":1701758545633,"duration":18109}}]},"tags":[]},"source":"cbdb075cf0b5b91f.json","parameterValues":["MidAndEastAntrimBoroughCouncil","local","http://selenium:4444"]}