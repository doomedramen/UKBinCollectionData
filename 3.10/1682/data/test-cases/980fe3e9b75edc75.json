{"uid":"980fe3e9b75edc75","name":"Validate Council Output [SwaleBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f1a7ca7ddbe9ab56a3a4fd742de0d5ec","time":{"start":1713149901313,"stop":1713149903513,"duration":2200},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6d7a207400>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6d79eeb580>, 'council': 'SwaleBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f6d79396170>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:41: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6d7a207400>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6d79eeb580>, 'council': 'SwaleBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f6d79396170>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:41: AttributeError","steps":[{"name":"Given the council: SwaleBoroughCouncil","time":{"start":1713149901313,"stop":1713149901314,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SwaleBoroughCouncil using None and the None is set","time":{"start":1713149901314,"stop":1713149903513,"duration":2199},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az985-19"},{"name":"thread","value":"2744-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwaleBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":241,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":245},"items":[{"uid":"70a4a1bb6eb10208","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1681//#testresult/70a4a1bb6eb10208","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713053383847,"stop":1713053385697,"duration":1850}},{"uid":"bf6da297d25529e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1677//#testresult/bf6da297d25529e7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712967994558,"stop":1712967996032,"duration":1474}},{"uid":"a70a780bfd34a4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1675//#testresult/a70a780bfd34a4d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712881841441,"stop":1712881844224,"duration":2783}},{"uid":"532fb1cab45dcf0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1674//#testresult/532fb1cab45dcf0e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712795451969,"stop":1712795454718,"duration":2749}},{"uid":"410617e6fdc2969d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1673//#testresult/410617e6fdc2969d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712708960157,"stop":1712708962083,"duration":1926}},{"uid":"66e6bf38c458d404","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1671//#testresult/66e6bf38c458d404","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712700472706,"stop":1712700475114,"duration":2408}},{"uid":"ee7624137ffd7175","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1668//#testresult/ee7624137ffd7175","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712622627293,"stop":1712622629927,"duration":2634}},{"uid":"ac2a1bfe7e27f5c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1667//#testresult/ac2a1bfe7e27f5c4","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712536260856,"stop":1712536264307,"duration":3451}},{"uid":"5171ba0d7524b521","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1666//#testresult/5171ba0d7524b521","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712450023464,"stop":1712450025761,"duration":2297}},{"uid":"237b87a22341bc5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1665//#testresult/237b87a22341bc5c","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712363409363,"stop":1712363411707,"duration":2344}},{"uid":"d311c716cd33edc0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1664//#testresult/d311c716cd33edc0","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712276988023,"stop":1712276989753,"duration":1730}},{"uid":"699a73720bd0c415","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1660//#testresult/699a73720bd0c415","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712190693711,"stop":1712190695932,"duration":2221}},{"uid":"9982dd076de3b24d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1657//#testresult/9982dd076de3b24d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712137058029,"stop":1712137059552,"duration":1523}},{"uid":"f9f9a4ae4180c6c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1655//#testresult/f9f9a4ae4180c6c3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712104152145,"stop":1712104154063,"duration":1918}},{"uid":"2f18b400282a0c72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1654//#testresult/2f18b400282a0c72","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1712017772980,"stop":1712017774728,"duration":1748}},{"uid":"62a25090955b746a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1653//#testresult/62a25090955b746a","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1711931648726,"stop":1711931651163,"duration":2437}},{"uid":"6fb28c9430686942","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1652//#testresult/6fb28c9430686942","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1711845159311,"stop":1711845160962,"duration":1651}},{"uid":"9ed07d560504e3be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1649//#testresult/9ed07d560504e3be","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1711672179996,"stop":1711672182144,"duration":2148}},{"uid":"7f9c38b450a3fa06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1648//#testresult/7f9c38b450a3fa06","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1711585776283,"stop":1711585778072,"duration":1789}},{"uid":"41766383ed00884d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1646//#testresult/41766383ed00884d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1711499370379,"stop":1711499372794,"duration":2415}}]},"tags":[]},"source":"980fe3e9b75edc75.json","parameterValues":["SwaleBoroughCouncil","None","None"]}