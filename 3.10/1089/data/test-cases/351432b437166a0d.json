{"uid":"351432b437166a0d","name":"Validate Council Output [SouthNorfolkCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"484d0c5e2def185d103e4e0bbf55c9cd","time":{"start":1698878465198,"stop":1698878466806,"duration":1608},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fe3f51be950>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe3e7f9b970>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fe3e7f9b970>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fe3f51be950>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe3e7f9b970>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fe3e7f9b970>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","steps":[{"name":"Given the council: SouthNorfolkCouncil","time":{"start":1698878465198,"stop":1698878465199,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from SouthNorfolkCouncil","time":{"start":1698878465200,"stop":1698878466802,"duration":1602},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698878466803,"stop":1698878466803,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698878466803,"stop":1698878466806,"duration":3},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az245-318"},{"name":"thread","value":"2146-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthNorfolkCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":164,"unknown":0,"total":171},"items":[{"uid":"d51d389b74887eb7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1086//#testresult/d51d389b74887eb7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867717657,"stop":1698867719495,"duration":1838}},{"uid":"6da8d9a278235a55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1087//#testresult/6da8d9a278235a55","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867627442,"stop":1698867629707,"duration":2265}},{"uid":"2d38cf572f5fedfb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1081//#testresult/2d38cf572f5fedfb","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801756516,"stop":1698801758292,"duration":1776}},{"uid":"65e997db6e5645ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/65e997db6e5645ba","status":"passed","time":{"start":1698788645749,"stop":1698788647532,"duration":1783}},{"uid":"61b04f1ecd76cda5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/61b04f1ecd76cda5","status":"passed","time":{"start":1698715207938,"stop":1698715209201,"duration":1263}},{"uid":"41bd93fe72a10645","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/41bd93fe72a10645","status":"passed","time":{"start":1698701580646,"stop":1698701582565,"duration":1919}},{"uid":"25da86a7d1e77b23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/25da86a7d1e77b23","status":"passed","time":{"start":1698700371459,"stop":1698700373244,"duration":1785}},{"uid":"6897081ee5c902df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/6897081ee5c902df","status":"passed","time":{"start":1698693070665,"stop":1698693072294,"duration":1629}},{"uid":"9c3b2807640e284b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/9c3b2807640e284b","status":"passed","time":{"start":1698692880249,"stop":1698692881856,"duration":1607}},{"uid":"293e01d7982da2e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/293e01d7982da2e7","status":"passed","time":{"start":1698646574125,"stop":1698646576599,"duration":2474}},{"uid":"d326b34aa11a8058","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/d326b34aa11a8058","status":"passed","time":{"start":1698628619136,"stop":1698628621879,"duration":2743}},{"uid":"b5d3c568b2da13b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/b5d3c568b2da13b","status":"passed","time":{"start":1698615469631,"stop":1698615471388,"duration":1757}},{"uid":"8374370507ffc78f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/8374370507ffc78f","status":"passed","time":{"start":1698615303957,"stop":1698615305554,"duration":1597}},{"uid":"31b2d02d618b0b09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/31b2d02d618b0b09","status":"passed","time":{"start":1698542597518,"stop":1698542599883,"duration":2365}},{"uid":"7eede3223f840dc8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1053//#testresult/7eede3223f840dc8","status":"passed","time":{"start":1698455613057,"stop":1698455615527,"duration":2470}},{"uid":"c23d723c15e9f1a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1051//#testresult/c23d723c15e9f1a2","status":"passed","time":{"start":1698369284101,"stop":1698369286299,"duration":2198}},{"uid":"2f70e5d3d004abae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1050//#testresult/2f70e5d3d004abae","status":"passed","time":{"start":1698283125811,"stop":1698283131111,"duration":5300}},{"uid":"861ffe6daa91f122","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1049//#testresult/861ffe6daa91f122","status":"passed","time":{"start":1698196747320,"stop":1698196749058,"duration":1738}},{"uid":"45db633e5c11b1fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1048//#testresult/45db633e5c11b1fa","status":"passed","time":{"start":1698178484581,"stop":1698178486519,"duration":1938}},{"uid":"918ee715c01ff108","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1047//#testresult/918ee715c01ff108","status":"passed","time":{"start":1698178421393,"stop":1698178423080,"duration":1687}}]},"tags":[]},"source":"351432b437166a0d.json","parameterValues":["SouthNorfolkCouncil"]}