{"uid":"2e9252738112bc60","name":"Validate Council Output [LondonBoroughHounslow-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2d5d41f2f80a2dfc213e6858543e98d5","time":{"start":1703467261890,"stop":1703467264750,"duration":2860},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa389c0f910>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa37627cc10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa37627cc10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa389c0f910>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa37627cc10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa37627cc10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1703467261890,"stop":1703467261891,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from LondonBoroughHounslow using None and the None is set","time":{"start":1703467261891,"stop":1703467264747,"duration":2856},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1703467264747,"stop":1703467264747,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1703467264747,"stop":1703467264750,"duration":3},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1205-759"},{"name":"thread","value":"2690-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":87,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":87},"items":[{"uid":"b1f46ccf72cad051","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1292//#testresult/b1f46ccf72cad051","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703416539929,"stop":1703416543013,"duration":3084}},{"uid":"f9265d4bbfdba91f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1291//#testresult/f9265d4bbfdba91f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703416504082,"stop":1703416507011,"duration":2929}},{"uid":"35b3dc8ca23c1616","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1289//#testresult/35b3dc8ca23c1616","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703381052108,"stop":1703381055908,"duration":3800}},{"uid":"3bfe8aa7ebca49d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1287//#testresult/3bfe8aa7ebca49d6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703294075584,"stop":1703294084026,"duration":8442}},{"uid":"389dfffca6351630","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1282//#testresult/389dfffca6351630","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703207809893,"stop":1703207813024,"duration":3131}},{"uid":"b6be6b77fc5fa84b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1281//#testresult/b6be6b77fc5fa84b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703121578606,"stop":1703121582625,"duration":4019}},{"uid":"b615cdd718283b38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1280//#testresult/b615cdd718283b38","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703034410399,"stop":1703034415499,"duration":5100}},{"uid":"78c81071f5502f79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1279//#testresult/78c81071f5502f79","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703025046424,"stop":1703025048739,"duration":2315}},{"uid":"836f617516bcdee9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1276//#testresult/836f617516bcdee9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702948831570,"stop":1702948835135,"duration":3565}},{"uid":"139fd40fad42d606","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1275//#testresult/139fd40fad42d606","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702862373224,"stop":1702862375815,"duration":2591}},{"uid":"acb07f1f18dd4a83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1274//#testresult/acb07f1f18dd4a83","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702860009516,"stop":1702860012719,"duration":3203}},{"uid":"7e4680738b935ad4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1272//#testresult/7e4680738b935ad4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702843558174,"stop":1702843561377,"duration":3203}},{"uid":"f4656fdb1eb18622","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/f4656fdb1eb18622","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702809391668,"stop":1702809394946,"duration":3278}},{"uid":"bad9fcfa9da7dd4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/bad9fcfa9da7dd4d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702657252816,"stop":1702657255766,"duration":2950}},{"uid":"b195f92f63a2f5c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/b195f92f63a2f5c4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702603287981,"stop":1702603292135,"duration":4154}},{"uid":"8cb3e67d9c8ffc44","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/8cb3e67d9c8ffc44","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702540167608,"stop":1702540170343,"duration":2735}},{"uid":"57bdafd9b21bbb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1241//#testresult/57bdafd9b21bbb3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702516821152,"stop":1702516825038,"duration":3886}},{"uid":"c7c5c31bda21a1af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1238//#testresult/c7c5c31bda21a1af","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702447803120,"stop":1702447806120,"duration":3000}},{"uid":"e9b028db97b37fb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1237//#testresult/e9b028db97b37fb3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702447682593,"stop":1702447685046,"duration":2453}},{"uid":"cd657cf6f79be123","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1236//#testresult/cd657cf6f79be123","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702430335033,"stop":1702430337834,"duration":2801}}]},"tags":[]},"source":"2e9252738112bc60.json","parameterValues":["LondonBoroughHounslow","None","None"]}