{"uid":"473abf6f6b27cd39","name":"Validate Council Output [SwaleBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f1a7ca7ddbe9ab56a3a4fd742de0d5ec","time":{"start":1714523560004,"stop":1714523562418,"duration":2414},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f9a60027ac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9a5f1516f0>, 'council': 'SwaleBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f9a7041aa10>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:41: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f9a60027ac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9a5f1516f0>, 'council': 'SwaleBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f9a7041aa10>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:41: AttributeError","steps":[{"name":"Given the council: SwaleBoroughCouncil","time":{"start":1714523560004,"stop":1714523560005,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SwaleBoroughCouncil using None and the None is set","time":{"start":1714523560005,"stop":1714523562418,"duration":2413},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1493-512"},{"name":"thread","value":"2692-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwaleBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":262,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":266},"items":[{"uid":"d1624b59bfc7f899","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1734//#testresult/d1624b59bfc7f899","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1714437001597,"stop":1714437004606,"duration":3009}},{"uid":"7a1e5a4a52cb7fa2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1732//#testresult/7a1e5a4a52cb7fa2","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1714350728599,"stop":1714350730321,"duration":1722}},{"uid":"3b48420b2367c24f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1724//#testresult/3b48420b2367c24f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1714264422082,"stop":1714264423921,"duration":1839}},{"uid":"ce61a1991b47e613","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1722//#testresult/ce61a1991b47e613","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1714234281145,"stop":1714234282650,"duration":1505}},{"uid":"8e5cab7b073c94ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1714//#testresult/8e5cab7b073c94ab","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1714232905724,"stop":1714232908409,"duration":2685}},{"uid":"dd74a35e2e117bea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1713//#testresult/dd74a35e2e117bea","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1714177854639,"stop":1714177856669,"duration":2030}},{"uid":"83a032909aa64e8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1712//#testresult/83a032909aa64e8a","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1714091490132,"stop":1714091491913,"duration":1781}},{"uid":"3057a74c27b520b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1711//#testresult/3057a74c27b520b5","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1714005128079,"stop":1714005130072,"duration":1993}},{"uid":"aa11865b71c55612","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1710//#testresult/aa11865b71c55612","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713918662056,"stop":1713918664188,"duration":2132}},{"uid":"9c238d640bc61a64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1709//#testresult/9c238d640bc61a64","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713832704114,"stop":1713832706597,"duration":2483}},{"uid":"c3d9b289945aae49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1708//#testresult/c3d9b289945aae49","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713745872599,"stop":1713745875793,"duration":3194}},{"uid":"bf5ec7709c041f7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1707//#testresult/bf5ec7709c041f7e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713659528388,"stop":1713659530650,"duration":2262}},{"uid":"52cf989bf18801aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1706//#testresult/52cf989bf18801aa","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713573000933,"stop":1713573003666,"duration":2733}},{"uid":"582f8735d81ae8a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1702//#testresult/582f8735d81ae8a3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713486648280,"stop":1713486651203,"duration":2923}},{"uid":"7505402af2156fcb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1698//#testresult/7505402af2156fcb","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713400225962,"stop":1713400228236,"duration":2274}},{"uid":"e36fb9dcbebf9399","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1697//#testresult/e36fb9dcbebf9399","status":"failed","statusDetails":"ConnectionAbortedError: Could not parse council website.","time":{"start":1713313819211,"stop":1713313821053,"duration":1842}},{"uid":"47212826aefe440b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1696//#testresult/47212826aefe440b","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713252877688,"stop":1713252879871,"duration":2183}},{"uid":"c3a33519d1f690be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1695//#testresult/c3a33519d1f690be","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713227378176,"stop":1713227380476,"duration":2300}},{"uid":"487f5431dc5ae401","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1692//#testresult/487f5431dc5ae401","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713207889611,"stop":1713207891710,"duration":2099}},{"uid":"bbdcb8b76e091156","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1683//#testresult/bbdcb8b76e091156","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1713188429240,"stop":1713188431431,"duration":2191}}]},"tags":[]},"source":"473abf6f6b27cd39.json","parameterValues":["SwaleBoroughCouncil","None","None"]}