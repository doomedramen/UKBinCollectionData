{"uid":"ae625e5a6c4f92e4","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1714523391405,"stop":1714523401388,"duration":9983},"status":"failed","statusMessage":"ValueError: time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7fa87a7271c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa879674550>, 'council': 'KingstonUponThamesCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/KingstonUponThamesCouncil.py:57: in parse_data\n    datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024'\nformat = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7fa87a7271c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa879674550>, 'council': 'KingstonUponThamesCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/KingstonUponThamesCouncil.py:57: in parse_data\n    datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024'\nformat = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1714523391406,"stop":1714523391406,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1714523391406,"stop":1714523401388,"duration":9982},"status":"failed","statusMessage":"time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"ValueError: time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1493-512"},{"name":"thread","value":"2683-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":158,"broken":0,"skipped":0,"passed":111,"unknown":0,"total":269},"items":[{"uid":"7a5480415dd41710","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1734//#testresult/7a5480415dd41710","status":"passed","time":{"start":1714436844075,"stop":1714436853964,"duration":9889}},{"uid":"42283ea5a6922e09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1732//#testresult/42283ea5a6922e09","status":"passed","time":{"start":1714350546627,"stop":1714350553805,"duration":7178}},{"uid":"367717a12fae3ff7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1724//#testresult/367717a12fae3ff7","status":"passed","time":{"start":1714264315404,"stop":1714264324516,"duration":9112}},{"uid":"33f6cc6a053db6c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1722//#testresult/33f6cc6a053db6c7","status":"passed","time":{"start":1714234210549,"stop":1714234219373,"duration":8824}},{"uid":"fc570a945299bc20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1714//#testresult/fc570a945299bc20","status":"passed","time":{"start":1714232768294,"stop":1714232778305,"duration":10011}},{"uid":"9fbd56c9d5c0726","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1713//#testresult/9fbd56c9d5c0726","status":"passed","time":{"start":1714177681500,"stop":1714177688500,"duration":7000}},{"uid":"96062a1bb85ecda0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1712//#testresult/96062a1bb85ecda0","status":"passed","time":{"start":1714091276870,"stop":1714091286723,"duration":9853}},{"uid":"a9cd687d0f04ca3d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1711//#testresult/a9cd687d0f04ca3d","status":"passed","time":{"start":1714004957414,"stop":1714004964145,"duration":6731}},{"uid":"f2290e5ac207c1a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1710//#testresult/f2290e5ac207c1a3","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 24 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1713918495226,"stop":1713918504142,"duration":8916}},{"uid":"9e29bfd50c2a9e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1709//#testresult/9e29bfd50c2a9e8","status":"passed","time":{"start":1713832604521,"stop":1713832611507,"duration":6986}},{"uid":"517e8749096a9438","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1708//#testresult/517e8749096a9438","status":"passed","time":{"start":1713745731548,"stop":1713745739358,"duration":7810}},{"uid":"d0fc91cb1df3ca73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1707//#testresult/d0fc91cb1df3ca73","status":"passed","time":{"start":1713659381259,"stop":1713659392159,"duration":10900}},{"uid":"b3bae944f0a0a906","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1706//#testresult/b3bae944f0a0a906","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55cec999e863 <unknown>\n#1 0x55cec96948c6 <unknown>\n#2 0x55cec96df618 <unknown>\n#3 0x55cec96df6d1 <unknown>\n#4 0x55cec9722744 <unknown>\n#5 0x55cec97015cd <unknown>\n#6 0x55cec971fc19 <unknown>\n#7 0x55cec9701343 <unknown>\n#8 0x55cec96d2593 <unknown>\n#9 0x55cec96d2f5e <unknown>\n#10 0x55cec996284b <unknown>\n#11 0x55cec99667a5 <unknown>\n#12 0x55cec9950571 <unknown>\n#13 0x55cec9967332 <unknown>\n#14 0x55cec993587f <unknown>\n#15 0x55cec998d728 <unknown>\n#16 0x55cec998d8fb <unknown>\n#17 0x55cec999d9b4 <unknown>\n#18 0x7f8535c94ac3 <unknown>","time":{"start":1713572810582,"stop":1713572830061,"duration":19479}},{"uid":"ee7d4fd42d708c0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1702//#testresult/ee7d4fd42d708c0e","status":"passed","time":{"start":1713486468254,"stop":1713486480381,"duration":12127}},{"uid":"6d48d921925dc371","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1698//#testresult/6d48d921925dc371","status":"passed","time":{"start":1713400051123,"stop":1713400060854,"duration":9731}},{"uid":"9dc752da21c5a4ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1697//#testresult/9dc752da21c5a4ce","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 17 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1713313658258,"stop":1713313667302,"duration":9044}},{"uid":"a6ac6dcfe25a74ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1696//#testresult/a6ac6dcfe25a74ef","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55b8d1029863 <unknown>\n#1 0x55b8d0d1f8c6 <unknown>\n#2 0x55b8d0d6a618 <unknown>\n#3 0x55b8d0d6a6d1 <unknown>\n#4 0x55b8d0dad744 <unknown>\n#5 0x55b8d0d8c5cd <unknown>\n#6 0x55b8d0daac19 <unknown>\n#7 0x55b8d0d8c343 <unknown>\n#8 0x55b8d0d5d593 <unknown>\n#9 0x55b8d0d5df5e <unknown>\n#10 0x55b8d0fed84b <unknown>\n#11 0x55b8d0ff17a5 <unknown>\n#12 0x55b8d0fdb571 <unknown>\n#13 0x55b8d0ff2332 <unknown>\n#14 0x55b8d0fc087f <unknown>\n#15 0x55b8d1018728 <unknown>\n#16 0x55b8d10188fb <unknown>\n#17 0x55b8d10289b4 <unknown>\n#18 0x7fc1f9c94ac3 <unknown>","time":{"start":1713252821628,"stop":1713252842277,"duration":20649}},{"uid":"9e25dfc3fa0280d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1695//#testresult/9e25dfc3fa0280d","status":"passed","time":{"start":1713227217766,"stop":1713227227472,"duration":9706}},{"uid":"10e81fc539388d9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1692//#testresult/10e81fc539388d9b","status":"passed","time":{"start":1713207786565,"stop":1713207795359,"duration":8794}},{"uid":"7cbddaa682dc11b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1683//#testresult/7cbddaa682dc11b8","status":"passed","time":{"start":1713188330916,"stop":1713188340931,"duration":10015}}]},"tags":[]},"source":"ae625e5a6c4f92e4.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}