{"uid":"4ce2017ff218f012","name":"Validate Council Output [StokeOnTrentCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"17b62d612f29f2bda9703e241b337994","time":{"start":1702862471270,"stop":1702862471768,"duration":498},"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f18f203f520>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f18e07c23b0>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:64: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f18df562800>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\"\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:50: ConnectionAbortedError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f18f203f520>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f18e07c23b0>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:64: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f18df562800>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\"\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:50: ConnectionAbortedError","steps":[{"name":"Given the council: StokeOnTrentCityCouncil","time":{"start":1702862471270,"stop":1702862471271,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from StokeOnTrentCityCouncil using None and the None is set","time":{"start":1702862471271,"stop":1702862471768,"duration":497},"status":"failed","statusMessage":"Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az849-155"},{"name":"thread","value":"2838-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StokeOnTrentCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":36,"unknown":0,"total":38},"items":[{"uid":"fa3e2654dd1c975a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1274//#testresult/fa3e2654dd1c975a","status":"passed","time":{"start":1702860092512,"stop":1702860095059,"duration":2547}},{"uid":"bcd9d2b3708f9898","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1272//#testresult/bcd9d2b3708f9898","status":"passed","time":{"start":1702843641170,"stop":1702843642265,"duration":1095}},{"uid":"4e0ad6fb82f87093","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/4e0ad6fb82f87093","status":"passed","time":{"start":1702809499645,"stop":1702809501159,"duration":1514}},{"uid":"7f2105b171b41bcb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/7f2105b171b41bcb","status":"passed","time":{"start":1702657288129,"stop":1702657289124,"duration":995}},{"uid":"51932380ebfd7fbb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/51932380ebfd7fbb","status":"passed","time":{"start":1702603264431,"stop":1702603266992,"duration":2561}},{"uid":"31d7945de33bae0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/31d7945de33bae0a","status":"passed","time":{"start":1702540123644,"stop":1702540125358,"duration":1714}},{"uid":"7b4445d799a10e66","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1241//#testresult/7b4445d799a10e66","status":"passed","time":{"start":1702516778519,"stop":1702516780319,"duration":1800}},{"uid":"e8bed13da6dcda4e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1238//#testresult/e8bed13da6dcda4e","status":"passed","time":{"start":1702447612481,"stop":1702447614240,"duration":1759}},{"uid":"f15e95920f76869b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1237//#testresult/f15e95920f76869b","status":"passed","time":{"start":1702447516149,"stop":1702447517345,"duration":1196}},{"uid":"67616618d316e5c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1236//#testresult/67616618d316e5c5","status":"passed","time":{"start":1702430469964,"stop":1702430471539,"duration":1575}},{"uid":"4adffa043a88fb2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1232//#testresult/4adffa043a88fb2c","status":"passed","time":{"start":1702366569617,"stop":1702366571467,"duration":1850}},{"uid":"c6ad3cc6ba348c7f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1231//#testresult/c6ad3cc6ba348c7f","status":"passed","time":{"start":1702344037783,"stop":1702344040585,"duration":2802}},{"uid":"71cce9bafd805e21","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1229//#testresult/71cce9bafd805e21","status":"passed","time":{"start":1702257627405,"stop":1702257628617,"duration":1212}},{"uid":"1e00a4ece37d5f8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1228//#testresult/1e00a4ece37d5f8a","status":"passed","time":{"start":1702171572697,"stop":1702171574004,"duration":1307}},{"uid":"a15993bd239928f1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/a15993bd239928f1","status":"passed","time":{"start":1702084748567,"stop":1702084749716,"duration":1149}},{"uid":"3178f3a56c5cfbb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1225//#testresult/3178f3a56c5cfbb9","status":"passed","time":{"start":1702066815451,"stop":1702066816787,"duration":1336}},{"uid":"4187c7a29e07763f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1222//#testresult/4187c7a29e07763f","status":"passed","time":{"start":1702054453600,"stop":1702054454621,"duration":1021}},{"uid":"d2324de909f17c93","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1219//#testresult/d2324de909f17c93","status":"passed","time":{"start":1701998490833,"stop":1701998492483,"duration":1650}},{"uid":"e48bcebf69d40d97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1218//#testresult/e48bcebf69d40d97","status":"passed","time":{"start":1701990454921,"stop":1701990456506,"duration":1585}},{"uid":"9d41b2ea8f8bce64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1217//#testresult/9d41b2ea8f8bce64","status":"passed","time":{"start":1701990414719,"stop":1701990415879,"duration":1160}}]},"tags":[]},"source":"4ce2017ff218f012.json","parameterValues":["StokeOnTrentCityCouncil","None","None"]}