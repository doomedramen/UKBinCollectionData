{"uid":"90b059ae807b2b6b","name":"Validate Council Output [NewcastleCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a63cb1391c4aa4a9ce00ac5e7dcb85fb","time":{"start":1704542793114,"stop":1704542831413,"duration":38299},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7ffbdbd67640>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ffbdb187a60>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7ffbdb187a60>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7ffbdbd67640>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ffbdb187a60>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7ffbdb187a60>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1704542793114,"stop":1704542793114,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NewcastleCityCouncil using None and the None is set","time":{"start":1704542793115,"stop":1704542831410,"duration":38295},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704542831410,"stop":1704542831411,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704542831411,"stop":1704542831413,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1272-858"},{"name":"thread","value":"2723-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":25,"broken":0,"skipped":0,"passed":115,"unknown":0,"total":140},"items":[{"uid":"c77171357d0a437b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1408//#testresult/c77171357d0a437b","status":"passed","time":{"start":1704496280058,"stop":1704496284983,"duration":4925}},{"uid":"d4f982e80c85e0f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1406//#testresult/d4f982e80c85e0f7","status":"passed","time":{"start":1704453462756,"stop":1704453472240,"duration":9484}},{"uid":"1a5488679a73685a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1407//#testresult/1a5488679a73685a","status":"passed","time":{"start":1704453468244,"stop":1704453477257,"duration":9013}},{"uid":"aff6296b02f34df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1405//#testresult/aff6296b02f34df","status":"passed","time":{"start":1704452667727,"stop":1704452687581,"duration":19854}},{"uid":"1898111067e9e8e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1400//#testresult/1898111067e9e8e0","status":"passed","time":{"start":1704443808299,"stop":1704443814034,"duration":5735}},{"uid":"8c716ad5d9f6901f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1399//#testresult/8c716ad5d9f6901f","status":"passed","time":{"start":1704443399084,"stop":1704443406631,"duration":7547}},{"uid":"237f49f0126fbb66","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1397//#testresult/237f49f0126fbb66","status":"passed","time":{"start":1704442532947,"stop":1704442542343,"duration":9396}},{"uid":"be99e5c011f40b47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1390//#testresult/be99e5c011f40b47","status":"passed","time":{"start":1704417584152,"stop":1704417596320,"duration":12168}},{"uid":"a69076f903cfc878","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1379//#testresult/a69076f903cfc878","status":"passed","time":{"start":1704406072546,"stop":1704406078636,"duration":6090}},{"uid":"135af58caa037269","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1378//#testresult/135af58caa037269","status":"passed","time":{"start":1704406010597,"stop":1704406018388,"duration":7791}},{"uid":"e132d62744eed387","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1376//#testresult/e132d62744eed387","status":"passed","time":{"start":1704398851143,"stop":1704398858316,"duration":7173}},{"uid":"f13f162be73b10cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1375//#testresult/f13f162be73b10cf","status":"passed","time":{"start":1704398792451,"stop":1704398799117,"duration":6666}},{"uid":"4e6933403f4f2d59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1373//#testresult/4e6933403f4f2d59","status":"passed","time":{"start":1704388386080,"stop":1704388391784,"duration":5704}},{"uid":"b7a1f310d507bf45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1372//#testresult/b7a1f310d507bf45","status":"passed","time":{"start":1704388310143,"stop":1704388315408,"duration":5265}},{"uid":"b401ffcb99d8cdb0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1369//#testresult/b401ffcb99d8cdb0","status":"passed","time":{"start":1704378414073,"stop":1704378419649,"duration":5576}},{"uid":"dfb1c202d6f5341b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1367//#testresult/dfb1c202d6f5341b","status":"passed","time":{"start":1704378064792,"stop":1704378069965,"duration":5173}},{"uid":"afafd8d0521bc869","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1366//#testresult/afafd8d0521bc869","status":"passed","time":{"start":1704375907465,"stop":1704375913136,"duration":5671}},{"uid":"ddaddd9174f97203","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1363//#testresult/ddaddd9174f97203","status":"passed","time":{"start":1704356806624,"stop":1704356813792,"duration":7168}},{"uid":"91b36be5b8b1a384","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1361//#testresult/91b36be5b8b1a384","status":"passed","time":{"start":1704355960817,"stop":1704355966399,"duration":5582}},{"uid":"656b63ab4449cdc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1359//#testresult/656b63ab4449cdc","status":"passed","time":{"start":1704331107550,"stop":1704331124634,"duration":17084}}]},"tags":[]},"source":"90b059ae807b2b6b.json","parameterValues":["NewcastleCityCouncil","None","None"]}