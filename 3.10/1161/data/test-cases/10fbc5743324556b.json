{"uid":"10fbc5743324556b","name":"Validate Council Output [HuntingdonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c2822894b8c5df9c3b14f6331988dcc1","time":{"start":1701279637704,"stop":1701279639960,"duration":2256},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc0b08cb400>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc09d077670>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc09d077670>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc0b08cb400>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc09d077670>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc09d077670>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: HuntingdonDistrictCouncil","time":{"start":1701279637704,"stop":1701279637705,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from HuntingdonDistrictCouncil using None and the None is set","time":{"start":1701279637705,"stop":1701279639957,"duration":2252},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701279639957,"stop":1701279639958,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701279639958,"stop":1701279639960,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1247-986"},{"name":"thread","value":"2721-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"HuntingdonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":32,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":32},"items":[{"uid":"d3298b636e516c0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1162//#testresult/d3298b636e516c0c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701279365452,"stop":1701279366990,"duration":1538}},{"uid":"fc47d424919733bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1156//#testresult/fc47d424919733bf","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701220733989,"stop":1701220735112,"duration":1123}},{"uid":"c9da901f22311801","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1155//#testresult/c9da901f22311801","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701134388603,"stop":1701134389945,"duration":1342}},{"uid":"ca88d5dacdfb90d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1152//#testresult/ca88d5dacdfb90d3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701047926550,"stop":1701047928120,"duration":1570}},{"uid":"1246b7fbaa041669","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1151//#testresult/1246b7fbaa041669","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036157313,"stop":1701036158629,"duration":1316}},{"uid":"166ed29bd9223270","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1150//#testresult/166ed29bd9223270","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036154568,"stop":1701036155629,"duration":1061}},{"uid":"29fa858a29d633f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1148//#testresult/29fa858a29d633f6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700961927942,"stop":1700961929887,"duration":1945}},{"uid":"57ce7646ea478c4c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1147//#testresult/57ce7646ea478c4c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700874933568,"stop":1700874934612,"duration":1044}},{"uid":"f92a3ce36b0697fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1146//#testresult/f92a3ce36b0697fb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700788593864,"stop":1700788595507,"duration":1643}},{"uid":"dad76d3f19347c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1145//#testresult/dad76d3f19347c1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700702311214,"stop":1700702312713,"duration":1499}},{"uid":"75d285a0d35e1f9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1143//#testresult/75d285a0d35e1f9d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646377668,"stop":1700646378820,"duration":1152}},{"uid":"9e8672cdc983462d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1141//#testresult/9e8672cdc983462d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700616064409,"stop":1700616066011,"duration":1602}},{"uid":"1deab721bca72637","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1136//#testresult/1deab721bca72637","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700529888166,"stop":1700529889724,"duration":1558}},{"uid":"53a55191e628cfa8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/53a55191e628cfa8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443141023,"stop":1700443154071,"duration":13048}},{"uid":"37400ecba1d2dea2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/37400ecba1d2dea2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700357001306,"stop":1700357002458,"duration":1152}},{"uid":"954e564d22bbfb4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1133//#testresult/954e564d22bbfb4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270307499,"stop":1700270309115,"duration":1616}},{"uid":"8ae72412f9142a5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1132//#testresult/8ae72412f9142a5b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183935469,"stop":1700183936675,"duration":1206}},{"uid":"68d79880962e477c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1131//#testresult/68d79880962e477c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097556976,"stop":1700097558683,"duration":1707}},{"uid":"4e82837a8bfb93a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1129//#testresult/4e82837a8bfb93a9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700011137825,"stop":1700011139647,"duration":1822}},{"uid":"c97aba12765d2cd5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1128//#testresult/c97aba12765d2cd5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699924632870,"stop":1699924635680,"duration":2810}}]},"tags":[]},"source":"10fbc5743324556b.json","parameterValues":["HuntingdonDistrictCouncil","None","None"]}