{"uid":"4cd936bc50533289","name":"Validate Council Output [SouthOxfordshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7f57931d644fea4dd7a0419f9995c47e","time":{"start":1704111570143,"stop":1704111574432,"duration":4289},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0931bb7be0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f091e13eaa0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f091e13eaa0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0931bb7be0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f091e13eaa0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f091e13eaa0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: SouthOxfordshireCouncil","time":{"start":1704111570144,"stop":1704111570144,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SouthOxfordshireCouncil using None and the None is set","time":{"start":1704111570144,"stop":1704111574430,"duration":4286},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704111574430,"stop":1704111574430,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704111574430,"stop":1704111574432,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az566-498"},{"name":"thread","value":"2686-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthOxfordshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":27,"broken":0,"skipped":0,"passed":79,"unknown":0,"total":106},"items":[{"uid":"49fec0da4a85d4a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1332//#testresult/49fec0da4a85d4a4","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704111468187,"stop":1704111471880,"duration":3693}},{"uid":"acf09adf13fe499c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1330//#testresult/acf09adf13fe499c","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704100125805,"stop":1704100133894,"duration":8089}},{"uid":"dc49dfe7afb71aa6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1329//#testresult/dc49dfe7afb71aa6","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704072403978,"stop":1704072408234,"duration":4256}},{"uid":"3b24f92901f8119a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1327//#testresult/3b24f92901f8119a","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1704050548746,"stop":1704050553667,"duration":4921}},{"uid":"71167a2e4db5e2bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1325//#testresult/71167a2e4db5e2bc","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1704044068588,"stop":1704044072983,"duration":4395}},{"uid":"c9ad5f0792e2ae9a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1320//#testresult/c9ad5f0792e2ae9a","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703985971780,"stop":1703985974754,"duration":2974}},{"uid":"9fa81310841a6276","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1316//#testresult/9fa81310841a6276","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703899111248,"stop":1703899115475,"duration":4227}},{"uid":"44a4ecf0f5459eb2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1314//#testresult/44a4ecf0f5459eb2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703853636135,"stop":1703853739959,"duration":103824}},{"uid":"94cb0ff511d56382","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1311//#testresult/94cb0ff511d56382","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703851281768,"stop":1703851385457,"duration":103689}},{"uid":"a983fd18906edfae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1312//#testresult/a983fd18906edfae","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703851267465,"stop":1703851371181,"duration":103716}},{"uid":"fecb24b3880e1aee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1309//#testresult/fecb24b3880e1aee","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703812157616,"stop":1703812260969,"duration":103353}},{"uid":"eaf580a7aa57fd9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1306//#testresult/eaf580a7aa57fd9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703756309983,"stop":1703756413599,"duration":103616}},{"uid":"3f934f095f0c0232","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1305//#testresult/3f934f095f0c0232","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703726276058,"stop":1703726379546,"duration":103488}},{"uid":"dc64d782661eed7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1304//#testresult/dc64d782661eed7a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703717517715,"stop":1703717621425,"duration":103710}},{"uid":"2743574b30243642","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1303//#testresult/2743574b30243642","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703717391207,"stop":1703717494524,"duration":103317}},{"uid":"a4aef967e9e258e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1301//#testresult/a4aef967e9e258e","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703639853670,"stop":1703639858317,"duration":4647}},{"uid":"3d6327be52b12190","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1300//#testresult/3d6327be52b12190","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703553456631,"stop":1703553460768,"duration":4137}},{"uid":"7622f2d9eac4c3f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1298//#testresult/7622f2d9eac4c3f0","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703541283657,"stop":1703541286824,"duration":3167}},{"uid":"cf87ef4d286ca351","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1295//#testresult/cf87ef4d286ca351","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703467307810,"stop":1703467311678,"duration":3868}},{"uid":"8aab15ca20a23044","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1292//#testresult/8aab15ca20a23044","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703416521388,"stop":1703416525448,"duration":4060}}]},"tags":[]},"source":"4cd936bc50533289.json","parameterValues":["SouthOxfordshireCouncil","None","None"]}