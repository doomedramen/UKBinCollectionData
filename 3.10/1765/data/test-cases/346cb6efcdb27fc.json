{"uid":"346cb6efcdb27fc","name":"Validate Council Output [MidSussexDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"603913cb01d56f40fcd70fa6d1ec6273","time":{"start":1715560250645,"stop":1715560251355,"duration":710},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7f0189d93130>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0188d66290>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7f01897d3a00>\npage = ''\nkwargs = {'headless': True, 'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:62: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7f0189d93130>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0188d66290>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7f01897d3a00>\npage = ''\nkwargs = {'headless': True, 'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:62: AttributeError","steps":[{"name":"Given the council: MidSussexDistrictCouncil","time":{"start":1715560250645,"stop":1715560250645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MidSussexDistrictCouncil using None and the None is set","time":{"start":1715560250646,"stop":1715560251355,"duration":709},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all_next'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all_next'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1116-338"},{"name":"thread","value":"2733-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MidSussexDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":278,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":278},"items":[{"uid":"e2122f184b9d4355","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1764//#testresult/e2122f184b9d4355","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1715473882337,"stop":1715473883306,"duration":969}},{"uid":"b8e10c2b7821493e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1763//#testresult/b8e10c2b7821493e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1715387575497,"stop":1715387576540,"duration":1043}},{"uid":"e7ee9d484103bc8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1762//#testresult/e7ee9d484103bc8f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1715300916539,"stop":1715300917932,"duration":1393}},{"uid":"113ea1c399d45d65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1760//#testresult/113ea1c399d45d65","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1715285143608,"stop":1715285144509,"duration":901}},{"uid":"5bd428d00293a601","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1756//#testresult/5bd428d00293a601","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1715214531616,"stop":1715214532288,"duration":672}},{"uid":"3a10782c969266ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1743//#testresult/3a10782c969266ad","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1715041770057,"stop":1715041770731,"duration":674}},{"uid":"a95a2f8efda90e0b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1742//#testresult/a95a2f8efda90e0b","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714955412628,"stop":1714955413509,"duration":881}},{"uid":"c3c8b111484a82b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1741//#testresult/c3c8b111484a82b7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714869135591,"stop":1714869136491,"duration":900}},{"uid":"fe68da508bc07a88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1740//#testresult/fe68da508bc07a88","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714782504028,"stop":1714782505171,"duration":1143}},{"uid":"8b73a46ee32d72b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1739//#testresult/8b73a46ee32d72b8","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714696134671,"stop":1714696135410,"duration":739}},{"uid":"617a939e64400c0f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1738//#testresult/617a939e64400c0f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714609743036,"stop":1714609743875,"duration":839}},{"uid":"ef19aa624d46ad51","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1735//#testresult/ef19aa624d46ad51","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714523486643,"stop":1714523487907,"duration":1264}},{"uid":"15d45f5311c3deb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1734//#testresult/15d45f5311c3deb9","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714436910727,"stop":1714436911790,"duration":1063}},{"uid":"2ec818b394f5b05e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1732//#testresult/2ec818b394f5b05e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714350658359,"stop":1714350660204,"duration":1845}},{"uid":"5dc00ed910754019","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1724//#testresult/5dc00ed910754019","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714264347119,"stop":1714264347703,"duration":584}},{"uid":"f2f752772cec835d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1722//#testresult/f2f752772cec835d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714234209880,"stop":1714234210788,"duration":908}},{"uid":"6cfcd016c8e5f44e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1714//#testresult/6cfcd016c8e5f44e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714232820118,"stop":1714232821996,"duration":1878}},{"uid":"98ddd55e59f607be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1713//#testresult/98ddd55e59f607be","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714177730167,"stop":1714177730829,"duration":662}},{"uid":"480ea0b7f86a6bf0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1712//#testresult/480ea0b7f86a6bf0","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714091350198,"stop":1714091351139,"duration":941}},{"uid":"55b81b1c0490fa95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1711//#testresult/55b81b1c0490fa95","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1714005005351,"stop":1714005006162,"duration":811}}]},"tags":[]},"source":"346cb6efcdb27fc.json","parameterValues":["MidSussexDistrictCouncil","None","None"]}