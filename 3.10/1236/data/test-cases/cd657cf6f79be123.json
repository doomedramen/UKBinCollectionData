{"uid":"cd657cf6f79be123","name":"Validate Council Output [LondonBoroughHounslow-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2d5d41f2f80a2dfc213e6858543e98d5","time":{"start":1702430335033,"stop":1702430337834,"duration":2801},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f152e553e20>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f151b970820>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f151b970820>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f152e553e20>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f151b970820>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f151b970820>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1702430335034,"stop":1702430335034,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"When we scrape the data from LondonBoroughHounslow using None and the None is set","time":{"start":1702430335034,"stop":1702430337829,"duration":2795},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"Then the result is valid json","time":{"start":1702430337830,"stop":1702430337830,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"And the output should validate against the schema","time":{"start":1702430337830,"stop":1702430337834,"duration":4},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":4},"afterStages":[],"labels":[{"name":"host","value":"fv-az1542-548"},{"name":"thread","value":"2754-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":67,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":67},"items":[{"uid":"3c188be7ff204319","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1232//#testresult/3c188be7ff204319","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702366506317,"stop":1702366508693,"duration":2376}},{"uid":"cb9dcdbda9ab1edb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1231//#testresult/cb9dcdbda9ab1edb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702343964696,"stop":1702343968224,"duration":3528}},{"uid":"3db20b45129023f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1229//#testresult/3db20b45129023f8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702257557439,"stop":1702257560341,"duration":2902}},{"uid":"5244f75cbd986ca0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1228//#testresult/5244f75cbd986ca0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702171432138,"stop":1702171435942,"duration":3804}},{"uid":"8792586738b611f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/8792586738b611f2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702084648225,"stop":1702084670385,"duration":22160}},{"uid":"2ebd800250430c53","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1225//#testresult/2ebd800250430c53","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702066733801,"stop":1702066737025,"duration":3224}},{"uid":"ebf7671c9f2a2f0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1222//#testresult/ebf7671c9f2a2f0e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702054371773,"stop":1702054374453,"duration":2680}},{"uid":"785ade15b54c18eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1219//#testresult/785ade15b54c18eb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701998383794,"stop":1701998387097,"duration":3303}},{"uid":"a4fb2c91aff6c8e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1218//#testresult/a4fb2c91aff6c8e8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701990379548,"stop":1701990382439,"duration":2891}},{"uid":"a40a7f434d18ca19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1217//#testresult/a40a7f434d18ca19","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701990343981,"stop":1701990346538,"duration":2557}},{"uid":"1497410272480395","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1215//#testresult/1497410272480395","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701943125829,"stop":1701943130555,"duration":4726}},{"uid":"5058ba275e37b682","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1214//#testresult/5058ba275e37b682","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701936686886,"stop":1701936690025,"duration":3139}},{"uid":"d183d80cd574733e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1213//#testresult/d183d80cd574733e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701936569040,"stop":1701936571775,"duration":2735}},{"uid":"e11111ccb21cecb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1211//#testresult/e11111ccb21cecb3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701912174247,"stop":1701912177392,"duration":3145}},{"uid":"5fb9a234eca63b18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1209//#testresult/5fb9a234eca63b18","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701904986978,"stop":1701904989397,"duration":2419}},{"uid":"40cd7b0e763bbb33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1201//#testresult/40cd7b0e763bbb33","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701882648782,"stop":1701882651154,"duration":2372}},{"uid":"854846b2aa6e81cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1199//#testresult/854846b2aa6e81cc","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701825686540,"stop":1701825689800,"duration":3260}},{"uid":"c2e660caedb19b9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1198//#testresult/c2e660caedb19b9d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701795735099,"stop":1701795738262,"duration":3163}},{"uid":"294c51eb3ba2add2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1197//#testresult/294c51eb3ba2add2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701795624581,"stop":1701795626971,"duration":2390}},{"uid":"982491f41f0cccf8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1193//#testresult/982491f41f0cccf8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701758622917,"stop":1701758625656,"duration":2739}}]},"tags":[]},"source":"cd657cf6f79be123.json","parameterValues":["LondonBoroughHounslow","None","None"]}