{"uid":"3912010b6a949e0e","name":"Validate Council Output [RushmoorCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9e9824bacc749482fde9fb74bc6e375c","time":{"start":1701414410391,"stop":1701414411275,"duration":884},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f80e12969e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f80ce7a70a0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f80ce7a70a0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f80e12969e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f80ce7a70a0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f80ce7a70a0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: RushmoorCouncil","time":{"start":1701414410391,"stop":1701414410392,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from RushmoorCouncil using None and the None is set","time":{"start":1701414410392,"stop":1701414411273,"duration":881},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701414411273,"stop":1701414411273,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701414411273,"stop":1701414411275,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az847-521"},{"name":"thread","value":"2717-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RushmoorCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":37,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":37},"items":[{"uid":"f68c41455b02f96c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1174//#testresult/f68c41455b02f96c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701414358783,"stop":1701414359617,"duration":834}},{"uid":"3366e6c7cf0f1b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1173//#testresult/3366e6c7cf0f1b5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701393980276,"stop":1701393981152,"duration":876}},{"uid":"986a1659d61d76b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1169//#testresult/986a1659d61d76b7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701353394311,"stop":1701353395317,"duration":1006}},{"uid":"56480067e9781c9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1163//#testresult/56480067e9781c9d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701307128019,"stop":1701307128861,"duration":842}},{"uid":"7038764d6c581bce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1161//#testresult/7038764d6c581bce","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701279424653,"stop":1701279426052,"duration":1399}},{"uid":"f6f6f86013931130","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1162//#testresult/f6f6f86013931130","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701279385793,"stop":1701279387030,"duration":1237}},{"uid":"a950c23d0d2d58b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1156//#testresult/a950c23d0d2d58b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701220802235,"stop":1701220803110,"duration":875}},{"uid":"8da9cb8a296c9eb8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1155//#testresult/8da9cb8a296c9eb8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701134406060,"stop":1701134407051,"duration":991}},{"uid":"5535661a204171a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1152//#testresult/5535661a204171a1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701047967255,"stop":1701047968471,"duration":1216}},{"uid":"bca20ab663927973","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1151//#testresult/bca20ab663927973","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036190870,"stop":1701036191890,"duration":1020}},{"uid":"70cc7b10f1a4a1f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1150//#testresult/70cc7b10f1a4a1f8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036183832,"stop":1701036184732,"duration":900}},{"uid":"59356d1f66fd9a59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1148//#testresult/59356d1f66fd9a59","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700961780036,"stop":1700961780932,"duration":896}},{"uid":"b35daf8c78441f5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1147//#testresult/b35daf8c78441f5d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700874977637,"stop":1700874978501,"duration":864}},{"uid":"e0b4e110dd456f9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1146//#testresult/e0b4e110dd456f9d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700788627786,"stop":1700788629128,"duration":1342}},{"uid":"3b0a86121bb07e64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1145//#testresult/3b0a86121bb07e64","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700702332324,"stop":1700702333191,"duration":867}},{"uid":"60aa10af9010b10d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1143//#testresult/60aa10af9010b10d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646400605,"stop":1700646401245,"duration":640}},{"uid":"7f31aecf8f71a6d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1141//#testresult/7f31aecf8f71a6d3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700616087663,"stop":1700616088605,"duration":942}},{"uid":"51b5a16ea8dca9a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1136//#testresult/51b5a16ea8dca9a2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700529737244,"stop":1700529738541,"duration":1297}},{"uid":"bc9e62db124f6156","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/bc9e62db124f6156","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443196157,"stop":1700443197512,"duration":1355}},{"uid":"1956d418116cc247","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/1956d418116cc247","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700357024848,"stop":1700357026089,"duration":1241}}]},"tags":[]},"source":"3912010b6a949e0e.json","parameterValues":["RushmoorCouncil","None","None"]}