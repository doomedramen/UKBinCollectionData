{"uid":"2004e899fec05803","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1704111439947,"stop":1704111453609,"duration":13662},"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55cc0a48af83 <unknown>\n#1 0x55cc0a143b2b <unknown>\n#2 0x55cc0a18ceff <unknown>\n#3 0x55cc0a18b1a0 <unknown>\n#4 0x55cc0a1bd0b2 <unknown>\n#5 0x55cc0a186b49 <unknown>\n#6 0x55cc0a1bd4ce <unknown>\n#7 0x55cc0a1dc006 <unknown>\n#8 0x55cc0a1bce53 <unknown>\n#9 0x55cc0a184dd4 <unknown>\n#10 0x55cc0a1861de <unknown>\n#11 0x55cc0a44f531 <unknown>\n#12 0x55cc0a453455 <unknown>\n#13 0x55cc0a43bf55 <unknown>\n#14 0x55cc0a4540ef <unknown>\n#15 0x55cc0a41f99f <unknown>\n#16 0x55cc0a478008 <unknown>\n#17 0x55cc0a4781d7 <unknown>\n#18 0x55cc0a48a124 <unknown>\n#19 0x7f4400694ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f056cc42f80>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f055b1655d0>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:76: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f055af51a50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55cc0a4781d7 \\\\u003Cunknown>\\\\n#18 0x55cc0a48a124 \\\\u003Cunknown>\\\\n#19 0x7f4400694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55cc0a48af83 <unknown>\nE       #1 0x55cc0a143b2b <unknown>\nE       #2 0x55cc0a18ceff <unknown>\nE       #3 0x55cc0a18b1a0 <unknown>\nE       #4 0x55cc0a1bd0b2 <unknown>\nE       #5 0x55cc0a186b49 <unknown>\nE       #6 0x55cc0a1bd4ce <unknown>\nE       #7 0x55cc0a1dc006 <unknown>\nE       #8 0x55cc0a1bce53 <unknown>\nE       #9 0x55cc0a184dd4 <unknown>\nE       #10 0x55cc0a1861de <unknown>\nE       #11 0x55cc0a44f531 <unknown>\nE       #12 0x55cc0a453455 <unknown>\nE       #13 0x55cc0a43bf55 <unknown>\nE       #14 0x55cc0a4540ef <unknown>\nE       #15 0x55cc0a41f99f <unknown>\nE       #16 0x55cc0a478008 <unknown>\nE       #17 0x55cc0a4781d7 <unknown>\nE       #18 0x55cc0a48a124 <unknown>\nE       #19 0x7f4400694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55cc0a48af83 <unknown>\n#1 0x55cc0a143b2b <unknown>\n#2 0x55cc0a18ceff <unknown>\n#3 0x55cc0a18b1a0 <unknown>\n#4 0x55cc0a1bd0b2 <unknown>\n#5 0x55cc0a186b49 <unknown>\n#6 0x55cc0a1bd4ce <unknown>\n#7 0x55cc0a1dc006 <unknown>\n#8 0x55cc0a1bce53 <unknown>\n#9 0x55cc0a184dd4 <unknown>\n#10 0x55cc0a1861de <unknown>\n#11 0x55cc0a44f531 <unknown>\n#12 0x55cc0a453455 <unknown>\n#13 0x55cc0a43bf55 <unknown>\n#14 0x55cc0a4540ef <unknown>\n#15 0x55cc0a41f99f <unknown>\n#16 0x55cc0a478008 <unknown>\n#17 0x55cc0a4781d7 <unknown>\n#18 0x55cc0a48a124 <unknown>\n#19 0x7f4400694ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f056cc42f80>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f055b1655d0>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:76: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f055af51a50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55cc0a4781d7 \\\\u003Cunknown>\\\\n#18 0x55cc0a48a124 \\\\u003Cunknown>\\\\n#19 0x7f4400694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55cc0a48af83 <unknown>\nE       #1 0x55cc0a143b2b <unknown>\nE       #2 0x55cc0a18ceff <unknown>\nE       #3 0x55cc0a18b1a0 <unknown>\nE       #4 0x55cc0a1bd0b2 <unknown>\nE       #5 0x55cc0a186b49 <unknown>\nE       #6 0x55cc0a1bd4ce <unknown>\nE       #7 0x55cc0a1dc006 <unknown>\nE       #8 0x55cc0a1bce53 <unknown>\nE       #9 0x55cc0a184dd4 <unknown>\nE       #10 0x55cc0a1861de <unknown>\nE       #11 0x55cc0a44f531 <unknown>\nE       #12 0x55cc0a453455 <unknown>\nE       #13 0x55cc0a43bf55 <unknown>\nE       #14 0x55cc0a4540ef <unknown>\nE       #15 0x55cc0a41f99f <unknown>\nE       #16 0x55cc0a478008 <unknown>\nE       #17 0x55cc0a4781d7 <unknown>\nE       #18 0x55cc0a48a124 <unknown>\nE       #19 0x7f4400694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1704111439947,"stop":1704111439947,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1704111439947,"stop":1704111453609,"duration":13662},"status":"failed","statusMessage":"Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55cc0a48af83 <unknown>\n#1 0x55cc0a143b2b <unknown>\n#2 0x55cc0a18ceff <unknown>\n#3 0x55cc0a18b1a0 <unknown>\n#4 0x55cc0a1bd0b2 <unknown>\n#5 0x55cc0a186b49 <unknown>\n#6 0x55cc0a1bd4ce <unknown>\n#7 0x55cc0a1dc006 <unknown>\n#8 0x55cc0a1bce53 <unknown>\n#9 0x55cc0a184dd4 <unknown>\n#10 0x55cc0a1861de <unknown>\n#11 0x55cc0a44f531 <unknown>\n#12 0x55cc0a453455 <unknown>\n#13 0x55cc0a43bf55 <unknown>\n#14 0x55cc0a4540ef <unknown>\n#15 0x55cc0a41f99f <unknown>\n#16 0x55cc0a478008 <unknown>\n#17 0x55cc0a4781d7 <unknown>\n#18 0x55cc0a48a124 <unknown>\n#19 0x7f4400694ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55cc0a48af83 <unknown>\n#1 0x55cc0a143b2b <unknown>\n#2 0x55cc0a18ceff <unknown>\n#3 0x55cc0a18b1a0 <unknown>\n#4 0x55cc0a1bd0b2 <unknown>\n#5 0x55cc0a186b49 <unknown>\n#6 0x55cc0a1bd4ce <unknown>\n#7 0x55cc0a1dc006 <unknown>\n#8 0x55cc0a1bce53 <unknown>\n#9 0x55cc0a184dd4 <unknown>\n#10 0x55cc0a1861de <unknown>\n#11 0x55cc0a44f531 <unknown>\n#12 0x55cc0a453455 <unknown>\n#13 0x55cc0a43bf55 <unknown>\n#14 0x55cc0a4540ef <unknown>\n#15 0x55cc0a41f99f <unknown>\n#16 0x55cc0a478008 <unknown>\n#17 0x55cc0a4781d7 <unknown>\n#18 0x55cc0a48a124 <unknown>\n#19 0x7f4400694ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1426-779"},{"name":"thread","value":"2821-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":15,"unknown":0,"total":22},"items":[{"uid":"9c541ca4dd54494c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1332//#testresult/9c541ca4dd54494c","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55b72a746f83 <unknown>\n#1 0x55b72a3ffb2b <unknown>\n#2 0x55b72a448eff <unknown>\n#3 0x55b72a4471a0 <unknown>\n#4 0x55b72a4790b2 <unknown>\n#5 0x55b72a442b49 <unknown>\n#6 0x55b72a4794ce <unknown>\n#7 0x55b72a498006 <unknown>\n#8 0x55b72a478e53 <unknown>\n#9 0x55b72a440dd4 <unknown>\n#10 0x55b72a4421de <unknown>\n#11 0x55b72a70b531 <unknown>\n#12 0x55b72a70f455 <unknown>\n#13 0x55b72a6f7f55 <unknown>\n#14 0x55b72a7100ef <unknown>\n#15 0x55b72a6db99f <unknown>\n#16 0x55b72a734008 <unknown>\n#17 0x55b72a7341d7 <unknown>\n#18 0x55b72a746124 <unknown>\n#19 0x7f0f88a94ac3 <unknown>","time":{"start":1704111301469,"stop":1704111312857,"duration":11388}},{"uid":"ad534ad7f79f3994","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1330//#testresult/ad534ad7f79f3994","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ea4a786f83 <unknown>\n#1 0x55ea4a43fcf7 <unknown>\n#2 0x55ea4a48f99e <unknown>\n#3 0x55ea4a48faa1 <unknown>\n#4 0x55ea4a4dad64 <unknown>\n#5 0x55ea4a4b90dd <unknown>\n#6 0x55ea4a4d8006 <unknown>\n#7 0x55ea4a4b8e53 <unknown>\n#8 0x55ea4a480dd4 <unknown>\n#9 0x55ea4a4821de <unknown>\n#10 0x55ea4a74b531 <unknown>\n#11 0x55ea4a74f455 <unknown>\n#12 0x55ea4a737f55 <unknown>\n#13 0x55ea4a7500ef <unknown>\n#14 0x55ea4a71b99f <unknown>\n#15 0x55ea4a774008 <unknown>\n#16 0x55ea4a7741d7 <unknown>\n#17 0x55ea4a786124 <unknown>\n#18 0x7f253e694ac3 <unknown>","time":{"start":1704099909589,"stop":1704099981428,"duration":71839}},{"uid":"106f1708a9d48846","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1329//#testresult/106f1708a9d48846","status":"passed","time":{"start":1704072225546,"stop":1704072254577,"duration":29031}},{"uid":"293c9efbf2d71ec6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1327//#testresult/293c9efbf2d71ec6","status":"passed","time":{"start":1704050363312,"stop":1704050383503,"duration":20191}},{"uid":"922e91f1261cc09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1325//#testresult/922e91f1261cc09","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56505cfa8f83 <unknown>\n#1 0x56505cc61cf7 <unknown>\n#2 0x56505ccb199e <unknown>\n#3 0x56505ccb1aa1 <unknown>\n#4 0x56505ccfcd64 <unknown>\n#5 0x56505ccdb0dd <unknown>\n#6 0x56505ccfa006 <unknown>\n#7 0x56505ccdae53 <unknown>\n#8 0x56505cca2dd4 <unknown>\n#9 0x56505cca41de <unknown>\n#10 0x56505cf6d531 <unknown>\n#11 0x56505cf71455 <unknown>\n#12 0x56505cf59f55 <unknown>\n#13 0x56505cf720ef <unknown>\n#14 0x56505cf3d99f <unknown>\n#15 0x56505cf96008 <unknown>\n#16 0x56505cf961d7 <unknown>\n#17 0x56505cfa8124 <unknown>\n#18 0x7f1d7e094ac3 <unknown>","time":{"start":1704043857254,"stop":1704043924120,"duration":66866}},{"uid":"16b8bdc190fd0a26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1320//#testresult/16b8bdc190fd0a26","status":"passed","time":{"start":1703985721739,"stop":1703985741221,"duration":19482}},{"uid":"34750bfe52f3639b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1316//#testresult/34750bfe52f3639b","status":"passed","time":{"start":1703898883543,"stop":1703898909333,"duration":25790}},{"uid":"21902205d4c62a3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1314//#testresult/21902205d4c62a3a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56090bc75f83 <unknown>\n#1 0x56090b92ecf7 <unknown>\n#2 0x56090b97e99e <unknown>\n#3 0x56090b97eaa1 <unknown>\n#4 0x56090b9c9d64 <unknown>\n#5 0x56090b9a80dd <unknown>\n#6 0x56090b9c7006 <unknown>\n#7 0x56090b9a7e53 <unknown>\n#8 0x56090b96fdd4 <unknown>\n#9 0x56090b9711de <unknown>\n#10 0x56090bc3a531 <unknown>\n#11 0x56090bc3e455 <unknown>\n#12 0x56090bc26f55 <unknown>\n#13 0x56090bc3f0ef <unknown>\n#14 0x56090bc0a99f <unknown>\n#15 0x56090bc63008 <unknown>\n#16 0x56090bc631d7 <unknown>\n#17 0x56090bc75124 <unknown>\n#18 0x7fc844e94ac3 <unknown>","time":{"start":1703853439979,"stop":1703853511644,"duration":71665}},{"uid":"5a246d16be1de464","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1311//#testresult/5a246d16be1de464","status":"passed","time":{"start":1703851059866,"stop":1703851074880,"duration":15014}},{"uid":"fc4ce00a8125bdb6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1312//#testresult/fc4ce00a8125bdb6","status":"passed","time":{"start":1703851090543,"stop":1703851107412,"duration":16869}},{"uid":"4c39715d746f3f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1309//#testresult/4c39715d746f3f9","status":"passed","time":{"start":1703811998660,"stop":1703812016196,"duration":17536}},{"uid":"10b984b50db28185","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1306//#testresult/10b984b50db28185","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1703756130567,"stop":1703756146734,"duration":16167}},{"uid":"c0ef81909178b659","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1305//#testresult/c0ef81909178b659","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1703726115623,"stop":1703726132708,"duration":17085}},{"uid":"46e52e8d7dff0692","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1304//#testresult/46e52e8d7dff0692","status":"passed","time":{"start":1703717301091,"stop":1703717316589,"duration":15498}},{"uid":"5befc8bef91c7d0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1303//#testresult/5befc8bef91c7d0c","status":"passed","time":{"start":1703717254546,"stop":1703717270602,"duration":16056}},{"uid":"3ff4fcf8f283cc56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1301//#testresult/3ff4fcf8f283cc56","status":"passed","time":{"start":1703639706656,"stop":1703639725432,"duration":18776}},{"uid":"a48045a13884a4a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1300//#testresult/a48045a13884a4a1","status":"passed","time":{"start":1703553301170,"stop":1703553316096,"duration":14926}},{"uid":"f726e82b1f2fd40d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1298//#testresult/f726e82b1f2fd40d","status":"passed","time":{"start":1703541095985,"stop":1703541112364,"duration":16379}},{"uid":"6e7ed04846b10412","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1295//#testresult/6e7ed04846b10412","status":"passed","time":{"start":1703467079222,"stop":1703467107625,"duration":28403}},{"uid":"98500b6733191dd6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1292//#testresult/98500b6733191dd6","status":"passed","time":{"start":1703416372570,"stop":1703416390276,"duration":17706}}]},"tags":[]},"source":"2004e899fec05803.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}