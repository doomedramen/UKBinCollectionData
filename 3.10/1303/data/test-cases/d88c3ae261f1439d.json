{"uid":"d88c3ae261f1439d","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1703717290371,"stop":1703717290939,"duration":568},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f57f40c8670>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f57e0263eb0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f57e0263eb0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f57f40c8670>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f57e0263eb0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f57e0263eb0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1703717290371,"stop":1703717290372,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1703717290372,"stop":1703717290937,"duration":565},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1703717290937,"stop":1703717290937,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1703717290937,"stop":1703717290939,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az887-13"},{"name":"thread","value":"2696-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":78,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":91},"items":[{"uid":"652c56c1cc3e6925","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1301//#testresult/652c56c1cc3e6925","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703639745060,"stop":1703639745801,"duration":741}},{"uid":"f8dc653af3d1f7f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1300//#testresult/f8dc653af3d1f7f8","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2023' does not match format '%A, %d %B %Y'","time":{"start":1703553334139,"stop":1703553335734,"duration":1595}},{"uid":"6d3b9d20c4e36806","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1298//#testresult/6d3b9d20c4e36806","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703541433629,"stop":1703541434439,"duration":810}},{"uid":"c7507b103e28ce78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1295//#testresult/c7507b103e28ce78","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703467422745,"stop":1703467423480,"duration":735}},{"uid":"6f8bcf186e575208","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1292//#testresult/6f8bcf186e575208","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703416411949,"stop":1703416412899,"duration":950}},{"uid":"f5e830a22c257339","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1291//#testresult/f5e830a22c257339","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2023' does not match format '%A, %d %B %Y'","time":{"start":1703416370908,"stop":1703416372555,"duration":1647}},{"uid":"74fde70dfa7e0918","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1289//#testresult/74fde70dfa7e0918","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2023' does not match format '%A, %d %B %Y'","time":{"start":1703380900694,"stop":1703380902955,"duration":2261}},{"uid":"9f63851490d9fd39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1287//#testresult/9f63851490d9fd39","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2023' does not match format '%A, %d %B %Y'","time":{"start":1703294053330,"stop":1703294054895,"duration":1565}},{"uid":"cc921516b25bdc52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1282//#testresult/cc921516b25bdc52","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2023' does not match format '%A, %d %B %Y'","time":{"start":1703207790860,"stop":1703207792665,"duration":1805}},{"uid":"fed7525851e68223","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1281//#testresult/fed7525851e68223","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703121428363,"stop":1703121429120,"duration":757}},{"uid":"a3c8225b4f3836fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1280//#testresult/a3c8225b4f3836fc","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 20 December\\n              \\n              (In progress) 2023' does not match format '%A, %d %B %Y'","time":{"start":1703034252939,"stop":1703034255131,"duration":2192}},{"uid":"328ef0c1de677e72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1279//#testresult/328ef0c1de677e72","status":"failed","statusDetails":"ValueError: time data 'Friday, 29 December\\n              (this collection has been adjusted from its usual time) 2023' does not match format '%A, %d %B %Y'","time":{"start":1703024896211,"stop":1703024897765,"duration":1554}},{"uid":"d6aa2f7e4d3fcf4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1276//#testresult/d6aa2f7e4d3fcf4a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702948682969,"stop":1702948683809,"duration":840}},{"uid":"29c242f96f0a8f2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1275//#testresult/29c242f96f0a8f2c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702862354742,"stop":1702862355304,"duration":562}},{"uid":"e61f115e2f47e787","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1274//#testresult/e61f115e2f47e787","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702859991316,"stop":1702859992051,"duration":735}},{"uid":"fd32effef9d8b11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1272//#testresult/fd32effef9d8b11","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702843540378,"stop":1702843541196,"duration":818}},{"uid":"2b1c45b5a6504507","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/2b1c45b5a6504507","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702809371224,"stop":1702809372602,"duration":1378}},{"uid":"65c8b42453f8f91a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/65c8b42453f8f91a","status":"passed","time":{"start":1702657132693,"stop":1702657134307,"duration":1614}},{"uid":"94c2ee730bf068f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/94c2ee730bf068f3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702603169186,"stop":1702603169911,"duration":725}},{"uid":"bb2e5ba95cb45d65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/bb2e5ba95cb45d65","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702540038087,"stop":1702540038769,"duration":682}}]},"tags":[]},"source":"d88c3ae261f1439d.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}