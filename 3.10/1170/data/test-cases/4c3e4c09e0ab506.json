{"uid":"4c3e4c09e0ab506","name":"Validate Council Output [EastLindseyDistrictCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"eb374edb17b4c377c221232fbb03cdfe","time":{"start":1701353357341,"stop":1701353363029,"duration":5688},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7fd2820b2680>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd2700149a0>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7fd26ff933a0>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': [{'collectionDate': '01/12/2023', 'type': 'Domestic Waste (Black Bin)'}]}\nuser_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY', web_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"55028072841b2138f8bb509c5d2e8ce1\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"55028072841b2138f8bb509c5d2e8ce1\", element=\"8826D6E58A05CCC3928F2BC9B3F198F2_element_9\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"55028072841b2138f8bb509c5d2e8ce1\", element=\"8826D6E58A05CCC3928F2BC9B3F198F2_element_11\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7fd2820b2680>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd2700149a0>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7fd26ff933a0>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': [{'collectionDate': '01/12/2023', 'type': 'Domestic Waste (Black Bin)'}]}\nuser_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY', web_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"55028072841b2138f8bb509c5d2e8ce1\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"55028072841b2138f8bb509c5d2e8ce1\", element=\"8826D6E58A05CCC3928F2BC9B3F198F2_element_9\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"55028072841b2138f8bb509c5d2e8ce1\", element=\"8826D6E58A05CCC3928F2BC9B3F198F2_element_11\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","steps":[{"name":"Given the council: EastLindseyDistrictCouncil","time":{"start":1701353357341,"stop":1701353357342,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from EastLindseyDistrictCouncil using local and the http://selenium:4444 is set","time":{"start":1701353357342,"stop":1701353363029,"duration":5687},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az702-921"},{"name":"thread","value":"2882-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastLindseyDistrictCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":24,"unknown":0,"total":34},"items":[{"uid":"2740a4cdd9bb2d95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1163//#testresult/2740a4cdd9bb2d95","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701307073133,"stop":1701307080401,"duration":7268}},{"uid":"e0089f6b78b0d40e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1161//#testresult/e0089f6b78b0d40e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x560c4ba6b5e3 <unknown>\n#1 0x560c4b72e0b7 <unknown>\n#2 0x560c4b77bf53 <unknown>\n#3 0x560c4b77c051 <unknown>\n#4 0x560c4b7c19c4 <unknown>\n#5 0x560c4b7a2f1d <unknown>\n#6 0x560c4b7beb3d <unknown>\n#7 0x560c4b7a2cc3 <unknown>\n#8 0x560c4b76e0e4 <unknown>\n#9 0x560c4b76f0ae <unknown>\n#10 0x560c4ba31ce1 <unknown>\n#11 0x560c4ba35b7e <unknown>\n#12 0x560c4ba1f4b5 <unknown>\n#13 0x560c4ba367d6 <unknown>\n#14 0x560c4ba02dbf <unknown>\n#15 0x560c4ba59748 <unknown>\n#16 0x560c4ba59917 <unknown>\n#17 0x560c4ba6a773 <unknown>\n#18 0x7f3977294ac3 <unknown>","time":{"start":1701279303655,"stop":1701279318984,"duration":15329}},{"uid":"e1d9039251dce99a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1162//#testresult/e1d9039251dce99a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701279333710,"stop":1701279340461,"duration":6751}},{"uid":"c0152bd9e4f17694","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1156//#testresult/c0152bd9e4f17694","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701220730543,"stop":1701220769071,"duration":38528}},{"uid":"8a30e18fc0a83184","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1155//#testresult/8a30e18fc0a83184","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701134335710,"stop":1701134343152,"duration":7442}},{"uid":"6865561bd4a5b097","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1152//#testresult/6865561bd4a5b097","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701047891265,"stop":1701047905710,"duration":14445}},{"uid":"83c5933a3bb87f14","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1151//#testresult/83c5933a3bb87f14","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701036126078,"stop":1701036133919,"duration":7841}},{"uid":"e88c3282af4aae77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1150//#testresult/e88c3282af4aae77","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701036101061,"stop":1701036135054,"duration":33993}},{"uid":"57ce00c28d68750","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1148//#testresult/57ce00c28d68750","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1700961705998,"stop":1700961714956,"duration":8958}},{"uid":"2c79719b15c37a7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1147//#testresult/2c79719b15c37a7a","status":"passed","time":{"start":1700874891052,"stop":1700874897911,"duration":6859}},{"uid":"73154221edffca41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1146//#testresult/73154221edffca41","status":"passed","time":{"start":1700788559816,"stop":1700788568222,"duration":8406}},{"uid":"f97cde96f4d3417a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1145//#testresult/f97cde96f4d3417a","status":"passed","time":{"start":1700702262516,"stop":1700702269691,"duration":7175}},{"uid":"9de93b40435991c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1143//#testresult/9de93b40435991c3","status":"passed","time":{"start":1700646347234,"stop":1700646352542,"duration":5308}},{"uid":"97c9be2d1c5045f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1141//#testresult/97c9be2d1c5045f3","status":"passed","time":{"start":1700616023930,"stop":1700616037870,"duration":13940}},{"uid":"53f69e04d48a822c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1136//#testresult/53f69e04d48a822c","status":"passed","time":{"start":1700529652985,"stop":1700529662863,"duration":9878}},{"uid":"fe9e755562f1b227","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/fe9e755562f1b227","status":"passed","time":{"start":1700443134145,"stop":1700443142555,"duration":8410}},{"uid":"7d7bdde9735bd3e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/7d7bdde9735bd3e0","status":"passed","time":{"start":1700356971940,"stop":1700356979066,"duration":7126}},{"uid":"7126390625c3472d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1133//#testresult/7126390625c3472d","status":"passed","time":{"start":1700270252401,"stop":1700270276160,"duration":23759}},{"uid":"a02bbee885bf8ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1132//#testresult/a02bbee885bf8ec","status":"passed","time":{"start":1700183896230,"stop":1700183902259,"duration":6029}},{"uid":"3884e3940bbf050b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1131//#testresult/3884e3940bbf050b","status":"passed","time":{"start":1700097513190,"stop":1700097520593,"duration":7403}}]},"tags":[]},"source":"4c3e4c09e0ab506.json","parameterValues":["EastLindseyDistrictCouncil","local","http://selenium:4444"]}