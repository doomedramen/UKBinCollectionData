{"uid":"f5dad0ca8d0da06e","name":"Validate Council Output [LiverpoolCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"fa4aaa0dd252fd9a79edc6c4503ba92d","time":{"start":1701739371273,"stop":1701739372278,"duration":1005},"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fd073fb70a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LiverpoolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd065ae5300>, 'council': 'LiverpoolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/LiverpoolCityCouncil.py:39: in parse_data\n    bin_date = datetime.strptime(remove_ordinal_indicator_from_date_string(item.text.strip()),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%A, %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fd073fb70a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LiverpoolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd065ae5300>, 'council': 'LiverpoolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/LiverpoolCityCouncil.py:39: in parse_data\n    bin_date = datetime.strptime(remove_ordinal_indicator_from_date_string(item.text.strip()),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%A, %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: LiverpoolCityCouncil","time":{"start":1701739371274,"stop":1701739371274,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from LiverpoolCityCouncil using None and the None is set","time":{"start":1701739371274,"stop":1701739372278,"duration":1004},"status":"failed","statusMessage":"time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az735-101"},{"name":"thread","value":"2876-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LiverpoolCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":38,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":40},"items":[{"uid":"725f9e213ac1f301","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1187//#testresult/725f9e213ac1f301","status":"passed","time":{"start":1701714471208,"stop":1701714472375,"duration":1167}},{"uid":"cbe2fb31ac5a3862","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1186//#testresult/cbe2fb31ac5a3862","status":"passed","time":{"start":1701714484765,"stop":1701714485776,"duration":1011}},{"uid":"3f20244948a98c89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1184//#testresult/3f20244948a98c89","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701652864981,"stop":1701652865036,"duration":55}},{"uid":"d60a76feeaf79ee5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1183//#testresult/d60a76feeaf79ee5","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701566723503,"stop":1701566723544,"duration":41}},{"uid":"e90de172e303207d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1182//#testresult/e90de172e303207d","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701479923056,"stop":1701479923093,"duration":37}},{"uid":"d5613df981154879","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1179//#testresult/d5613df981154879","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701419101760,"stop":1701419101770,"duration":10}},{"uid":"be03acc7252cd2bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1176//#testresult/be03acc7252cd2bd","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701419008082,"stop":1701419008101,"duration":19}},{"uid":"cba6c1231bfadcfd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1175//#testresult/cba6c1231bfadcfd","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701414480890,"stop":1701414480912,"duration":22}},{"uid":"c05684531b80085e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1174//#testresult/c05684531b80085e","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701414423798,"stop":1701414423840,"duration":42}},{"uid":"95b141ae7f7a3fe9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1173//#testresult/95b141ae7f7a3fe9","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701394023615,"stop":1701394023638,"duration":23}},{"uid":"4743a23bfa40a87d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1169//#testresult/4743a23bfa40a87d","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701353481689,"stop":1701353481713,"duration":24}},{"uid":"2f20e9d21212bbb1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1163//#testresult/2f20e9d21212bbb1","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701307204978,"stop":1701307205000,"duration":22}},{"uid":"3a19f43e954ea107","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1161//#testresult/3a19f43e954ea107","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701279535268,"stop":1701279535277,"duration":9}},{"uid":"d1e7b2da76e9e8b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1162//#testresult/d1e7b2da76e9e8b5","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701279540901,"stop":1701279540903,"duration":2}},{"uid":"e06068404c9994c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1156//#testresult/e06068404c9994c8","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701220859109,"stop":1701220859111,"duration":2}},{"uid":"6fa49991b5884920","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1155//#testresult/6fa49991b5884920","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701134499654,"stop":1701134499657,"duration":3}},{"uid":"76fa74220dafcc5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1152//#testresult/76fa74220dafcc5e","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701048107957,"stop":1701048107975,"duration":18}},{"uid":"5ec2df77fe99f370","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1151//#testresult/5ec2df77fe99f370","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701036280513,"stop":1701036280539,"duration":26}},{"uid":"c889f144e06b78ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1150//#testresult/c889f144e06b78ac","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701036264702,"stop":1701036264736,"duration":34}},{"uid":"446ef4d98237c80","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1148//#testresult/446ef4d98237c80","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1700961850598,"stop":1700961850631,"duration":33}}]},"tags":[]},"source":"f5dad0ca8d0da06e.json","parameterValues":["LiverpoolCityCouncil","None","None"]}