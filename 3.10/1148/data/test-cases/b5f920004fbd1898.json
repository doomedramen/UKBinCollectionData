{"uid":"b5f920004fbd1898","name":"Validate Council Output [BoltonCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f5a0714076fed695e9f92b2c8003a7da","time":{"start":1700961691482,"stop":1700961695049,"duration":3567},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2e03742d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[BoltonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2e038a1c60>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2e038a1c60>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2e03742d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[BoltonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2e038a1c60>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2e038a1c60>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: BoltonCouncil","time":{"start":1700961691483,"stop":1700961691484,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BoltonCouncil using None and the None is set","time":{"start":1700961691484,"stop":1700961695046,"duration":3562},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1700961695046,"stop":1700961695047,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1700961695047,"stop":1700961695049,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1435-663"},{"name":"thread","value":"2710-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BoltonCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":12,"unknown":0,"total":25},"items":[{"uid":"f1ba3844a76c12dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1147//#testresult/f1ba3844a76c12dd","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700874875714,"stop":1700874878834,"duration":3120}},{"uid":"b357dd3a62322f91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1146//#testresult/b357dd3a62322f91","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700788543219,"stop":1700788546860,"duration":3641}},{"uid":"237d7d4653d2b7b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1145//#testresult/237d7d4653d2b7b1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700702246771,"stop":1700702250280,"duration":3509}},{"uid":"dd65c920a76cd4a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1143//#testresult/dd65c920a76cd4a0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646330753,"stop":1700646333912,"duration":3159}},{"uid":"31d357290616ebae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1141//#testresult/31d357290616ebae","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700616008745,"stop":1700616012431,"duration":3686}},{"uid":"ee3253454a1d498","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1136//#testresult/ee3253454a1d498","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700529636942,"stop":1700529640425,"duration":3483}},{"uid":"844fa49a11b25485","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/844fa49a11b25485","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443116929,"stop":1700443120364,"duration":3435}},{"uid":"fc46ccd4bcd73cfc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/fc46ccd4bcd73cfc","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700356960156,"stop":1700356963427,"duration":3271}},{"uid":"f15c1f76861b15f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1133//#testresult/f15c1f76861b15f7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270236320,"stop":1700270240519,"duration":4199}},{"uid":"2d2befc7bc7977ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1132//#testresult/2d2befc7bc7977ed","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183869312,"stop":1700183872920,"duration":3608}},{"uid":"5458a407ddb93ad9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1131//#testresult/5458a407ddb93ad9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097493746,"stop":1700097497126,"duration":3380}},{"uid":"949578e0db5e2060","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1129//#testresult/949578e0db5e2060","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700011056247,"stop":1700011056996,"duration":749}},{"uid":"30d0ccd18f21e8c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1128//#testresult/30d0ccd18f21e8c1","status":"passed","time":{"start":1699924563035,"stop":1699924568332,"duration":5297}},{"uid":"c108fa4940ca5097","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1127//#testresult/c108fa4940ca5097","status":"passed","time":{"start":1699838275851,"stop":1699838280133,"duration":4282}},{"uid":"4c57ca21948618ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1126//#testresult/4c57ca21948618ba","status":"passed","time":{"start":1699752006422,"stop":1699752012426,"duration":6004}},{"uid":"28506022c2ecf16d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1125//#testresult/28506022c2ecf16d","status":"passed","time":{"start":1699669463078,"stop":1699669470267,"duration":7189}},{"uid":"fa8a8d6edca31ef7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1124//#testresult/fa8a8d6edca31ef7","status":"passed","time":{"start":1699578909033,"stop":1699578917514,"duration":8481}},{"uid":"b04a91df90bb917b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1123//#testresult/b04a91df90bb917b","status":"passed","time":{"start":1699492570874,"stop":1699492578140,"duration":7266}},{"uid":"d1c5430a11c353cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1121//#testresult/d1c5430a11c353cb","status":"passed","time":{"start":1699481227810,"stop":1699481234095,"duration":6285}},{"uid":"f364c50aaf2654a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1117//#testresult/f364c50aaf2654a0","status":"passed","time":{"start":1699445066932,"stop":1699445070625,"duration":3693}}]},"tags":[]},"source":"b5f920004fbd1898.json","parameterValues":["BoltonCouncil","None","None"]}