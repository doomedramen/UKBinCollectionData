{"uid":"56ecb5d94221e9b0","name":"Validate Council Output [WiganBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d724d8b9a4d0593a99f53e95b03e558b","time":{"start":1697484814113,"stop":1697484817092,"duration":2979},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0788f4ac20>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f077bf6d840>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f077bf6d840>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0788f4ac20>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f077bf6d840>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f077bf6d840>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","steps":[{"name":"Given the council: WiganBoroughCouncil","time":{"start":1697484814113,"stop":1697484814114,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WiganBoroughCouncil","time":{"start":1697484814114,"stop":1697484817089,"duration":2975},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1697484817089,"stop":1697484817090,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1697484817090,"stop":1697484817092,"duration":2},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az411-676"},{"name":"thread","value":"2147-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiganBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":53,"broken":0,"skipped":0,"passed":72,"unknown":0,"total":125},"items":[{"uid":"8a1ad585db68c6a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/8a1ad585db68c6a1","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697419265334,"stop":1697419269187,"duration":3853}},{"uid":"648f5d20dc055e62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/648f5d20dc055e62","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697403362091,"stop":1697403365633,"duration":3542}},{"uid":"2654c399241a2b75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/2654c399241a2b75","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697399916247,"stop":1697399920698,"duration":4451}},{"uid":"a6f158524240ea83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/a6f158524240ea83","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697367175269,"stop":1697367179171,"duration":3902}},{"uid":"131cea10d5c138ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/131cea10d5c138ba","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697333106613,"stop":1697333111925,"duration":5312}},{"uid":"2a6e779ae805bf79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/2a6e779ae805bf79","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697246265529,"stop":1697246269753,"duration":4224}},{"uid":"b70dcebb69fa3e04","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/986//#testresult/b70dcebb69fa3e04","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697160088305,"stop":1697160092174,"duration":3869}},{"uid":"335cb7d7dded9855","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/985//#testresult/335cb7d7dded9855","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697073453064,"stop":1697073457163,"duration":4099}},{"uid":"ab86d535d4a0865f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/984//#testresult/ab86d535d4a0865f","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697053184719,"stop":1697053189082,"duration":4363}},{"uid":"af3387c3607234a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/981//#testresult/af3387c3607234a7","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697050934966,"stop":1697050938027,"duration":3061}},{"uid":"d7dfd5788f27787","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/978//#testresult/d7dfd5788f27787","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696987184098,"stop":1696987188169,"duration":4071}},{"uid":"1afb78046109673e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/977//#testresult/1afb78046109673e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696900714216,"stop":1696900722134,"duration":7918}},{"uid":"1952864efd2b6e4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/976//#testresult/1952864efd2b6e4a","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696814397039,"stop":1696814400480,"duration":3441}},{"uid":"e1fed5a8daa297d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/975//#testresult/e1fed5a8daa297d6","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696728205417,"stop":1696728208976,"duration":3559}},{"uid":"f460e29d343f2f1d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/974//#testresult/f460e29d343f2f1d","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696641532108,"stop":1696641536667,"duration":4559}},{"uid":"a16349637dda80d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/973//#testresult/a16349637dda80d1","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696555172554,"stop":1696555177267,"duration":4713}},{"uid":"80f6585a4963574e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/972//#testresult/80f6585a4963574e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696468728497,"stop":1696468732948,"duration":4451}},{"uid":"b056249e99422870","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/971//#testresult/b056249e99422870","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696382429170,"stop":1696382432377,"duration":3207}},{"uid":"79c0c6dfd146997","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/970//#testresult/79c0c6dfd146997","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696366576342,"stop":1696366580414,"duration":4072}},{"uid":"1ae45b1fec74c57e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/969//#testresult/1ae45b1fec74c57e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696295963485,"stop":1696295967085,"duration":3600}}]},"tags":[]},"source":"56ecb5d94221e9b0.json","parameterValues":["WiganBoroughCouncil"]}