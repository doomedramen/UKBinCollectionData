{"uid":"b071fcdff5e27322","name":"Validate Council Output [NorthWestLeicestershire-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"636da600d3c2f6211f4c406b74efac78","time":{"start":1703381070411,"stop":1703381074905,"duration":4494},"status":"failed","statusMessage":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'","statusTrace":"fixturefunc = <function scrape_step at 0x7fa8c6368670>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthWestLeicestershire-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa8b45bc6d0>, 'council': 'NorthWestLeicestershire', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthWestLeicestershire.py:70: in parse_data\n    parsed_date = datetime.strptime(date, \"%a %dth %b\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tue 2nd Jan', format = '%a %dth %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'","statusTrace":"fixturefunc = <function scrape_step at 0x7fa8c6368670>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthWestLeicestershire-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa8b45bc6d0>, 'council': 'NorthWestLeicestershire', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthWestLeicestershire.py:70: in parse_data\n    parsed_date = datetime.strptime(date, \"%a %dth %b\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tue 2nd Jan', format = '%a %dth %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: NorthWestLeicestershire","time":{"start":1703381070411,"stop":1703381070411,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthWestLeicestershire using local and the http://selenium:4444 is set","time":{"start":1703381070412,"stop":1703381074905,"duration":4493},"status":"failed","statusMessage":"time data 'Tue 2nd Jan' does not match format '%a %dth %b'","statusTrace":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1110-626"},{"name":"thread","value":"2781-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthWestLeicestershire"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":32,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":34},"items":[{"uid":"dff7bc1d70e86897","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1287//#testresult/dff7bc1d70e86897","status":"failed","statusDetails":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'","time":{"start":1703294111908,"stop":1703294115887,"duration":3979}},{"uid":"f4d0a55be52ef522","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1282//#testresult/f4d0a55be52ef522","status":"failed","statusDetails":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'","time":{"start":1703207864969,"stop":1703207869464,"duration":4495}},{"uid":"8b430e3bf2a34f80","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1281//#testresult/8b430e3bf2a34f80","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703121531325,"stop":1703121534918,"duration":3593}},{"uid":"1c1f3474656a8892","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1280//#testresult/1c1f3474656a8892","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703034366558,"stop":1703034371543,"duration":4985}},{"uid":"cebf46c169c33665","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1279//#testresult/cebf46c169c33665","status":"failed","statusDetails":"ValueError: time data 'Today' does not match format '%a %dth %b'","time":{"start":1703024962572,"stop":1703024966273,"duration":3701}},{"uid":"18e1e0872a169e5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1276//#testresult/18e1e0872a169e5b","status":"failed","statusDetails":"ValueError: time data 'Today' does not match format '%a %dth %b'","time":{"start":1702948780920,"stop":1702948785370,"duration":4450}},{"uid":"d880b5ed82b5cecf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1275//#testresult/d880b5ed82b5cecf","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %dth %b'","time":{"start":1702862418932,"stop":1702862422845,"duration":3913}},{"uid":"ae0684c382a63010","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1274//#testresult/ae0684c382a63010","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %dth %b'","time":{"start":1702860048932,"stop":1702860052690,"duration":3758}},{"uid":"4fc2e39f0d4b51d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1272//#testresult/4fc2e39f0d4b51d6","status":"passed","time":{"start":1702843597087,"stop":1702843601258,"duration":4171}},{"uid":"8e8935eca29445b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/8e8935eca29445b7","status":"passed","time":{"start":1702809431204,"stop":1702809436609,"duration":5405}},{"uid":"f22a1daebd1f658a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/f22a1daebd1f658a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55b30f053d33 <unknown>\n#1 0x55b30ed10f87 <unknown>\n#2 0x55b30ed60c0e <unknown>\n#3 0x55b30ed60d11 <unknown>\n#4 0x55b30edac004 <unknown>\n#5 0x55b30ed8a36d <unknown>\n#6 0x55b30eda9297 <unknown>\n#7 0x55b30ed8a0e3 <unknown>\n#8 0x55b30ed52044 <unknown>\n#9 0x55b30ed5344e <unknown>\n#10 0x55b30f018861 <unknown>\n#11 0x55b30f01c785 <unknown>\n#12 0x55b30f006285 <unknown>\n#13 0x55b30f01d41f <unknown>\n#14 0x55b30efea20f <unknown>\n#15 0x55b30f041028 <unknown>\n#16 0x55b30f0411f7 <unknown>\n#17 0x55b30f052ed4 <unknown>\n#18 0x7f26c0a94ac3 <unknown>","time":{"start":1702657239159,"stop":1702657273015,"duration":33856}},{"uid":"bb95d1dfb4b30042","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/bb95d1dfb4b30042","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55741ae46d33 <unknown>\n#1 0x55741ab03f87 <unknown>\n#2 0x55741ab53c0e <unknown>\n#3 0x55741ab53d11 <unknown>\n#4 0x55741ab9f004 <unknown>\n#5 0x55741ab7d36d <unknown>\n#6 0x55741ab9c297 <unknown>\n#7 0x55741ab7d0e3 <unknown>\n#8 0x55741ab45044 <unknown>\n#9 0x55741ab4644e <unknown>\n#10 0x55741ae0b861 <unknown>\n#11 0x55741ae0f785 <unknown>\n#12 0x55741adf9285 <unknown>\n#13 0x55741ae1041f <unknown>\n#14 0x55741addd20f <unknown>\n#15 0x55741ae34028 <unknown>\n#16 0x55741ae341f7 <unknown>\n#17 0x55741ae45ed4 <unknown>\n#18 0x7f9359a94ac3 <unknown>","time":{"start":1702603227879,"stop":1702603262010,"duration":34131}},{"uid":"dd41917376d87118","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/dd41917376d87118","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55f7713bb5e3 <unknown>\n#1 0x55f77107e0b7 <unknown>\n#2 0x55f7710cbf53 <unknown>\n#3 0x55f7710cc051 <unknown>\n#4 0x55f7711119c4 <unknown>\n#5 0x55f7710f2f1d <unknown>\n#6 0x55f77110eb3d <unknown>\n#7 0x55f7710f2cc3 <unknown>\n#8 0x55f7710be0e4 <unknown>\n#9 0x55f7710bf0ae <unknown>\n#10 0x55f771381ce1 <unknown>\n#11 0x55f771385b7e <unknown>\n#12 0x55f77136f4b5 <unknown>\n#13 0x55f7713867d6 <unknown>\n#14 0x55f771352dbf <unknown>\n#15 0x55f7713a9748 <unknown>\n#16 0x55f7713a9917 <unknown>\n#17 0x55f7713ba773 <unknown>\n#18 0x7f36c0c94ac3 <unknown>","time":{"start":1702540086184,"stop":1702540119403,"duration":33219}},{"uid":"e082c86e2258f035","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1241//#testresult/e082c86e2258f035","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564d8d8d05e3 <unknown>\n#1 0x564d8d5930b7 <unknown>\n#2 0x564d8d5e0f53 <unknown>\n#3 0x564d8d5e1051 <unknown>\n#4 0x564d8d6269c4 <unknown>\n#5 0x564d8d607f1d <unknown>\n#6 0x564d8d623b3d <unknown>\n#7 0x564d8d607cc3 <unknown>\n#8 0x564d8d5d30e4 <unknown>\n#9 0x564d8d5d40ae <unknown>\n#10 0x564d8d896ce1 <unknown>\n#11 0x564d8d89ab7e <unknown>\n#12 0x564d8d8844b5 <unknown>\n#13 0x564d8d89b7d6 <unknown>\n#14 0x564d8d867dbf <unknown>\n#15 0x564d8d8be748 <unknown>\n#16 0x564d8d8be917 <unknown>\n#17 0x564d8d8cf773 <unknown>\n#18 0x7f5586894ac3 <unknown>","time":{"start":1702516735694,"stop":1702516770006,"duration":34312}},{"uid":"cd08c64f0e712a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1238//#testresult/cd08c64f0e712a2","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55e6870e15e3 <unknown>\n#1 0x55e686da40b7 <unknown>\n#2 0x55e686df1f53 <unknown>\n#3 0x55e686df2051 <unknown>\n#4 0x55e686e379c4 <unknown>\n#5 0x55e686e18f1d <unknown>\n#6 0x55e686e34b3d <unknown>\n#7 0x55e686e18cc3 <unknown>\n#8 0x55e686de40e4 <unknown>\n#9 0x55e686de50ae <unknown>\n#10 0x55e6870a7ce1 <unknown>\n#11 0x55e6870abb7e <unknown>\n#12 0x55e6870954b5 <unknown>\n#13 0x55e6870ac7d6 <unknown>\n#14 0x55e687078dbf <unknown>\n#15 0x55e6870cf748 <unknown>\n#16 0x55e6870cf917 <unknown>\n#17 0x55e6870e0773 <unknown>\n#18 0x7f4410e94ac3 <unknown>","time":{"start":1702447547396,"stop":1702447581004,"duration":33608}},{"uid":"de5b9fb913cbab56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1237//#testresult/de5b9fb913cbab56","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55897de95d33 <unknown>\n#1 0x55897db52f87 <unknown>\n#2 0x55897dba2c0e <unknown>\n#3 0x55897dba2d11 <unknown>\n#4 0x55897dbee004 <unknown>\n#5 0x55897dbcc36d <unknown>\n#6 0x55897dbeb297 <unknown>\n#7 0x55897dbcc0e3 <unknown>\n#8 0x55897db94044 <unknown>\n#9 0x55897db9544e <unknown>\n#10 0x55897de5a861 <unknown>\n#11 0x55897de5e785 <unknown>\n#12 0x55897de48285 <unknown>\n#13 0x55897de5f41f <unknown>\n#14 0x55897de2c20f <unknown>\n#15 0x55897de83028 <unknown>\n#16 0x55897de831f7 <unknown>\n#17 0x55897de94ed4 <unknown>\n#18 0x7f8d82694ac3 <unknown>","time":{"start":1702447474267,"stop":1702447509341,"duration":35074}},{"uid":"41e7a7cfc19bede5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1236//#testresult/41e7a7cfc19bede5","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55f3e52595e3 <unknown>\n#1 0x55f3e4f1c0b7 <unknown>\n#2 0x55f3e4f69f53 <unknown>\n#3 0x55f3e4f6a051 <unknown>\n#4 0x55f3e4faf9c4 <unknown>\n#5 0x55f3e4f90f1d <unknown>\n#6 0x55f3e4facb3d <unknown>\n#7 0x55f3e4f90cc3 <unknown>\n#8 0x55f3e4f5c0e4 <unknown>\n#9 0x55f3e4f5d0ae <unknown>\n#10 0x55f3e521fce1 <unknown>\n#11 0x55f3e5223b7e <unknown>\n#12 0x55f3e520d4b5 <unknown>\n#13 0x55f3e52247d6 <unknown>\n#14 0x55f3e51f0dbf <unknown>\n#15 0x55f3e5247748 <unknown>\n#16 0x55f3e5247917 <unknown>\n#17 0x55f3e5258773 <unknown>\n#18 0x7fcf84894ac3 <unknown>","time":{"start":1702430372743,"stop":1702430406410,"duration":33667}},{"uid":"80a58dfc07590e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1232//#testresult/80a58dfc07590e0","status":"failed","statusDetails":"ValueError: time data '' does not match format '%d %B %Y'","time":{"start":1702366536524,"stop":1702366548670,"duration":12146}},{"uid":"922d8a4df13168de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1231//#testresult/922d8a4df13168de","status":"failed","statusDetails":"ValueError: time data '' does not match format '%d %B %Y'","time":{"start":1702344002933,"stop":1702344014898,"duration":11965}},{"uid":"b4b3d37ba9e5ffb7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1229//#testresult/b4b3d37ba9e5ffb7","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1702257586026,"stop":1702257602230,"duration":16204}}]},"tags":[]},"source":"b071fcdff5e27322.json","parameterValues":["NorthWestLeicestershire","local","http://selenium:4444"]}