{"uid":"89c9caf2feb8a4f0","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1706833645007,"stop":1706833649637,"duration":4630},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"button\" value=\"Find address\" id=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" name=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" class=\"icminput icminput--button\" onclick=\"\"> is not clickable at point (90, 458). Other element would receive the click: <button class=\"btn btn--contrast btn--complete\" name=\"acceptall\" value=\"true\" type=\"submit\">...</button>\n  (Session info: chrome-headless-shell=121.0.6167.85)\nStacktrace:\n#0 0x559f73d16d93 <unknown>\n#1 0x559f739fa337 <unknown>\n#2 0x559f73a4ce2e <unknown>\n#3 0x559f73a4abd0 <unknown>\n#4 0x559f73a4844a <unknown>\n#5 0x559f73a47226 <unknown>\n#6 0x559f73a3a6b7 <unknown>\n#7 0x559f73a68442 <unknown>\n#8 0x559f73a3a028 <unknown>\n#9 0x559f73a6860e <unknown>\n#10 0x559f73a8712d <unknown>\n#11 0x559f73a681e3 <unknown>\n#12 0x559f73a38135 <unknown>\n#13 0x559f73a3913e <unknown>\n#14 0x559f73cdae4b <unknown>\n#15 0x559f73cdedfa <unknown>\n#16 0x559f73cc76d5 <unknown>\n#17 0x559f73cdfa6f <unknown>\n#18 0x559f73cab69f <unknown>\n#19 0x559f73d04098 <unknown>\n#20 0x559f73d04262 <unknown>\n#21 0x559f73d15f34 <unknown>\n#22 0x7f93c5a94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7ff9cc1c3ac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff9cb55d2a0>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:49: in parse_data\n    findAddress.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff9cb5ff730>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x559f73d04262 \\\\u003Cunknown>\\\\n#21 0x559f73d15f34 \\\\u003Cunknown>\\\\n#22 0x7f93c5a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"button\" value=\"Find address\" id=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" name=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" class=\"icminput icminput--button\" onclick=\"\"> is not clickable at point (90, 458). Other element would receive the click: <button class=\"btn btn--contrast btn--complete\" name=\"acceptall\" value=\"true\" type=\"submit\">...</button>\nE         (Session info: chrome-headless-shell=121.0.6167.85)\nE       Stacktrace:\nE       #0 0x559f73d16d93 <unknown>\nE       #1 0x559f739fa337 <unknown>\nE       #2 0x559f73a4ce2e <unknown>\nE       #3 0x559f73a4abd0 <unknown>\nE       #4 0x559f73a4844a <unknown>\nE       #5 0x559f73a47226 <unknown>\nE       #6 0x559f73a3a6b7 <unknown>\nE       #7 0x559f73a68442 <unknown>\nE       #8 0x559f73a3a028 <unknown>\nE       #9 0x559f73a6860e <unknown>\nE       #10 0x559f73a8712d <unknown>\nE       #11 0x559f73a681e3 <unknown>\nE       #12 0x559f73a38135 <unknown>\nE       #13 0x559f73a3913e <unknown>\nE       #14 0x559f73cdae4b <unknown>\nE       #15 0x559f73cdedfa <unknown>\nE       #16 0x559f73cc76d5 <unknown>\nE       #17 0x559f73cdfa6f <unknown>\nE       #18 0x559f73cab69f <unknown>\nE       #19 0x559f73d04098 <unknown>\nE       #20 0x559f73d04262 <unknown>\nE       #21 0x559f73d15f34 <unknown>\nE       #22 0x7f93c5a94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"button\" value=\"Find address\" id=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" name=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" class=\"icminput icminput--button\" onclick=\"\"> is not clickable at point (90, 458). Other element would receive the click: <button class=\"btn btn--contrast btn--complete\" name=\"acceptall\" value=\"true\" type=\"submit\">...</button>\n  (Session info: chrome-headless-shell=121.0.6167.85)\nStacktrace:\n#0 0x559f73d16d93 <unknown>\n#1 0x559f739fa337 <unknown>\n#2 0x559f73a4ce2e <unknown>\n#3 0x559f73a4abd0 <unknown>\n#4 0x559f73a4844a <unknown>\n#5 0x559f73a47226 <unknown>\n#6 0x559f73a3a6b7 <unknown>\n#7 0x559f73a68442 <unknown>\n#8 0x559f73a3a028 <unknown>\n#9 0x559f73a6860e <unknown>\n#10 0x559f73a8712d <unknown>\n#11 0x559f73a681e3 <unknown>\n#12 0x559f73a38135 <unknown>\n#13 0x559f73a3913e <unknown>\n#14 0x559f73cdae4b <unknown>\n#15 0x559f73cdedfa <unknown>\n#16 0x559f73cc76d5 <unknown>\n#17 0x559f73cdfa6f <unknown>\n#18 0x559f73cab69f <unknown>\n#19 0x559f73d04098 <unknown>\n#20 0x559f73d04262 <unknown>\n#21 0x559f73d15f34 <unknown>\n#22 0x7f93c5a94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7ff9cc1c3ac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff9cb55d2a0>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:49: in parse_data\n    findAddress.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff9cb5ff730>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x559f73d04262 \\\\u003Cunknown>\\\\n#21 0x559f73d15f34 \\\\u003Cunknown>\\\\n#22 0x7f93c5a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"button\" value=\"Find address\" id=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" name=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" class=\"icminput icminput--button\" onclick=\"\"> is not clickable at point (90, 458). Other element would receive the click: <button class=\"btn btn--contrast btn--complete\" name=\"acceptall\" value=\"true\" type=\"submit\">...</button>\nE         (Session info: chrome-headless-shell=121.0.6167.85)\nE       Stacktrace:\nE       #0 0x559f73d16d93 <unknown>\nE       #1 0x559f739fa337 <unknown>\nE       #2 0x559f73a4ce2e <unknown>\nE       #3 0x559f73a4abd0 <unknown>\nE       #4 0x559f73a4844a <unknown>\nE       #5 0x559f73a47226 <unknown>\nE       #6 0x559f73a3a6b7 <unknown>\nE       #7 0x559f73a68442 <unknown>\nE       #8 0x559f73a3a028 <unknown>\nE       #9 0x559f73a6860e <unknown>\nE       #10 0x559f73a8712d <unknown>\nE       #11 0x559f73a681e3 <unknown>\nE       #12 0x559f73a38135 <unknown>\nE       #13 0x559f73a3913e <unknown>\nE       #14 0x559f73cdae4b <unknown>\nE       #15 0x559f73cdedfa <unknown>\nE       #16 0x559f73cc76d5 <unknown>\nE       #17 0x559f73cdfa6f <unknown>\nE       #18 0x559f73cab69f <unknown>\nE       #19 0x559f73d04098 <unknown>\nE       #20 0x559f73d04262 <unknown>\nE       #21 0x559f73d15f34 <unknown>\nE       #22 0x7f93c5a94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1706833645008,"stop":1706833645008,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1706833645008,"stop":1706833649637,"duration":4629},"status":"failed","statusMessage":"Message: element click intercepted: Element <input type=\"button\" value=\"Find address\" id=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" name=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" class=\"icminput icminput--button\" onclick=\"\"> is not clickable at point (90, 458). Other element would receive the click: <button class=\"btn btn--contrast btn--complete\" name=\"acceptall\" value=\"true\" type=\"submit\">...</button>\n  (Session info: chrome-headless-shell=121.0.6167.85)\nStacktrace:\n#0 0x559f73d16d93 <unknown>\n#1 0x559f739fa337 <unknown>\n#2 0x559f73a4ce2e <unknown>\n#3 0x559f73a4abd0 <unknown>\n#4 0x559f73a4844a <unknown>\n#5 0x559f73a47226 <unknown>\n#6 0x559f73a3a6b7 <unknown>\n#7 0x559f73a68442 <unknown>\n#8 0x559f73a3a028 <unknown>\n#9 0x559f73a6860e <unknown>\n#10 0x559f73a8712d <unknown>\n#11 0x559f73a681e3 <unknown>\n#12 0x559f73a38135 <unknown>\n#13 0x559f73a3913e <unknown>\n#14 0x559f73cdae4b <unknown>\n#15 0x559f73cdedfa <unknown>\n#16 0x559f73cc76d5 <unknown>\n#17 0x559f73cdfa6f <unknown>\n#18 0x559f73cab69f <unknown>\n#19 0x559f73d04098 <unknown>\n#20 0x559f73d04262 <unknown>\n#21 0x559f73d15f34 <unknown>\n#22 0x7f93c5a94ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"button\" value=\"Find address\" id=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" name=\"BINCOLLECTIONCHECKER_ADDRESSSEARCH_ADDRESSLOOKUPSEARCH\" class=\"icminput icminput--button\" onclick=\"\"> is not clickable at point (90, 458). Other element would receive the click: <button class=\"btn btn--contrast btn--complete\" name=\"acceptall\" value=\"true\" type=\"submit\">...</button>\n  (Session info: chrome-headless-shell=121.0.6167.85)\nStacktrace:\n#0 0x559f73d16d93 <unknown>\n#1 0x559f739fa337 <unknown>\n#2 0x559f73a4ce2e <unknown>\n#3 0x559f73a4abd0 <unknown>\n#4 0x559f73a4844a <unknown>\n#5 0x559f73a47226 <unknown>\n#6 0x559f73a3a6b7 <unknown>\n#7 0x559f73a68442 <unknown>\n#8 0x559f73a3a028 <unknown>\n#9 0x559f73a6860e <unknown>\n#10 0x559f73a8712d <unknown>\n#11 0x559f73a681e3 <unknown>\n#12 0x559f73a38135 <unknown>\n#13 0x559f73a3913e <unknown>\n#14 0x559f73cdae4b <unknown>\n#15 0x559f73cdedfa <unknown>\n#16 0x559f73cc76d5 <unknown>\n#17 0x559f73cdfa6f <unknown>\n#18 0x559f73cab69f <unknown>\n#19 0x559f73d04098 <unknown>\n#20 0x559f73d04262 <unknown>\n#21 0x559f73d15f34 <unknown>\n#22 0x7f93c5a94ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1542-566"},{"name":"thread","value":"2760-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":33,"broken":0,"skipped":0,"passed":146,"unknown":0,"total":179},"items":[{"uid":"e1c76711a5f1e19c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1538//#testresult/e1c76711a5f1e19c","status":"passed","time":{"start":1706747333836,"stop":1706747341361,"duration":7525}},{"uid":"c86baed4ee7d71f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1537//#testresult/c86baed4ee7d71f8","status":"passed","time":{"start":1706660934489,"stop":1706660943813,"duration":9324}},{"uid":"5dd9aa89386199af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1535//#testresult/5dd9aa89386199af","status":"passed","time":{"start":1706574452774,"stop":1706574459722,"duration":6948}},{"uid":"7e99b3518708a23e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1534//#testresult/7e99b3518708a23e","status":"passed","time":{"start":1706488110286,"stop":1706488118785,"duration":8499}},{"uid":"f0316658651c7222","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1531//#testresult/f0316658651c7222","status":"passed","time":{"start":1706401786613,"stop":1706401810618,"duration":24005}},{"uid":"d6de471a0a6be25a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1529//#testresult/d6de471a0a6be25a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5598e2a7bf83 <unknown>\n#1 0x5598e2734cf7 <unknown>\n#2 0x5598e278499e <unknown>\n#3 0x5598e2784aa1 <unknown>\n#4 0x5598e27cfd64 <unknown>\n#5 0x5598e27ae0dd <unknown>\n#6 0x5598e27cd006 <unknown>\n#7 0x5598e27ade53 <unknown>\n#8 0x5598e2775dd4 <unknown>\n#9 0x5598e27771de <unknown>\n#10 0x5598e2a40531 <unknown>\n#11 0x5598e2a44455 <unknown>\n#12 0x5598e2a2cf55 <unknown>\n#13 0x5598e2a450ef <unknown>\n#14 0x5598e2a1099f <unknown>\n#15 0x5598e2a69008 <unknown>\n#16 0x5598e2a691d7 <unknown>\n#17 0x5598e2a7b124 <unknown>\n#18 0x7fb40aa94ac3 <unknown>","time":{"start":1706315256246,"stop":1706315363325,"duration":107079}},{"uid":"eb6265fd1dda6aae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1528//#testresult/eb6265fd1dda6aae","status":"passed","time":{"start":1706228887344,"stop":1706228896161,"duration":8817}},{"uid":"3bf41e3632915cad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1523//#testresult/3bf41e3632915cad","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x557c4ca6cf83 <unknown>\n#1 0x557c4c725cf7 <unknown>\n#2 0x557c4c70b7a1 <unknown>\n#3 0x557c4c70b44a <unknown>\n#4 0x557c4c7097e1 <unknown>\n#5 0x557c4c70a18a <unknown>\n#6 0x557c4c71b07c <unknown>\n#7 0x557c4c7337c1 <unknown>\n#8 0x557c4c7396bb <unknown>\n#9 0x557c4c70a92d <unknown>\n#10 0x557c4c7335c2 <unknown>\n#11 0x557c4c7be204 <unknown>\n#12 0x557c4c79ee53 <unknown>\n#13 0x557c4c766dd4 <unknown>\n#14 0x557c4c7681de <unknown>\n#15 0x557c4ca31531 <unknown>\n#16 0x557c4ca35455 <unknown>\n#17 0x557c4ca1df55 <unknown>\n#18 0x557c4ca360ef <unknown>\n#19 0x557c4ca0199f <unknown>\n#20 0x557c4ca5a008 <unknown>\n#21 0x557c4ca5a1d7 <unknown>\n#22 0x557c4ca6c124 <unknown>\n#23 0x7f441ec94ac3 <unknown>","time":{"start":1706142579075,"stop":1706142888137,"duration":309062}},{"uid":"c2727279403e0167","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1522//#testresult/c2727279403e0167","status":"passed","time":{"start":1706056190113,"stop":1706056197777,"duration":7664}},{"uid":"cbab988f046e5965","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1521//#testresult/cbab988f046e5965","status":"passed","time":{"start":1705969806660,"stop":1705969815936,"duration":9276}},{"uid":"e5ca6221f5755a30","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1520//#testresult/e5ca6221f5755a30","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x55720f045f83 <unknown>\n#1 0x55720ecfecf7 <unknown>\n#2 0x55720ece47a1 <unknown>\n#3 0x55720ece444a <unknown>\n#4 0x55720ece27e1 <unknown>\n#5 0x55720ece318a <unknown>\n#6 0x55720ecf407c <unknown>\n#7 0x55720ed0c7c1 <unknown>\n#8 0x55720ed126bb <unknown>\n#9 0x55720ece392d <unknown>\n#10 0x55720ed0c5c2 <unknown>\n#11 0x55720ed97204 <unknown>\n#12 0x55720ed77e53 <unknown>\n#13 0x55720ed3fdd4 <unknown>\n#14 0x55720ed411de <unknown>\n#15 0x55720f00a531 <unknown>\n#16 0x55720f00e455 <unknown>\n#17 0x55720eff6f55 <unknown>\n#18 0x55720f00f0ef <unknown>\n#19 0x55720efda99f <unknown>\n#20 0x55720f033008 <unknown>\n#21 0x55720f0331d7 <unknown>\n#22 0x55720f045124 <unknown>\n#23 0x7f691fa94ac3 <unknown>","time":{"start":1705883455808,"stop":1705883761000,"duration":305192}},{"uid":"381d102efbafbaea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1519//#testresult/381d102efbafbaea","status":"passed","time":{"start":1705797147773,"stop":1705797160702,"duration":12929}},{"uid":"a26fdbc62be290f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1515//#testresult/a26fdbc62be290f9","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x564378908f83 <unknown>\n#1 0x5643785c1cf7 <unknown>\n#2 0x5643785a77a1 <unknown>\n#3 0x5643785a744a <unknown>\n#4 0x5643785a57e1 <unknown>\n#5 0x5643785a618a <unknown>\n#6 0x5643785b707c <unknown>\n#7 0x5643785cf7c1 <unknown>\n#8 0x5643785d56bb <unknown>\n#9 0x5643785a692d <unknown>\n#10 0x5643785cf5c2 <unknown>\n#11 0x56437865a204 <unknown>\n#12 0x56437863ae53 <unknown>\n#13 0x564378602dd4 <unknown>\n#14 0x5643786041de <unknown>\n#15 0x5643788cd531 <unknown>\n#16 0x5643788d1455 <unknown>\n#17 0x5643788b9f55 <unknown>\n#18 0x5643788d20ef <unknown>\n#19 0x56437889d99f <unknown>\n#20 0x5643788f6008 <unknown>\n#21 0x5643788f61d7 <unknown>\n#22 0x564378908124 <unknown>\n#23 0x7fd31b894ac3 <unknown>","time":{"start":1705710539230,"stop":1705710843465,"duration":304235}},{"uid":"54d650819b63d4ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1511//#testresult/54d650819b63d4ad","status":"passed","time":{"start":1705624220654,"stop":1705624229941,"duration":9287}},{"uid":"2ab7cf32b583fc3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1505//#testresult/2ab7cf32b583fc3a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x5589ecdf8f83 <unknown>\n#1 0x5589ecab1cf7 <unknown>\n#2 0x5589eca977a1 <unknown>\n#3 0x5589eca9744a <unknown>\n#4 0x5589eca957e1 <unknown>\n#5 0x5589eca9618a <unknown>\n#6 0x5589ecaa707c <unknown>\n#7 0x5589ecabf7c1 <unknown>\n#8 0x5589ecac56bb <unknown>\n#9 0x5589eca9692d <unknown>\n#10 0x5589ecabf5c2 <unknown>\n#11 0x5589ecb4a204 <unknown>\n#12 0x5589ecb2ae53 <unknown>\n#13 0x5589ecaf2dd4 <unknown>\n#14 0x5589ecaf41de <unknown>\n#15 0x5589ecdbd531 <unknown>\n#16 0x5589ecdc1455 <unknown>\n#17 0x5589ecda9f55 <unknown>\n#18 0x5589ecdc20ef <unknown>\n#19 0x5589ecd8d99f <unknown>\n#20 0x5589ecde6008 <unknown>\n#21 0x5589ecde61d7 <unknown>\n#22 0x5589ecdf8124 <unknown>\n#23 0x7f13c3a94ac3 <unknown>","time":{"start":1705537744714,"stop":1705538048696,"duration":303982}},{"uid":"66adddecc01dfef3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1500//#testresult/66adddecc01dfef3","status":"passed","time":{"start":1705451342334,"stop":1705451349378,"duration":7044}},{"uid":"d24ff3cc4e460646","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1499//#testresult/d24ff3cc4e460646","status":"passed","time":{"start":1705364994104,"stop":1705365001758,"duration":7654}},{"uid":"37bf621c413dd1dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1497//#testresult/37bf621c413dd1dc","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.199)\nStacktrace:\n#0 0x55f9ee151f83 <unknown>\n#1 0x55f9ede0acf7 <unknown>\n#2 0x55f9eddf07a1 <unknown>\n#3 0x55f9eddf044a <unknown>\n#4 0x55f9eddee7e1 <unknown>\n#5 0x55f9eddef18a <unknown>\n#6 0x55f9ede0007c <unknown>\n#7 0x55f9ede187c1 <unknown>\n#8 0x55f9ede1e6bb <unknown>\n#9 0x55f9eddef92d <unknown>\n#10 0x55f9ede185c2 <unknown>\n#11 0x55f9edea3204 <unknown>\n#12 0x55f9ede83e53 <unknown>\n#13 0x55f9ede4bdd4 <unknown>\n#14 0x55f9ede4d1de <unknown>\n#15 0x55f9ee116531 <unknown>\n#16 0x55f9ee11a455 <unknown>\n#17 0x55f9ee102f55 <unknown>\n#18 0x55f9ee11b0ef <unknown>\n#19 0x55f9ee0e699f <unknown>\n#20 0x55f9ee13f008 <unknown>\n#21 0x55f9ee13f1d7 <unknown>\n#22 0x55f9ee151124 <unknown>\n#23 0x7fabc9a94ac3 <unknown>","time":{"start":1705318509081,"stop":1705318813701,"duration":304620}},{"uid":"9d80c2521443ae7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1492//#testresult/9d80c2521443ae7a","status":"passed","time":{"start":1705295708572,"stop":1705295718679,"duration":10107}},{"uid":"bfd762075eec7e3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1491//#testresult/bfd762075eec7e3a","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705295146775,"stop":1705295146975,"duration":200}}]},"tags":[]},"source":"89c9caf2feb8a4f0.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}