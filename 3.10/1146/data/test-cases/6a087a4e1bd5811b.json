{"uid":"6a087a4e1bd5811b","name":"Validate Council Output [MertonCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a067692419696058d026d9aab0da27d0","time":{"start":1700788592375,"stop":1700788620643,"duration":28268},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f45de0cea70>\nrequest = <FixtureRequest for <Function test_scenario_outline[MertonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f45caf5f370>, 'council': 'MertonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MertonCouncil.CouncilClass object at 0x7f45cafc0ee0>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://myneighbourhood.merton.gov.uk/Wasteservices/WasteServices.aspx?ID=28186366', ...}\nsoup = \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.d...</a>\r\n\t\t| Copyright © 2023 Merton Council and its licensors. All rights reserved.\r\n\t</p>\n</div>\n</div>\n</body>\n</html>\n\nbin_data_dict = {'bins': []}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        bin_data_dict = {\"bins\": []}\n    \n        # Search for the specific bin in the table using BS4\n>       rows = soup.find(\"table\", class_=(\"collectiondays\")).find_all(\n            \"tr\",\n            class_=(\n                \"food-caddy\",\n                \"papercard-wheelie\",\n                \"plastics-boxes\",\n                \"rubbish-wheelie\",\n                \"textiles\",\n                \"batteries\",\n            ),\n        )\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/MertonCouncil.py:24: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f45de0cea70>\nrequest = <FixtureRequest for <Function test_scenario_outline[MertonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f45caf5f370>, 'council': 'MertonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MertonCouncil.CouncilClass object at 0x7f45cafc0ee0>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://myneighbourhood.merton.gov.uk/Wasteservices/WasteServices.aspx?ID=28186366', ...}\nsoup = \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.d...</a>\r\n\t\t| Copyright © 2023 Merton Council and its licensors. All rights reserved.\r\n\t</p>\n</div>\n</div>\n</body>\n</html>\n\nbin_data_dict = {'bins': []}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        bin_data_dict = {\"bins\": []}\n    \n        # Search for the specific bin in the table using BS4\n>       rows = soup.find(\"table\", class_=(\"collectiondays\")).find_all(\n            \"tr\",\n            class_=(\n                \"food-caddy\",\n                \"papercard-wheelie\",\n                \"plastics-boxes\",\n                \"rubbish-wheelie\",\n                \"textiles\",\n                \"batteries\",\n            ),\n        )\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/MertonCouncil.py:24: AttributeError","steps":[{"name":"Given the council: MertonCouncil","time":{"start":1700788592375,"stop":1700788592376,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from MertonCouncil using None and the None is set","time":{"start":1700788592376,"stop":1700788620643,"duration":28267},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az525-246"},{"name":"thread","value":"2697-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MertonCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":23,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":23},"items":[{"uid":"4cbb058b22e50f2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1145//#testresult/4cbb058b22e50f2b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700702296180,"stop":1700702298213,"duration":2033}},{"uid":"4c8d7c2c0d193c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1143//#testresult/4c8d7c2c0d193c0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646378917,"stop":1700646381884,"duration":2967}},{"uid":"476a7174c2bf7572","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1141//#testresult/476a7174c2bf7572","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700616067407,"stop":1700616069581,"duration":2174}},{"uid":"8d839ea73776a7c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1136//#testresult/8d839ea73776a7c5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700529689958,"stop":1700529695291,"duration":5333}},{"uid":"992c800418ebb5c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/992c800418ebb5c2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443169272,"stop":1700443170990,"duration":1718}},{"uid":"53468e6cba996e84","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/53468e6cba996e84","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700357004478,"stop":1700357005813,"duration":1335}},{"uid":"60ef9d39a72736c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1133//#testresult/60ef9d39a72736c9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270310781,"stop":1700270316419,"duration":5638}},{"uid":"d025fc48f752d6b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1132//#testresult/d025fc48f752d6b8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183916703,"stop":1700183921628,"duration":4925}},{"uid":"92d568efae737e7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1131//#testresult/92d568efae737e7c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097546655,"stop":1700097551745,"duration":5090}},{"uid":"4089fba614031f21","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1129//#testresult/4089fba614031f21","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700011288210,"stop":1700011289661,"duration":1451}},{"uid":"e8422300ec757a0b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1128//#testresult/e8422300ec757a0b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699924900786,"stop":1699924907010,"duration":6224}},{"uid":"6a063b4b53755295","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1127//#testresult/6a063b4b53755295","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699838560327,"stop":1699838561814,"duration":1487}},{"uid":"585d9feb00bebfa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1126//#testresult/585d9feb00bebfa","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699752078933,"stop":1699752080441,"duration":1508}},{"uid":"6f7727d6ab29498d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1125//#testresult/6f7727d6ab29498d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699669518199,"stop":1699669523597,"duration":5398}},{"uid":"612156867a7ee6a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1124//#testresult/612156867a7ee6a0","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1699578959129,"stop":1699578961118,"duration":1989}},{"uid":"370a6a20ecf86ada","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1123//#testresult/370a6a20ecf86ada","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699492644308,"stop":1699492646479,"duration":2171}},{"uid":"957a1852d214ec2d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1121//#testresult/957a1852d214ec2d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699481274382,"stop":1699481275714,"duration":1332}},{"uid":"e363c2f30276ab98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1117//#testresult/e363c2f30276ab98","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699445235244,"stop":1699445236622,"duration":1378}},{"uid":"a94c8f98aca7df3b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1115//#testresult/a94c8f98aca7df3b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699406433829,"stop":1699406436062,"duration":2233}},{"uid":"b217637002338be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1114//#testresult/b217637002338be","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699319820280,"stop":1699319821902,"duration":1622}}]},"tags":[]},"source":"6a087a4e1bd5811b.json","parameterValues":["MertonCouncil","None","None"]}