{"uid":"1737709fe68c86ac","name":"Validate Council Output [NewcastleCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a63cb1391c4aa4a9ce00ac5e7dcb85fb","time":{"start":1701393913658,"stop":1701393974090,"duration":60432},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f6999f56e60>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6988039ab0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f6988039ab0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f6999f56e60>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6988039ab0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f6988039ab0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1701393913658,"stop":1701393913659,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from NewcastleCityCouncil using None and the None is set","time":{"start":1701393913659,"stop":1701393974088,"duration":60429},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701393974088,"stop":1701393974088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701393974089,"stop":1701393974090,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1391-586"},{"name":"thread","value":"2699-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":24,"unknown":0,"total":35},"items":[{"uid":"39b53d85542a7785","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1169//#testresult/39b53d85542a7785","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='community.newcastle.gov.uk', port=443): Max retries exceeded with url: /my-neighbourhood/ajax/getBinsNew.php?uprn=004510730634&User-Agent=Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F108.0.0.0+Safari%2F537.36 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f0ccdeeef50>, 'Connection to community.newcastle.gov.uk timed out. (connect timeout=None)'))","time":{"start":1701353354149,"stop":1701353484330,"duration":130181}},{"uid":"4b8e9b72ba1ba0f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1163//#testresult/4b8e9b72ba1ba0f6","status":"passed","time":{"start":1701307123724,"stop":1701307142675,"duration":18951}},{"uid":"e2c213a4afd9740b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1161//#testresult/e2c213a4afd9740b","status":"passed","time":{"start":1701279365129,"stop":1701279379382,"duration":14253}},{"uid":"c77e27bfb5bdac25","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1162//#testresult/c77e27bfb5bdac25","status":"passed","time":{"start":1701279366658,"stop":1701279386305,"duration":19647}},{"uid":"a6224ad9eb514fa0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1156//#testresult/a6224ad9eb514fa0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701220775215,"stop":1701220836159,"duration":60944}},{"uid":"76609ec7462fcd97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1155//#testresult/76609ec7462fcd97","status":"passed","time":{"start":1701134367383,"stop":1701134400068,"duration":32685}},{"uid":"be2de55b0aee6d3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1152//#testresult/be2de55b0aee6d3a","status":"passed","time":{"start":1701047935079,"stop":1701047955420,"duration":20341}},{"uid":"32a898bf03dac5fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1151//#testresult/32a898bf03dac5fe","status":"passed","time":{"start":1701036165853,"stop":1701036179409,"duration":13556}},{"uid":"6d1141cf2c5e0b2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1150//#testresult/6d1141cf2c5e0b2c","status":"passed","time":{"start":1701036165934,"stop":1701036180005,"duration":14071}},{"uid":"d6925bc7805057a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1148//#testresult/d6925bc7805057a5","status":"passed","time":{"start":1700961744629,"stop":1700961773511,"duration":28882}},{"uid":"6d010d4f11234d69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1147//#testresult/6d010d4f11234d69","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700874930176,"stop":1700874960626,"duration":30450}},{"uid":"9fd79a40f49ef53c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1146//#testresult/9fd79a40f49ef53c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700788595245,"stop":1700788626098,"duration":30853}},{"uid":"32d41ca47df76b34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1145//#testresult/32d41ca47df76b34","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700702305018,"stop":1700702335644,"duration":30626}},{"uid":"6ada891888aa997e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1143//#testresult/6ada891888aa997e","status":"passed","time":{"start":1700646383876,"stop":1700646398795,"duration":14919}},{"uid":"73df163838980d8d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1141//#testresult/73df163838980d8d","status":"passed","time":{"start":1700616069345,"stop":1700616101206,"duration":31861}},{"uid":"668623978f25f836","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1136//#testresult/668623978f25f836","status":"passed","time":{"start":1700529697054,"stop":1700529721388,"duration":24334}},{"uid":"176b2780bed2e08e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/176b2780bed2e08e","status":"passed","time":{"start":1700443179758,"stop":1700443202954,"duration":23196}},{"uid":"3046d07d8e0552a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/3046d07d8e0552a1","status":"passed","time":{"start":1700357012926,"stop":1700357035851,"duration":22925}},{"uid":"262649d23279060e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1133//#testresult/262649d23279060e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270325577,"stop":1700270356362,"duration":30785}},{"uid":"cd797fb0405c42a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1132//#testresult/cd797fb0405c42a6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183930103,"stop":1700183978184,"duration":48081}}]},"tags":[]},"source":"1737709fe68c86ac.json","parameterValues":["NewcastleCityCouncil","None","None"]}