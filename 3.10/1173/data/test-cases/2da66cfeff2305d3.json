{"uid":"2da66cfeff2305d3","name":"Validate Council Output [BromleyBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f99c7ea76f01e7f999185ee0dfc6d3a7","time":{"start":1701393874044,"stop":1701393877928,"duration":3884},"status":"failed","statusMessage":"ValueError: unconverted data remains: \n              \n              (In progress)","statusTrace":"fixturefunc = <function scrape_step at 0x7f6999f56b00>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6987b66a10>, 'council': 'BromleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BromleyBoroughCouncil.py:39: in parse_data\n    next_collection = datetime.strptime(remove_ordinal_indicator_from_date_string(collection_date.replace(',', '')), \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Friday 1 December\\n              \\n              (In progress)'\nformat = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n            raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\n        if len(data_string) != found.end():\n>           raise ValueError(\"unconverted data remains: %s\" %\n                              data_string[found.end():])\nE           ValueError: unconverted data remains: \nE                         \nE                         (In progress)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:352: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: unconverted data remains: \n              \n              (In progress)","statusTrace":"fixturefunc = <function scrape_step at 0x7f6999f56b00>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6987b66a10>, 'council': 'BromleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BromleyBoroughCouncil.py:39: in parse_data\n    next_collection = datetime.strptime(remove_ordinal_indicator_from_date_string(collection_date.replace(',', '')), \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Friday 1 December\\n              \\n              (In progress)'\nformat = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n            raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\n        if len(data_string) != found.end():\n>           raise ValueError(\"unconverted data remains: %s\" %\n                              data_string[found.end():])\nE           ValueError: unconverted data remains: \nE                         \nE                         (In progress)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:352: ValueError","steps":[{"name":"Given the council: BromleyBoroughCouncil","time":{"start":1701393874045,"stop":1701393874045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BromleyBoroughCouncil using None and the None is set","time":{"start":1701393874045,"stop":1701393877928,"duration":3883},"status":"failed","statusMessage":"unconverted data remains: \n              \n              (In progress)","statusTrace":"ValueError: unconverted data remains: \n              \n              (In progress)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1391-586"},{"name":"thread","value":"2699-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BromleyBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":34,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":35},"items":[{"uid":"dcd38cd2defa4398","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1169//#testresult/dcd38cd2defa4398","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1701353317565,"stop":1701353318581,"duration":1016}},{"uid":"8c9e2a9877d62a8d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1163//#testresult/8c9e2a9877d62a8d","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1701307064818,"stop":1701307065910,"duration":1092}},{"uid":"84fb57bfdf95bb52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1161//#testresult/84fb57bfdf95bb52","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1701279294893,"stop":1701279296102,"duration":1209}},{"uid":"f8ff24e2877c36a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1162//#testresult/f8ff24e2877c36a6","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1701279325350,"stop":1701279326338,"duration":988}},{"uid":"b39f8dfddb112f24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1156//#testresult/b39f8dfddb112f24","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701220721479,"stop":1701220724844,"duration":3365}},{"uid":"83d4261c14a4024b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1155//#testresult/83d4261c14a4024b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701134329053,"stop":1701134332687,"duration":3634}},{"uid":"8ce9ec09f0393f21","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1152//#testresult/8ce9ec09f0393f21","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1701047884737,"stop":1701047885768,"duration":1031}},{"uid":"d94fdb8a131891b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1151//#testresult/d94fdb8a131891b8","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1701036116323,"stop":1701036117962,"duration":1639}},{"uid":"9d1eb213c963bc24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1150//#testresult/9d1eb213c963bc24","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1701036097639,"stop":1701036098615,"duration":976}},{"uid":"82b0b1906ff3045c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1148//#testresult/82b0b1906ff3045c","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1700961700367,"stop":1700961704590,"duration":4223}},{"uid":"61a568968f4b4021","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1147//#testresult/61a568968f4b4021","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700874884027,"stop":1700874885148,"duration":1121}},{"uid":"1480917a65515c39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1146//#testresult/1480917a65515c39","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700788552035,"stop":1700788553185,"duration":1150}},{"uid":"12bac45a4ea81db0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1145//#testresult/12bac45a4ea81db0","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700702255440,"stop":1700702256581,"duration":1141}},{"uid":"1f13e509cdd3ed7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1143//#testresult/1f13e509cdd3ed7","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700646339727,"stop":1700646340630,"duration":903}},{"uid":"f3e853298da7806d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1141//#testresult/f3e853298da7806d","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700616017860,"stop":1700616018919,"duration":1059}},{"uid":"17e5b92cb05a0fe6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1136//#testresult/17e5b92cb05a0fe6","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700529646029,"stop":1700529647517,"duration":1488}},{"uid":"49e1a74b26b28e90","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/49e1a74b26b28e90","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700443126124,"stop":1700443127731,"duration":1607}},{"uid":"cd18cd4a03b93c41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/cd18cd4a03b93c41","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700356968335,"stop":1700356969345,"duration":1010}},{"uid":"634e1e1bfbbaf5c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1133//#testresult/634e1e1bfbbaf5c9","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700270245797,"stop":1700270246983,"duration":1186}},{"uid":"c674dbe1f5732ccd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1132//#testresult/c674dbe1f5732ccd","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700183878084,"stop":1700183879471,"duration":1387}}]},"tags":[]},"source":"2da66cfeff2305d3.json","parameterValues":["BromleyBoroughCouncil","None","None"]}