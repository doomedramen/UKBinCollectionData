{"uid":"c009d2139315dbd9","name":"Validate Council Output [GlasgowCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a2365ffeb3ba24c7926dc7b42b03858c","time":{"start":1699007649797,"stop":1699007650481,"duration":684},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f65997ba4d0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GlasgowCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f658bc19240>, 'council': 'GlasgowCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:67: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:63: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <GlasgowCityCouncil.CouncilClass object at 0x7f658d2a9120>\npage = <Response [500]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.glasgow.gov.uk/forms/refuseandrecyclingcalendar/PrintCalendar.aspx?UPRN=906700034497', ...}\nsoup = <!DOCTYPE html>\n\n<html>\n<head>\n<title>The given key was not present in the dictionary.</title>\n<meta content=\"width=de...onsider using &lt;customErrors mode=\"On\"/&gt; or &lt;customErrors mode=\"RemoteOnly\"/&gt; in production environments.-->\ndata = {'bins': []}\nbin_types = {'../images/bins/cal_ash.png': 'Ash bin', '../images/bins/cal_blue.png': 'Mixed recycling', '../images/bins/cal_brown.png': 'Organic waste', '../images/bins/cal_green.png': 'General waste', ...}\nbody = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Parse the page\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Declare an empty dict for data, and pair icon source URLs with their respective bin type\n        data = {\"bins\": []}\n        bin_types = {\n            \"../images/bins/cal_blue.png\": \"Mixed recycling\",\n            \"../images/bins/cal_green.png\": \"General waste\",\n            \"../images/bins/cal_grey.png\": \"Food waste\",\n            \"../images/bins/cal_brown.png\": \"Organic waste\",\n            \"../images/bins/cal_purple.png\": \"Glass\",\n            \"../images/bins/cal_ash.png\": \"Ash bin\",\n        }\n    \n        # Find the page body with all the calendars\n        body = soup.find(\"div\", {\"id\": \"printArticle\"})\n>       cal_year = datetime.strptime(soup.select(\"#Year\")[0].text.strip(), \"%Y\").year\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/GlasgowCityCouncil.py:32: IndexError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f65997ba4d0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GlasgowCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f658bc19240>, 'council': 'GlasgowCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:67: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:63: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <GlasgowCityCouncil.CouncilClass object at 0x7f658d2a9120>\npage = <Response [500]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.glasgow.gov.uk/forms/refuseandrecyclingcalendar/PrintCalendar.aspx?UPRN=906700034497', ...}\nsoup = <!DOCTYPE html>\n\n<html>\n<head>\n<title>The given key was not present in the dictionary.</title>\n<meta content=\"width=de...onsider using &lt;customErrors mode=\"On\"/&gt; or &lt;customErrors mode=\"RemoteOnly\"/&gt; in production environments.-->\ndata = {'bins': []}\nbin_types = {'../images/bins/cal_ash.png': 'Ash bin', '../images/bins/cal_blue.png': 'Mixed recycling', '../images/bins/cal_brown.png': 'Organic waste', '../images/bins/cal_green.png': 'General waste', ...}\nbody = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Parse the page\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Declare an empty dict for data, and pair icon source URLs with their respective bin type\n        data = {\"bins\": []}\n        bin_types = {\n            \"../images/bins/cal_blue.png\": \"Mixed recycling\",\n            \"../images/bins/cal_green.png\": \"General waste\",\n            \"../images/bins/cal_grey.png\": \"Food waste\",\n            \"../images/bins/cal_brown.png\": \"Organic waste\",\n            \"../images/bins/cal_purple.png\": \"Glass\",\n            \"../images/bins/cal_ash.png\": \"Ash bin\",\n        }\n    \n        # Find the page body with all the calendars\n        body = soup.find(\"div\", {\"id\": \"printArticle\"})\n>       cal_year = datetime.strptime(soup.select(\"#Year\")[0].text.strip(), \"%Y\").year\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/GlasgowCityCouncil.py:32: IndexError","steps":[{"name":"Given the council: GlasgowCityCouncil","time":{"start":1699007649797,"stop":1699007649798,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from GlasgowCityCouncil","time":{"start":1699007649798,"stop":1699007650481,"duration":683},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az349-104"},{"name":"thread","value":"2645-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GlasgowCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":171,"unknown":0,"total":175},"items":[{"uid":"4c89237087315f9f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1095//#testresult/4c89237087315f9f","status":"passed","time":{"start":1698988578330,"stop":1698988580541,"duration":2211}},{"uid":"9ff6e39db0c8e839","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1094//#testresult/9ff6e39db0c8e839","status":"passed","time":{"start":1698974129055,"stop":1698974131441,"duration":2386}},{"uid":"a977685defd2bbdf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1091//#testresult/a977685defd2bbdf","status":"passed","time":{"start":1698887658488,"stop":1698887660837,"duration":2349}},{"uid":"146fd8c1d5036444","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1090//#testresult/146fd8c1d5036444","status":"passed","time":{"start":1698878339552,"stop":1698878342060,"duration":2508}},{"uid":"47d92087ebcb7f70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1086//#testresult/47d92087ebcb7f70","status":"passed","time":{"start":1698867463779,"stop":1698867466507,"duration":2728}},{"uid":"2392fc074740145e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1087//#testresult/2392fc074740145e","status":"passed","time":{"start":1698867467482,"stop":1698867469785,"duration":2303}},{"uid":"e334260aa3e4cc46","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1081//#testresult/e334260aa3e4cc46","status":"passed","time":{"start":1698801591164,"stop":1698801593628,"duration":2464}},{"uid":"763ed04feca4c074","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/763ed04feca4c074","status":"passed","time":{"start":1698788488570,"stop":1698788490952,"duration":2382}},{"uid":"a4a08ee435b314af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/a4a08ee435b314af","status":"passed","time":{"start":1698714985145,"stop":1698714987803,"duration":2658}},{"uid":"ad7ec844be81f773","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/ad7ec844be81f773","status":"passed","time":{"start":1698701360306,"stop":1698701363035,"duration":2729}},{"uid":"e80464851aaa4985","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/e80464851aaa4985","status":"passed","time":{"start":1698700222576,"stop":1698700225082,"duration":2506}},{"uid":"1e40201a75c95ef1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/1e40201a75c95ef1","status":"passed","time":{"start":1698693060971,"stop":1698693063267,"duration":2296}},{"uid":"e8c538802d08d4c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/e8c538802d08d4c9","status":"passed","time":{"start":1698692730982,"stop":1698692733062,"duration":2080}},{"uid":"f09bfb11d9fa7df0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/f09bfb11d9fa7df0","status":"passed","time":{"start":1698646328870,"stop":1698646331624,"duration":2754}},{"uid":"f60d53f522338866","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/f60d53f522338866","status":"passed","time":{"start":1698628546626,"stop":1698628549109,"duration":2483}},{"uid":"d03c392a73dd22b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/d03c392a73dd22b4","status":"passed","time":{"start":1698615205522,"stop":1698615208201,"duration":2679}},{"uid":"11e43a0f690f583d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/11e43a0f690f583d","status":"passed","time":{"start":1698615097931,"stop":1698615100275,"duration":2344}},{"uid":"6f592615c022c393","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/6f592615c022c393","status":"passed","time":{"start":1698542361013,"stop":1698542363506,"duration":2493}},{"uid":"ed6d43d9327037ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1053//#testresult/ed6d43d9327037ce","status":"passed","time":{"start":1698455550069,"stop":1698455552347,"duration":2278}},{"uid":"97d214eb5f36f5a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1051//#testresult/97d214eb5f36f5a3","status":"passed","time":{"start":1698369224064,"stop":1698369226317,"duration":2253}}]},"tags":[]},"source":"c009d2139315dbd9.json","parameterValues":["GlasgowCityCouncil"]}