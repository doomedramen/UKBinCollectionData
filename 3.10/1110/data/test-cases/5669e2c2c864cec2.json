{"uid":"5669e2c2c864cec2","name":"Validate Council Output [TorridgeDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"617b4311b681b19c6f82373e9ef5a04d","time":{"start":1699147446482,"stop":1699147451892,"duration":5410},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f65e69f28c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f65d8f96e90>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f65d8f96e90>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f65e69f28c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f65d8f96e90>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f65d8f96e90>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1699147446482,"stop":1699147446483,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from TorridgeDistrictCouncil","time":{"start":1699147446483,"stop":1699147451889,"duration":5406},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699147451890,"stop":1699147451890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699147451890,"stop":1699147451892,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az575-283"},{"name":"thread","value":"2645-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":174,"unknown":0,"total":178},"items":[{"uid":"ae2bf8b9e417c816","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1107//#testresult/ae2bf8b9e417c816","status":"passed","time":{"start":1699101661179,"stop":1699101664074,"duration":2895}},{"uid":"210de2edf14ccc3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1106//#testresult/210de2edf14ccc3c","status":"passed","time":{"start":1699060687049,"stop":1699060689751,"duration":2702}},{"uid":"6698bcd0dc21c2f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1100//#testresult/6698bcd0dc21c2f6","status":"passed","time":{"start":1699007855145,"stop":1699007857884,"duration":2739}},{"uid":"8d082866ada2f8bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1095//#testresult/8d082866ada2f8bf","status":"passed","time":{"start":1698988659751,"stop":1698988662499,"duration":2748}},{"uid":"be44d7dde5d7d8ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1094//#testresult/be44d7dde5d7d8ed","status":"passed","time":{"start":1698974417463,"stop":1698974420530,"duration":3067}},{"uid":"cc24735ec0af2eff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1091//#testresult/cc24735ec0af2eff","status":"passed","time":{"start":1698887730848,"stop":1698887733502,"duration":2654}},{"uid":"bd8807c72cd55990","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1090//#testresult/bd8807c72cd55990","status":"passed","time":{"start":1698878534911,"stop":1698878537749,"duration":2838}},{"uid":"e242ac406a1d6e06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1086//#testresult/e242ac406a1d6e06","status":"passed","time":{"start":1698867792658,"stop":1698867796419,"duration":3761}},{"uid":"1b3cbd5ce71ae449","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1087//#testresult/1b3cbd5ce71ae449","status":"passed","time":{"start":1698867788494,"stop":1698867792675,"duration":4181}},{"uid":"2b6643947b84197f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1081//#testresult/2b6643947b84197f","status":"passed","time":{"start":1698801791616,"stop":1698801794527,"duration":2911}},{"uid":"99b6fbd05192c508","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/99b6fbd05192c508","status":"passed","time":{"start":1698788669165,"stop":1698788671797,"duration":2632}},{"uid":"d47e2e936c3cf99c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/d47e2e936c3cf99c","status":"passed","time":{"start":1698715209206,"stop":1698715212091,"duration":2885}},{"uid":"650fac0d6bccf8e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/650fac0d6bccf8e2","status":"passed","time":{"start":1698701613593,"stop":1698701616560,"duration":2967}},{"uid":"618bd40d6b1c539e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/618bd40d6b1c539e","status":"passed","time":{"start":1698700406453,"stop":1698700409058,"duration":2605}},{"uid":"7217fbd2b92cff6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/7217fbd2b92cff6c","status":"passed","time":{"start":1698693092074,"stop":1698693097961,"duration":5887}},{"uid":"54053de6181fc64a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/54053de6181fc64a","status":"passed","time":{"start":1698692921563,"stop":1698692925709,"duration":4146}},{"uid":"1ae87d0acdb7a55d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/1ae87d0acdb7a55d","status":"passed","time":{"start":1698646587699,"stop":1698646590820,"duration":3121}},{"uid":"1beee8e852b10855","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/1beee8e852b10855","status":"passed","time":{"start":1698628804107,"stop":1698628811058,"duration":6951}},{"uid":"85ba9ac620795264","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/85ba9ac620795264","status":"passed","time":{"start":1698615471392,"stop":1698615474056,"duration":2664}},{"uid":"75b53949a32c2209","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/75b53949a32c2209","status":"passed","time":{"start":1698615305556,"stop":1698615310990,"duration":5434}}]},"tags":[]},"source":"5669e2c2c864cec2.json","parameterValues":["TorridgeDistrictCouncil"]}