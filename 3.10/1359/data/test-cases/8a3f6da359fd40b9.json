{"uid":"8a3f6da359fd40b9","name":"Validate Council Output [LondonBoroughHounslow-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2d5d41f2f80a2dfc213e6858543e98d5","time":{"start":1704331126900,"stop":1704331129368,"duration":2468},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa8b35a3910>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa8b3905480>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa8b3905480>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa8b35a3910>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa8b3905480>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa8b3905480>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1704331126900,"stop":1704331126900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from LondonBoroughHounslow using None and the None is set","time":{"start":1704331126901,"stop":1704331129366,"duration":2465},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704331129366,"stop":1704331129366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704331129366,"stop":1704331129368,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az700-154"},{"name":"thread","value":"2713-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":120,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":120},"items":[{"uid":"63c60ab17fce93c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1355//#testresult/63c60ab17fce93c4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704304030019,"stop":1704304033100,"duration":3081}},{"uid":"7f00fa0c416238cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1354//#testresult/7f00fa0c416238cf","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704303703849,"stop":1704303706725,"duration":2876}},{"uid":"79e54ce4df1729cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1352//#testresult/79e54ce4df1729cb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704301452512,"stop":1704301455613,"duration":3101}},{"uid":"e8af1b621e28248b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1349//#testresult/e8af1b621e28248b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704244762313,"stop":1704244765412,"duration":3099}},{"uid":"36cb88c388bbfccf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1348//#testresult/36cb88c388bbfccf","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704180390783,"stop":1704180394038,"duration":3255}},{"uid":"6e3630fdcfd252e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1346//#testresult/6e3630fdcfd252e6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704158427681,"stop":1704158431168,"duration":3487}},{"uid":"bc73c957f49d43f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1345//#testresult/bc73c957f49d43f2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704114777643,"stop":1704114780157,"duration":2514}},{"uid":"5aeb1f0cb89c7f4c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1343//#testresult/5aeb1f0cb89c7f4c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704113864207,"stop":1704113867312,"duration":3105}},{"uid":"a1954663bf488395","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1341//#testresult/a1954663bf488395","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112401995,"stop":1704112405170,"duration":3175}},{"uid":"b4c9393b3f5a275b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1339//#testresult/b4c9393b3f5a275b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112250527,"stop":1704112254031,"duration":3504}},{"uid":"92f2f557fee14651","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1338//#testresult/92f2f557fee14651","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112231159,"stop":1704112234170,"duration":3011}},{"uid":"4821304847cc33dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1336//#testresult/4821304847cc33dc","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704111974432,"stop":1704111976905,"duration":2473}},{"uid":"209631576be18191","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1335//#testresult/209631576be18191","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704111667087,"stop":1704111669823,"duration":2736}},{"uid":"4cdca2ae2b18838c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1334//#testresult/4cdca2ae2b18838c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704111621101,"stop":1704111624480,"duration":3379}},{"uid":"1d31f998bc8ebff7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1332//#testresult/1d31f998bc8ebff7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704111478632,"stop":1704111481296,"duration":2664}},{"uid":"820234428e2e2e65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1330//#testresult/820234428e2e2e65","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704100170812,"stop":1704100173460,"duration":2648}},{"uid":"f7e1d74066ada870","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1329//#testresult/f7e1d74066ada870","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704072738012,"stop":1704072740620,"duration":2608}},{"uid":"78a66f3f53552eeb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1327//#testresult/78a66f3f53552eeb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704050536028,"stop":1704050539453,"duration":3425}},{"uid":"2b350f9a5d652bda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1325//#testresult/2b350f9a5d652bda","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704044078883,"stop":1704044082017,"duration":3134}},{"uid":"277e5051a0f70f9a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1320//#testresult/277e5051a0f70f9a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703985910318,"stop":1703985913224,"duration":2906}}]},"tags":[]},"source":"8a3f6da359fd40b9.json","parameterValues":["LondonBoroughHounslow","None","None"]}