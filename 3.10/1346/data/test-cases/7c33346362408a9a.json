{"uid":"7c33346362408a9a","name":"Validate Council Output [MaldonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d7ae259690887cdb3dd06225c666392f","time":{"start":1704158378603,"stop":1704158379282,"duration":679},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f5f776335b0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5f69a94df0>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f5f6abe1b10>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '100090557253', 'url': 'https://maldon.suez.co.uk/maldon/ServiceSummary', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f5f776335b0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5f69a94df0>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f5f6abe1b10>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '100090557253', 'url': 'https://maldon.suez.co.uk/maldon/ServiceSummary', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council: MaldonDistrictCouncil","time":{"start":1704158378603,"stop":1704158378603,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MaldonDistrictCouncil using None and the None is set","time":{"start":1704158378604,"stop":1704158379282,"duration":678},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1567-133"},{"name":"thread","value":"2802-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":111,"unknown":0,"total":114},"items":[{"uid":"c391fc3c71561359","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1345//#testresult/c391fc3c71561359","status":"passed","time":{"start":1704114640975,"stop":1704114641924,"duration":949}},{"uid":"61da1e3241360def","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1343//#testresult/61da1e3241360def","status":"passed","time":{"start":1704113740957,"stop":1704113742289,"duration":1332}},{"uid":"a404e4005051ab53","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1341//#testresult/a404e4005051ab53","status":"passed","time":{"start":1704112276273,"stop":1704112277537,"duration":1264}},{"uid":"a1c827c803b75810","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1339//#testresult/a1c827c803b75810","status":"passed","time":{"start":1704112126081,"stop":1704112127048,"duration":967}},{"uid":"dcac87a421310e17","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1338//#testresult/dcac87a421310e17","status":"passed","time":{"start":1704112084270,"stop":1704112085469,"duration":1199}},{"uid":"ed41a0b079c4815a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1336//#testresult/ed41a0b079c4815a","status":"passed","time":{"start":1704111848739,"stop":1704111849680,"duration":941}},{"uid":"1e4813c9f9b05509","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1335//#testresult/1e4813c9f9b05509","status":"passed","time":{"start":1704111538349,"stop":1704111539300,"duration":951}},{"uid":"25cc20e60c3bf2b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1334//#testresult/25cc20e60c3bf2b4","status":"passed","time":{"start":1704111499310,"stop":1704111500465,"duration":1155}},{"uid":"9af4ee40670101f1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1332//#testresult/9af4ee40670101f1","status":"passed","time":{"start":1704111354846,"stop":1704111355858,"duration":1012}},{"uid":"3eb96df9984ff4f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1330//#testresult/3eb96df9984ff4f3","status":"passed","time":{"start":1704099954323,"stop":1704099957960,"duration":3637}},{"uid":"f858e3ff7af3ba03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1329//#testresult/f858e3ff7af3ba03","status":"passed","time":{"start":1704072284757,"stop":1704072293714,"duration":8957}},{"uid":"530693d617ce142d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1327//#testresult/530693d617ce142d","status":"passed","time":{"start":1704050412794,"stop":1704050414021,"duration":1227}},{"uid":"639092fc52af479","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1325//#testresult/639092fc52af479","status":"passed","time":{"start":1704043911709,"stop":1704043912769,"duration":1060}},{"uid":"ac3bc1d1ed5f5fb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1320//#testresult/ac3bc1d1ed5f5fb9","status":"passed","time":{"start":1703985913253,"stop":1703985914183,"duration":930}},{"uid":"f3d6fc4299a12a79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1316//#testresult/f3d6fc4299a12a79","status":"passed","time":{"start":1703899140750,"stop":1703899141974,"duration":1224}},{"uid":"9c23f1622b4f840e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1314//#testresult/9c23f1622b4f840e","status":"passed","time":{"start":1703853639530,"stop":1703853641433,"duration":1903}},{"uid":"2a0cec91466d5a00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1311//#testresult/2a0cec91466d5a00","status":"passed","time":{"start":1703851233177,"stop":1703851234264,"duration":1087}},{"uid":"ba7f60fe88716bed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1312//#testresult/ba7f60fe88716bed","status":"passed","time":{"start":1703851277041,"stop":1703851278248,"duration":1207}},{"uid":"1157ff75f85c54ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1309//#testresult/1157ff75f85c54ce","status":"passed","time":{"start":1703812178535,"stop":1703812179444,"duration":909}},{"uid":"6e1cfc2010ce50d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1306//#testresult/6e1cfc2010ce50d6","status":"passed","time":{"start":1703756315747,"stop":1703756317240,"duration":1493}}]},"tags":[]},"source":"7c33346362408a9a.json","parameterValues":["MaldonDistrictCouncil","None","None"]}