{"uid":"2782686344037264","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1701307076240,"stop":1701307077161,"duration":921},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f5a0e5b3400>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f59fc4ffc70>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f59fc4ffc70>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f5a0e5b3400>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f59fc4ffc70>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f59fc4ffc70>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1701307076240,"stop":1701307076240,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1701307076240,"stop":1701307077158,"duration":918},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701307077158,"stop":1701307077158,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701307077159,"stop":1701307077161,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1116-834"},{"name":"thread","value":"2799-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":27,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":33},"items":[{"uid":"9738b38e1cf05a4c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1161//#testresult/9738b38e1cf05a4c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701279312181,"stop":1701279313097,"duration":916}},{"uid":"cbd86313714c86b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1162//#testresult/cbd86313714c86b5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701279336759,"stop":1701279337603,"duration":844}},{"uid":"40aaf6c47f9da617","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1156//#testresult/40aaf6c47f9da617","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701220735136,"stop":1701220735985,"duration":849}},{"uid":"12d54a5f74566e32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1155//#testresult/12d54a5f74566e32","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701134347833,"stop":1701134348668,"duration":835}},{"uid":"bb359c85b34c09ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1152//#testresult/bb359c85b34c09ac","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701047901532,"stop":1701047902613,"duration":1081}},{"uid":"f9662f1e9a353a24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1151//#testresult/f9662f1e9a353a24","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036131040,"stop":1701036131672,"duration":632}},{"uid":"dc43de59f5e6d890","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1150//#testresult/dc43de59f5e6d890","status":"passed","time":{"start":1701036135750,"stop":1701036137156,"duration":1406}},{"uid":"40d1bb16e9862048","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1148//#testresult/40d1bb16e9862048","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700961714176,"stop":1700961715224,"duration":1048}},{"uid":"8f798c66c1b05116","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1147//#testresult/8f798c66c1b05116","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700874916455,"stop":1700874917124,"duration":669}},{"uid":"94e511644d8d7172","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1146//#testresult/94e511644d8d7172","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700788566660,"stop":1700788567870,"duration":1210}},{"uid":"88b41b36d81d5b8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1145//#testresult/88b41b36d81d5b8a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700702270417,"stop":1700702271259,"duration":842}},{"uid":"5d97da372913bf09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1143//#testresult/5d97da372913bf09","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646352677,"stop":1700646353538,"duration":861}},{"uid":"45f4fe7783c04215","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1141//#testresult/45f4fe7783c04215","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 22 November\\n              \\n              (In progress) 2023' does not match format '%A, %d %B %Y'","time":{"start":1700616042937,"stop":1700616044791,"duration":1854}},{"uid":"77c01576aa7848f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1136//#testresult/77c01576aa7848f6","status":"passed","time":{"start":1700529668614,"stop":1700529670383,"duration":1769}},{"uid":"fbb68c10a74d99db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/fbb68c10a74d99db","status":"passed","time":{"start":1700443154183,"stop":1700443156013,"duration":1830}},{"uid":"50de5cf918b045c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/50de5cf918b045c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700357181799,"stop":1700357182924,"duration":1125}},{"uid":"6fac377069e43517","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1133//#testresult/6fac377069e43517","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270298404,"stop":1700270299345,"duration":941}},{"uid":"cbcf43e0bf9a49fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1132//#testresult/cbcf43e0bf9a49fc","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183892260,"stop":1700183893982,"duration":1722}},{"uid":"4683305168322c8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1131//#testresult/4683305168322c8a","status":"passed","time":{"start":1700097522151,"stop":1700097523912,"duration":1761}},{"uid":"a5ebe197c0f71a2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1129//#testresult/a5ebe197c0f71a2a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700011139688,"stop":1700011140300,"duration":612}}]},"tags":[]},"source":"2782686344037264.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}