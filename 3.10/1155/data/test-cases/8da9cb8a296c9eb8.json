{"uid":"8da9cb8a296c9eb8","name":"Validate Council Output [RushmoorCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9e9824bacc749482fde9fb74bc6e375c","time":{"start":1701134406060,"stop":1701134407051,"duration":991},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f6b2b2fedd0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6b1b4b82e0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f6b1b4b82e0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f6b2b2fedd0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6b1b4b82e0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f6b1b4b82e0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: RushmoorCouncil","time":{"start":1701134406060,"stop":1701134406060,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from RushmoorCouncil using None and the None is set","time":{"start":1701134406061,"stop":1701134407048,"duration":987},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701134407049,"stop":1701134407049,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701134407049,"stop":1701134407051,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1242-782"},{"name":"thread","value":"2726-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RushmoorCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":29},"items":[{"uid":"5535661a204171a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1152//#testresult/5535661a204171a1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701047967255,"stop":1701047968471,"duration":1216}},{"uid":"bca20ab663927973","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1151//#testresult/bca20ab663927973","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036190870,"stop":1701036191890,"duration":1020}},{"uid":"70cc7b10f1a4a1f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1150//#testresult/70cc7b10f1a4a1f8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036183832,"stop":1701036184732,"duration":900}},{"uid":"59356d1f66fd9a59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1148//#testresult/59356d1f66fd9a59","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700961780036,"stop":1700961780932,"duration":896}},{"uid":"b35daf8c78441f5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1147//#testresult/b35daf8c78441f5d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700874977637,"stop":1700874978501,"duration":864}},{"uid":"e0b4e110dd456f9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1146//#testresult/e0b4e110dd456f9d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700788627786,"stop":1700788629128,"duration":1342}},{"uid":"3b0a86121bb07e64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1145//#testresult/3b0a86121bb07e64","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700702332324,"stop":1700702333191,"duration":867}},{"uid":"60aa10af9010b10d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1143//#testresult/60aa10af9010b10d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646400605,"stop":1700646401245,"duration":640}},{"uid":"7f31aecf8f71a6d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1141//#testresult/7f31aecf8f71a6d3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700616087663,"stop":1700616088605,"duration":942}},{"uid":"51b5a16ea8dca9a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1136//#testresult/51b5a16ea8dca9a2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700529737244,"stop":1700529738541,"duration":1297}},{"uid":"bc9e62db124f6156","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1135//#testresult/bc9e62db124f6156","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443196157,"stop":1700443197512,"duration":1355}},{"uid":"1956d418116cc247","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1134//#testresult/1956d418116cc247","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700357024848,"stop":1700357026089,"duration":1241}},{"uid":"3df1d163ab73b709","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1133//#testresult/3df1d163ab73b709","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270336369,"stop":1700270337312,"duration":943}},{"uid":"7da55b55b95eea85","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1132//#testresult/7da55b55b95eea85","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183955293,"stop":1700183955960,"duration":667}},{"uid":"84541d5f554125f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1131//#testresult/84541d5f554125f8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097578927,"stop":1700097579857,"duration":930}},{"uid":"ae2681f6b241af35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1129//#testresult/ae2681f6b241af35","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700011321646,"stop":1700011322219,"duration":573}},{"uid":"d5683010ab9f8add","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1128//#testresult/d5683010ab9f8add","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699924907043,"stop":1699924908307,"duration":1264}},{"uid":"e9503a7505dd2144","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1127//#testresult/e9503a7505dd2144","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699838561849,"stop":1699838562678,"duration":829}},{"uid":"ecfdcd65a451780e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1126//#testresult/ecfdcd65a451780e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699752113500,"stop":1699752114124,"duration":624}},{"uid":"6d15dabe5be0ba92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1125//#testresult/6d15dabe5be0ba92","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699669546568,"stop":1699669547560,"duration":992}}]},"tags":[]},"source":"8da9cb8a296c9eb8.json","parameterValues":["RushmoorCouncil","None","None"]}