{"uid":"8964b0175d2e92e3","name":"Validate Council Output [MidSussexDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"603913cb01d56f40fcd70fa6d1ec6273","time":{"start":1703541168245,"stop":1703541169064,"duration":819},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7f5c4bf335b0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5c48fcac80>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7f5c4be381c0>\npage = ''\nkwargs = {'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, 'url': 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/', ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:63: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7f5c4bf335b0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5c48fcac80>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7f5c4be381c0>\npage = ''\nkwargs = {'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, 'url': 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/', ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:63: AttributeError","steps":[{"name":"Given the council: MidSussexDistrictCouncil","time":{"start":1703541168246,"stop":1703541168246,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"When we scrape the data from MidSussexDistrictCouncil using None and the None is set","time":{"start":1703541168246,"stop":1703541169064,"duration":818},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all_next'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all_next'\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"host","value":"fv-az847-406"},{"name":"thread","value":"2678-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MidSussexDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":88,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":88},"items":[{"uid":"74eba124897465e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1295//#testresult/74eba124897465e7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703467163739,"stop":1703467164700,"duration":961}},{"uid":"7bdd8e7cc8517774","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1292//#testresult/7bdd8e7cc8517774","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703416449027,"stop":1703416450535,"duration":1508}},{"uid":"cc64b491dd5d5ffb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1291//#testresult/cc64b491dd5d5ffb","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703416402128,"stop":1703416402955,"duration":827}},{"uid":"e42a47fcc137731e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1289//#testresult/e42a47fcc137731e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703380943500,"stop":1703380945302,"duration":1802}},{"uid":"908742a9d5598229","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1287//#testresult/908742a9d5598229","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703294091706,"stop":1703294092513,"duration":807}},{"uid":"7713d8f4c563ac3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1282//#testresult/7713d8f4c563ac3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703207836524,"stop":1703207837452,"duration":928}},{"uid":"f87338b44728f5d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1281//#testresult/f87338b44728f5d0","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703121471067,"stop":1703121472053,"duration":986}},{"uid":"2b7479630284dee6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1280//#testresult/2b7479630284dee6","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703034299717,"stop":1703034300705,"duration":988}},{"uid":"58fed3438aa7e1c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1279//#testresult/58fed3438aa7e1c7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703024940843,"stop":1703024941518,"duration":675}},{"uid":"bcb216d4465bd01e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1276//#testresult/bcb216d4465bd01e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702948721939,"stop":1702948722820,"duration":881}},{"uid":"62c0ef60c1da4a47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1275//#testresult/62c0ef60c1da4a47","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702862400913,"stop":1702862401736,"duration":823}},{"uid":"1101ce83fb520c57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1274//#testresult/1101ce83fb520c57","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702860050464,"stop":1702860051474,"duration":1010}},{"uid":"3f1a449daabc960e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1272//#testresult/3f1a449daabc960e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702843583699,"stop":1702843584392,"duration":693}},{"uid":"b75a511f29719396","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/b75a511f29719396","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702809413903,"stop":1702809415114,"duration":1211}},{"uid":"b865bbea992531e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/b865bbea992531e7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702657173997,"stop":1702657175003,"duration":1006}},{"uid":"6ae4a30bce44e462","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/6ae4a30bce44e462","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702603210245,"stop":1702603210880,"duration":635}},{"uid":"995bcdaeb22ca08d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/995bcdaeb22ca08d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702540074504,"stop":1702540075530,"duration":1026}},{"uid":"d8d75a4568ce0510","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1241//#testresult/d8d75a4568ce0510","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702516710032,"stop":1702516711305,"duration":1273}},{"uid":"ca5525a4e82714c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1238//#testresult/ca5525a4e82714c5","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702447515176,"stop":1702447515960,"duration":784}},{"uid":"c0d15ebe540b155f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1237//#testresult/c0d15ebe540b155f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702447467146,"stop":1702447468089,"duration":943}}]},"tags":[]},"source":"8964b0175d2e92e3.json","parameterValues":["MidSussexDistrictCouncil","None","None"]}