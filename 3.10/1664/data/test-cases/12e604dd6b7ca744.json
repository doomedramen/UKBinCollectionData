{"uid":"12e604dd6b7ca744","name":"Validate Council Output [WealdenDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b3ddf98c8383031d63a6bd27b361f868","time":{"start":1712277033219,"stop":1712277034359,"duration":1140},"status":"failed","statusMessage":"TypeError: 'int' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7faeadc7b400>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faeacfdea10>, 'council': 'WealdenDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WealdenDistrictCouncil.CouncilClass object at 0x7faec0829b70>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '10033413624', ...}\nuser_uprn = '10033413624'\nheaders = {'accept': '*/*', 'accept-language': 'en-GB,en;q=0.7', 'authority': 'www.wealden.gov.uk', 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', ...}\ndata = {'action': 'wealden_get_collections_for_uprn', 'uprn': '10033413624'}\nresponse = <Response [400]>, json_data = 0\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"authority\": \"www.wealden.gov.uk\",\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en-GB,en;q=0.7\",\n            \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n            # Requests sorts cookies= alphabetically\n            # 'cookie': 'ARRAffinity=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872; ARRAffinitySameSite=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872',\n            \"origin\": \"https://www.wealden.gov.uk\",\n            \"referer\": \"https://www.wealden.gov.uk/recycling-and-waste/bin-search/?uprn=10033413624\",\n            \"sec-fetch-dest\": \"empty\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"sec-gpc\": \"1\",\n            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"x-requested-with\": \"XMLHttpRequest\",\n        }\n    \n        data = {\n            \"action\": \"wealden_get_collections_for_uprn\",\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(\n            \"https://www.wealden.gov.uk/wp-admin/admin-ajax.php\",\n            headers=headers,\n            data=data,\n        )\n        json_data = json.loads(response.text)\n    \n>       if json_data[\"status\"] != \"success\":\nE       TypeError: 'int' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/WealdenDistrictCouncil.py:51: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"TypeError: 'int' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7faeadc7b400>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faeacfdea10>, 'council': 'WealdenDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WealdenDistrictCouncil.CouncilClass object at 0x7faec0829b70>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '10033413624', ...}\nuser_uprn = '10033413624'\nheaders = {'accept': '*/*', 'accept-language': 'en-GB,en;q=0.7', 'authority': 'www.wealden.gov.uk', 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', ...}\ndata = {'action': 'wealden_get_collections_for_uprn', 'uprn': '10033413624'}\nresponse = <Response [400]>, json_data = 0\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"authority\": \"www.wealden.gov.uk\",\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en-GB,en;q=0.7\",\n            \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n            # Requests sorts cookies= alphabetically\n            # 'cookie': 'ARRAffinity=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872; ARRAffinitySameSite=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872',\n            \"origin\": \"https://www.wealden.gov.uk\",\n            \"referer\": \"https://www.wealden.gov.uk/recycling-and-waste/bin-search/?uprn=10033413624\",\n            \"sec-fetch-dest\": \"empty\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"sec-gpc\": \"1\",\n            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"x-requested-with\": \"XMLHttpRequest\",\n        }\n    \n        data = {\n            \"action\": \"wealden_get_collections_for_uprn\",\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(\n            \"https://www.wealden.gov.uk/wp-admin/admin-ajax.php\",\n            headers=headers,\n            data=data,\n        )\n        json_data = json.loads(response.text)\n    \n>       if json_data[\"status\"] != \"success\":\nE       TypeError: 'int' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/WealdenDistrictCouncil.py:51: TypeError","steps":[{"name":"Given the council: WealdenDistrictCouncil","time":{"start":1712277033220,"stop":1712277033220,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WealdenDistrictCouncil using None and the None is set","time":{"start":1712277033220,"stop":1712277034359,"duration":1139},"status":"failed","statusMessage":"'int' object is not subscriptable","statusTrace":"TypeError: 'int' object is not subscriptable\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1113-82"},{"name":"thread","value":"2795-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WealdenDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":225,"unknown":0,"total":234},"items":[{"uid":"7cdee9e5cf6a2b91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1660//#testresult/7cdee9e5cf6a2b91","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712190766548,"stop":1712190767910,"duration":1362}},{"uid":"18047a9e9dc3a2f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1657//#testresult/18047a9e9dc3a2f4","status":"passed","time":{"start":1712137077947,"stop":1712137079761,"duration":1814}},{"uid":"f1330423b948d686","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1655//#testresult/f1330423b948d686","status":"passed","time":{"start":1712104188541,"stop":1712104191082,"duration":2541}},{"uid":"cc441ffa71542d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1654//#testresult/cc441ffa71542d9","status":"passed","time":{"start":1712017816425,"stop":1712017819135,"duration":2710}},{"uid":"575a99ab6323d54a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1653//#testresult/575a99ab6323d54a","status":"passed","time":{"start":1711931678054,"stop":1711931679955,"duration":1901}},{"uid":"70154c400ba668bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1652//#testresult/70154c400ba668bc","status":"passed","time":{"start":1711845189822,"stop":1711845191426,"duration":1604}},{"uid":"d00730efb71ceae7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1649//#testresult/d00730efb71ceae7","status":"passed","time":{"start":1711672207403,"stop":1711672209151,"duration":1748}},{"uid":"2c01301fd1b70d2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1648//#testresult/2c01301fd1b70d2f","status":"passed","time":{"start":1711585803178,"stop":1711585804828,"duration":1650}},{"uid":"fa5b87ef8f4f9c47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1646//#testresult/fa5b87ef8f4f9c47","status":"passed","time":{"start":1711499394945,"stop":1711499396764,"duration":1819}},{"uid":"cc2123b0db3d4349","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1645//#testresult/cc2123b0db3d4349","status":"passed","time":{"start":1711412949104,"stop":1711412951025,"duration":1921}},{"uid":"c2140af1f86e7cf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1641//#testresult/c2140af1f86e7cf6","status":"passed","time":{"start":1711326653202,"stop":1711326655106,"duration":1904}},{"uid":"c5c223780a2acfbd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1634//#testresult/c5c223780a2acfbd","status":"passed","time":{"start":1711240374245,"stop":1711240375992,"duration":1747}},{"uid":"3eb2589f627a9034","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1626//#testresult/3eb2589f627a9034","status":"passed","time":{"start":1711153723196,"stop":1711153725047,"duration":1851}},{"uid":"990dc63da8e4ad38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1625//#testresult/990dc63da8e4ad38","status":"passed","time":{"start":1711067349881,"stop":1711067351544,"duration":1663}},{"uid":"8b42495ea61634ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1624//#testresult/8b42495ea61634ef","status":"passed","time":{"start":1710981017489,"stop":1710981019446,"duration":1957}},{"uid":"13950f8c92598c36","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1621//#testresult/13950f8c92598c36","status":"passed","time":{"start":1710971061832,"stop":1710971063895,"duration":2063}},{"uid":"57c2ea89a1be3e55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1619//#testresult/57c2ea89a1be3e55","status":"passed","time":{"start":1710894519560,"stop":1710894521251,"duration":1691}},{"uid":"689890105d76a117","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1615//#testresult/689890105d76a117","status":"passed","time":{"start":1710808164941,"stop":1710808166616,"duration":1675}},{"uid":"ead4798abf2b81ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1609//#testresult/ead4798abf2b81ab","status":"passed","time":{"start":1710721862287,"stop":1710721864173,"duration":1886}},{"uid":"892086df18acccba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1608//#testresult/892086df18acccba","status":"passed","time":{"start":1710635549238,"stop":1710635551091,"duration":1853}}]},"tags":[]},"source":"12e604dd6b7ca744.json","parameterValues":["WealdenDistrictCouncil","None","None"]}