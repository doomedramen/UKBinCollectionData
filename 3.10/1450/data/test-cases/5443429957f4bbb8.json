{"uid":"5443429957f4bbb8","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1704710761423,"stop":1704711103509,"duration":342086},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x556bb06c0f83 <unknown>\n#1 0x556bb0379cf7 <unknown>\n#2 0x556bb035f7a1 <unknown>\n#3 0x556bb035f44a <unknown>\n#4 0x556bb035d7e1 <unknown>\n#5 0x556bb035e18a <unknown>\n#6 0x556bb036f07c <unknown>\n#7 0x556bb03877c1 <unknown>\n#8 0x556bb038d6bb <unknown>\n#9 0x556bb035e92d <unknown>\n#10 0x556bb03875c2 <unknown>\n#11 0x556bb0412204 <unknown>\n#12 0x556bb03f2e53 <unknown>\n#13 0x556bb03badd4 <unknown>\n#14 0x556bb03bc1de <unknown>\n#15 0x556bb0685531 <unknown>\n#16 0x556bb0689455 <unknown>\n#17 0x556bb0671f55 <unknown>\n#18 0x556bb068a0ef <unknown>\n#19 0x556bb065599f <unknown>\n#20 0x556bb06ae008 <unknown>\n#21 0x556bb06ae1d7 <unknown>\n#22 0x556bb06c0124 <unknown>\n#23 0x7fa9db694ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7eff70673250>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7eff6f8a4820>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:61: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7eff6f8f4760>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x556bb06ae1d7 \\\\u003Cunknown>\\\\n#22 0x556bb06c0124 \\\\u003Cunknown>\\\\n#23 0x7fa9db694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x556bb06c0f83 <unknown>\nE       #1 0x556bb0379cf7 <unknown>\nE       #2 0x556bb035f7a1 <unknown>\nE       #3 0x556bb035f44a <unknown>\nE       #4 0x556bb035d7e1 <unknown>\nE       #5 0x556bb035e18a <unknown>\nE       #6 0x556bb036f07c <unknown>\nE       #7 0x556bb03877c1 <unknown>\nE       #8 0x556bb038d6bb <unknown>\nE       #9 0x556bb035e92d <unknown>\nE       #10 0x556bb03875c2 <unknown>\nE       #11 0x556bb0412204 <unknown>\nE       #12 0x556bb03f2e53 <unknown>\nE       #13 0x556bb03badd4 <unknown>\nE       #14 0x556bb03bc1de <unknown>\nE       #15 0x556bb0685531 <unknown>\nE       #16 0x556bb0689455 <unknown>\nE       #17 0x556bb0671f55 <unknown>\nE       #18 0x556bb068a0ef <unknown>\nE       #19 0x556bb065599f <unknown>\nE       #20 0x556bb06ae008 <unknown>\nE       #21 0x556bb06ae1d7 <unknown>\nE       #22 0x556bb06c0124 <unknown>\nE       #23 0x7fa9db694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x556bb06c0f83 <unknown>\n#1 0x556bb0379cf7 <unknown>\n#2 0x556bb035f7a1 <unknown>\n#3 0x556bb035f44a <unknown>\n#4 0x556bb035d7e1 <unknown>\n#5 0x556bb035e18a <unknown>\n#6 0x556bb036f07c <unknown>\n#7 0x556bb03877c1 <unknown>\n#8 0x556bb038d6bb <unknown>\n#9 0x556bb035e92d <unknown>\n#10 0x556bb03875c2 <unknown>\n#11 0x556bb0412204 <unknown>\n#12 0x556bb03f2e53 <unknown>\n#13 0x556bb03badd4 <unknown>\n#14 0x556bb03bc1de <unknown>\n#15 0x556bb0685531 <unknown>\n#16 0x556bb0689455 <unknown>\n#17 0x556bb0671f55 <unknown>\n#18 0x556bb068a0ef <unknown>\n#19 0x556bb065599f <unknown>\n#20 0x556bb06ae008 <unknown>\n#21 0x556bb06ae1d7 <unknown>\n#22 0x556bb06c0124 <unknown>\n#23 0x7fa9db694ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7eff70673250>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7eff6f8a4820>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:61: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7eff6f8f4760>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x556bb06ae1d7 \\\\u003Cunknown>\\\\n#22 0x556bb06c0124 \\\\u003Cunknown>\\\\n#23 0x7fa9db694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x556bb06c0f83 <unknown>\nE       #1 0x556bb0379cf7 <unknown>\nE       #2 0x556bb035f7a1 <unknown>\nE       #3 0x556bb035f44a <unknown>\nE       #4 0x556bb035d7e1 <unknown>\nE       #5 0x556bb035e18a <unknown>\nE       #6 0x556bb036f07c <unknown>\nE       #7 0x556bb03877c1 <unknown>\nE       #8 0x556bb038d6bb <unknown>\nE       #9 0x556bb035e92d <unknown>\nE       #10 0x556bb03875c2 <unknown>\nE       #11 0x556bb0412204 <unknown>\nE       #12 0x556bb03f2e53 <unknown>\nE       #13 0x556bb03badd4 <unknown>\nE       #14 0x556bb03bc1de <unknown>\nE       #15 0x556bb0685531 <unknown>\nE       #16 0x556bb0689455 <unknown>\nE       #17 0x556bb0671f55 <unknown>\nE       #18 0x556bb068a0ef <unknown>\nE       #19 0x556bb065599f <unknown>\nE       #20 0x556bb06ae008 <unknown>\nE       #21 0x556bb06ae1d7 <unknown>\nE       #22 0x556bb06c0124 <unknown>\nE       #23 0x7fa9db694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1704710761423,"stop":1704710761424,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1704710761424,"stop":1704711103509,"duration":342085},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x556bb06c0f83 <unknown>\n#1 0x556bb0379cf7 <unknown>\n#2 0x556bb035f7a1 <unknown>\n#3 0x556bb035f44a <unknown>\n#4 0x556bb035d7e1 <unknown>\n#5 0x556bb035e18a <unknown>\n#6 0x556bb036f07c <unknown>\n#7 0x556bb03877c1 <unknown>\n#8 0x556bb038d6bb <unknown>\n#9 0x556bb035e92d <unknown>\n#10 0x556bb03875c2 <unknown>\n#11 0x556bb0412204 <unknown>\n#12 0x556bb03f2e53 <unknown>\n#13 0x556bb03badd4 <unknown>\n#14 0x556bb03bc1de <unknown>\n#15 0x556bb0685531 <unknown>\n#16 0x556bb0689455 <unknown>\n#17 0x556bb0671f55 <unknown>\n#18 0x556bb068a0ef <unknown>\n#19 0x556bb065599f <unknown>\n#20 0x556bb06ae008 <unknown>\n#21 0x556bb06ae1d7 <unknown>\n#22 0x556bb06c0124 <unknown>\n#23 0x7fa9db694ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x556bb06c0f83 <unknown>\n#1 0x556bb0379cf7 <unknown>\n#2 0x556bb035f7a1 <unknown>\n#3 0x556bb035f44a <unknown>\n#4 0x556bb035d7e1 <unknown>\n#5 0x556bb035e18a <unknown>\n#6 0x556bb036f07c <unknown>\n#7 0x556bb03877c1 <unknown>\n#8 0x556bb038d6bb <unknown>\n#9 0x556bb035e92d <unknown>\n#10 0x556bb03875c2 <unknown>\n#11 0x556bb0412204 <unknown>\n#12 0x556bb03f2e53 <unknown>\n#13 0x556bb03badd4 <unknown>\n#14 0x556bb03bc1de <unknown>\n#15 0x556bb0685531 <unknown>\n#16 0x556bb0689455 <unknown>\n#17 0x556bb0671f55 <unknown>\n#18 0x556bb068a0ef <unknown>\n#19 0x556bb065599f <unknown>\n#20 0x556bb06ae008 <unknown>\n#21 0x556bb06ae1d7 <unknown>\n#22 0x556bb06c0124 <unknown>\n#23 0x7fa9db694ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az774-810"},{"name":"thread","value":"2756-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":0,"skipped":0,"passed":131,"unknown":0,"total":150},"items":[{"uid":"9b4047466a5a78ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1448//#testresult/9b4047466a5a78ba","status":"passed","time":{"start":1704710154639,"stop":1704710163195,"duration":8556}},{"uid":"f2f5a49af600d06c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1446//#testresult/f2f5a49af600d06c","status":"passed","time":{"start":1704709622266,"stop":1704709629141,"duration":6875}},{"uid":"356537b0caa6fbe1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1443//#testresult/356537b0caa6fbe1","status":"passed","time":{"start":1704704141891,"stop":1704704150487,"duration":8596}},{"uid":"bf771b7ec56321cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1441//#testresult/bf771b7ec56321cf","status":"passed","time":{"start":1704673718763,"stop":1704673727348,"duration":8585}},{"uid":"93197d05482a5f84","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1429//#testresult/93197d05482a5f84","status":"passed","time":{"start":1704626463235,"stop":1704626472390,"duration":9155}},{"uid":"1d98254c19b9376d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1426//#testresult/1d98254c19b9376d","status":"passed","time":{"start":1704615499643,"stop":1704615508110,"duration":8467}},{"uid":"20e413fbdb783c6d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1423//#testresult/20e413fbdb783c6d","status":"passed","time":{"start":1704614828351,"stop":1704614835836,"duration":7485}},{"uid":"dcd3ede0c6a90e90","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1421//#testresult/dcd3ede0c6a90e90","status":"passed","time":{"start":1704614213516,"stop":1704614222759,"duration":9243}},{"uid":"b3883c5d237d8a76","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1420//#testresult/b3883c5d237d8a76","status":"passed","time":{"start":1704587508733,"stop":1704587522068,"duration":13335}},{"uid":"83497fc2b4f45652","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1413//#testresult/83497fc2b4f45652","status":"passed","time":{"start":1704542792481,"stop":1704542801720,"duration":9239}},{"uid":"bfa45a82f4f91caa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1408//#testresult/bfa45a82f4f91caa","status":"passed","time":{"start":1704496239564,"stop":1704496248561,"duration":8997}},{"uid":"1e84c1a452dccbb1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1406//#testresult/1e84c1a452dccbb1","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55baa06ebf83 <unknown>\n#1 0x55baa03a4cf7 <unknown>\n#2 0x55baa038a7a1 <unknown>\n#3 0x55baa038a44a <unknown>\n#4 0x55baa03887e1 <unknown>\n#5 0x55baa038918a <unknown>\n#6 0x55baa039a07c <unknown>\n#7 0x55baa03b27c1 <unknown>\n#8 0x55baa03b86bb <unknown>\n#9 0x55baa038992d <unknown>\n#10 0x55baa03b25c2 <unknown>\n#11 0x55baa043d204 <unknown>\n#12 0x55baa041de53 <unknown>\n#13 0x55baa03e5dd4 <unknown>\n#14 0x55baa03e71de <unknown>\n#15 0x55baa06b0531 <unknown>\n#16 0x55baa06b4455 <unknown>\n#17 0x55baa069cf55 <unknown>\n#18 0x55baa06b50ef <unknown>\n#19 0x55baa068099f <unknown>\n#20 0x55baa06d9008 <unknown>\n#21 0x55baa06d91d7 <unknown>\n#22 0x55baa06eb124 <unknown>\n#23 0x7f422f894ac3 <unknown>","time":{"start":1704453418815,"stop":1704453726720,"duration":307905}},{"uid":"d0efd594d7ce2c69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1407//#testresult/d0efd594d7ce2c69","status":"passed","time":{"start":1704453424402,"stop":1704453437956,"duration":13554}},{"uid":"a5a1b2b581e17b06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1405//#testresult/a5a1b2b581e17b06","status":"passed","time":{"start":1704452640405,"stop":1704452680904,"duration":40499}},{"uid":"8057a0ebe48c0d4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1400//#testresult/8057a0ebe48c0d4a","status":"passed","time":{"start":1704443749563,"stop":1704443756840,"duration":7277}},{"uid":"cdcdea81a81c3bb8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1399//#testresult/cdcdea81a81c3bb8","status":"passed","time":{"start":1704443348335,"stop":1704443356542,"duration":8207}},{"uid":"24188f9baf4ea6ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1397//#testresult/24188f9baf4ea6ef","status":"passed","time":{"start":1704442484041,"stop":1704442491493,"duration":7452}},{"uid":"bfacb67458d3ba28","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1390//#testresult/bfacb67458d3ba28","status":"passed","time":{"start":1704417539268,"stop":1704417546738,"duration":7470}},{"uid":"41c8eeaffbf0afc2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1379//#testresult/41c8eeaffbf0afc2","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55927d38ff83 <unknown>\n#1 0x55927d048cf7 <unknown>\n#2 0x55927d09899e <unknown>\n#3 0x55927d098aa1 <unknown>\n#4 0x55927d0e3d64 <unknown>\n#5 0x55927d0c20dd <unknown>\n#6 0x55927d0e1006 <unknown>\n#7 0x55927d0c1e53 <unknown>\n#8 0x55927d089dd4 <unknown>\n#9 0x55927d08b1de <unknown>\n#10 0x55927d354531 <unknown>\n#11 0x55927d358455 <unknown>\n#12 0x55927d340f55 <unknown>\n#13 0x55927d3590ef <unknown>\n#14 0x55927d32499f <unknown>\n#15 0x55927d37d008 <unknown>\n#16 0x55927d37d1d7 <unknown>\n#17 0x55927d38f124 <unknown>\n#18 0x7f46b6e94ac3 <unknown>","time":{"start":1704406042824,"stop":1704406074852,"duration":32028}},{"uid":"953f37d14fc9e121","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1378//#testresult/953f37d14fc9e121","status":"passed","time":{"start":1704405983684,"stop":1704405990615,"duration":6931}}]},"tags":[]},"source":"5443429957f4bbb8.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}