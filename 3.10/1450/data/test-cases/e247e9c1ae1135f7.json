{"uid":"e247e9c1ae1135f7","name":"Validate Council Output [StokeOnTrentCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"17b62d612f29f2bda9703e241b337994","time":{"start":1704710830785,"stop":1704710831265,"duration":480},"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7fd691413ac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd6906003a0>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7fd690421f60>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': None, ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\",\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:49: ConnectionAbortedError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7fd691413ac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd6906003a0>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7fd690421f60>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': None, ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\",\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:49: ConnectionAbortedError","steps":[{"name":"Given the council: StokeOnTrentCityCouncil","time":{"start":1704710830785,"stop":1704710830786,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from StokeOnTrentCityCouncil using None and the None is set","time":{"start":1704710830786,"stop":1704710831265,"duration":479},"status":"failed","statusMessage":"Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az774-810"},{"name":"thread","value":"2762-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StokeOnTrentCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":0,"skipped":0,"passed":90,"unknown":0,"total":109},"items":[{"uid":"e33fd8919020d93b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1448//#testresult/e33fd8919020d93b","status":"passed","time":{"start":1704710222621,"stop":1704710224118,"duration":1497}},{"uid":"a901449bb35c8bd1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1446//#testresult/a901449bb35c8bd1","status":"passed","time":{"start":1704709713734,"stop":1704709715049,"duration":1315}},{"uid":"954b36fba4183293","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1443//#testresult/954b36fba4183293","status":"passed","time":{"start":1704704232761,"stop":1704704235543,"duration":2782}},{"uid":"129e8d54911b3d15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1441//#testresult/129e8d54911b3d15","status":"passed","time":{"start":1704673884448,"stop":1704673893132,"duration":8684}},{"uid":"168dd75ca389b9f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1426//#testresult/168dd75ca389b9f5","status":"passed","time":{"start":1704615563909,"stop":1704615565545,"duration":1636}},{"uid":"e306438a7dbcfcd2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1423//#testresult/e306438a7dbcfcd2","status":"passed","time":{"start":1704614886342,"stop":1704614887358,"duration":1016}},{"uid":"1d2f831163c633c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1420//#testresult/1d2f831163c633c2","status":"passed","time":{"start":1704587610627,"stop":1704587622079,"duration":11452}},{"uid":"872bffe3f1832508","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1413//#testresult/872bffe3f1832508","status":"passed","time":{"start":1704542880115,"stop":1704542881740,"duration":1625}},{"uid":"b73f8ed95530a94f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1408//#testresult/b73f8ed95530a94f","status":"passed","time":{"start":1704496326868,"stop":1704496328846,"duration":1978}},{"uid":"d527f726fec12f56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1406//#testresult/d527f726fec12f56","status":"passed","time":{"start":1704453581221,"stop":1704453583134,"duration":1913}},{"uid":"d427b8c567615810","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1407//#testresult/d427b8c567615810","status":"passed","time":{"start":1704453551696,"stop":1704453553822,"duration":2126}},{"uid":"93d659869f347e3b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1405//#testresult/93d659869f347e3b","status":"passed","time":{"start":1704452784712,"stop":1704452787401,"duration":2689}},{"uid":"125f8c9fd2b7e5ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1400//#testresult/125f8c9fd2b7e5ac","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704443899961,"stop":1704443900466,"duration":505}},{"uid":"c3c6a2ad74b13633","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1399//#testresult/c3c6a2ad74b13633","status":"passed","time":{"start":1704443456139,"stop":1704443459094,"duration":2955}},{"uid":"6dc68d8d6743b149","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1397//#testresult/6dc68d8d6743b149","status":"passed","time":{"start":1704442618977,"stop":1704442620014,"duration":1037}},{"uid":"203af6415bb4972f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1390//#testresult/203af6415bb4972f","status":"passed","time":{"start":1704417654804,"stop":1704417657165,"duration":2361}},{"uid":"4e98b673b7f52854","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1379//#testresult/4e98b673b7f52854","status":"passed","time":{"start":1704406144202,"stop":1704406146251,"duration":2049}},{"uid":"a33eb838d07b61e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1378//#testresult/a33eb838d07b61e","status":"passed","time":{"start":1704406087271,"stop":1704406088413,"duration":1142}},{"uid":"4856df17f7dfe5e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1376//#testresult/4856df17f7dfe5e5","status":"passed","time":{"start":1704398935091,"stop":1704398936213,"duration":1122}},{"uid":"6647ad5e9c3ccdbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1375//#testresult/6647ad5e9c3ccdbc","status":"passed","time":{"start":1704398868006,"stop":1704398869080,"duration":1074}}]},"tags":[]},"source":"e247e9c1ae1135f7.json","parameterValues":["StokeOnTrentCityCouncil","None","None"]}