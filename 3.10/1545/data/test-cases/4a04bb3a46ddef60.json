{"uid":"4a04bb3a46ddef60","name":"Validate Council Output [MidSussexDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"603913cb01d56f40fcd70fa6d1ec6273","time":{"start":1706941939169,"stop":1706941940657,"duration":1488},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7f3eca253250>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3ec9df14e0>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7f3ec94ffbe0>\npage = ''\nkwargs = {'headless': True, 'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:62: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7f3eca253250>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3ec9df14e0>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7f3ec94ffbe0>\npage = ''\nkwargs = {'headless': True, 'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:62: AttributeError","steps":[{"name":"Given the council: MidSussexDistrictCouncil","time":{"start":1706941939170,"stop":1706941939170,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MidSussexDistrictCouncil using None and the None is set","time":{"start":1706941939170,"stop":1706941940657,"duration":1487},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all_next'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all_next'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1487-932"},{"name":"thread","value":"2713-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MidSussexDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":180,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":180},"items":[{"uid":"967b619fb0e31242","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1544//#testresult/967b619fb0e31242","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706939009459,"stop":1706939010710,"duration":1251}},{"uid":"3be7d65fc94d6c01","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1542//#testresult/3be7d65fc94d6c01","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706938501066,"stop":1706938502298,"duration":1232}},{"uid":"4b6b2749b22f230e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1541//#testresult/4b6b2749b22f230e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706920052917,"stop":1706920054261,"duration":1344}},{"uid":"1f4a2abc9e8c20fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1540//#testresult/1f4a2abc9e8c20fb","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706833599801,"stop":1706833600309,"duration":508}},{"uid":"9d762befc594bd77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1538//#testresult/9d762befc594bd77","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706747337983,"stop":1706747338820,"duration":837}},{"uid":"59d4d111e3068869","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1537//#testresult/59d4d111e3068869","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706660886774,"stop":1706660887728,"duration":954}},{"uid":"318fea0308a3a95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1535//#testresult/318fea0308a3a95","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706574383489,"stop":1706574384554,"duration":1065}},{"uid":"e4c23e451e165bb6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1534//#testresult/e4c23e451e165bb6","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706488097201,"stop":1706488098604,"duration":1403}},{"uid":"386d245ff389fe4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1531//#testresult/386d245ff389fe4a","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706401782573,"stop":1706401783445,"duration":872}},{"uid":"213cb0939c32cdc3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1529//#testresult/213cb0939c32cdc3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706315207727,"stop":1706315208977,"duration":1250}},{"uid":"20e389ead03d6c60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1528//#testresult/20e389ead03d6c60","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706228855439,"stop":1706228856953,"duration":1514}},{"uid":"910e57df94527c7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1523//#testresult/910e57df94527c7c","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706142542588,"stop":1706142544080,"duration":1492}},{"uid":"8fb29470bf9cd029","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1522//#testresult/8fb29470bf9cd029","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706056188882,"stop":1706056189551,"duration":669}},{"uid":"7f4d6f7d8eb42644","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1521//#testresult/7f4d6f7d8eb42644","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705969806629,"stop":1705969807811,"duration":1182}},{"uid":"c66488aed89b6bab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1520//#testresult/c66488aed89b6bab","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705883432437,"stop":1705883433354,"duration":917}},{"uid":"f86fbaabf73bdb36","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1519//#testresult/f86fbaabf73bdb36","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705797114443,"stop":1705797115293,"duration":850}},{"uid":"7afb69513ba6b33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1515//#testresult/7afb69513ba6b33","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705710506389,"stop":1705710507174,"duration":785}},{"uid":"b1194d64a5b77ebe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1511//#testresult/b1194d64a5b77ebe","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705624205419,"stop":1705624206542,"duration":1123}},{"uid":"10c0de227f041ff7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1505//#testresult/10c0de227f041ff7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705537691228,"stop":1705537692320,"duration":1092}},{"uid":"db43a44cc752ae3d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1500//#testresult/db43a44cc752ae3d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705451347462,"stop":1705451348132,"duration":670}}]},"tags":[]},"source":"4a04bb3a46ddef60.json","parameterValues":["MidSussexDistrictCouncil","None","None"]}