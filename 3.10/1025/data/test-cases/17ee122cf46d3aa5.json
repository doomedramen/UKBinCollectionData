{"uid":"17ee122cf46d3aa5","name":"Validate Council Output [WiganBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d724d8b9a4d0593a99f53e95b03e558b","time":{"start":1697678363857,"stop":1697678367485,"duration":3628},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f9807246c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f97ff394a30>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f97ff394a30>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f9807246c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f97ff394a30>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f97ff394a30>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","steps":[{"name":"Given the council: WiganBoroughCouncil","time":{"start":1697678363857,"stop":1697678363858,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WiganBoroughCouncil","time":{"start":1697678363858,"stop":1697678367481,"duration":3623},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1697678367482,"stop":1697678367482,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1697678367483,"stop":1697678367485,"duration":2},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1242-355"},{"name":"thread","value":"2208-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiganBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":65,"broken":0,"skipped":0,"passed":72,"unknown":0,"total":137},"items":[{"uid":"1a9d25a973dba7cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/1a9d25a973dba7cc","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697666864020,"stop":1697666868322,"duration":4302}},{"uid":"166833060b387650","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/166833060b387650","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697666872139,"stop":1697666876326,"duration":4187}},{"uid":"f5b4ce65ea444826","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/f5b4ce65ea444826","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697657112359,"stop":1697657116881,"duration":4522}},{"uid":"7351173ad8e41d08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/7351173ad8e41d08","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697657025884,"stop":1697657030487,"duration":4603}},{"uid":"75918333f0fdf19e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/75918333f0fdf19e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697650268016,"stop":1697650271939,"duration":3923}},{"uid":"28e38666bb7b0ec2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/28e38666bb7b0ec2","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697618535917,"stop":1697618540359,"duration":4442}},{"uid":"c6eb119658397d5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/c6eb119658397d5c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697618464825,"stop":1697618469617,"duration":4792}},{"uid":"2469a2c77041d396","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/2469a2c77041d396","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697591985895,"stop":1697591989847,"duration":3952}},{"uid":"bb09274f59cd6c70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/bb09274f59cd6c70","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697542869517,"stop":1697542874450,"duration":4933}},{"uid":"79621ea32bdca856","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/79621ea32bdca856","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697505642402,"stop":1697505647345,"duration":4943}},{"uid":"36755f35ee69a32c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/36755f35ee69a32c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484874216,"stop":1697484877563,"duration":3347}},{"uid":"56ecb5d94221e9b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/56ecb5d94221e9b0","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484814113,"stop":1697484817092,"duration":2979}},{"uid":"8a1ad585db68c6a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/8a1ad585db68c6a1","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697419265334,"stop":1697419269187,"duration":3853}},{"uid":"648f5d20dc055e62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/648f5d20dc055e62","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697403362091,"stop":1697403365633,"duration":3542}},{"uid":"2654c399241a2b75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/2654c399241a2b75","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697399916247,"stop":1697399920698,"duration":4451}},{"uid":"a6f158524240ea83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/a6f158524240ea83","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697367175269,"stop":1697367179171,"duration":3902}},{"uid":"131cea10d5c138ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/131cea10d5c138ba","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697333106613,"stop":1697333111925,"duration":5312}},{"uid":"2a6e779ae805bf79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/2a6e779ae805bf79","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697246265529,"stop":1697246269753,"duration":4224}},{"uid":"b70dcebb69fa3e04","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/986//#testresult/b70dcebb69fa3e04","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697160088305,"stop":1697160092174,"duration":3869}},{"uid":"335cb7d7dded9855","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/985//#testresult/335cb7d7dded9855","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697073453064,"stop":1697073457163,"duration":4099}}]},"tags":[]},"source":"17ee122cf46d3aa5.json","parameterValues":["WiganBoroughCouncil"]}