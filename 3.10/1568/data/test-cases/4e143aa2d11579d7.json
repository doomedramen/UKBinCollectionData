{"uid":"4e143aa2d11579d7","name":"Validate Council Output [MaldonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d7ae259690887cdb3dd06225c666392f","time":{"start":1708302497692,"stop":1708302558299,"duration":60607},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f704dc1eef0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f704ce664a0>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f704d5cc0d0>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f704dc1eef0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f704ce664a0>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f704d5cc0d0>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council: MaldonDistrictCouncil","time":{"start":1708302497693,"stop":1708302497693,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MaldonDistrictCouncil using None and the None is set","time":{"start":1708302497693,"stop":1708302558299,"duration":60606},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1432-196"},{"name":"thread","value":"2792-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":187,"unknown":0,"total":196},"items":[{"uid":"2206a2baf15da957","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1567//#testresult/2206a2baf15da957","status":"passed","time":{"start":1708216168997,"stop":1708216179443,"duration":10446}},{"uid":"268657c0e64cd19d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1566//#testresult/268657c0e64cd19d","status":"passed","time":{"start":1708129584929,"stop":1708129595848,"duration":10919}},{"uid":"824caf6b0b44bc3b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1563//#testresult/824caf6b0b44bc3b","status":"passed","time":{"start":1708043183710,"stop":1708043184885,"duration":1175}},{"uid":"bf4868723b11d75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1562//#testresult/bf4868723b11d75","status":"passed","time":{"start":1707956802093,"stop":1707956810209,"duration":8116}},{"uid":"2be5541a1fb9c2b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1561//#testresult/2be5541a1fb9c2b7","status":"passed","time":{"start":1707870402243,"stop":1707870417161,"duration":14918}},{"uid":"c2ec780da631c7b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1560//#testresult/c2ec780da631c7b3","status":"passed","time":{"start":1707784053334,"stop":1707784062574,"duration":9240}},{"uid":"ecc16f663abd84be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1559//#testresult/ecc16f663abd84be","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1707697663677,"stop":1707697694813,"duration":31136}},{"uid":"c412274fc96f3cd1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1556//#testresult/c412274fc96f3cd1","status":"passed","time":{"start":1707611368583,"stop":1707611372683,"duration":4100}},{"uid":"ae736ddd9452ff61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1554//#testresult/ae736ddd9452ff61","status":"passed","time":{"start":1707524767564,"stop":1707524777511,"duration":9947}},{"uid":"94df1965aaa1973f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1553//#testresult/94df1965aaa1973f","status":"passed","time":{"start":1707438377762,"stop":1707438382545,"duration":4783}},{"uid":"ed879c164ca2c4bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1552//#testresult/ed879c164ca2c4bd","status":"passed","time":{"start":1707352021586,"stop":1707352029479,"duration":7893}},{"uid":"a745e5d18550c428","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1551//#testresult/a745e5d18550c428","status":"passed","time":{"start":1707265539425,"stop":1707265548138,"duration":8713}},{"uid":"9f4814b00b875764","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1549//#testresult/9f4814b00b875764","status":"passed","time":{"start":1707179222649,"stop":1707179232810,"duration":10161}},{"uid":"d4d05da9ba9cd922","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1548//#testresult/d4d05da9ba9cd922","status":"passed","time":{"start":1707092959673,"stop":1707092960801,"duration":1128}},{"uid":"30205b88fd6679bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1547//#testresult/30205b88fd6679bb","status":"passed","time":{"start":1707006578134,"stop":1707006589840,"duration":11706}},{"uid":"64a791537fa5b8ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1545//#testresult/64a791537fa5b8ae","status":"passed","time":{"start":1706941915668,"stop":1706941916726,"duration":1058}},{"uid":"d9eb9724dc5cd8e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1544//#testresult/d9eb9724dc5cd8e0","status":"passed","time":{"start":1706938994264,"stop":1706938995231,"duration":967}},{"uid":"3d558b33fde8131e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1542//#testresult/3d558b33fde8131e","status":"passed","time":{"start":1706938506636,"stop":1706938518030,"duration":11394}},{"uid":"b1c019c01b8048e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1541//#testresult/b1c019c01b8048e5","status":"passed","time":{"start":1706920051194,"stop":1706920061127,"duration":9933}},{"uid":"a5b7337b5666fd5f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1540//#testresult/a5b7337b5666fd5f","status":"passed","time":{"start":1706833608175,"stop":1706833618606,"duration":10431}}]},"tags":[]},"source":"4e143aa2d11579d7.json","parameterValues":["MaldonDistrictCouncil","None","None"]}