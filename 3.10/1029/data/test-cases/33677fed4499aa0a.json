{"uid":"33677fed4499aa0a","name":"Validate Council Output [CheshireEastCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b583dc83005aea8688ae703bcdf0d977","time":{"start":1697702020867,"stop":1697702020869,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireEastCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a54d5090>, 'council_name': 'CheshireEastCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireEastCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a54d5090>, 'council_name': 'CheshireEastCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: CheshireEastCouncil","time":{"start":1697702020868,"stop":1697702020869,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2179-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CheshireEastCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":73,"broken":0,"skipped":0,"passed":66,"unknown":0,"total":139},"items":[{"uid":"1589034eef18f115","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/1589034eef18f115","status":"passed","time":{"start":1697696137456,"stop":1697696139456,"duration":2000}},{"uid":"cbdef3c3873a99f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/cbdef3c3873a99f6","status":"passed","time":{"start":1697678058216,"stop":1697678060044,"duration":1828}},{"uid":"67c54f99325ea89b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/67c54f99325ea89b","status":"passed","time":{"start":1697666542221,"stop":1697666544073,"duration":1852}},{"uid":"c451db1e8d657e77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/c451db1e8d657e77","status":"passed","time":{"start":1697666495088,"stop":1697666496587,"duration":1499}},{"uid":"b283bae4e995af13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/b283bae4e995af13","status":"passed","time":{"start":1697656787449,"stop":1697656789402,"duration":1953}},{"uid":"d6288d75f30902e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/d6288d75f30902e8","status":"passed","time":{"start":1697656745979,"stop":1697656747906,"duration":1927}},{"uid":"a0b99c96a4e385d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/a0b99c96a4e385d8","status":"passed","time":{"start":1697650006090,"stop":1697650007908,"duration":1818}},{"uid":"4c51fb6ebbb819da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/4c51fb6ebbb819da","status":"passed","time":{"start":1697618242533,"stop":1697618245296,"duration":2763}},{"uid":"9c8e91dfc9992a51","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/9c8e91dfc9992a51","status":"passed","time":{"start":1697618203303,"stop":1697618205403,"duration":2100}},{"uid":"412ca6451d010736","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/412ca6451d010736","status":"passed","time":{"start":1697591689860,"stop":1697591691545,"duration":1685}},{"uid":"99ccaba051e1ba72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/99ccaba051e1ba72","status":"passed","time":{"start":1697542562143,"stop":1697542567538,"duration":5395}},{"uid":"3d89c00a9f19d926","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/3d89c00a9f19d926","status":"passed","time":{"start":1697505294756,"stop":1697505297550,"duration":2794}},{"uid":"7962dc8595180eae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/7962dc8595180eae","status":"passed","time":{"start":1697484601483,"stop":1697484604591,"duration":3108}},{"uid":"529895e41b327fb4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/529895e41b327fb4","status":"passed","time":{"start":1697484557408,"stop":1697484558935,"duration":1527}},{"uid":"7ab1f8abdec45851","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/7ab1f8abdec45851","status":"passed","time":{"start":1697418947907,"stop":1697418949497,"duration":1590}},{"uid":"ee7550907f4ae1b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/ee7550907f4ae1b5","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697403127440,"stop":1697403127707,"duration":267}},{"uid":"e225691e72aeb8d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/e225691e72aeb8d6","status":"passed","time":{"start":1697399680808,"stop":1697399682435,"duration":1627}},{"uid":"17c95b3abe73cbb7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/17c95b3abe73cbb7","status":"passed","time":{"start":1697366938686,"stop":1697366940702,"duration":2016}},{"uid":"2278609e9008ad0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/2278609e9008ad0d","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697332768381,"stop":1697332768853,"duration":472}},{"uid":"8e9779ebf2c930b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/8e9779ebf2c930b2","status":"passed","time":{"start":1697245941306,"stop":1697245943251,"duration":1945}}]},"tags":[]},"source":"33677fed4499aa0a.json","parameterValues":["CheshireEastCouncil"]}