{"uid":"37e140cfc1adc07a","name":"Validate Council Output [BromleyBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7f3dc7acf0fc90eded39e25c4ed3bb60","time":{"start":1697702021068,"stop":1697702021069,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9593dac20>, 'council_name': 'BromleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9593dac20>, 'council_name': 'BromleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: BromleyBoroughCouncil","time":{"start":1697702021068,"stop":1697702021069,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2176-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BromleyBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":25,"broken":0,"skipped":0,"passed":114,"unknown":0,"total":139},"items":[{"uid":"8c43622f2ec4bfa9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/8c43622f2ec4bfa9","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697696118561,"stop":1697696119514,"duration":953}},{"uid":"690736e8ee8be70c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/690736e8ee8be70c","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697678046924,"stop":1697678047919,"duration":995}},{"uid":"37449ba25e95a334","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/37449ba25e95a334","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697666540284,"stop":1697666541394,"duration":1110}},{"uid":"f5909e49e38b0129","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/f5909e49e38b0129","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697666490780,"stop":1697666491792,"duration":1012}},{"uid":"394fbf16e15b0ad6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/394fbf16e15b0ad6","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697656784273,"stop":1697656785679,"duration":1406}},{"uid":"c60382536a7eb9b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/c60382536a7eb9b8","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697656742409,"stop":1697656743264,"duration":855}},{"uid":"b3b5059b353cef71","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/b3b5059b353cef71","status":"passed","time":{"start":1697649982000,"stop":1697649986219,"duration":4219}},{"uid":"369ceb3988ae858e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/369ceb3988ae858e","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697618217706,"stop":1697618218981,"duration":1275}},{"uid":"4dd4c82a00007479","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/4dd4c82a00007479","status":"passed","time":{"start":1697618173276,"stop":1697618176757,"duration":3481}},{"uid":"ffe85544d3772797","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/ffe85544d3772797","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697591675175,"stop":1697591676064,"duration":889}},{"uid":"b875996e76ed720b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/b875996e76ed720b","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697542558091,"stop":1697542559165,"duration":1074}},{"uid":"afd41404d63331d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/afd41404d63331d0","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697505284930,"stop":1697505285990,"duration":1060}},{"uid":"6cb491a50a770697","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/6cb491a50a770697","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697484598446,"stop":1697484599421,"duration":975}},{"uid":"81223e6949358f56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/81223e6949358f56","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697484555457,"stop":1697484556252,"duration":795}},{"uid":"592a11f27dbae439","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/592a11f27dbae439","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697418935473,"stop":1697418936535,"duration":1062}},{"uid":"29d4d5215424e299","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/29d4d5215424e299","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697403126510,"stop":1697403127423,"duration":913}},{"uid":"302c8124e7fd59d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/302c8124e7fd59d","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697399679666,"stop":1697399680551,"duration":885}},{"uid":"da945acfb09a11a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/da945acfb09a11a5","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697366933835,"stop":1697366934730,"duration":895}},{"uid":"4c44b8a6643518b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/4c44b8a6643518b2","status":"passed","time":{"start":1697332765785,"stop":1697332767046,"duration":1261}},{"uid":"c9cabecce054cf46","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/c9cabecce054cf46","status":"passed","time":{"start":1697245930605,"stop":1697245931814,"duration":1209}}]},"tags":[]},"source":"37e140cfc1adc07a.json","parameterValues":["BromleyBoroughCouncil"]}