{"uid":"733bfdea3a6699eb","name":"Validate Council Output [SwaleBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"af246d65f1eea891cf11ee497308965a","time":{"start":1697702023106,"stop":1697702023107,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9599a7970>, 'council_name': 'SwaleBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9599a7970>, 'council_name': 'SwaleBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: SwaleBoroughCouncil","time":{"start":1697702023106,"stop":1697702023107,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2176-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwaleBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":135,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":139},"items":[{"uid":"2bc78be1c7712810","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/2bc78be1c7712810","status":"passed","time":{"start":1697696414305,"stop":1697696415701,"duration":1396}},{"uid":"f1e615b8a2b8a64d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/f1e615b8a2b8a64d","status":"passed","time":{"start":1697678333070,"stop":1697678356067,"duration":22997}},{"uid":"433f16e2b07cf0ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/433f16e2b07cf0ee","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697666831281,"stop":1697666832857,"duration":1576}},{"uid":"ff7588fae9cf70ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/ff7588fae9cf70ed","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697666724452,"stop":1697666725877,"duration":1425}},{"uid":"e6ecbdff8fbbe0c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/e6ecbdff8fbbe0c0","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697657070724,"stop":1697657072288,"duration":1564}},{"uid":"1e85832d6cdadda1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/1e85832d6cdadda1","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697657000969,"stop":1697657003709,"duration":2740}},{"uid":"96ddcc3e538778df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/96ddcc3e538778df","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697650243969,"stop":1697650245255,"duration":1286}},{"uid":"378446a26adeff34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/378446a26adeff34","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697618505143,"stop":1697618507259,"duration":2116}},{"uid":"cd88784e8bb28a47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/cd88784e8bb28a47","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697618434343,"stop":1697618446220,"duration":11877}},{"uid":"520085b000d4dcfb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/520085b000d4dcfb","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697591956846,"stop":1697591958142,"duration":1296}},{"uid":"b8b5bc954a5c9167","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/b8b5bc954a5c9167","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697542832906,"stop":1697542834248,"duration":1342}},{"uid":"1767f8a24c0853bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/1767f8a24c0853bf","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697505579399,"stop":1697505588203,"duration":8804}},{"uid":"94cfcec4543c1267","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/94cfcec4543c1267","status":"passed","time":{"start":1697484852816,"stop":1697484854045,"duration":1229}},{"uid":"e624d380f2267890","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/e624d380f2267890","status":"passed","time":{"start":1697484777858,"stop":1697484801035,"duration":23177}},{"uid":"2833e43101e0a33a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/2833e43101e0a33a","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1007)')))","time":{"start":1697419211387,"stop":1697419212291,"duration":904}},{"uid":"5ab69a7b52e352b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/5ab69a7b52e352b3","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1007)')))","time":{"start":1697403334656,"stop":1697403335403,"duration":747}},{"uid":"64a23e7841ff56c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/64a23e7841ff56c","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1007)')))","time":{"start":1697399885600,"stop":1697399886314,"duration":714}},{"uid":"97efb907834f412e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/97efb907834f412e","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1007)')))","time":{"start":1697367149611,"stop":1697367150390,"duration":779}},{"uid":"6e790854073f1746","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/6e790854073f1746","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1007)')))","time":{"start":1697333062894,"stop":1697333064248,"duration":1354}},{"uid":"4dbc048a1e6080f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/4dbc048a1e6080f","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1007)')))","time":{"start":1697246236300,"stop":1697246238003,"duration":1703}}]},"tags":[]},"source":"733bfdea3a6699eb.json","parameterValues":["SwaleBoroughCouncil"]}