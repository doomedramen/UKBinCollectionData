{"uid":"712538f41c7c0566","name":"Validate Council Output [EastleighBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4b31307dbdce23dc5dddd2f51563d5a7","time":{"start":1697702021379,"stop":1697702021381,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastleighBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a54daa40>, 'council_name': 'EastleighBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastleighBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a54daa40>, 'council_name': 'EastleighBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: EastleighBoroughCouncil","time":{"start":1697702021380,"stop":1697702021381,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2179-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastleighBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"e9a91a48daa8176a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/e9a91a48daa8176a","status":"passed","time":{"start":1697696150442,"stop":1697696152096,"duration":1654}},{"uid":"77f5d91a1a376481","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/77f5d91a1a376481","status":"passed","time":{"start":1697678075926,"stop":1697678077681,"duration":1755}},{"uid":"a55e55e601fe3a1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/a55e55e601fe3a1a","status":"passed","time":{"start":1697666568292,"stop":1697666570200,"duration":1908}},{"uid":"573a79683b60d1a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/573a79683b60d1a6","status":"passed","time":{"start":1697666514995,"stop":1697666516418,"duration":1423}},{"uid":"b4d07450d8239a35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/b4d07450d8239a35","status":"passed","time":{"start":1697656822812,"stop":1697656825230,"duration":2418}},{"uid":"1a7c05ae23cca8d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/1a7c05ae23cca8d4","status":"passed","time":{"start":1697656768570,"stop":1697656770244,"duration":1674}},{"uid":"cf7aedd8c5808b91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/cf7aedd8c5808b91","status":"passed","time":{"start":1697649996982,"stop":1697649998597,"duration":1615}},{"uid":"bfac6c6fae89e9f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/bfac6c6fae89e9f8","status":"passed","time":{"start":1697618246512,"stop":1697618248669,"duration":2157}},{"uid":"d937e764929384fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/d937e764929384fb","status":"passed","time":{"start":1697618190342,"stop":1697618192010,"duration":1668}},{"uid":"e053dbf41b03574c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/e053dbf41b03574c","status":"passed","time":{"start":1697591724683,"stop":1697591726455,"duration":1772}},{"uid":"77b9cf8f7363da07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/77b9cf8f7363da07","status":"passed","time":{"start":1697542589775,"stop":1697542591483,"duration":1708}},{"uid":"a3c13e8daaaf7423","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/a3c13e8daaaf7423","status":"passed","time":{"start":1697505306835,"stop":1697505308731,"duration":1896}},{"uid":"249893842f78f166","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/249893842f78f166","status":"passed","time":{"start":1697484610847,"stop":1697484612688,"duration":1841}},{"uid":"b9eb9120d53fd6b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/b9eb9120d53fd6b2","status":"passed","time":{"start":1697484566141,"stop":1697484567413,"duration":1272}},{"uid":"cdbdcf6ded463cf9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/cdbdcf6ded463cf9","status":"passed","time":{"start":1697418949859,"stop":1697418951442,"duration":1583}},{"uid":"e5c4714528fb6331","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/e5c4714528fb6331","status":"passed","time":{"start":1697403137317,"stop":1697403138664,"duration":1347}},{"uid":"90ad7465f652f90c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/90ad7465f652f90c","status":"passed","time":{"start":1697399694124,"stop":1697399695517,"duration":1393}},{"uid":"ecd02d6c8210ce4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/ecd02d6c8210ce4a","status":"passed","time":{"start":1697366950886,"stop":1697366952357,"duration":1471}},{"uid":"e2a795a8cdd4a355","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/e2a795a8cdd4a355","status":"passed","time":{"start":1697332786612,"stop":1697332788424,"duration":1812}},{"uid":"fefb2f4f3bc3cdd7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/fefb2f4f3bc3cdd7","status":"passed","time":{"start":1697245945665,"stop":1697245947579,"duration":1914}}]},"tags":[]},"source":"712538f41c7c0566.json","parameterValues":["EastleighBoroughCouncil"]}