{"uid":"80215cf66f55f3e8","name":"Validate Council Output [BathAndNorthEastSomersetCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"8469a840ac4282e76aa5171187cf23d5","time":{"start":1697702020695,"stop":1697702020696,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[BathAndNorthEastSomersetCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd959935e10>, 'council_name': 'BathAndNorthEastSomersetCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[BathAndNorthEastSomersetCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd959935e10>, 'council_name': 'BathAndNorthEastSomersetCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: BathAndNorthEastSomersetCouncil","time":{"start":1697702020695,"stop":1697702020696,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2176-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BathAndNorthEastSomersetCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":39,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":57},"items":[{"uid":"143986ad2aaa470d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/143986ad2aaa470d","status":"passed","time":{"start":1697696105644,"stop":1697696106741,"duration":1097}},{"uid":"357c8c2342a5ae79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/357c8c2342a5ae79","status":"passed","time":{"start":1697678030557,"stop":1697678031504,"duration":947}},{"uid":"67cfc2ca2dc2e445","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/67cfc2ca2dc2e445","status":"passed","time":{"start":1697666526013,"stop":1697666527259,"duration":1246}},{"uid":"b80f488df259691d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/b80f488df259691d","status":"passed","time":{"start":1697666479524,"stop":1697666480558,"duration":1034}},{"uid":"1aaefec929d86c3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/1aaefec929d86c3c","status":"passed","time":{"start":1697656771087,"stop":1697656772111,"duration":1024}},{"uid":"5db8c7266d6855b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/5db8c7266d6855b3","status":"passed","time":{"start":1697656730698,"stop":1697656731593,"duration":895}},{"uid":"feaeb0e7f8acb0ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/feaeb0e7f8acb0ac","status":"passed","time":{"start":1697649970179,"stop":1697649971096,"duration":917}},{"uid":"3f43fcc115943bf7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/3f43fcc115943bf7","status":"passed","time":{"start":1697618202976,"stop":1697618204104,"duration":1128}},{"uid":"e3cce85264e5401a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/e3cce85264e5401a","status":"passed","time":{"start":1697618159386,"stop":1697618160356,"duration":970}},{"uid":"e0487e355d6e583c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/e0487e355d6e583c","status":"passed","time":{"start":1697591663723,"stop":1697591664694,"duration":971}},{"uid":"159cc1c9d21f86df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/159cc1c9d21f86df","status":"passed","time":{"start":1697542541519,"stop":1697542542463,"duration":944}},{"uid":"3e7c88f6411a90b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/3e7c88f6411a90b3","status":"passed","time":{"start":1697505269964,"stop":1697505271153,"duration":1189}},{"uid":"7213089ae6bb2639","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/7213089ae6bb2639","status":"passed","time":{"start":1697484586388,"stop":1697484587380,"duration":992}},{"uid":"d6652b9f6f24f7b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/d6652b9f6f24f7b9","status":"passed","time":{"start":1697484543914,"stop":1697484544657,"duration":743}},{"uid":"2638ec0eb05cc4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/2638ec0eb05cc4a","status":"passed","time":{"start":1697418923460,"stop":1697418924416,"duration":956}},{"uid":"48122037b1b23019","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/48122037b1b23019","status":"passed","time":{"start":1697403114668,"stop":1697403115428,"duration":760}},{"uid":"df808adcecc86582","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/df808adcecc86582","status":"passed","time":{"start":1697399668905,"stop":1697399669639,"duration":734}},{"uid":"f9d742e4ae72f6ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/f9d742e4ae72f6ca","status":"passed","time":{"start":1697366922876,"stop":1697366923670,"duration":794}},{"uid":"d0200a09373f2ca8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/d0200a09373f2ca8","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='www.bathnes.gov.uk', port=443): Max retries exceeded with url: /webapi/api/BinsAPI/v2/getbartecroute/100120000855/true (Caused by SSLError(SSLError(1, '[SSL: UNSAFE_LEGACY_RENEGOTIATION_DISABLED] unsafe legacy renegotiation disabled (_ssl.c:1007)')))","time":{"start":1697332742422,"stop":1697332743335,"duration":913}},{"uid":"1438daaba38a48c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/1438daaba38a48c7","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='www.bathnes.gov.uk', port=443): Max retries exceeded with url: /webapi/api/BinsAPI/v2/getbartecroute/100120000855/true (Caused by SSLError(SSLError(1, '[SSL: UNSAFE_LEGACY_RENEGOTIATION_DISABLED] unsafe legacy renegotiation disabled (_ssl.c:1007)')))","time":{"start":1697245916355,"stop":1697245917202,"duration":847}}]},"tags":[]},"source":"80215cf66f55f3e8.json","parameterValues":["BathAndNorthEastSomersetCouncil"]}