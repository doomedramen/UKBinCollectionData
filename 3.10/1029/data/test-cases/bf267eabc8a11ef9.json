{"uid":"bf267eabc8a11ef9","name":"Validate Council Output [MalvernHillsDC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4fed604a10daf77aacbf6179bf28f404","time":{"start":1697702021874,"stop":1697702021875,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd959462e60>, 'council_name': 'MalvernHillsDC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd959462e60>, 'council_name': 'MalvernHillsDC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: MalvernHillsDC","time":{"start":1697702021875,"stop":1697702021875,"duration":0},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2176-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MalvernHillsDC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":107,"broken":0,"skipped":0,"passed":32,"unknown":0,"total":139},"items":[{"uid":"1f200f6b62a72be8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/1f200f6b62a72be8","status":"passed","time":{"start":1697696157743,"stop":1697696159074,"duration":1331}},{"uid":"8dfb2693f92d4239","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/8dfb2693f92d4239","status":"passed","time":{"start":1697678085046,"stop":1697678086183,"duration":1137}},{"uid":"36496066021db4c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/36496066021db4c8","status":"passed","time":{"start":1697666571275,"stop":1697666572703,"duration":1428}},{"uid":"ffcda6525e8f22ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/ffcda6525e8f22ff","status":"passed","time":{"start":1697666519900,"stop":1697666520991,"duration":1091}},{"uid":"e2113e3a92e1d166","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/e2113e3a92e1d166","status":"passed","time":{"start":1697656812888,"stop":1697656814369,"duration":1481}},{"uid":"7f2954aa7782cfe1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/7f2954aa7782cfe1","status":"passed","time":{"start":1697656772686,"stop":1697656773751,"duration":1065}},{"uid":"c603a5041c2fd420","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/c603a5041c2fd420","status":"passed","time":{"start":1697650208448,"stop":1697650209770,"duration":1322}},{"uid":"76402acf9e2765b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/76402acf9e2765b8","status":"passed","time":{"start":1697618472599,"stop":1697618474091,"duration":1492}},{"uid":"56278f54a89a8ee8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/56278f54a89a8ee8","status":"passed","time":{"start":1697618401052,"stop":1697618402215,"duration":1163}},{"uid":"a9faf7257b77dbcb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/a9faf7257b77dbcb","status":"passed","time":{"start":1697591926462,"stop":1697591927645,"duration":1183}},{"uid":"72cfb9a8bc6899dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/72cfb9a8bc6899dc","status":"passed","time":{"start":1697542789355,"stop":1697542790690,"duration":1335}},{"uid":"5781a4b75df1fff1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/5781a4b75df1fff1","status":"passed","time":{"start":1697505572198,"stop":1697505573495,"duration":1297}},{"uid":"76c68eda6fa8b590","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/76c68eda6fa8b590","status":"passed","time":{"start":1697484818270,"stop":1697484819396,"duration":1126}},{"uid":"a5baddd209668e70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/a5baddd209668e70","status":"passed","time":{"start":1697484727450,"stop":1697484728329,"duration":879}},{"uid":"679aa7e284bfc1cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/679aa7e284bfc1cd","status":"passed","time":{"start":1697419165785,"stop":1697419166982,"duration":1197}},{"uid":"1cefc41ce77b1a67","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/1cefc41ce77b1a67","status":"passed","time":{"start":1697403290697,"stop":1697403291701,"duration":1004}},{"uid":"f8c977b135d3a2b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/f8c977b135d3a2b8","status":"passed","time":{"start":1697399841956,"stop":1697399842972,"duration":1016}},{"uid":"f7a7ded7e86885fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/f7a7ded7e86885fa","status":"passed","time":{"start":1697367100450,"stop":1697367101632,"duration":1182}},{"uid":"3d67ed441d527062","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/3d67ed441d527062","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swict.malvernhills.gov.uk', port=443): Max retries exceeded with url: /mhdcroundlookup/HandleSearchScreen (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1007)')))","time":{"start":1697333048127,"stop":1697333048816,"duration":689}},{"uid":"41d374b2217ce85f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/41d374b2217ce85f","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swict.malvernhills.gov.uk', port=443): Max retries exceeded with url: /mhdcroundlookup/HandleSearchScreen (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1007)')))","time":{"start":1697246213755,"stop":1697246214638,"duration":883}}]},"tags":[]},"source":"bf267eabc8a11ef9.json","parameterValues":["MalvernHillsDC"]}