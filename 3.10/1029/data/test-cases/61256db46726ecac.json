{"uid":"61256db46726ecac","name":"Validate Council Output [AylesburyValeCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"974fd2c15e32d40e1deeebde92c36bd9","time":{"start":1697702020472,"stop":1697702020531,"duration":59},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[AylesburyValeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9597f0520>, 'council_name': 'AylesburyValeCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[AylesburyValeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9597f0520>, 'council_name': 'AylesburyValeCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: AylesburyValeCouncil","time":{"start":1697702020473,"stop":1697702020531,"duration":58},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2176-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"AylesburyValeCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":110,"unknown":0,"total":114},"items":[{"uid":"b547067b92f0108d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/b547067b92f0108d","status":"passed","time":{"start":1697696101492,"stop":1697696104721,"duration":3229}},{"uid":"ae478812693be7c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/ae478812693be7c6","status":"passed","time":{"start":1697678027134,"stop":1697678029750,"duration":2616}},{"uid":"d25d68fbb3b84273","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/d25d68fbb3b84273","status":"passed","time":{"start":1697666521832,"stop":1697666524996,"duration":3164}},{"uid":"fcc956cf3b8b464e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/fcc956cf3b8b464e","status":"passed","time":{"start":1697666476320,"stop":1697666478912,"duration":2592}},{"uid":"a34e34101d5cfdf1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/a34e34101d5cfdf1","status":"passed","time":{"start":1697656766746,"stop":1697656769796,"duration":3050}},{"uid":"9aa146b217427859","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/9aa146b217427859","status":"passed","time":{"start":1697656726833,"stop":1697656729671,"duration":2838}},{"uid":"f957be2c2e90b3fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/f957be2c2e90b3fa","status":"passed","time":{"start":1697649966261,"stop":1697649969182,"duration":2921}},{"uid":"f38615e077de6ff0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/f38615e077de6ff0","status":"passed","time":{"start":1697618199127,"stop":1697618202045,"duration":2918}},{"uid":"fd80c84132b55a75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/fd80c84132b55a75","status":"passed","time":{"start":1697618155642,"stop":1697618158568,"duration":2926}},{"uid":"2cfd54653caaad15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/2cfd54653caaad15","status":"passed","time":{"start":1697591660055,"stop":1697591662900,"duration":2845}},{"uid":"1599229adb8c8bcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/1599229adb8c8bcd","status":"passed","time":{"start":1697542534629,"stop":1697542540489,"duration":5860}},{"uid":"e089a6ebb1155c62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/e089a6ebb1155c62","status":"passed","time":{"start":1697505263214,"stop":1697505268527,"duration":5313}},{"uid":"94a1f84b13e2c57e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/94a1f84b13e2c57e","status":"passed","time":{"start":1697484582713,"stop":1697484585579,"duration":2866}},{"uid":"c2e4653c59630627","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/c2e4653c59630627","status":"passed","time":{"start":1697484540690,"stop":1697484543192,"duration":2502}},{"uid":"da85c397f36379c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/da85c397f36379c","status":"passed","time":{"start":1697418919840,"stop":1697418922686,"duration":2846}},{"uid":"1f5e1d0d8436b6ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/1f5e1d0d8436b6ad","status":"passed","time":{"start":1697403111609,"stop":1697403114084,"duration":2475}},{"uid":"31b4696f72d74839","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/31b4696f72d74839","status":"passed","time":{"start":1697399665113,"stop":1697399668337,"duration":3224}},{"uid":"359de0b1cb7b31ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/359de0b1cb7b31ba","status":"passed","time":{"start":1697366919359,"stop":1697366922263,"duration":2904}},{"uid":"66ea35f631cf218b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/66ea35f631cf218b","status":"passed","time":{"start":1697332738573,"stop":1697332741424,"duration":2851}},{"uid":"16557a260afcd17f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/16557a260afcd17f","status":"passed","time":{"start":1697245912079,"stop":1697245914993,"duration":2914}}]},"tags":[]},"source":"61256db46726ecac.json","parameterValues":["AylesburyValeCouncil"]}