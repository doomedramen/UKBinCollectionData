{"uid":"a1f1db41ca76db16","name":"Validate Council Output [BCPCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7d71d1ccc30dceca9719e13fd958458d","time":{"start":1697702020752,"stop":1697702020754,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[BCPCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd95991ffd0>, 'council_name': 'BCPCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[BCPCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd95991ffd0>, 'council_name': 'BCPCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: BCPCouncil","time":{"start":1697702020753,"stop":1697702020754,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2176-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BCPCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"26a560a67eed4a08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/26a560a67eed4a08","status":"passed","time":{"start":1697696106744,"stop":1697696107829,"duration":1085}},{"uid":"de618d2fe063e59a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/de618d2fe063e59a","status":"passed","time":{"start":1697678031507,"stop":1697678032960,"duration":1453}},{"uid":"28e50f6b45b9bb49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/28e50f6b45b9bb49","status":"passed","time":{"start":1697666527262,"stop":1697666528264,"duration":1002}},{"uid":"e1826bff9013425f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/e1826bff9013425f","status":"passed","time":{"start":1697666480563,"stop":1697666481694,"duration":1131}},{"uid":"92666c1a6d33c3a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/92666c1a6d33c3a5","status":"passed","time":{"start":1697656772115,"stop":1697656773109,"duration":994}},{"uid":"7b8ef317e2ab8c52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/7b8ef317e2ab8c52","status":"passed","time":{"start":1697656731596,"stop":1697656732455,"duration":859}},{"uid":"62e34095d12907cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/62e34095d12907cf","status":"passed","time":{"start":1697649971099,"stop":1697649972012,"duration":913}},{"uid":"596374279d189c22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/596374279d189c22","status":"passed","time":{"start":1697618204108,"stop":1697618205120,"duration":1012}},{"uid":"723f012f92538aff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/723f012f92538aff","status":"passed","time":{"start":1697618160360,"stop":1697618161339,"duration":979}},{"uid":"79593c0e8fd8b1fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/79593c0e8fd8b1fe","status":"passed","time":{"start":1697591664697,"stop":1697591665561,"duration":864}},{"uid":"b1380590b6e897ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/b1380590b6e897ee","status":"passed","time":{"start":1697542542467,"stop":1697542543306,"duration":839}},{"uid":"5a24f76e8fe4c154","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/5a24f76e8fe4c154","status":"passed","time":{"start":1697505271156,"stop":1697505272395,"duration":1239}},{"uid":"a3b5e5199aeafcce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/a3b5e5199aeafcce","status":"passed","time":{"start":1697484587383,"stop":1697484588179,"duration":796}},{"uid":"1693acffe3ea156b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/1693acffe3ea156b","status":"passed","time":{"start":1697484544662,"stop":1697484545543,"duration":881}},{"uid":"eebbf2653bd5c526","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/eebbf2653bd5c526","status":"passed","time":{"start":1697418924420,"stop":1697418925595,"duration":1175}},{"uid":"2315b2c447addab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/2315b2c447addab","status":"passed","time":{"start":1697403115431,"stop":1697403116113,"duration":682}},{"uid":"d7fa7f394dda3cee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/d7fa7f394dda3cee","status":"passed","time":{"start":1697399669642,"stop":1697399670325,"duration":683}},{"uid":"92071091f0528906","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/92071091f0528906","status":"passed","time":{"start":1697366923674,"stop":1697366924379,"duration":705}},{"uid":"e49a381330081611","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/e49a381330081611","status":"passed","time":{"start":1697332743593,"stop":1697332744870,"duration":1277}},{"uid":"66c2addeb317d90","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/66c2addeb317d90","status":"passed","time":{"start":1697245917471,"stop":1697245919506,"duration":2035}}]},"tags":[]},"source":"a1f1db41ca76db16.json","parameterValues":["BCPCouncil"]}