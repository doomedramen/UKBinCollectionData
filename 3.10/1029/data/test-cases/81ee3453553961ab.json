{"uid":"81ee3453553961ab","name":"Validate Council Output [NewcastleCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f8fee070cb49e91fbb5bb87c533c294a","time":{"start":1697702021941,"stop":1697702021942,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a545a3b0>, 'council_name': 'NewcastleCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a545a3b0>, 'council_name': 'NewcastleCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1697702021941,"stop":1697702021942,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2179-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":135,"unknown":0,"total":139},"items":[{"uid":"1c4929a7eb537601","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/1c4929a7eb537601","status":"passed","time":{"start":1697696177604,"stop":1697696184612,"duration":7008}},{"uid":"af0d7b48bf8b61bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/af0d7b48bf8b61bb","status":"passed","time":{"start":1697678100262,"stop":1697678161440,"duration":61178}},{"uid":"b288efebd5c95ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/b288efebd5c95ed","status":"passed","time":{"start":1697666591937,"stop":1697666599293,"duration":7356}},{"uid":"4b18ba224dbea8de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/4b18ba224dbea8de","status":"passed","time":{"start":1697666537470,"stop":1697666544822,"duration":7352}},{"uid":"5487e3bd54987797","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/5487e3bd54987797","status":"passed","time":{"start":1697656826443,"stop":1697656837282,"duration":10839}},{"uid":"c4412f739aa8383d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/c4412f739aa8383d","status":"passed","time":{"start":1697656785714,"stop":1697656812948,"duration":27234}},{"uid":"1e1b4c24cc71e06d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/1e1b4c24cc71e06d","status":"passed","time":{"start":1697650223025,"stop":1697650243883,"duration":20858}},{"uid":"d00481dbbc337f64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/d00481dbbc337f64","status":"passed","time":{"start":1697618486448,"stop":1697618492931,"duration":6483}},{"uid":"da0c028c5f1f4e06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/da0c028c5f1f4e06","status":"passed","time":{"start":1697618411201,"stop":1697618419956,"duration":8755}},{"uid":"9ff0aede82ad5fdd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/9ff0aede82ad5fdd","status":"passed","time":{"start":1697591936110,"stop":1697591942337,"duration":6227}},{"uid":"ac87a86e023760e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/ac87a86e023760e3","status":"passed","time":{"start":1697542799292,"stop":1697542832853,"duration":33561}},{"uid":"fdbf06f60f1b9d6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/fdbf06f60f1b9d6b","status":"passed","time":{"start":1697505584900,"stop":1697505608490,"duration":23590}},{"uid":"1a0f77c041e670c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/1a0f77c041e670c9","status":"passed","time":{"start":1697484831844,"stop":1697484842121,"duration":10277}},{"uid":"ff5c21e7253e0dbd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/ff5c21e7253e0dbd","status":"passed","time":{"start":1697484738868,"stop":1697484754268,"duration":15400}},{"uid":"23ec33cac6e935b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/23ec33cac6e935b0","status":"passed","time":{"start":1697419194862,"stop":1697419224614,"duration":29752}},{"uid":"26c46321144089f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/26c46321144089f3","status":"passed","time":{"start":1697403298179,"stop":1697403304641,"duration":6462}},{"uid":"9d52bc06d1331b13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/9d52bc06d1331b13","status":"passed","time":{"start":1697399853664,"stop":1697399860122,"duration":6458}},{"uid":"ab5f66edceddd5a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/ab5f66edceddd5a3","status":"passed","time":{"start":1697367108836,"stop":1697367116292,"duration":7456}},{"uid":"aaa299ab2e0419f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/aaa299ab2e0419f4","status":"passed","time":{"start":1697332808065,"stop":1697332832609,"duration":24544}},{"uid":"7c4ce3c959202be4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/7c4ce3c959202be4","status":"passed","time":{"start":1697245974774,"stop":1697246023848,"duration":49074}}]},"tags":[]},"source":"81ee3453553961ab.json","parameterValues":["NewcastleCityCouncil"]}