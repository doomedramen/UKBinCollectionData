{"uid":"b85aaca557385f50","name":"Validate Council Output [WelhatCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9757596c6a580c04f776b266c6584936","time":{"start":1697702023427,"stop":1697702023428,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WelhatCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a5435a50>, 'council_name': 'WelhatCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WelhatCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a5435a50>, 'council_name': 'WelhatCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: WelhatCouncil","time":{"start":1697702023427,"stop":1697702023428,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2179-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WelhatCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":139,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":139},"items":[{"uid":"dea860d7868040dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/dea860d7868040dc","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697696438538,"stop":1697696438816,"duration":278}},{"uid":"bbcf2059af772e56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/bbcf2059af772e56","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697678363688,"stop":1697678363811,"duration":123}},{"uid":"9e29a58ff8e58869","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/9e29a58ff8e58869","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697666863854,"stop":1697666863967,"duration":113}},{"uid":"74501af01d2c6f77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/74501af01d2c6f77","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697666873586,"stop":1697666873693,"duration":107}},{"uid":"7bd5bf4dc0b56fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/7bd5bf4dc0b56fe","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697657112016,"stop":1697657112304,"duration":288}},{"uid":"faeb002738403a6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/faeb002738403a6b","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697657025698,"stop":1697657025838,"duration":140}},{"uid":"eb9b1f7a7fda21d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/eb9b1f7a7fda21d7","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697650267848,"stop":1697650267970,"duration":122}},{"uid":"4db9e94d295685b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/4db9e94d295685b9","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697618535605,"stop":1697618535873,"duration":268}},{"uid":"59832e121d2b582f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/59832e121d2b582f","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697618464659,"stop":1697618464777,"duration":118}},{"uid":"cd0e4b4041974bc0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/cd0e4b4041974bc0","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697591985730,"stop":1697591985849,"duration":119}},{"uid":"315afc31cd228e41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/315afc31cd228e41","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697542869325,"stop":1697542869465,"duration":140}},{"uid":"c71a05fe56405bbd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/c71a05fe56405bbd","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697505642079,"stop":1697505642351,"duration":272}},{"uid":"20a34a4bff581617","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/20a34a4bff581617","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697484873800,"stop":1697484874048,"duration":248}},{"uid":"65615c9c6db113d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/65615c9c6db113d","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697484813931,"stop":1697484814067,"duration":136}},{"uid":"5f42032a88bbd102","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/5f42032a88bbd102","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697419265075,"stop":1697419265230,"duration":155}},{"uid":"7ea212de4a5e7338","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/7ea212de4a5e7338","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697403361930,"stop":1697403362050,"duration":120}},{"uid":"fe2e5bdf1f3e3db9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/fe2e5bdf1f3e3db9","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697399916081,"stop":1697399916203,"duration":122}},{"uid":"a25811a8db018340","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/a25811a8db018340","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697367175014,"stop":1697367175212,"duration":198}},{"uid":"a26c4a0aaf6d8d21","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/a26c4a0aaf6d8d21","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697333106422,"stop":1697333106552,"duration":130}},{"uid":"f1c2c910e252cebe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/f1c2c910e252cebe","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697246265203,"stop":1697246265458,"duration":255}}]},"tags":[]},"source":"b85aaca557385f50.json","parameterValues":["WelhatCouncil"]}