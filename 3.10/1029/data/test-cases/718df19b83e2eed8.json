{"uid":"718df19b83e2eed8","name":"Validate Council Output [ChelmsfordCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"ca53b6762a00c9270716d2dce73b5f79","time":{"start":1697702020809,"stop":1697702020811,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChelmsfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a5337340>, 'council_name': 'ChelmsfordCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChelmsfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a5337340>, 'council_name': 'ChelmsfordCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: ChelmsfordCityCouncil","time":{"start":1697702020810,"stop":1697702020811,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2179-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ChelmsfordCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"144f064298f1f6fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/144f064298f1f6fa","status":"passed","time":{"start":1697696128080,"stop":1697696137453,"duration":9373}},{"uid":"b696bce281ac76ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/b696bce281ac76ee","status":"passed","time":{"start":1697678037406,"stop":1697678058212,"duration":20806}},{"uid":"65bce277173f4ebe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/65bce277173f4ebe","status":"passed","time":{"start":1697666532701,"stop":1697666542217,"duration":9516}},{"uid":"a3964f7afdf7766d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/a3964f7afdf7766d","status":"passed","time":{"start":1697666485893,"stop":1697666495083,"duration":9190}},{"uid":"f7cef2d0d42414f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/f7cef2d0d42414f2","status":"passed","time":{"start":1697656777859,"stop":1697656787446,"duration":9587}},{"uid":"a2a8d381961d6a82","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/a2a8d381961d6a82","status":"passed","time":{"start":1697656736723,"stop":1697656745974,"duration":9251}},{"uid":"de370688b50b6b5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/de370688b50b6b5d","status":"passed","time":{"start":1697649996731,"stop":1697650006086,"duration":9355}},{"uid":"32a7aece238cf816","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/32a7aece238cf816","status":"passed","time":{"start":1697618232609,"stop":1697618242530,"duration":9921}},{"uid":"17397fc2a2a45bde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/17397fc2a2a45bde","status":"passed","time":{"start":1697618194001,"stop":1697618203299,"duration":9298}},{"uid":"31375032f77cdff9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/31375032f77cdff9","status":"passed","time":{"start":1697591669441,"stop":1697591689857,"duration":20416}},{"uid":"5ad83d43bb4897c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/5ad83d43bb4897c1","status":"passed","time":{"start":1697542552695,"stop":1697542562139,"duration":9444}},{"uid":"6bbf2ba462ae9094","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/6bbf2ba462ae9094","status":"passed","time":{"start":1697505274079,"stop":1697505294752,"duration":20673}},{"uid":"b3ee269d97d58327","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/b3ee269d97d58327","status":"passed","time":{"start":1697484592107,"stop":1697484601480,"duration":9373}},{"uid":"fe920571f6f8a6d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/fe920571f6f8a6d9","status":"passed","time":{"start":1697484548304,"stop":1697484557405,"duration":9101}},{"uid":"5423fb31d372767b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/5423fb31d372767b","status":"passed","time":{"start":1697418927699,"stop":1697418947903,"duration":20204}},{"uid":"e5264ade576bfaf2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/e5264ade576bfaf2","status":"passed","time":{"start":1697403118299,"stop":1697403127436,"duration":9137}},{"uid":"c56f3c0e233f6f6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/c56f3c0e233f6f6c","status":"passed","time":{"start":1697399671774,"stop":1697399680805,"duration":9031}},{"uid":"d62ec66033874bda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/d62ec66033874bda","status":"passed","time":{"start":1697366929545,"stop":1697366938683,"duration":9138}},{"uid":"205fc3322aeda66","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/205fc3322aeda66","status":"passed","time":{"start":1697332747862,"stop":1697332768377,"duration":20515}},{"uid":"9e57e091701d159a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/9e57e091701d159a","status":"passed","time":{"start":1697245920967,"stop":1697245941303,"duration":20336}}]},"tags":[]},"source":"718df19b83e2eed8.json","parameterValues":["ChelmsfordCityCouncil"]}