{"uid":"78428bba5108a265","name":"Validate Council Output [NorthumberlandCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"be5066a45f8f21ace99c9910b786c6c9","time":{"start":1697702022409,"stop":1697702022410,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthumberlandCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9594e36d0>, 'council_name': 'NorthumberlandCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthumberlandCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9594e36d0>, 'council_name': 'NorthumberlandCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: NorthumberlandCouncil","time":{"start":1697702022409,"stop":1697702022410,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2176-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthumberlandCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":124,"unknown":0,"total":139},"items":[{"uid":"39595fdece6b9660","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/39595fdece6b9660","status":"passed","time":{"start":1697696215770,"stop":1697696221488,"duration":5718}},{"uid":"105d3c25eeb84dba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/105d3c25eeb84dba","status":"passed","time":{"start":1697678183292,"stop":1697678188544,"duration":5252}},{"uid":"7effe72efda99f58","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/7effe72efda99f58","status":"passed","time":{"start":1697666636614,"stop":1697666642383,"duration":5769}},{"uid":"9eab292b91118027","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/9eab292b91118027","status":"passed","time":{"start":1697666577524,"stop":1697666582171,"duration":4647}},{"uid":"ed9c17243ff180d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/ed9c17243ff180d4","status":"passed","time":{"start":1697656862091,"stop":1697656868126,"duration":6035}},{"uid":"dc033fbbb26d5a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/dc033fbbb26d5a","status":"passed","time":{"start":1697656832104,"stop":1697656837261,"duration":5157}},{"uid":"3b6c86faa69504f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/3b6c86faa69504f7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'string'","time":{"start":1697650050309,"stop":1697650055332,"duration":5023}},{"uid":"63d8de27d93aef4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/63d8de27d93aef4d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'string'","time":{"start":1697618320188,"stop":1697618325828,"duration":5640}},{"uid":"35001cd1bac34c0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/35001cd1bac34c0d","status":"passed","time":{"start":1697618253846,"stop":1697618260212,"duration":6366}},{"uid":"cb229434dd0dc197","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/cb229434dd0dc197","status":"passed","time":{"start":1697591781975,"stop":1697591787832,"duration":5857}},{"uid":"3802087dab402e34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/3802087dab402e34","status":"passed","time":{"start":1697542643954,"stop":1697542649397,"duration":5443}},{"uid":"9fe320d8cb335bc2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/9fe320d8cb335bc2","status":"passed","time":{"start":1697505372315,"stop":1697505378770,"duration":6455}},{"uid":"2bd804bbdea3bd7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/2bd804bbdea3bd7a","status":"passed","time":{"start":1697484670520,"stop":1697484675847,"duration":5327}},{"uid":"bea140c8a4856299","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/bea140c8a4856299","status":"passed","time":{"start":1697484624668,"stop":1697484629357,"duration":4689}},{"uid":"cf2d88e06e5f2cfc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/cf2d88e06e5f2cfc","status":"passed","time":{"start":1697419013191,"stop":1697419019265,"duration":6074}},{"uid":"a90d72e11956822e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/a90d72e11956822e","status":"passed","time":{"start":1697403187139,"stop":1697403193010,"duration":5871}},{"uid":"3cbb706068a66000","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/3cbb706068a66000","status":"passed","time":{"start":1697399737264,"stop":1697399741906,"duration":4642}},{"uid":"eb7fedcd28def6b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/eb7fedcd28def6b9","status":"passed","time":{"start":1697366999020,"stop":1697367004073,"duration":5053}},{"uid":"35b8a7335ca344b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/35b8a7335ca344b","status":"passed","time":{"start":1697332858111,"stop":1697332865608,"duration":7497}},{"uid":"7dacab66e9154333","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/7dacab66e9154333","status":"passed","time":{"start":1697246045190,"stop":1697246052287,"duration":7097}}]},"tags":[]},"source":"78428bba5108a265.json","parameterValues":["NorthumberlandCouncil"]}