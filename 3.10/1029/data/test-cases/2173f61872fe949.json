{"uid":"2173f61872fe949","name":"Validate Council Output [FenlandDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b9a0b94e117284e01290d827dc1bf029","time":{"start":1697702021691,"stop":1697702021692,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[FenlandDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a540e170>, 'council_name': 'FenlandDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[FenlandDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a540e170>, 'council_name': 'FenlandDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: FenlandDistrictCouncil","time":{"start":1697702021692,"stop":1697702021692,"duration":0},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2179-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"FenlandDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":71,"broken":0,"skipped":0,"passed":68,"unknown":0,"total":139},"items":[{"uid":"e1d169ef051f54cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/e1d169ef051f54cd","status":"passed","time":{"start":1697696157791,"stop":1697696161702,"duration":3911}},{"uid":"c6fa84220335c399","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/c6fa84220335c399","status":"passed","time":{"start":1697678083268,"stop":1697678086494,"duration":3226}},{"uid":"a0d9923722865355","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/a0d9923722865355","status":"passed","time":{"start":1697666575207,"stop":1697666577924,"duration":2717}},{"uid":"3534ece0b2b5ccb7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/3534ece0b2b5ccb7","status":"passed","time":{"start":1697666525394,"stop":1697666528331,"duration":2937}},{"uid":"39741d63f97adccd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/39741d63f97adccd","status":"passed","time":{"start":1697656834233,"stop":1697656837117,"duration":2884}},{"uid":"d27324f1afe9e542","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/d27324f1afe9e542","status":"passed","time":{"start":1697656774416,"stop":1697656777123,"duration":2707}},{"uid":"48fe9cd0c5ef5d5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/48fe9cd0c5ef5d5b","status":"passed","time":{"start":1697650003689,"stop":1697650006577,"duration":2888}},{"uid":"a32e4f5143ce4e62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/a32e4f5143ce4e62","status":"passed","time":{"start":1697618257801,"stop":1697618260636,"duration":2835}},{"uid":"bebf93647f107b54","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/bebf93647f107b54","status":"passed","time":{"start":1697618196542,"stop":1697618200272,"duration":3730}},{"uid":"8313515cfe6987cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/8313515cfe6987cd","status":"passed","time":{"start":1697591730799,"stop":1697591733085,"duration":2286}},{"uid":"79050945574eb4c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/79050945574eb4c3","status":"passed","time":{"start":1697542595961,"stop":1697542598976,"duration":3015}},{"uid":"e072c195552f2499","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/e072c195552f2499","status":"passed","time":{"start":1697505314975,"stop":1697505318416,"duration":3441}},{"uid":"eff2e511a03afc18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/eff2e511a03afc18","status":"passed","time":{"start":1697484616972,"stop":1697484620489,"duration":3517}},{"uid":"e77701c161d775b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/e77701c161d775b9","status":"passed","time":{"start":1697484575438,"stop":1697484578102,"duration":2664}},{"uid":"b8dec25a6dff706d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/b8dec25a6dff706d","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697418959371,"stop":1697418959968,"duration":597}},{"uid":"259c37bad641419b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/259c37bad641419b","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697403142692,"stop":1697403143200,"duration":508}},{"uid":"dbebf24d626e3228","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/dbebf24d626e3228","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697399699215,"stop":1697399699668,"duration":453}},{"uid":"aa6091f9cd6abe8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/aa6091f9cd6abe8","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697366956252,"stop":1697366956928,"duration":676}},{"uid":"5cd040ddf74d5bbe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/5cd040ddf74d5bbe","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697332794089,"stop":1697332795022,"duration":933}},{"uid":"9064fdd360514aa7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/9064fdd360514aa7","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697245956942,"stop":1697245957857,"duration":915}}]},"tags":[]},"source":"2173f61872fe949.json","parameterValues":["FenlandDistrictCouncil"]}