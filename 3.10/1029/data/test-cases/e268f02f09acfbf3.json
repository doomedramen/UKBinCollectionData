{"uid":"e268f02f09acfbf3","name":"Validate Council Output [WiganBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d724d8b9a4d0593a99f53e95b03e558b","time":{"start":1697702023464,"stop":1697702023465,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd95bbd69b0>, 'council_name': 'WiganBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd95bbd69b0>, 'council_name': 'WiganBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: WiganBoroughCouncil","time":{"start":1697702023464,"stop":1697702023465,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2176-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiganBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":67,"broken":0,"skipped":0,"passed":72,"unknown":0,"total":139},"items":[{"uid":"d63c3f5725d938e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/d63c3f5725d938e0","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697696438859,"stop":1697696442781,"duration":3922}},{"uid":"17ee122cf46d3aa5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/17ee122cf46d3aa5","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697678363857,"stop":1697678367485,"duration":3628}},{"uid":"1a9d25a973dba7cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/1a9d25a973dba7cc","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697666864020,"stop":1697666868322,"duration":4302}},{"uid":"166833060b387650","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/166833060b387650","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697666872139,"stop":1697666876326,"duration":4187}},{"uid":"f5b4ce65ea444826","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/f5b4ce65ea444826","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697657112359,"stop":1697657116881,"duration":4522}},{"uid":"7351173ad8e41d08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/7351173ad8e41d08","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697657025884,"stop":1697657030487,"duration":4603}},{"uid":"75918333f0fdf19e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/75918333f0fdf19e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697650268016,"stop":1697650271939,"duration":3923}},{"uid":"28e38666bb7b0ec2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/28e38666bb7b0ec2","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697618535917,"stop":1697618540359,"duration":4442}},{"uid":"c6eb119658397d5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/c6eb119658397d5c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697618464825,"stop":1697618469617,"duration":4792}},{"uid":"2469a2c77041d396","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/2469a2c77041d396","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697591985895,"stop":1697591989847,"duration":3952}},{"uid":"bb09274f59cd6c70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/bb09274f59cd6c70","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697542869517,"stop":1697542874450,"duration":4933}},{"uid":"79621ea32bdca856","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/79621ea32bdca856","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697505642402,"stop":1697505647345,"duration":4943}},{"uid":"36755f35ee69a32c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/36755f35ee69a32c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484874216,"stop":1697484877563,"duration":3347}},{"uid":"56ecb5d94221e9b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/56ecb5d94221e9b0","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484814113,"stop":1697484817092,"duration":2979}},{"uid":"8a1ad585db68c6a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/8a1ad585db68c6a1","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697419265334,"stop":1697419269187,"duration":3853}},{"uid":"648f5d20dc055e62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/648f5d20dc055e62","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697403362091,"stop":1697403365633,"duration":3542}},{"uid":"2654c399241a2b75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/2654c399241a2b75","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697399916247,"stop":1697399920698,"duration":4451}},{"uid":"a6f158524240ea83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/a6f158524240ea83","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697367175269,"stop":1697367179171,"duration":3902}},{"uid":"131cea10d5c138ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/131cea10d5c138ba","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697333106613,"stop":1697333111925,"duration":5312}},{"uid":"2a6e779ae805bf79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/2a6e779ae805bf79","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697246265529,"stop":1697246269753,"duration":4224}}]},"tags":[]},"source":"e268f02f09acfbf3.json","parameterValues":["WiganBoroughCouncil"]}