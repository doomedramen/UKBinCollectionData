{"uid":"36a727c1c3ece4e1","name":"Validate Council Output [BasingstokeCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"920a57bf4f74278e86b973f40cf06007","time":{"start":1697702020636,"stop":1697702020637,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[BasingstokeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9598f3550>, 'council_name': 'BasingstokeCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[BasingstokeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9598f3550>, 'council_name': 'BasingstokeCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: BasingstokeCouncil","time":{"start":1697702020636,"stop":1697702020637,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2176-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BasingstokeCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":120,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":139},"items":[{"uid":"d8fe69b54ef99840","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/d8fe69b54ef99840","status":"passed","time":{"start":1697696104725,"stop":1697696105641,"duration":916}},{"uid":"8ad745c771a09d33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/8ad745c771a09d33","status":"passed","time":{"start":1697678029754,"stop":1697678030554,"duration":800}},{"uid":"8d80009c595b00fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/8d80009c595b00fc","status":"passed","time":{"start":1697666525002,"stop":1697666526008,"duration":1006}},{"uid":"4f618625ae7ed15f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/4f618625ae7ed15f","status":"passed","time":{"start":1697666478916,"stop":1697666479521,"duration":605}},{"uid":"de39484e5aeca32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/de39484e5aeca32","status":"passed","time":{"start":1697656769800,"stop":1697656771084,"duration":1284}},{"uid":"68f15547fd60b4c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/68f15547fd60b4c1","status":"passed","time":{"start":1697656729676,"stop":1697656730694,"duration":1018}},{"uid":"aff66e20e29808e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/aff66e20e29808e6","status":"passed","time":{"start":1697649969187,"stop":1697649970175,"duration":988}},{"uid":"4a27560d18ea59c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/4a27560d18ea59c0","status":"passed","time":{"start":1697618202051,"stop":1697618202973,"duration":922}},{"uid":"c7be5e63daa8178b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/c7be5e63daa8178b","status":"passed","time":{"start":1697618158573,"stop":1697618159382,"duration":809}},{"uid":"5ff2d9709a3a90ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/5ff2d9709a3a90ca","status":"passed","time":{"start":1697591662903,"stop":1697591663720,"duration":817}},{"uid":"c49fac34a0b0178b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/c49fac34a0b0178b","status":"passed","time":{"start":1697542540493,"stop":1697542541515,"duration":1022}},{"uid":"bc8edbe44464f16","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/bc8edbe44464f16","status":"passed","time":{"start":1697505268531,"stop":1697505269538,"duration":1007}},{"uid":"e1f98ee6967ff8cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/e1f98ee6967ff8cb","status":"passed","time":{"start":1697484585583,"stop":1697484586382,"duration":799}},{"uid":"a5b4dd470f9af3ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/a5b4dd470f9af3ab","status":"passed","time":{"start":1697484543196,"stop":1697484543911,"duration":715}},{"uid":"57a34d404a71c5ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/57a34d404a71c5ce","status":"passed","time":{"start":1697418922691,"stop":1697418923456,"duration":765}},{"uid":"d680f430eb2e6213","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/d680f430eb2e6213","status":"passed","time":{"start":1697403114088,"stop":1697403114665,"duration":577}},{"uid":"7590d16957442f88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/7590d16957442f88","status":"passed","time":{"start":1697399668341,"stop":1697399668902,"duration":561}},{"uid":"9ab05f7403bc1ae1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/9ab05f7403bc1ae1","status":"passed","time":{"start":1697366922267,"stop":1697366922873,"duration":606}},{"uid":"fdc55660a272adbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/fdc55660a272adbc","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='www.basingstoke.gov.uk', port=443): Max retries exceeded with url: /bincollections (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1007)')))","time":{"start":1697332741428,"stop":1697332742157,"duration":729}},{"uid":"7d2b9eb76d872b2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/7d2b9eb76d872b2c","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='www.basingstoke.gov.uk', port=443): Max retries exceeded with url: /bincollections (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1007)')))","time":{"start":1697245914998,"stop":1697245916031,"duration":1033}}]},"tags":[]},"source":"36a727c1c3ece4e1.json","parameterValues":["BasingstokeCouncil"]}