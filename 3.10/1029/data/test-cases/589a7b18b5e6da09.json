{"uid":"589a7b18b5e6da09","name":"Validate Council Output [TorridgeDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"617b4311b681b19c6f82373e9ef5a04d","time":{"start":1697702023259,"stop":1697702023261,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a54a4ac0>, 'council_name': 'TorridgeDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f77a550acb0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77a54a4ac0>, 'council_name': 'TorridgeDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f77a5f6e6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1697702023260,"stop":1697702023261,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2179-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":139},"items":[{"uid":"bbfc0b7ec873819a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/bbfc0b7ec873819a","status":"passed","time":{"start":1697696418487,"stop":1697696421523,"duration":3036}},{"uid":"7f3f037b86edb9ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/7f3f037b86edb9ca","status":"passed","time":{"start":1697678339186,"stop":1697678342202,"duration":3016}},{"uid":"ad20bffcd745cef7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/ad20bffcd745cef7","status":"passed","time":{"start":1697666839715,"stop":1697666842500,"duration":2785}},{"uid":"8c1f8ffb0c2a218b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/8c1f8ffb0c2a218b","status":"passed","time":{"start":1697666731932,"stop":1697666734742,"duration":2810}},{"uid":"7f50e228c1454db2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/7f50e228c1454db2","status":"passed","time":{"start":1697657089864,"stop":1697657092709,"duration":2845}},{"uid":"a03bd1d63b878311","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/a03bd1d63b878311","status":"passed","time":{"start":1697657005192,"stop":1697657007913,"duration":2721}},{"uid":"79821bfa7bb70fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/79821bfa7bb70fa","status":"passed","time":{"start":1697650245476,"stop":1697650248298,"duration":2822}},{"uid":"1e0244795ddd73af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/1e0244795ddd73af","status":"passed","time":{"start":1697618509711,"stop":1697618512451,"duration":2740}},{"uid":"5363befd40e1c0db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/5363befd40e1c0db","status":"passed","time":{"start":1697618436382,"stop":1697618441003,"duration":4621}},{"uid":"32f8e16c46189cb5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/32f8e16c46189cb5","status":"passed","time":{"start":1697591966140,"stop":1697591969021,"duration":2881}},{"uid":"8256aa870e961f9f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/8256aa870e961f9f","status":"passed","time":{"start":1697542847074,"stop":1697542849855,"duration":2781}},{"uid":"a9683486482a2d35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/a9683486482a2d35","status":"passed","time":{"start":1697505612328,"stop":1697505617091,"duration":4763}},{"uid":"bf4dfa04b11347ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/bf4dfa04b11347ab","status":"passed","time":{"start":1697484853095,"stop":1697484856124,"duration":3029}},{"uid":"2850f8457e78c12b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/2850f8457e78c12b","status":"passed","time":{"start":1697484793738,"stop":1697484796513,"duration":2775}},{"uid":"81de028ff11dec0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/81de028ff11dec0e","status":"passed","time":{"start":1697419233959,"stop":1697419238801,"duration":4842}},{"uid":"6194dcb74945a4ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/6194dcb74945a4ec","status":"passed","time":{"start":1697403341536,"stop":1697403344471,"duration":2935}},{"uid":"44560643d1754030","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/44560643d1754030","status":"passed","time":{"start":1697399897227,"stop":1697399899988,"duration":2761}},{"uid":"d4dd3a977cb3c747","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/d4dd3a977cb3c747","status":"passed","time":{"start":1697367152273,"stop":1697367158999,"duration":6726}},{"uid":"b97a42ed9114d574","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/b97a42ed9114d574","status":"passed","time":{"start":1697333066047,"stop":1697333069948,"duration":3901}},{"uid":"87cdf7c8a94da093","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/87cdf7c8a94da093","status":"passed","time":{"start":1697246242872,"stop":1697246245964,"duration":3092}}]},"tags":[]},"source":"589a7b18b5e6da09.json","parameterValues":["TorridgeDistrictCouncil"]}