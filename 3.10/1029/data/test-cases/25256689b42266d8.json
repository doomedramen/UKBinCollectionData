{"uid":"25256689b42266d8","name":"Validate Council Output [ValeofGlamorganCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1e5a723ab9bb5ec179bcd63e0a46576d","time":{"start":1697702023178,"stop":1697702023179,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9593d90f0>, 'council_name': 'ValeofGlamorganCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd95957e710>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd9593d90f0>, 'council_name': 'ValeofGlamorganCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd959f8a6b0>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: ValeofGlamorganCouncil","time":{"start":1697702023178,"stop":1697702023179,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-186"},{"name":"thread","value":"2176-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ValeofGlamorganCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":123,"unknown":0,"total":139},"items":[{"uid":"583456d817fada47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1027//#testresult/583456d817fada47","status":"passed","time":{"start":1697696421526,"stop":1697696424036,"duration":2510}},{"uid":"b6780524ddfe381c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1025//#testresult/b6780524ddfe381c","status":"passed","time":{"start":1697678342206,"stop":1697678344359,"duration":2153}},{"uid":"9afd858b5063b315","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1023//#testresult/9afd858b5063b315","status":"passed","time":{"start":1697666842504,"stop":1697666845397,"duration":2893}},{"uid":"8f021d3574deade1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1022//#testresult/8f021d3574deade1","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f4bd8dc5ed0>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1697666734745,"stop":1697666865752,"duration":131007}},{"uid":"b7601daff7147dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1020//#testresult/b7601daff7147dd","status":"passed","time":{"start":1697657092713,"stop":1697657095247,"duration":2534}},{"uid":"28aee9aead0a6e97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1019//#testresult/28aee9aead0a6e97","status":"passed","time":{"start":1697657007917,"stop":1697657010177,"duration":2260}},{"uid":"2b730c44e61d92c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1016//#testresult/2b730c44e61d92c7","status":"passed","time":{"start":1697650248302,"stop":1697650250876,"duration":2574}},{"uid":"9fe030d8e3829a2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1014//#testresult/9fe030d8e3829a2b","status":"passed","time":{"start":1697618512455,"stop":1697618514572,"duration":2117}},{"uid":"a166d53aa5aa8157","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1013//#testresult/a166d53aa5aa8157","status":"passed","time":{"start":1697618441008,"stop":1697618443777,"duration":2769}},{"uid":"92415c3b2c5e3133","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1010//#testresult/92415c3b2c5e3133","status":"passed","time":{"start":1697591969025,"stop":1697591971088,"duration":2063}},{"uid":"e0835b36bd947f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1009//#testresult/e0835b36bd947f5","status":"passed","time":{"start":1697542849859,"stop":1697542852072,"duration":2213}},{"uid":"c1891fc973cdec53","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1008//#testresult/c1891fc973cdec53","status":"passed","time":{"start":1697505617095,"stop":1697505619278,"duration":2183}},{"uid":"1f9ab412c2fa9aa6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1006//#testresult/1f9ab412c2fa9aa6","status":"passed","time":{"start":1697484856128,"stop":1697484858306,"duration":2178}},{"uid":"d69eb480c63de24e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1005//#testresult/d69eb480c63de24e","status":"passed","time":{"start":1697484796518,"stop":1697484798623,"duration":2105}},{"uid":"947c7cef72151a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1004//#testresult/947c7cef72151a3","status":"passed","time":{"start":1697419238805,"stop":1697419240654,"duration":1849}},{"uid":"9ad139c38777d11c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1001//#testresult/9ad139c38777d11c","status":"passed","time":{"start":1697403344475,"stop":1697403346772,"duration":2297}},{"uid":"f1b99adcfd11b632","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/998//#testresult/f1b99adcfd11b632","status":"passed","time":{"start":1697399899992,"stop":1697399901513,"duration":1521}},{"uid":"291e66c4a7996309","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/994//#testresult/291e66c4a7996309","status":"passed","time":{"start":1697367159003,"stop":1697367160596,"duration":1593}},{"uid":"2ff3f98ef0654379","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/992//#testresult/2ff3f98ef0654379","status":"passed","time":{"start":1697333069952,"stop":1697333072148,"duration":2196}},{"uid":"e48d8a0d966921d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/988//#testresult/e48d8a0d966921d1","status":"passed","time":{"start":1697246245968,"stop":1697246248421,"duration":2453}}]},"tags":[]},"source":"25256689b42266d8.json","parameterValues":["ValeofGlamorganCouncil"]}