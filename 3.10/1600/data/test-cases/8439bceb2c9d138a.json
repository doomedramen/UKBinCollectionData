{"uid":"8439bceb2c9d138a","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1710203133399,"stop":1710203160331,"duration":26932},"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f410685ee60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4105a32830>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f410685ee60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4105a32830>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1710203133399,"stop":1710203133399,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1710203133399,"stop":1710203160331,"duration":26932},"status":"failed","statusMessage":"time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"ValueError: time data 'Being collected today' does not match format '%A %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az975-941"},{"name":"thread","value":"2829-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":47,"broken":0,"skipped":0,"passed":79,"unknown":0,"total":126},"items":[{"uid":"3e2cf32c63fa2943","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1599//#testresult/3e2cf32c63fa2943","status":"passed","time":{"start":1710116825381,"stop":1710116841886,"duration":16505}},{"uid":"2ddd8f0895c6ee22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1598//#testresult/2ddd8f0895c6ee22","status":"passed","time":{"start":1710030512618,"stop":1710030533289,"duration":20671}},{"uid":"46f1eeb93a74ed40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1597//#testresult/46f1eeb93a74ed40","status":"passed","time":{"start":1709943898958,"stop":1709943914665,"duration":15707}},{"uid":"ab18b4b7a94563fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1596//#testresult/ab18b4b7a94563fb","status":"passed","time":{"start":1709857558818,"stop":1709857575270,"duration":16452}},{"uid":"af537bebdc31a60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1595//#testresult/af537bebdc31a60","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564b3e029e93 <unknown>\n#1 0x564b3dd21ce6 <unknown>\n#2 0x564b3dd6ce48 <unknown>\n#3 0x564b3dd6cf01 <unknown>\n#4 0x564b3ddb03f4 <unknown>\n#5 0x564b3dd8eedd <unknown>\n#6 0x564b3ddad899 <unknown>\n#7 0x564b3dd8ec53 <unknown>\n#8 0x564b3dd5fdb3 <unknown>\n#9 0x564b3dd6077e <unknown>\n#10 0x564b3dfef7cb <unknown>\n#11 0x564b3dff37e5 <unknown>\n#12 0x564b3dfdd0e1 <unknown>\n#13 0x564b3dff4372 <unknown>\n#14 0x564b3dfc11bf <unknown>\n#15 0x564b3e018488 <unknown>\n#16 0x564b3e018683 <unknown>\n#17 0x564b3e029044 <unknown>\n#18 0x7f6ab2294ac3 <unknown>","time":{"start":1709770851998,"stop":1709770921972,"duration":69974}},{"uid":"d7d409fd1b8b352a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1594//#testresult/d7d409fd1b8b352a","status":"passed","time":{"start":1709684757558,"stop":1709684779441,"duration":21883}},{"uid":"ac161192d7db7231","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1593//#testresult/ac161192d7db7231","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1709598304172,"stop":1709598328855,"duration":24683}},{"uid":"8bff059ccf5a071a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1592//#testresult/8bff059ccf5a071a","status":"passed","time":{"start":1709511993110,"stop":1709512018364,"duration":25254}},{"uid":"8836714a6852d7b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1572//#testresult/8836714a6852d7b9","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x555aa1e9c303 <unknown>\n#1 0x555aa1b812b7 <unknown>\n#2 0x555aa1bcccc0 <unknown>\n#3 0x555aa1bccdb1 <unknown>\n#4 0x555aa1c10b44 <unknown>\n#5 0x555aa1bef3ad <unknown>\n#6 0x555aa1c0e07c <unknown>\n#7 0x555aa1bef123 <unknown>\n#8 0x555aa1bbf095 <unknown>\n#9 0x555aa1bc009e <unknown>\n#10 0x555aa1e606ab <unknown>\n#11 0x555aa1e644ba <unknown>\n#12 0x555aa1e4cf85 <unknown>\n#13 0x555aa1e6512f <unknown>\n#14 0x555aa1e30e6f <unknown>\n#15 0x555aa1e895f8 <unknown>\n#16 0x555aa1e897c2 <unknown>\n#17 0x555aa1e9b4a4 <unknown>\n#18 0x7f83b1494ac3 <unknown>","time":{"start":1708561552241,"stop":1708561618409,"duration":66168}},{"uid":"4f4cebd668f19a2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1570//#testresult/4f4cebd668f19a2c","status":"passed","time":{"start":1708475136194,"stop":1708475154057,"duration":17863}},{"uid":"6cb59d14cf4ce1c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1569//#testresult/6cb59d14cf4ce1c8","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1708388731186,"stop":1708388750432,"duration":19246}},{"uid":"37dbf0cec88084b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1568//#testresult/37dbf0cec88084b5","status":"passed","time":{"start":1708302445904,"stop":1708302471868,"duration":25964}},{"uid":"eecbbd710a72a8f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1567//#testresult/eecbbd710a72a8f4","status":"passed","time":{"start":1708216084658,"stop":1708216110184,"duration":25526}},{"uid":"9b5562f2c9341ba3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1566//#testresult/9b5562f2c9341ba3","status":"passed","time":{"start":1708129520964,"stop":1708129537051,"duration":16087}},{"uid":"b22abad6c4b3d1b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1563//#testresult/b22abad6c4b3d1b2","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55aeb95c1d93 <unknown>\n#1 0x55aeb92a5337 <unknown>\n#2 0x55aeb92f0d60 <unknown>\n#3 0x55aeb92f0e51 <unknown>\n#4 0x55aeb9334bc4 <unknown>\n#5 0x55aeb931346d <unknown>\n#6 0x55aeb933212d <unknown>\n#7 0x55aeb93131e3 <unknown>\n#8 0x55aeb92e3135 <unknown>\n#9 0x55aeb92e413e <unknown>\n#10 0x55aeb9585e4b <unknown>\n#11 0x55aeb9589dfa <unknown>\n#12 0x55aeb95726d5 <unknown>\n#13 0x55aeb958aa6f <unknown>\n#14 0x55aeb955669f <unknown>\n#15 0x55aeb95af098 <unknown>\n#16 0x55aeb95af262 <unknown>\n#17 0x55aeb95c0f34 <unknown>\n#18 0x7fa505294ac3 <unknown>","time":{"start":1708043124441,"stop":1708043191056,"duration":66615}},{"uid":"a27950dcfa7aabcf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1562//#testresult/a27950dcfa7aabcf","status":"passed","time":{"start":1707956756513,"stop":1707956775481,"duration":18968}},{"uid":"845d7deb68d6e604","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1561//#testresult/845d7deb68d6e604","status":"passed","time":{"start":1707870340091,"stop":1707870359870,"duration":19779}},{"uid":"3f2417d7c2a747cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1560//#testresult/3f2417d7c2a747cd","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1707783999374,"stop":1707784017852,"duration":18478}},{"uid":"533ed8f789225a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1559//#testresult/533ed8f789225a7","status":"passed","time":{"start":1707697611594,"stop":1707697629776,"duration":18182}},{"uid":"b9b09cfd8f33d821","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1556//#testresult/b9b09cfd8f33d821","status":"passed","time":{"start":1707611312970,"stop":1707611331012,"duration":18042}}]},"tags":[]},"source":"8439bceb2c9d138a.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}