{"uid":"53a7a03a395c629d","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1710203259029,"stop":1710203289895,"duration":30866},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f90696cf2e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9068669c00>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f907ce32800>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f90696cf2e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9068669c00>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f907ce32800>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1710203259030,"stop":1710203259030,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1710203259030,"stop":1710203289895,"duration":30865},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az975-941"},{"name":"thread","value":"2835-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":193,"unknown":0,"total":208},"items":[{"uid":"bfbb9e230828bf22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1599//#testresult/bfbb9e230828bf22","status":"passed","time":{"start":1710117030593,"stop":1710117052120,"duration":21527}},{"uid":"59ed55fb1fa101e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1598//#testresult/59ed55fb1fa101e9","status":"passed","time":{"start":1710030662117,"stop":1710030678819,"duration":16702}},{"uid":"5e28f16bd22a4f66","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1597//#testresult/5e28f16bd22a4f66","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1709944108412,"stop":1709944139325,"duration":30913}},{"uid":"bd885556f47095c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1596//#testresult/bd885556f47095c2","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1709857708621,"stop":1709857739324,"duration":30703}},{"uid":"9193f5a6e57f3604","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1595//#testresult/9193f5a6e57f3604","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1709770952580,"stop":1709770983475,"duration":30895}},{"uid":"32aadc08c14fa3dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1594//#testresult/32aadc08c14fa3dd","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1709684881861,"stop":1709684912459,"duration":30598}},{"uid":"824f202c2b16edf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1593//#testresult/824f202c2b16edf6","status":"passed","time":{"start":1709598426879,"stop":1709598429713,"duration":2834}},{"uid":"2953a74deba1c67d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1592//#testresult/2953a74deba1c67d","status":"passed","time":{"start":1709512137923,"stop":1709512146328,"duration":8405}},{"uid":"2c1da2e6c8dfd976","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1572//#testresult/2c1da2e6c8dfd976","status":"passed","time":{"start":1708561677933,"stop":1708561679002,"duration":1069}},{"uid":"9bb109f84b4658b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1570//#testresult/9bb109f84b4658b","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1708475228944,"stop":1708475259507,"duration":30563}},{"uid":"e1a2895027f266ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1569//#testresult/e1a2895027f266ae","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1708388867080,"stop":1708388897868,"duration":30788}},{"uid":"ce02af032e8d1398","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1568//#testresult/ce02af032e8d1398","status":"passed","time":{"start":1708302530592,"stop":1708302533320,"duration":2728}},{"uid":"229de6bb41779bc1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1567//#testresult/229de6bb41779bc1","status":"passed","time":{"start":1708216165629,"stop":1708216172174,"duration":6545}},{"uid":"adf376448f271fcf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1566//#testresult/adf376448f271fcf","status":"passed","time":{"start":1708129634747,"stop":1708129637572,"duration":2825}},{"uid":"ce6f1ecfbba5d01b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1563//#testresult/ce6f1ecfbba5d01b","status":"passed","time":{"start":1708043207292,"stop":1708043210772,"duration":3480}},{"uid":"432edc26a503eb06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1562//#testresult/432edc26a503eb06","status":"passed","time":{"start":1707956831563,"stop":1707956833531,"duration":1968}},{"uid":"113bd3d58cf22ffc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1561//#testresult/113bd3d58cf22ffc","status":"passed","time":{"start":1707870449083,"stop":1707870455424,"duration":6341}},{"uid":"2417a385fc1994de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1560//#testresult/2417a385fc1994de","status":"passed","time":{"start":1707784085312,"stop":1707784089688,"duration":4376}},{"uid":"d4e5a6da51d79610","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1559//#testresult/d4e5a6da51d79610","status":"passed","time":{"start":1707697728695,"stop":1707697735285,"duration":6590}},{"uid":"445527e09d77dad2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1556//#testresult/445527e09d77dad2","status":"passed","time":{"start":1707611387685,"stop":1707611390694,"duration":3009}}]},"tags":[]},"source":"53a7a03a395c629d.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}