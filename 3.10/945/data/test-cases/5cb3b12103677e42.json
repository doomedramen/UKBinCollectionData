{"uid":"5cb3b12103677e42","name":"Validate Council Output [AylesburyValeCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"974fd2c15e32d40e1deeebde92c36bd9","time":{"start":1695518219856,"stop":1695518224011,"duration":4155},"status":"failed","statusMessage":"ValueError: No collection data found for provided UPRN.","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[AylesburyValeCouncil]>>\n_pytest_bdd_example = {'council': 'AylesburyValeCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <AylesburyValeCouncil.CouncilClass object at 0x7f67c3743a00>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '766252532', 'url': 'http://avdcbins.web-labs.co.uk/RefuseApi.asmx', ...}\nuprn = '766252532'\nheaders = {'Content-Type': 'text/xml; charset=UTF-8', 'SOAPAction': '\"http://tempuri.org/GetCollections\"'}\npost_data = '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=...p:Body><GetCollections xmlns=\"http://tempuri.org/\"><uprn>766252532</uprn></GetCollections></soap:Body></soap:Envelope>'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        # Make SOAP Request\n        headers = {\n            'Content-Type': 'text/xml; charset=UTF-8',\n            'SOAPAction': '\"http://tempuri.org/GetCollections\"'\n        }\n    \n        post_data = '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope ' \\\n                    'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' \\\n                    'xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ' \\\n                    'xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body><GetCollections ' \\\n                    'xmlns=\"http://tempuri.org/\"><uprn>' + uprn + '</uprn></GetCollections></soap:Body></soap:Envelope>'\n    \n        response = requests.post(\n            \"http://avdcbins.web-labs.co.uk/RefuseApi.asmx\",\n            data=post_data,\n            headers=headers\n        )\n    \n        if response.status_code != 200:\n>           raise ValueError(\"No collection data found for provided UPRN.\")\nE           ValueError: No collection data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/AylesburyValeCouncil.py:38: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No collection data found for provided UPRN.","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[AylesburyValeCouncil]>>\n_pytest_bdd_example = {'council': 'AylesburyValeCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <AylesburyValeCouncil.CouncilClass object at 0x7f67c3743a00>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '766252532', 'url': 'http://avdcbins.web-labs.co.uk/RefuseApi.asmx', ...}\nuprn = '766252532'\nheaders = {'Content-Type': 'text/xml; charset=UTF-8', 'SOAPAction': '\"http://tempuri.org/GetCollections\"'}\npost_data = '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=...p:Body><GetCollections xmlns=\"http://tempuri.org/\"><uprn>766252532</uprn></GetCollections></soap:Body></soap:Envelope>'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        # Make SOAP Request\n        headers = {\n            'Content-Type': 'text/xml; charset=UTF-8',\n            'SOAPAction': '\"http://tempuri.org/GetCollections\"'\n        }\n    \n        post_data = '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope ' \\\n                    'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' \\\n                    'xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ' \\\n                    'xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body><GetCollections ' \\\n                    'xmlns=\"http://tempuri.org/\"><uprn>' + uprn + '</uprn></GetCollections></soap:Body></soap:Envelope>'\n    \n        response = requests.post(\n            \"http://avdcbins.web-labs.co.uk/RefuseApi.asmx\",\n            data=post_data,\n            headers=headers\n        )\n    \n        if response.status_code != 200:\n>           raise ValueError(\"No collection data found for provided UPRN.\")\nE           ValueError: No collection data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/AylesburyValeCouncil.py:38: ValueError","steps":[{"name":"Given the council: AylesburyValeCouncil","time":{"start":1695518219856,"stop":1695518219857,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from AylesburyValeCouncil","time":{"start":1695518219857,"stop":1695518224011,"duration":4154},"status":"failed","statusMessage":"No collection data found for provided UPRN.","statusTrace":"ValueError: No collection data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az573-449"},{"name":"thread","value":"2261-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"AylesburyValeCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":62,"unknown":0,"total":65},"items":[{"uid":"62ff96f86a7c3393","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/944//#testresult/62ff96f86a7c3393","status":"passed","time":{"start":1695431453767,"stop":1695431457244,"duration":3477}},{"uid":"eaec7561f91a4287","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/943//#testresult/eaec7561f91a4287","status":"passed","time":{"start":1695345185838,"stop":1695345189462,"duration":3624}},{"uid":"5966e67069686544","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/942//#testresult/5966e67069686544","status":"passed","time":{"start":1695258734808,"stop":1695258737576,"duration":2768}},{"uid":"52542b4ac89c4cad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/941//#testresult/52542b4ac89c4cad","status":"passed","time":{"start":1695206118975,"stop":1695206122192,"duration":3217}},{"uid":"eb84b5cecb25df9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/939//#testresult/eb84b5cecb25df9b","status":"passed","time":{"start":1695193577937,"stop":1695193580786,"duration":2849}},{"uid":"b8ac1a55eba6f750","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/937//#testresult/b8ac1a55eba6f750","status":"passed","time":{"start":1695172369866,"stop":1695172375194,"duration":5328}},{"uid":"e7e21aba1f09550e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/936//#testresult/e7e21aba1f09550e","status":"passed","time":{"start":1695161873584,"stop":1695161876235,"duration":2651}},{"uid":"5c1591ba1500b581","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/935//#testresult/5c1591ba1500b581","status":"passed","time":{"start":1695159837970,"stop":1695159841148,"duration":3178}},{"uid":"d4afcd9c032ec3bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/932//#testresult/d4afcd9c032ec3bd","status":"passed","time":{"start":1695156908453,"stop":1695156912168,"duration":3715}},{"uid":"52c34ab0ca5f5a8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/930//#testresult/52c34ab0ca5f5a8a","status":"passed","time":{"start":1695086036045,"stop":1695086039430,"duration":3385}},{"uid":"71bf8a9ffe18ef40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/929//#testresult/71bf8a9ffe18ef40","status":"passed","time":{"start":1694999566648,"stop":1694999572046,"duration":5398}},{"uid":"826acc4cda84d073","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/928//#testresult/826acc4cda84d073","status":"passed","time":{"start":1694987803122,"stop":1694987806529,"duration":3407}},{"uid":"13df5b646cd84e10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/926//#testresult/13df5b646cd84e10","status":"passed","time":{"start":1694987648042,"stop":1694987650586,"duration":2544}},{"uid":"137a1b85977c002a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/922//#testresult/137a1b85977c002a","status":"passed","time":{"start":1694971590879,"stop":1694971593707,"duration":2828}},{"uid":"2ec5460270bc8114","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/920//#testresult/2ec5460270bc8114","status":"passed","time":{"start":1694913399803,"stop":1694913403356,"duration":3553}},{"uid":"ee8d92ec5ab780b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/919//#testresult/ee8d92ec5ab780b0","status":"passed","time":{"start":1694892711509,"stop":1694892716464,"duration":4955}},{"uid":"604462af1764bac9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/917//#testresult/604462af1764bac9","status":"passed","time":{"start":1694889714625,"stop":1694889719511,"duration":4886}},{"uid":"bde3447709653f60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/915//#testresult/bde3447709653f60","status":"passed","time":{"start":1694864576224,"stop":1694864579438,"duration":3214}},{"uid":"3e78a0cb62d87829","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/913//#testresult/3e78a0cb62d87829","status":"passed","time":{"start":1694840267243,"stop":1694840270117,"duration":2874}},{"uid":"f25ae80e105f0838","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/912//#testresult/f25ae80e105f0838","status":"passed","time":{"start":1694826667586,"stop":1694826672713,"duration":5127}}]},"tags":[]},"source":"5cb3b12103677e42.json","parameterValues":["AylesburyValeCouncil"]}