{"uid":"c6f0ea290ad09ae1","name":"Validate Council Output [AylesburyValeCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7c134e9afa771d2f5eae137ddf4714bc","time":{"start":1702948661970,"stop":1702948664576,"duration":2606},"status":"failed","statusMessage":"ValueError: No collection data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f49ecaf7640>\nrequest = <FixtureRequest for <Function test_scenario_outline[AylesburyValeCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f49e7f6d9f0>, 'council': 'AylesburyValeCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <AylesburyValeCouncil.CouncilClass object at 0x7f49daedac80>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '766252532', 'url': 'http://avdcbins.web-labs.co.uk/RefuseApi.asmx', ...}\nuprn = '766252532'\nheaders = {'Content-Type': 'text/xml; charset=UTF-8', 'SOAPAction': '\"http://tempuri.org/GetCollections\"'}\npost_data = '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=...p:Body><GetCollections xmlns=\"http://tempuri.org/\"><uprn>766252532</uprn></GetCollections></soap:Body></soap:Envelope>'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        # Make SOAP Request\n        headers = {\n            'Content-Type': 'text/xml; charset=UTF-8',\n            'SOAPAction': '\"http://tempuri.org/GetCollections\"'\n        }\n    \n        post_data = '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope ' \\\n                    'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' \\\n                    'xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ' \\\n                    'xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body><GetCollections ' \\\n                    'xmlns=\"http://tempuri.org/\"><uprn>' + uprn + '</uprn></GetCollections></soap:Body></soap:Envelope>'\n    \n        response = requests.post(\n            \"http://avdcbins.web-labs.co.uk/RefuseApi.asmx\",\n            data=post_data,\n            headers=headers\n        )\n    \n        if response.status_code != 200:\n>           raise ValueError(\"No collection data found for provided UPRN.\")\nE           ValueError: No collection data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/AylesburyValeCouncil.py:38: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No collection data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f49ecaf7640>\nrequest = <FixtureRequest for <Function test_scenario_outline[AylesburyValeCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f49e7f6d9f0>, 'council': 'AylesburyValeCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <AylesburyValeCouncil.CouncilClass object at 0x7f49daedac80>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '766252532', 'url': 'http://avdcbins.web-labs.co.uk/RefuseApi.asmx', ...}\nuprn = '766252532'\nheaders = {'Content-Type': 'text/xml; charset=UTF-8', 'SOAPAction': '\"http://tempuri.org/GetCollections\"'}\npost_data = '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=...p:Body><GetCollections xmlns=\"http://tempuri.org/\"><uprn>766252532</uprn></GetCollections></soap:Body></soap:Envelope>'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        # Make SOAP Request\n        headers = {\n            'Content-Type': 'text/xml; charset=UTF-8',\n            'SOAPAction': '\"http://tempuri.org/GetCollections\"'\n        }\n    \n        post_data = '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope ' \\\n                    'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' \\\n                    'xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ' \\\n                    'xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body><GetCollections ' \\\n                    'xmlns=\"http://tempuri.org/\"><uprn>' + uprn + '</uprn></GetCollections></soap:Body></soap:Envelope>'\n    \n        response = requests.post(\n            \"http://avdcbins.web-labs.co.uk/RefuseApi.asmx\",\n            data=post_data,\n            headers=headers\n        )\n    \n        if response.status_code != 200:\n>           raise ValueError(\"No collection data found for provided UPRN.\")\nE           ValueError: No collection data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/AylesburyValeCouncil.py:38: ValueError","steps":[{"name":"Given the council: AylesburyValeCouncil","time":{"start":1702948661971,"stop":1702948661972,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from AylesburyValeCouncil using None and the None is set","time":{"start":1702948661972,"stop":1702948664576,"duration":2604},"status":"failed","statusMessage":"No collection data found for provided UPRN.","statusTrace":"ValueError: No collection data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az975-303"},{"name":"thread","value":"2774-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"AylesburyValeCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":74,"unknown":0,"total":78},"items":[{"uid":"8d65fcf939314331","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1275//#testresult/8d65fcf939314331","status":"passed","time":{"start":1702862335390,"stop":1702862337306,"duration":1916}},{"uid":"1d8d742dbf088ecf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1274//#testresult/1d8d742dbf088ecf","status":"passed","time":{"start":1702859977753,"stop":1702859979063,"duration":1310}},{"uid":"a0558dfb2c4e871c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1272//#testresult/a0558dfb2c4e871c","status":"passed","time":{"start":1702843523748,"stop":1702843524727,"duration":979}},{"uid":"a5b5b5f8d43ddbed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/a5b5b5f8d43ddbed","status":"passed","time":{"start":1702809349822,"stop":1702809351101,"duration":1279}},{"uid":"8d21c475b8624ed3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/8d21c475b8624ed3","status":"passed","time":{"start":1702657108084,"stop":1702657109266,"duration":1182}},{"uid":"cd5d5760ce7b66b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/cd5d5760ce7b66b3","status":"passed","time":{"start":1702603149643,"stop":1702603151016,"duration":1373}},{"uid":"868ed4e6db6047b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/868ed4e6db6047b8","status":"passed","time":{"start":1702540020366,"stop":1702540021638,"duration":1272}},{"uid":"2eb765fc0b4a55b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1241//#testresult/2eb765fc0b4a55b5","status":"passed","time":{"start":1702516646794,"stop":1702516648333,"duration":1539}},{"uid":"16ee351df399b2e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1238//#testresult/16ee351df399b2e3","status":"passed","time":{"start":1702447448541,"stop":1702447450053,"duration":1512}},{"uid":"9f95f47e96095cde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1237//#testresult/9f95f47e96095cde","status":"passed","time":{"start":1702447412295,"stop":1702447413249,"duration":954}},{"uid":"381964a796101f98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1236//#testresult/381964a796101f98","status":"passed","time":{"start":1702430308071,"stop":1702430309574,"duration":1503}},{"uid":"675288133f2ce4e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1232//#testresult/675288133f2ce4e8","status":"passed","time":{"start":1702366474839,"stop":1702366476018,"duration":1179}},{"uid":"37934afa4cea1724","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1231//#testresult/37934afa4cea1724","status":"passed","time":{"start":1702343929401,"stop":1702343931123,"duration":1722}},{"uid":"4e82774fa06236d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1229//#testresult/4e82774fa06236d9","status":"passed","time":{"start":1702257527532,"stop":1702257528740,"duration":1208}},{"uid":"9ff4be5b2649067a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1228//#testresult/9ff4be5b2649067a","status":"passed","time":{"start":1702171372584,"stop":1702171374095,"duration":1511}},{"uid":"610c7ab82008b0dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/610c7ab82008b0dc","status":"passed","time":{"start":1702084612040,"stop":1702084613269,"duration":1229}},{"uid":"5d270f6d59d96f55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1225//#testresult/5d270f6d59d96f55","status":"passed","time":{"start":1702066698410,"stop":1702066699554,"duration":1144}},{"uid":"5977ecb95b1bd1db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1222//#testresult/5977ecb95b1bd1db","status":"passed","time":{"start":1702054338648,"stop":1702054339757,"duration":1109}},{"uid":"943a069e7da08ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1219//#testresult/943a069e7da08ba","status":"passed","time":{"start":1701998343325,"stop":1701998344725,"duration":1400}},{"uid":"516395ef508bb3c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1218//#testresult/516395ef508bb3c9","status":"passed","time":{"start":1701990350580,"stop":1701990351704,"duration":1124}}]},"tags":[]},"source":"c6f0ea290ad09ae1.json","parameterValues":["AylesburyValeCouncil","None","None"]}