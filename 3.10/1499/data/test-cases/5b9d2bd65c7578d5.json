{"uid":"5b9d2bd65c7578d5","name":"Validate Council Output [NorthWestLeicestershire-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"636da600d3c2f6211f4c406b74efac78","time":{"start":1705365003007,"stop":1705365007395,"duration":4388},"status":"failed","statusMessage":"ValueError: time data 'Today' does not match format '%a %d %b'","statusTrace":"fixturefunc = <function scrape_step at 0x7f58760aee60>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthWestLeicestershire-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f58753640d0>, 'council': 'NorthWestLeicestershire', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthWestLeicestershire.py:80: in parse_data\n    parsed_date = datetime.strptime(date, \"%a %d %b\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Today', format = '%a %d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Today' does not match format '%a %d %b'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Today' does not match format '%a %d %b'","statusTrace":"fixturefunc = <function scrape_step at 0x7f58760aee60>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthWestLeicestershire-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f58753640d0>, 'council': 'NorthWestLeicestershire', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthWestLeicestershire.py:80: in parse_data\n    parsed_date = datetime.strptime(date, \"%a %d %b\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Today', format = '%a %d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Today' does not match format '%a %d %b'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: NorthWestLeicestershire","time":{"start":1705365003007,"stop":1705365003008,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthWestLeicestershire using local and the http://selenium:4444 is set","time":{"start":1705365003008,"stop":1705365007395,"duration":4387},"status":"failed","statusMessage":"time data 'Today' does not match format '%a %d %b'","statusTrace":"ValueError: time data 'Today' does not match format '%a %d %b'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1016-333"},{"name":"thread","value":"2728-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthWestLeicestershire"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":108,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":111},"items":[{"uid":"40775aac566b5694","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1492//#testresult/40775aac566b5694","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1705295703421,"stop":1705295708577,"duration":5156}},{"uid":"5a844dd27b63c2f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1491//#testresult/5a844dd27b63c2f2","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705295163396,"stop":1705295163497,"duration":101}},{"uid":"d255dae655e26264","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1490//#testresult/d255dae655e26264","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705278573100,"stop":1705278573242,"duration":142}},{"uid":"bfc9d9debff96dd3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1485//#testresult/bfc9d9debff96dd3","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705192230672,"stop":1705192230840,"duration":168}},{"uid":"1f340ed491de4c78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1484//#testresult/1f340ed491de4c78","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705105688178,"stop":1705105688815,"duration":637}},{"uid":"8006b2cd171a3511","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1482//#testresult/8006b2cd171a3511","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705019285601,"stop":1705019285837,"duration":236}},{"uid":"a77a39906a13b74a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1478//#testresult/a77a39906a13b74a","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1704932856242,"stop":1704932856317,"duration":75}},{"uid":"b21ec959211e7b0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1472//#testresult/b21ec959211e7b0d","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1704846479287,"stop":1704846479527,"duration":240}},{"uid":"c80421049345fe8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1456//#testresult/c80421049345fe8","status":"failed","statusDetails":"ValueError: time data 'Today' does not match format '%a %d %b'","time":{"start":1704760215547,"stop":1704760219885,"duration":4338}},{"uid":"979db2979d803b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1452//#testresult/979db2979d803b6","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1704711579951,"stop":1704711583762,"duration":3811}},{"uid":"f84cc0316c5159e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1450//#testresult/f84cc0316c5159e5","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1704710799714,"stop":1704710803340,"duration":3626}},{"uid":"bd7ad5efb1e010ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1448//#testresult/bd7ad5efb1e010ff","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1704710209611,"stop":1704710213965,"duration":4354}},{"uid":"33a16478d0f7075d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1446//#testresult/33a16478d0f7075d","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1704709677545,"stop":1704709682056,"duration":4511}},{"uid":"66af161de024fee9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1443//#testresult/66af161de024fee9","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1704704199197,"stop":1704704203349,"duration":4152}},{"uid":"912a3de57c898770","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1441//#testresult/912a3de57c898770","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1704673829699,"stop":1704673833550,"duration":3851}},{"uid":"e0f5d13ba5fa5e68","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1429//#testresult/e0f5d13ba5fa5e68","status":"passed","time":{"start":1704626501509,"stop":1704626505950,"duration":4441}},{"uid":"8f5eb1653c9316de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1426//#testresult/8f5eb1653c9316de","status":"failed","statusDetails":"ValueError: time data 'Tue 23rd Jan' does not match format '%a %dth %b'","time":{"start":1704615509287,"stop":1704615514018,"duration":4731}},{"uid":"774e0b558e87bc4c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1423//#testresult/774e0b558e87bc4c","status":"failed","statusDetails":"ValueError: time data 'Tue 23rd Jan' does not match format '%a %dth %b'","time":{"start":1704614843724,"stop":1704614847692,"duration":3968}},{"uid":"c227eebe7e32a1ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1421//#testresult/c227eebe7e32a1ce","status":"failed","statusDetails":"ValueError: time data 'Tue 23rd Jan' does not match format '%a %dth %b'","time":{"start":1704614273653,"stop":1704614278642,"duration":4989}},{"uid":"3e0041113d340f8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1420//#testresult/3e0041113d340f8b","status":"failed","statusDetails":"ValueError: time data 'Tue 23rd Jan' does not match format '%a %dth %b'","time":{"start":1704587581387,"stop":1704587585584,"duration":4197}}]},"tags":[]},"source":"5b9d2bd65c7578d5.json","parameterValues":["NorthWestLeicestershire","local","http://selenium:4444"]}