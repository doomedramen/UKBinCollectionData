{"uid":"5f85c3a1c45262b9","name":"Validate Council Output [MaldonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d7ae259690887cdb3dd06225c666392f","time":{"start":1712017674628,"stop":1712017705519,"duration":30891},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7fde32c5b250>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fde31f59c60>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7fde31f72110>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7fde32c5b250>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fde31f59c60>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7fde31f72110>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council: MaldonDistrictCouncil","time":{"start":1712017674629,"stop":1712017674629,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MaldonDistrictCouncil using None and the None is set","time":{"start":1712017674629,"stop":1712017705519,"duration":30890},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az575-835"},{"name":"thread","value":"2922-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":219,"unknown":0,"total":230},"items":[{"uid":"e3ecfdde37b73fbd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1653//#testresult/e3ecfdde37b73fbd","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1711931513288,"stop":1711931545104,"duration":31816}},{"uid":"d8f49fe3a57dee77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1652//#testresult/d8f49fe3a57dee77","status":"passed","time":{"start":1711845076041,"stop":1711845086581,"duration":10540}},{"uid":"9e4222c5cb09bc65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1649//#testresult/9e4222c5cb09bc65","status":"passed","time":{"start":1711672051831,"stop":1711672060552,"duration":8721}},{"uid":"6424914a068d2eee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1648//#testresult/6424914a068d2eee","status":"passed","time":{"start":1711585662028,"stop":1711585671210,"duration":9182}},{"uid":"9a754225ab4234ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1646//#testresult/9a754225ab4234ef","status":"passed","time":{"start":1711499244358,"stop":1711499247142,"duration":2784}},{"uid":"416c4a17721b79c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1645//#testresult/416c4a17721b79c7","status":"passed","time":{"start":1711412820675,"stop":1711412822527,"duration":1852}},{"uid":"56d3e70cc612fc07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1641//#testresult/56d3e70cc612fc07","status":"passed","time":{"start":1711326522369,"stop":1711326531737,"duration":9368}},{"uid":"b8bb87ae9e200dca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1634//#testresult/b8bb87ae9e200dca","status":"passed","time":{"start":1711240226194,"stop":1711240234348,"duration":8154}},{"uid":"b55d81beae3c02d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1626//#testresult/b55d81beae3c02d7","status":"passed","time":{"start":1711153593894,"stop":1711153601723,"duration":7829}},{"uid":"add12d3f8f650865","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1625//#testresult/add12d3f8f650865","status":"passed","time":{"start":1711067224487,"stop":1711067227694,"duration":3207}},{"uid":"f2a8ace70b71de55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1624//#testresult/f2a8ace70b71de55","status":"passed","time":{"start":1710980898179,"stop":1710980901813,"duration":3634}},{"uid":"a2bb01c2b6329298","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1621//#testresult/a2bb01c2b6329298","status":"passed","time":{"start":1710970984032,"stop":1710970985152,"duration":1120}},{"uid":"c4b486b505f323d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1619//#testresult/c4b486b505f323d3","status":"passed","time":{"start":1710894401952,"stop":1710894402890,"duration":938}},{"uid":"7478f33fdf4798a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1615//#testresult/7478f33fdf4798a","status":"passed","time":{"start":1710808013282,"stop":1710808023242,"duration":9960}},{"uid":"5f75eb8309d95390","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1609//#testresult/5f75eb8309d95390","status":"passed","time":{"start":1710721745784,"stop":1710721757479,"duration":11695}},{"uid":"4e74615e89468055","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1608//#testresult/4e74615e89468055","status":"passed","time":{"start":1710635394171,"stop":1710635395184,"duration":1013}},{"uid":"f1ce6710db30ae15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1607//#testresult/f1ce6710db30ae15","status":"passed","time":{"start":1710548725911,"stop":1710548736143,"duration":10232}},{"uid":"8984e8144f72bf9a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1605//#testresult/8984e8144f72bf9a","status":"passed","time":{"start":1710462411888,"stop":1710462422494,"duration":10606}},{"uid":"cef18f2129552a8e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1604//#testresult/cef18f2129552a8e","status":"passed","time":{"start":1710452867925,"stop":1710452869056,"duration":1131}},{"uid":"79ff043380bb2e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1602//#testresult/79ff043380bb2e9","status":"passed","time":{"start":1710376090717,"stop":1710376092173,"duration":1456}}]},"tags":[]},"source":"5f85c3a1c45262b9.json","parameterValues":["MaldonDistrictCouncil","None","None"]}