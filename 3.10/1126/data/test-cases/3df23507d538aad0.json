{"uid":"3df23507d538aad0","name":"Validate Council Output [BexleyCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a7e8fc0ce0e2b68ca2e7ea4a7ab34ef8","time":{"start":1699752012621,"stop":1699752013059,"duration":438},"status":"failed","statusMessage":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"fixturefunc = <function scrape_step at 0x7f9a9613e5f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9a8388cfa0>, 'council': 'BexleyCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BexleyCouncil.CouncilClass object at 0x7f9a8356de70>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': 'spamstorage@live.co.uk', 'url': 'https://www.bexley.gov.uk/', ...}\nuser_email = 'spamstorage@live.co.uk'\nheaders = {'Connection': 'Keep-Alive', 'X-country': 'gb', 'X-email': 'spamstorage@live.co.uk'}\nresponse = <Response [400]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # User email from @Home app as UPRN\n        user_email = kwargs.get(\"uprn\")\n        headers = {\n            \"X-country\": \"gb\",\n            \"X-email\": user_email,\n            \"Connection\": \"Keep-Alive\",\n        }\n    \n        # Sniffed from the app\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://services.athomeapp.net/ServiceData/GetUserRoundJson\",\n            headers=headers,\n        )\n    \n        # 200 is OK. Sometimes it times out and gives this, but I'm not parsing HTTP codes\n        if response.status_code != 200:\n>           raise ValueError(\n                \"Error parsing API. Please check your email is correct and registered on the @Home app.\"\n            )\nE           ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:34: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"fixturefunc = <function scrape_step at 0x7f9a9613e5f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9a8388cfa0>, 'council': 'BexleyCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BexleyCouncil.CouncilClass object at 0x7f9a8356de70>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': 'spamstorage@live.co.uk', 'url': 'https://www.bexley.gov.uk/', ...}\nuser_email = 'spamstorage@live.co.uk'\nheaders = {'Connection': 'Keep-Alive', 'X-country': 'gb', 'X-email': 'spamstorage@live.co.uk'}\nresponse = <Response [400]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # User email from @Home app as UPRN\n        user_email = kwargs.get(\"uprn\")\n        headers = {\n            \"X-country\": \"gb\",\n            \"X-email\": user_email,\n            \"Connection\": \"Keep-Alive\",\n        }\n    \n        # Sniffed from the app\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://services.athomeapp.net/ServiceData/GetUserRoundJson\",\n            headers=headers,\n        )\n    \n        # 200 is OK. Sometimes it times out and gives this, but I'm not parsing HTTP codes\n        if response.status_code != 200:\n>           raise ValueError(\n                \"Error parsing API. Please check your email is correct and registered on the @Home app.\"\n            )\nE           ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:34: ValueError","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1699752012622,"stop":1699752012622,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BexleyCouncil using None and the None is set","time":{"start":1699752012622,"stop":1699752013059,"duration":437},"status":"failed","statusMessage":"Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az702-833"},{"name":"thread","value":"2827-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":10},"items":[{"uid":"c83e553e73c0a22c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1125//#testresult/c83e553e73c0a22c","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1699669470241,"stop":1699669474379,"duration":4138}},{"uid":"4d9ded33366c134c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1124//#testresult/4d9ded33366c134c","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1699578916554,"stop":1699578917191,"duration":637}},{"uid":"380705280b20c26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1123//#testresult/380705280b20c26","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1699492578640,"stop":1699492579213,"duration":573}},{"uid":"d7e6a6befbca7024","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1121//#testresult/d7e6a6befbca7024","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1699481233571,"stop":1699481233932,"duration":361}},{"uid":"78ee5db0e66d3867","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1117//#testresult/78ee5db0e66d3867","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1699445065890,"stop":1699445066284,"duration":394}},{"uid":"2cedf30b26ce5467","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1115//#testresult/2cedf30b26ce5467","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1699406153140,"stop":1699406153753,"duration":613}},{"uid":"5d40b8df4de9291f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1114//#testresult/5d40b8df4de9291f","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1699319777206,"stop":1699319777668,"duration":462}},{"uid":"1c0e0d4d38f14e7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1113//#testresult/1c0e0d4d38f14e7c","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1699233443641,"stop":1699233444025,"duration":384}},{"uid":"67c5aa6eba019053","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1111//#testresult/67c5aa6eba019053","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1699170636006,"stop":1699170636465,"duration":459}}]},"tags":[]},"source":"3df23507d538aad0.json","parameterValues":["BexleyCouncil","None","None"]}