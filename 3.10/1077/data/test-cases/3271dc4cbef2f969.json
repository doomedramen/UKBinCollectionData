{"uid":"3271dc4cbef2f969","name":"Validate Council Output [SalfordCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"46bdc81110002bd93542f111d9af2812","time":{"start":1698715180418,"stop":1698715182481,"duration":2063},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2456ccec20>\nrequest = <FixtureRequest for <Function test_scenario_outline[SalfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f244aa08220>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f244aa08220>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2456ccec20>\nrequest = <FixtureRequest for <Function test_scenario_outline[SalfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f244aa08220>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f244aa08220>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","steps":[{"name":"Given the council: SalfordCityCouncil","time":{"start":1698715180419,"stop":1698715180419,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from SalfordCityCouncil","time":{"start":1698715180420,"stop":1698715182475,"duration":2055},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698715182476,"stop":1698715182476,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698715182476,"stop":1698715182481,"duration":5},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az210-28"},{"name":"thread","value":"2244-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SalfordCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":26,"broken":0,"skipped":0,"passed":140,"unknown":0,"total":166},"items":[{"uid":"f1b44543890ca6aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/f1b44543890ca6aa","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698701571681,"stop":1698701574826,"duration":3145}},{"uid":"426b0e2b63521503","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/426b0e2b63521503","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698700355503,"stop":1698700357142,"duration":1639}},{"uid":"33163b26bcaa2bb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/33163b26bcaa2bb9","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698693054656,"stop":1698693056805,"duration":2149}},{"uid":"ea6380db9f8153a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/ea6380db9f8153a6","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698692864656,"stop":1698692866488,"duration":1832}},{"uid":"ae70dba187d91b0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/ae70dba187d91b0e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698646555242,"stop":1698646557074,"duration":1832}},{"uid":"3c4c89d3621a8d23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/3c4c89d3621a8d23","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698628903069,"stop":1698628904899,"duration":1830}},{"uid":"36054524b6a5b79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/36054524b6a5b79","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698615386998,"stop":1698615389221,"duration":2223}},{"uid":"d89e7b726e508660","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/d89e7b726e508660","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698615275639,"stop":1698615277483,"duration":1844}},{"uid":"36647b02891745f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/36647b02891745f7","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698542542130,"stop":1698542545176,"duration":3046}},{"uid":"2a469b407e77f316","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1053//#testresult/2a469b407e77f316","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698455876672,"stop":1698455878206,"duration":1534}},{"uid":"8f7376a82795d060","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1051//#testresult/8f7376a82795d060","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698369534373,"stop":1698369535841,"duration":1468}},{"uid":"e385d856194ecac3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1050//#testresult/e385d856194ecac3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1698283042186,"stop":1698283043665,"duration":1479}},{"uid":"7f9f340a8854b708","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1049//#testresult/7f9f340a8854b708","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698196694902,"stop":1698196697131,"duration":2229}},{"uid":"f530a7c655796e28","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1048//#testresult/f530a7c655796e28","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178414134,"stop":1698178417020,"duration":2886}},{"uid":"3eb0bca34815960e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1047//#testresult/3eb0bca34815960e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178353224,"stop":1698178356053,"duration":2829}},{"uid":"c0ca6c80f5897814","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1046//#testresult/c0ca6c80f5897814","status":"passed","time":{"start":1698110270708,"stop":1698110272682,"duration":1974}},{"uid":"c255926a9a174a1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1044//#testresult/c255926a9a174a1c","status":"passed","time":{"start":1698065038239,"stop":1698065041795,"duration":3556}},{"uid":"53c705f7e783190b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1045//#testresult/53c705f7e783190b","status":"passed","time":{"start":1698065247514,"stop":1698065251607,"duration":4093}},{"uid":"cbae7a99061fd8a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1042//#testresult/cbae7a99061fd8a9","status":"passed","time":{"start":1698023954998,"stop":1698023958016,"duration":3018}},{"uid":"1006d6c1c53500af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1040//#testresult/1006d6c1c53500af","status":"passed","time":{"start":1697937834696,"stop":1697937837499,"duration":2803}}]},"tags":[]},"source":"3271dc4cbef2f969.json","parameterValues":["SalfordCityCouncil"]}