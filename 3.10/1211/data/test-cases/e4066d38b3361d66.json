{"uid":"e4066d38b3361d66","name":"Validate Council Output [SouthOxfordshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7f57931d644fea4dd7a0419f9995c47e","time":{"start":1701912055131,"stop":1701912057207,"duration":2076},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f67d2dcb760>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f67c0982380>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f67c0982380>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f67d2dcb760>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f67c0982380>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f67c0982380>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: SouthOxfordshireCouncil","time":{"start":1701912055131,"stop":1701912055132,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SouthOxfordshireCouncil using None and the None is set","time":{"start":1701912055132,"stop":1701912057205,"duration":2073},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1701912057205,"stop":1701912057205,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1701912057205,"stop":1701912057207,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1426-718"},{"name":"thread","value":"2855-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthOxfordshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":52,"unknown":0,"total":53},"items":[{"uid":"5b848fac843d2f15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1209//#testresult/5b848fac843d2f15","status":"passed","time":{"start":1701904921110,"stop":1701904924577,"duration":3467}},{"uid":"2cca087fb7a8c226","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1201//#testresult/2cca087fb7a8c226","status":"passed","time":{"start":1701882576883,"stop":1701882579964,"duration":3081}},{"uid":"2781cb7d9bdda41c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1199//#testresult/2781cb7d9bdda41c","status":"passed","time":{"start":1701825612394,"stop":1701825615834,"duration":3440}},{"uid":"1468fc11a78f6867","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1198//#testresult/1468fc11a78f6867","status":"passed","time":{"start":1701795622403,"stop":1701795626436,"duration":4033}},{"uid":"b30f49e7e0b6e0ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1197//#testresult/b30f49e7e0b6e0ce","status":"passed","time":{"start":1701795543554,"stop":1701795546674,"duration":3120}},{"uid":"64e8510ff7d4bc1b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1193//#testresult/64e8510ff7d4bc1b","status":"passed","time":{"start":1701758557235,"stop":1701758560184,"duration":2949}},{"uid":"5583ed71633b3be6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1192//#testresult/5583ed71633b3be6","status":"passed","time":{"start":1701758713368,"stop":1701758717447,"duration":4079}},{"uid":"fe18d0b89e38390f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1191//#testresult/fe18d0b89e38390f","status":"passed","time":{"start":1701739229086,"stop":1701739233208,"duration":4122}},{"uid":"f90240393b6d396f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1187//#testresult/f90240393b6d396f","status":"passed","time":{"start":1701714385756,"stop":1701714389388,"duration":3632}},{"uid":"a52e393b245a46fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1186//#testresult/a52e393b245a46fa","status":"passed","time":{"start":1701714343098,"stop":1701714347642,"duration":4544}},{"uid":"aed45805182c03c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1184//#testresult/aed45805182c03c4","status":"passed","time":{"start":1701652808624,"stop":1701652813310,"duration":4686}},{"uid":"ef01e581b8326c10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1183//#testresult/ef01e581b8326c10","status":"passed","time":{"start":1701566637085,"stop":1701566641020,"duration":3935}},{"uid":"4724442dec94e667","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1182//#testresult/4724442dec94e667","status":"passed","time":{"start":1701479803875,"stop":1701479808419,"duration":4544}},{"uid":"62d1a45244b7f70c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1179//#testresult/62d1a45244b7f70c","status":"passed","time":{"start":1701419045681,"stop":1701419049544,"duration":3863}},{"uid":"455784f90486dfc7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1176//#testresult/455784f90486dfc7","status":"passed","time":{"start":1701418944519,"stop":1701418947707,"duration":3188}},{"uid":"daaeae542eb095fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1175//#testresult/daaeae542eb095fb","status":"passed","time":{"start":1701414419536,"stop":1701414423124,"duration":3588}},{"uid":"42e2b7702e26f3cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1174//#testresult/42e2b7702e26f3cf","status":"passed","time":{"start":1701414368432,"stop":1701414371481,"duration":3049}},{"uid":"e1e8dd7ff4750dff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1173//#testresult/e1e8dd7ff4750dff","status":"passed","time":{"start":1701394000566,"stop":1701394004255,"duration":3689}},{"uid":"319431c0c7e9c645","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1169//#testresult/319431c0c7e9c645","status":"passed","time":{"start":1701353415077,"stop":1701353418672,"duration":3595}},{"uid":"282dddc89dd6b746","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1163//#testresult/282dddc89dd6b746","status":"passed","time":{"start":1701307147595,"stop":1701307150584,"duration":2989}}]},"tags":[]},"source":"e4066d38b3361d66.json","parameterValues":["SouthOxfordshireCouncil","None","None"]}