{"uid":"72ea0f681143a6d5","name":"Validate Council Output [LondonBoroughHounslow]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e674cebf616dd1178743c85688db8654","time":{"start":1698988709822,"stop":1698988712586,"duration":2764},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f4e11c932e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4e10117610>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f4e10117610>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f4e11c932e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4e10117610>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f4e10117610>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1698988709823,"stop":1698988709823,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from LondonBoroughHounslow","time":{"start":1698988709823,"stop":1698988712583,"duration":2760},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698988712583,"stop":1698988712583,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698988712583,"stop":1698988712586,"duration":3},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az847-148"},{"name":"thread","value":"2225-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":162,"unknown":0,"total":174},"items":[{"uid":"843397257e0f9f97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1094//#testresult/843397257e0f9f97","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698974335840,"stop":1698974338575,"duration":2735}},{"uid":"df09ce389f590daf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1091//#testresult/df09ce389f590daf","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698887808133,"stop":1698887811101,"duration":2968}},{"uid":"3a645ad31f5f9975","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1090//#testresult/3a645ad31f5f9975","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878433229,"stop":1698878435878,"duration":2649}},{"uid":"1367e3908291916d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1086//#testresult/1367e3908291916d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867654910,"stop":1698867657921,"duration":3011}},{"uid":"49d61f752d26f20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1087//#testresult/49d61f752d26f20","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867570570,"stop":1698867573206,"duration":2636}},{"uid":"603f3e8b27c93548","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1081//#testresult/603f3e8b27c93548","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801674440,"stop":1698801681848,"duration":7408}},{"uid":"511d6f58c1d4cdbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/511d6f58c1d4cdbc","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788588699,"stop":1698788591178,"duration":2479}},{"uid":"f4d3e1f63a4d1e20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/f4d3e1f63a4d1e20","status":"passed","time":{"start":1698715130797,"stop":1698715134772,"duration":3975}},{"uid":"e2d9f03f4c8c616f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/e2d9f03f4c8c616f","status":"passed","time":{"start":1698701546434,"stop":1698701549394,"duration":2960}},{"uid":"bc090f6376249ed4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/bc090f6376249ed4","status":"passed","time":{"start":1698700320940,"stop":1698700323554,"duration":2614}},{"uid":"5ee0c1e6a58a0f3b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/5ee0c1e6a58a0f3b","status":"passed","time":{"start":1698692860055,"stop":1698692862451,"duration":2396}},{"uid":"9d8c6ada4ee5a743","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/9d8c6ada4ee5a743","status":"passed","time":{"start":1698692829900,"stop":1698692832430,"duration":2530}},{"uid":"551c66abe4b67fd0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/551c66abe4b67fd0","status":"passed","time":{"start":1698646540821,"stop":1698646543850,"duration":3029}},{"uid":"5e153b2a3640d298","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/5e153b2a3640d298","status":"passed","time":{"start":1698628520048,"stop":1698628527259,"duration":7211}},{"uid":"747a7d41ac7811a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/747a7d41ac7811a4","status":"passed","time":{"start":1698615163827,"stop":1698615166874,"duration":3047}},{"uid":"652bdbae09fe06e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/652bdbae09fe06e8","status":"passed","time":{"start":1698615071594,"stop":1698615074377,"duration":2783}},{"uid":"b9bb287f3958cb76","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/b9bb287f3958cb76","status":"passed","time":{"start":1698542324525,"stop":1698542327736,"duration":3211}},{"uid":"65f8ad27061028d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1053//#testresult/65f8ad27061028d9","status":"passed","time":{"start":1698455511557,"stop":1698455515562,"duration":4005}},{"uid":"4bb15e11440d995c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1051//#testresult/4bb15e11440d995c","status":"passed","time":{"start":1698369202356,"stop":1698369204854,"duration":2498}},{"uid":"69649c94ae9c890a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1050//#testresult/69649c94ae9c890a","status":"passed","time":{"start":1698282790223,"stop":1698282792982,"duration":2759}}]},"tags":[]},"source":"72ea0f681143a6d5.json","parameterValues":["LondonBoroughHounslow"]}