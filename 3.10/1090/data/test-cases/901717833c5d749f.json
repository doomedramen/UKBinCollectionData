{"uid":"901717833c5d749f","name":"Validate Council Output [GuildfordCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"316f6b3276320661fa68609de6296157","time":{"start":1698878342064,"stop":1698878344100,"duration":2036},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7faf273a2a70>\nrequest = <FixtureRequest for <Function test_scenario_outline[GuildfordCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faf1e0b25f0>, 'council': 'GuildfordCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:63: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:59: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GuildfordCouncil.py:45: in parse_data\n    results = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7faf27e2a7d0>\ns = '*/{\"event\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"eventDef\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"t\"...tual: MlRqRU5YT3pjWFRNenJranFOMWFjQXlMaWFpdmxPSTZWeEo0bWtiN0hsaXcyNDQuMjAuNC0yLjQxLjQ\",\"exceptionEvent\":true}/*ERROR*/'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7faf273a2a70>\nrequest = <FixtureRequest for <Function test_scenario_outline[GuildfordCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faf1e0b25f0>, 'council': 'GuildfordCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:63: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:59: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GuildfordCouncil.py:45: in parse_data\n    results = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7faf27e2a7d0>\ns = '*/{\"event\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"eventDef\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"t\"...tual: MlRqRU5YT3pjWFRNenJranFOMWFjQXlMaWFpdmxPSTZWeEo0bWtiN0hsaXcyNDQuMjAuNC0yLjQxLjQ\",\"exceptionEvent\":true}/*ERROR*/'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: GuildfordCouncil","time":{"start":1698878342064,"stop":1698878342065,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from GuildfordCouncil","time":{"start":1698878342065,"stop":1698878344100,"duration":2035},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az364-155"},{"name":"thread","value":"2269-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GuildfordCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":53,"broken":0,"skipped":0,"passed":85,"unknown":0,"total":138},"items":[{"uid":"36e632b3296f106c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1086//#testresult/36e632b3296f106c","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698867466512,"stop":1698867468440,"duration":1928}},{"uid":"a6733d3a773f5dee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1087//#testresult/a6733d3a773f5dee","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698867469789,"stop":1698867471119,"duration":1330}},{"uid":"c0663f33e4b559c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1081//#testresult/c0663f33e4b559c3","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698801593634,"stop":1698801602418,"duration":8784}},{"uid":"60452f50f026289f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/60452f50f026289f","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698788490955,"stop":1698788492356,"duration":1401}},{"uid":"36f052421dfdda56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/36f052421dfdda56","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698714987806,"stop":1698714989301,"duration":1495}},{"uid":"3fabcdfeb4264042","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/3fabcdfeb4264042","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698701363039,"stop":1698701364637,"duration":1598}},{"uid":"cc338da673cd71d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/cc338da673cd71d4","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698700225085,"stop":1698700226091,"duration":1006}},{"uid":"fbec0ac47303cdf8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/fbec0ac47303cdf8","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698693063271,"stop":1698693065455,"duration":2184}},{"uid":"1e2c808fa05c63b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/1e2c808fa05c63b2","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698692733065,"stop":1698692735246,"duration":2181}},{"uid":"ec06b2261b46c606","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/ec06b2261b46c606","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698646331628,"stop":1698646334421,"duration":2793}},{"uid":"c6a1dd11a788052b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/c6a1dd11a788052b","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698628549112,"stop":1698628550675,"duration":1563}},{"uid":"69c4e6a2231fec96","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/69c4e6a2231fec96","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698615208205,"stop":1698615211115,"duration":2910}},{"uid":"ce080f0847ac27ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/ce080f0847ac27ae","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698615100278,"stop":1698615101798,"duration":1520}},{"uid":"321d99f8ff676ca8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/321d99f8ff676ca8","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698542363509,"stop":1698542364948,"duration":1439}},{"uid":"ab0f8eae5d888223","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1053//#testresult/ab0f8eae5d888223","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698455552350,"stop":1698455553064,"duration":714}},{"uid":"d53356e9e57b5917","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1051//#testresult/d53356e9e57b5917","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698369226324,"stop":1698369228264,"duration":1940}},{"uid":"502ddfee35f89763","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1050//#testresult/502ddfee35f89763","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698282839925,"stop":1698282842700,"duration":2775}},{"uid":"ed2acb97abda56f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1049//#testresult/ed2acb97abda56f3","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698196498973,"stop":1698196501071,"duration":2098}},{"uid":"cc4c5a1cd68e203d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1048//#testresult/cc4c5a1cd68e203d","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698178223817,"stop":1698178225323,"duration":1506}},{"uid":"22aa264c91328a26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1047//#testresult/22aa264c91328a26","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698178204014,"stop":1698178205742,"duration":1728}}]},"tags":[]},"source":"901717833c5d749f.json","parameterValues":["GuildfordCouncil"]}