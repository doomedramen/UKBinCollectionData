{"uid":"216a81b21a470fda","name":"Validate Council Output [SouthNorfolkCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e5d83111f1a9552c04e48720eaedba42","time":{"start":1701990400164,"stop":1701990401721,"duration":1557},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc94ba7b910>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc93df3c790>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc93df3c790>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc94ba7b910>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc93df3c790>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc93df3c790>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: SouthNorfolkCouncil","time":{"start":1701990400164,"stop":1701990400165,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SouthNorfolkCouncil using None and the None is set","time":{"start":1701990400165,"stop":1701990401719,"duration":1554},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1701990401719,"stop":1701990401719,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1701990401720,"stop":1701990401721,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1432-321"},{"name":"thread","value":"2729-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthNorfolkCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":0,"skipped":0,"passed":35,"unknown":0,"total":57},"items":[{"uid":"fb1e7f64bc00002f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1215//#testresult/fb1e7f64bc00002f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701942864877,"stop":1701942868981,"duration":4104}},{"uid":"e8416f14e9d385b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1214//#testresult/e8416f14e9d385b8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701936602059,"stop":1701936606112,"duration":4053}},{"uid":"e5ab8ca5228eb233","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1213//#testresult/e5ab8ca5228eb233","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701936560049,"stop":1701936564924,"duration":4875}},{"uid":"99e30b24df973d49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1211//#testresult/99e30b24df973d49","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701912053381,"stop":1701912055104,"duration":1723}},{"uid":"e5679ccfe75ce365","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1209//#testresult/e5679ccfe75ce365","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701904918970,"stop":1701904921085,"duration":2115}},{"uid":"662437a507bb6ad3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1201//#testresult/662437a507bb6ad3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701882575324,"stop":1701882576857,"duration":1533}},{"uid":"38c701bf5dbdb260","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1199//#testresult/38c701bf5dbdb260","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701825607697,"stop":1701825612369,"duration":4672}},{"uid":"c541106eda470811","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1198//#testresult/c541106eda470811","status":"passed","time":{"start":1701795621075,"stop":1701795622400,"duration":1325}},{"uid":"9ba13f72ccc2969a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1197//#testresult/9ba13f72ccc2969a","status":"passed","time":{"start":1701795542211,"stop":1701795543551,"duration":1340}},{"uid":"31e191bbb3aa507a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1193//#testresult/31e191bbb3aa507a","status":"passed","time":{"start":1701758555389,"stop":1701758557909,"duration":2520}},{"uid":"8f6cf371c8750315","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1192//#testresult/8f6cf371c8750315","status":"passed","time":{"start":1701758711290,"stop":1701758713365,"duration":2075}},{"uid":"9d30486e171e61fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1191//#testresult/9d30486e171e61fe","status":"passed","time":{"start":1701739227614,"stop":1701739229084,"duration":1470}},{"uid":"e51eb10953d91649","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1187//#testresult/e51eb10953d91649","status":"passed","time":{"start":1701714384574,"stop":1701714385753,"duration":1179}},{"uid":"ae007c30f1e39683","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1186//#testresult/ae007c30f1e39683","status":"passed","time":{"start":1701714341813,"stop":1701714343096,"duration":1283}},{"uid":"d25c83a4fa085379","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1184//#testresult/d25c83a4fa085379","status":"passed","time":{"start":1701652806476,"stop":1701652808621,"duration":2145}},{"uid":"b4a109ddc3750e77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1183//#testresult/b4a109ddc3750e77","status":"passed","time":{"start":1701566634980,"stop":1701566637083,"duration":2103}},{"uid":"9b7150a16cc31467","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1182//#testresult/9b7150a16cc31467","status":"passed","time":{"start":1701479801611,"stop":1701479803872,"duration":2261}},{"uid":"6adbe6d20205205c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1179//#testresult/6adbe6d20205205c","status":"passed","time":{"start":1701419043955,"stop":1701419045678,"duration":1723}},{"uid":"376ae080fcce66b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1176//#testresult/376ae080fcce66b0","status":"passed","time":{"start":1701418942605,"stop":1701418944516,"duration":1911}},{"uid":"1851540c348883e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1175//#testresult/1851540c348883e4","status":"passed","time":{"start":1701414417918,"stop":1701414419533,"duration":1615}}]},"tags":[]},"source":"216a81b21a470fda.json","parameterValues":["SouthNorfolkCouncil","None","None"]}