{"uid":"5c5b5ce506c09e12","name":"Validate Council Output [CrawleyBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"05d23ab98d3e1d732a826a9f3e40b529","time":{"start":1705295123479,"stop":1705295154915,"duration":31436},"status":"failed","statusMessage":"ValueError: time data '' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f8cd825b2e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CrawleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8cd80745e0>, 'council': 'CrawleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CrawleyBoroughCouncil.py:49: in parse_data\n    collection_date = datetime.strptime(item.text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = '', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data '' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data '' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f8cd825b2e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CrawleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8cd80745e0>, 'council': 'CrawleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CrawleyBoroughCouncil.py:49: in parse_data\n    collection_date = datetime.strptime(item.text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = '', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data '' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: CrawleyBoroughCouncil","time":{"start":1705295123479,"stop":1705295123480,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from CrawleyBoroughCouncil using None and the None is set","time":{"start":1705295123480,"stop":1705295154915,"duration":31435},"status":"failed","statusMessage":"time data '' does not match format '%A %d %B'","statusTrace":"ValueError: time data '' does not match format '%A %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az564-252"},{"name":"thread","value":"2716-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CrawleyBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":156,"unknown":0,"total":157},"items":[{"uid":"29b6807f72205d05","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1490//#testresult/29b6807f72205d05","status":"passed","time":{"start":1705278528737,"stop":1705278530343,"duration":1606}},{"uid":"ffff84d04d6e4ef3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1485//#testresult/ffff84d04d6e4ef3","status":"passed","time":{"start":1705192185936,"stop":1705192188337,"duration":2401}},{"uid":"8d82d305bd8275ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1484//#testresult/8d82d305bd8275ea","status":"passed","time":{"start":1705105615953,"stop":1705105618366,"duration":2413}},{"uid":"3114f5fbcc6f2d6e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1482//#testresult/3114f5fbcc6f2d6e","status":"passed","time":{"start":1705019227333,"stop":1705019233681,"duration":6348}},{"uid":"34dfbffe928310a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1478//#testresult/34dfbffe928310a7","status":"passed","time":{"start":1704932819283,"stop":1704932823356,"duration":4073}},{"uid":"b0217a6b676c1579","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1472//#testresult/b0217a6b676c1579","status":"passed","time":{"start":1704846470505,"stop":1704846473445,"duration":2940}},{"uid":"af43de1189cd41b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1456//#testresult/af43de1189cd41b0","status":"passed","time":{"start":1704760140049,"stop":1704760141717,"duration":1668}},{"uid":"95d992e690ebbfba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1452//#testresult/95d992e690ebbfba","status":"passed","time":{"start":1704711470080,"stop":1704711472034,"duration":1954}},{"uid":"d7173159fc987cef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1450//#testresult/d7173159fc987cef","status":"passed","time":{"start":1704710679142,"stop":1704710681582,"duration":2440}},{"uid":"a604efee9be3fd89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1448//#testresult/a604efee9be3fd89","status":"passed","time":{"start":1704710064025,"stop":1704710065967,"duration":1942}},{"uid":"3234435d9f48f0db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1446//#testresult/3234435d9f48f0db","status":"passed","time":{"start":1704709530728,"stop":1704709537183,"duration":6455}},{"uid":"957d6a63d3463f4c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1443//#testresult/957d6a63d3463f4c","status":"passed","time":{"start":1704704050250,"stop":1704704052360,"duration":2110}},{"uid":"2ea7ba5cbe4d8427","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1441//#testresult/2ea7ba5cbe4d8427","status":"passed","time":{"start":1704673769872,"stop":1704673770986,"duration":1114}},{"uid":"a1395dfd836dc539","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1426//#testresult/a1395dfd836dc539","status":"passed","time":{"start":1704615422357,"stop":1704615424320,"duration":1963}},{"uid":"67fe36d958758f62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1423//#testresult/67fe36d958758f62","status":"passed","time":{"start":1704614749852,"stop":1704614751684,"duration":1832}},{"uid":"5056ce3bbe95d91f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1420//#testresult/5056ce3bbe95d91f","status":"passed","time":{"start":1704587515823,"stop":1704587517468,"duration":1645}},{"uid":"fd4adbd42ee6e816","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1413//#testresult/fd4adbd42ee6e816","status":"passed","time":{"start":1704542776892,"stop":1704542779018,"duration":2126}},{"uid":"816fd3efbe9d4d92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1408//#testresult/816fd3efbe9d4d92","status":"passed","time":{"start":1704496221667,"stop":1704496225431,"duration":3764}},{"uid":"98ddb134f0684bb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1406//#testresult/98ddb134f0684bb9","status":"passed","time":{"start":1704453389279,"stop":1704453392678,"duration":3399}},{"uid":"2c9e35a40f157aaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1407//#testresult/2c9e35a40f157aaf","status":"passed","time":{"start":1704453399488,"stop":1704453401089,"duration":1601}}]},"tags":[]},"source":"5c5b5ce506c09e12.json","parameterValues":["CrawleyBoroughCouncil","None","None"]}