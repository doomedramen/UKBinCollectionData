{"uid":"5f4126eff5757bd6","name":"Validate Council Output [CroydonCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"45037cd07f0522bb0563bf59883b0382","time":{"start":1705295155028,"stop":1705295156472,"duration":1444},"status":"failed","statusMessage":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","statusTrace":"fixturefunc = <function scrape_step at 0x7f8cd825b2e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8cd7cf0f10>, 'council': 'CroydonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:255: in parse_data\n    collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = <requests.sessions.Session object at 0x7f8cd7c19900>\nbase_url = 'https://service.croydon.gov.uk'\ncsrf_token = '93cb3449e4ad5030d490bf903b068fa1a77fa277', address_id = '96383'\n\n    def get_collection_data(\n        s: requests.session, base_url: str, csrf_token: str, address_id: str\n    ) -> str:\n        \"\"\"\n        Gets the collection data\n            :rtype: str\n            :param s: requests.session() to use\n            :param base_url: Base URL to use\n            :param csrf_token: CSRF token to use\n            :param address_id: Address id to use\n            :param retries: Retries count\n            :return: Collection data\n        \"\"\"\n        collection_data = \"\"\n        if address_id != \"0\":\n            form_data = {\n                \"form_check\": csrf_token,\n                \"submitted_page_id\": \"PAG0000898EECEC1\",\n                \"submitted_widget_group_id\": \"PWG0002644EECEC1\",\n                \"submitted_widget_group_type\": \"modify\",\n                \"submission_token\": \"63e9126bacd815.12997577\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020408EECEC1]\": address_id,\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0021449EECEC1]\": \"1\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020072EECEC1]\": \"Next\",\n                \"submit_fragment_id\": \"PCF0020072EECEC1\",\n                \"_session_storage\": json.dumps({\"_global\": get_session_storage_global()}),\n                \"_update_page_content_request\": 1,\n                \"form_check_ajax\": csrf_token,\n            }\n            response = s.post(\n                base_url\n                + \"/wasteservices/w/webpage/bin-day-enter-address?webpage_subpage_id=PAG0000898EECEC1\"\n                \"&webpage_token=faab02e1f62a58f7bad4c2ae5b8622e19846b97dde2a76f546c4bb1230cee044\",\n                headers=get_headers(base_url, \"POST\"),\n                data=form_data,\n            )\n            if response.status_code == 200 and len(response.text) > 0:\n                json_response = json.loads(response.text)\n                form_data = {\n                    \"_dummy\": 1,\n                    \"_session_storage\": json.dumps(\n                        {\"_global\": get_session_storage_global()}\n                    ),\n                    \"_update_page_content_request\": 1,\n                    \"form_check_ajax\": csrf_token,\n                }\n                response = s.post(\n                    base_url + json_response[\"redirect_url\"],\n                    headers=get_headers(base_url, \"POST\"),\n                    data=form_data,\n                )\n                if response.status_code == 200 and len(response.text) > 0:\n                    json_response = json.loads(response.text)\n                    collection_data = json_response[\"data\"]\n                else:\n                    raise ValueError(\"Code 4: Failed to get bin data.\")\n            else:\n>               raise ValueError(\n                    \"Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\"\n                )\nE               ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:228: ValueError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","statusTrace":"fixturefunc = <function scrape_step at 0x7f8cd825b2e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8cd7cf0f10>, 'council': 'CroydonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:255: in parse_data\n    collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = <requests.sessions.Session object at 0x7f8cd7c19900>\nbase_url = 'https://service.croydon.gov.uk'\ncsrf_token = '93cb3449e4ad5030d490bf903b068fa1a77fa277', address_id = '96383'\n\n    def get_collection_data(\n        s: requests.session, base_url: str, csrf_token: str, address_id: str\n    ) -> str:\n        \"\"\"\n        Gets the collection data\n            :rtype: str\n            :param s: requests.session() to use\n            :param base_url: Base URL to use\n            :param csrf_token: CSRF token to use\n            :param address_id: Address id to use\n            :param retries: Retries count\n            :return: Collection data\n        \"\"\"\n        collection_data = \"\"\n        if address_id != \"0\":\n            form_data = {\n                \"form_check\": csrf_token,\n                \"submitted_page_id\": \"PAG0000898EECEC1\",\n                \"submitted_widget_group_id\": \"PWG0002644EECEC1\",\n                \"submitted_widget_group_type\": \"modify\",\n                \"submission_token\": \"63e9126bacd815.12997577\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020408EECEC1]\": address_id,\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0021449EECEC1]\": \"1\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020072EECEC1]\": \"Next\",\n                \"submit_fragment_id\": \"PCF0020072EECEC1\",\n                \"_session_storage\": json.dumps({\"_global\": get_session_storage_global()}),\n                \"_update_page_content_request\": 1,\n                \"form_check_ajax\": csrf_token,\n            }\n            response = s.post(\n                base_url\n                + \"/wasteservices/w/webpage/bin-day-enter-address?webpage_subpage_id=PAG0000898EECEC1\"\n                \"&webpage_token=faab02e1f62a58f7bad4c2ae5b8622e19846b97dde2a76f546c4bb1230cee044\",\n                headers=get_headers(base_url, \"POST\"),\n                data=form_data,\n            )\n            if response.status_code == 200 and len(response.text) > 0:\n                json_response = json.loads(response.text)\n                form_data = {\n                    \"_dummy\": 1,\n                    \"_session_storage\": json.dumps(\n                        {\"_global\": get_session_storage_global()}\n                    ),\n                    \"_update_page_content_request\": 1,\n                    \"form_check_ajax\": csrf_token,\n                }\n                response = s.post(\n                    base_url + json_response[\"redirect_url\"],\n                    headers=get_headers(base_url, \"POST\"),\n                    data=form_data,\n                )\n                if response.status_code == 200 and len(response.text) > 0:\n                    json_response = json.loads(response.text)\n                    collection_data = json_response[\"data\"]\n                else:\n                    raise ValueError(\"Code 4: Failed to get bin data.\")\n            else:\n>               raise ValueError(\n                    \"Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\"\n                )\nE               ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:228: ValueError","steps":[{"name":"Given the council: CroydonCouncil","time":{"start":1705295155028,"stop":1705295155029,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from CroydonCouncil using None and the None is set","time":{"start":1705295155029,"stop":1705295156472,"duration":1443},"status":"failed","statusMessage":"Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","statusTrace":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az564-252"},{"name":"thread","value":"2716-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":99,"broken":0,"skipped":0,"passed":58,"unknown":0,"total":157},"items":[{"uid":"8c23decc2472c5b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1490//#testresult/8c23decc2472c5b4","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1705278530345,"stop":1705278531711,"duration":1366}},{"uid":"db989fb595d27719","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1485//#testresult/db989fb595d27719","status":"passed","time":{"start":1705192188340,"stop":1705192192917,"duration":4577}},{"uid":"f3d451e4a3503169","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1484//#testresult/f3d451e4a3503169","status":"passed","time":{"start":1705105618368,"stop":1705105624467,"duration":6099}},{"uid":"b0c4127741ce8bc5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1482//#testresult/b0c4127741ce8bc5","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1705019233684,"stop":1705019235141,"duration":1457}},{"uid":"ecdaae1e4d0cdd73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1478//#testresult/ecdaae1e4d0cdd73","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704932823359,"stop":1704932824618,"duration":1259}},{"uid":"b128fc794dbe712b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1472//#testresult/b128fc794dbe712b","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704846473447,"stop":1704846475131,"duration":1684}},{"uid":"651b14791aa414ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1456//#testresult/651b14791aa414ee","status":"passed","time":{"start":1704760141720,"stop":1704760154344,"duration":12624}},{"uid":"f670012751ab48d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1452//#testresult/f670012751ab48d5","status":"passed","time":{"start":1704711472037,"stop":1704711477521,"duration":5484}},{"uid":"5f96ec84230dab3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1450//#testresult/5f96ec84230dab3f","status":"passed","time":{"start":1704710681584,"stop":1704710686452,"duration":4868}},{"uid":"865d201e9ba4183a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1448//#testresult/865d201e9ba4183a","status":"passed","time":{"start":1704710065971,"stop":1704710072464,"duration":6493}},{"uid":"1f4557fcb8566204","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1446//#testresult/1f4557fcb8566204","status":"passed","time":{"start":1704709537185,"stop":1704709542265,"duration":5080}},{"uid":"726226fa9d0c350c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1443//#testresult/726226fa9d0c350c","status":"passed","time":{"start":1704704052364,"stop":1704704057496,"duration":5132}},{"uid":"168d212a367e7914","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1441//#testresult/168d212a367e7914","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704673770989,"stop":1704673772288,"duration":1299}},{"uid":"5bffe6a43ede2ea1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1426//#testresult/5bffe6a43ede2ea1","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704615424322,"stop":1704615426152,"duration":1830}},{"uid":"e27aef6246dfd2c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1423//#testresult/e27aef6246dfd2c0","status":"passed","time":{"start":1704614751687,"stop":1704614757164,"duration":5477}},{"uid":"a9386dcd4b7072fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1420//#testresult/a9386dcd4b7072fa","status":"passed","time":{"start":1704587517471,"stop":1704587522508,"duration":5037}},{"uid":"28b086bc55967a2e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1413//#testresult/28b086bc55967a2e","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704542779021,"stop":1704542780703,"duration":1682}},{"uid":"78b8ed89c9ae2e07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1408//#testresult/78b8ed89c9ae2e07","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704496225434,"stop":1704496227310,"duration":1876}},{"uid":"6aa0bd7606faf785","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1406//#testresult/6aa0bd7606faf785","status":"passed","time":{"start":1704453392682,"stop":1704453398936,"duration":6254}},{"uid":"225cec561ee91b06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1407//#testresult/225cec561ee91b06","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704453401091,"stop":1704453403096,"duration":2005}}]},"tags":[]},"source":"5f4126eff5757bd6.json","parameterValues":["CroydonCouncil","None","None"]}