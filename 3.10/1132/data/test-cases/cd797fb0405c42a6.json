{"uid":"cd797fb0405c42a6","name":"Validate Council Output [NewcastleCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a63cb1391c4aa4a9ce00ac5e7dcb85fb","time":{"start":1700183930103,"stop":1700183978184,"duration":48081},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa88fb8edd0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa88041ed70>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa88041ed70>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa88fb8edd0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa88041ed70>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa88041ed70>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1700183930103,"stop":1700183930103,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from NewcastleCityCouncil using None and the None is set","time":{"start":1700183930103,"stop":1700183978182,"duration":48079},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1700183978182,"stop":1700183978182,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1700183978182,"stop":1700183978184,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1144-726"},{"name":"thread","value":"2699-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":15},"items":[{"uid":"b23f1938979caca2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1131//#testresult/b23f1938979caca2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097556768,"stop":1700097588350,"duration":31582}},{"uid":"5c5e1d00ec170ef5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1129//#testresult/5c5e1d00ec170ef5","status":"passed","time":{"start":1700011296857,"stop":1700011323865,"duration":27008}},{"uid":"e1017e4629c18502","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1128//#testresult/e1017e4629c18502","status":"passed","time":{"start":1699924701716,"stop":1699924737010,"duration":35294}},{"uid":"f944a4f2e618668b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1127//#testresult/f944a4f2e618668b","status":"passed","time":{"start":1699838405745,"stop":1699838423496,"duration":17751}},{"uid":"17d0702cbf01b42b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1126//#testresult/17d0702cbf01b42b","status":"passed","time":{"start":1699752304023,"stop":1699752314842,"duration":10819}},{"uid":"35c8b30c8ff030b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1125//#testresult/35c8b30c8ff030b8","status":"passed","time":{"start":1699669571262,"stop":1699669622936,"duration":51674}},{"uid":"74c852ae72d06ca2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1124//#testresult/74c852ae72d06ca2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699578965850,"stop":1699579000835,"duration":34985}},{"uid":"b519e0cb8e4ebfd0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1123//#testresult/b519e0cb8e4ebfd0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699492671388,"stop":1699492702025,"duration":30637}},{"uid":"aec7e2c86221bfff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1121//#testresult/aec7e2c86221bfff","status":"passed","time":{"start":1699481288871,"stop":1699481299281,"duration":10410}},{"uid":"c964e94f33db5e52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1117//#testresult/c964e94f33db5e52","status":"passed","time":{"start":1699445256689,"stop":1699445302656,"duration":45967}},{"uid":"6d1b050f90568ffb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1115//#testresult/6d1b050f90568ffb","status":"passed","time":{"start":1699406471006,"stop":1699406502091,"duration":31085}},{"uid":"9cdf18e3ad33429b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1114//#testresult/9cdf18e3ad33429b","status":"passed","time":{"start":1699319836420,"stop":1699319869940,"duration":33520}},{"uid":"928deccd3ba51c33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1113//#testresult/928deccd3ba51c33","status":"passed","time":{"start":1699233498844,"stop":1699233525233,"duration":26389}},{"uid":"f49939ea10e41e80","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1111//#testresult/f49939ea10e41e80","status":"passed","time":{"start":1699170700373,"stop":1699170731641,"duration":31268}}]},"tags":[]},"source":"cd797fb0405c42a6.json","parameterValues":["NewcastleCityCouncil","None","None"]}