{"uid":"a4425015fa9b88d2","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1712708803582,"stop":1712708812500,"duration":8918},"status":"failed","statusMessage":"ValueError: time data 'Wednesday, 10 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6499b1fac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6498eab490>, 'council': 'KingstonUponThamesCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/KingstonUponThamesCouncil.py:57: in parse_data\n    datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Wednesday, 10 April\\n              \\n              \\n              (In progress) 2024'\nformat = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Wednesday, 10 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Wednesday, 10 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6499b1fac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6498eab490>, 'council': 'KingstonUponThamesCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/KingstonUponThamesCouncil.py:57: in parse_data\n    datetime.strptime(\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Wednesday, 10 April\\n              \\n              \\n              (In progress) 2024'\nformat = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Wednesday, 10 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1712708803583,"stop":1712708803583,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1712708803583,"stop":1712708812500,"duration":8917},"status":"failed","statusMessage":"time data 'Wednesday, 10 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"ValueError: time data 'Wednesday, 10 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az840-145"},{"name":"thread","value":"2730-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":153,"broken":0,"skipped":0,"passed":90,"unknown":0,"total":243},"items":[{"uid":"26952fa3da0f126a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1671//#testresult/26952fa3da0f126a","status":"passed","time":{"start":1712700361193,"stop":1712700374050,"duration":12857}},{"uid":"a1e4f0764b6010ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1668//#testresult/a1e4f0764b6010ca","status":"passed","time":{"start":1712622443577,"stop":1712622453926,"duration":10349}},{"uid":"99ea25a9058b7fdb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1667//#testresult/99ea25a9058b7fdb","status":"passed","time":{"start":1712536088003,"stop":1712536097031,"duration":9028}},{"uid":"8831b6220c9b74a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1666//#testresult/8831b6220c9b74a5","status":"passed","time":{"start":1712449826136,"stop":1712449835757,"duration":9621}},{"uid":"a6e094a3617c4bfe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1665//#testresult/a6e094a3617c4bfe","status":"passed","time":{"start":1712363246707,"stop":1712363254214,"duration":7507}},{"uid":"bf4cc29f2da3cb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1664//#testresult/bf4cc29f2da3cb9","status":"passed","time":{"start":1712276819750,"stop":1712276830695,"duration":10945}},{"uid":"e629588f02f602dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1660//#testresult/e629588f02f602dd","status":"passed","time":{"start":1712190523895,"stop":1712190533585,"duration":9690}},{"uid":"a68c4b04ef5298aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1657//#testresult/a68c4b04ef5298aa","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 3 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1712136961160,"stop":1712136971954,"duration":10794}},{"uid":"d23f688ea18924f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1655//#testresult/d23f688ea18924f4","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 3 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1712103990424,"stop":1712103997638,"duration":7214}},{"uid":"2fad6f278c313f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1654//#testresult/2fad6f278c313f0","status":"passed","time":{"start":1712017631875,"stop":1712017638605,"duration":6730}},{"uid":"d6e734c57166ca54","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1653//#testresult/d6e734c57166ca54","status":"passed","time":{"start":1711931466651,"stop":1711931478602,"duration":11951}},{"uid":"879b47170b148e05","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1652//#testresult/879b47170b148e05","status":"passed","time":{"start":1711845025454,"stop":1711845036362,"duration":10908}},{"uid":"5d51305b4f248ca8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1649//#testresult/5d51305b4f248ca8","status":"passed","time":{"start":1711672003338,"stop":1711672018031,"duration":14693}},{"uid":"36af822a2576e0f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1648//#testresult/36af822a2576e0f5","status":"passed","time":{"start":1711585620356,"stop":1711585629399,"duration":9043}},{"uid":"df589b3d459da61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1646//#testresult/df589b3d459da61","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 27 March\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1711499189078,"stop":1711499198763,"duration":9685}},{"uid":"500984cef5979984","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1645//#testresult/500984cef5979984","status":"passed","time":{"start":1711412765693,"stop":1711412771144,"duration":5451}},{"uid":"2cde5c4c53392054","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1641//#testresult/2cde5c4c53392054","status":"passed","time":{"start":1711326477800,"stop":1711326490687,"duration":12887}},{"uid":"7c56f86c70172eaa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1634//#testresult/7c56f86c70172eaa","status":"passed","time":{"start":1711240183143,"stop":1711240191843,"duration":8700}},{"uid":"5ac88072f99e315e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1626//#testresult/5ac88072f99e315e","status":"passed","time":{"start":1711153592547,"stop":1711153599555,"duration":7008}},{"uid":"d92f51d467baf097","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1625//#testresult/d92f51d467baf097","status":"passed","time":{"start":1711067248282,"stop":1711067257353,"duration":9071}}]},"tags":[]},"source":"a4425015fa9b88d2.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}