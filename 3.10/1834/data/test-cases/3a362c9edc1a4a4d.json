{"uid":"3a362c9edc1a4a4d","name":"Validate Council Output [ValeofGlamorganCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1e5a723ab9bb5ec179bcd63e0a46576d","time":{"start":1715974137936,"stop":1715974139169,"duration":1233},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f51f6594700>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f51f6608370>, 'council': 'ValeofGlamorganCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f5209b6cc10>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f51f6594700>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f51f6608370>, 'council': 'ValeofGlamorganCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f5209b6cc10>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: ValeofGlamorganCouncil","time":{"start":1715974137936,"stop":1715974137936,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from ValeofGlamorganCouncil","time":{"start":1715974137937,"stop":1715974139169,"duration":1232},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1538-295"},{"name":"thread","value":"2715-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ValeofGlamorganCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":24,"broken":0,"skipped":0,"passed":155,"unknown":0,"total":179},"items":[{"uid":"3367dc29f79cad88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1110//#testresult/3367dc29f79cad88","status":"passed","time":{"start":1699147451931,"stop":1699147454099,"duration":2168}},{"uid":"b396e427636f3b29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1107//#testresult/b396e427636f3b29","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fca1c11fee0>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1699101664078,"stop":1699101794931,"duration":130853}},{"uid":"fa699b718f2a0205","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1106//#testresult/fa699b718f2a0205","status":"passed","time":{"start":1699060689755,"stop":1699060691873,"duration":2118}},{"uid":"ac0f2d36be71c78b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1100//#testresult/ac0f2d36be71c78b","status":"passed","time":{"start":1699007857887,"stop":1699007860329,"duration":2442}},{"uid":"580a9d2e29000403","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1095//#testresult/580a9d2e29000403","status":"passed","time":{"start":1698988662501,"stop":1698988664357,"duration":1856}},{"uid":"659ceb69aa63addf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1094//#testresult/659ceb69aa63addf","status":"passed","time":{"start":1698974420533,"stop":1698974422808,"duration":2275}},{"uid":"3b58487854dbb8b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1091//#testresult/3b58487854dbb8b2","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f5e4789fac0>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1698887733505,"stop":1698887862981,"duration":129476}},{"uid":"3e46c6834db695dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1090//#testresult/3e46c6834db695dc","status":"passed","time":{"start":1698878537754,"stop":1698878539320,"duration":1566}},{"uid":"4e0e972c85a97299","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1086//#testresult/4e0e972c85a97299","status":"passed","time":{"start":1698867796425,"stop":1698867798939,"duration":2514}},{"uid":"ef3f52ba1236b608","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1087//#testresult/ef3f52ba1236b608","status":"passed","time":{"start":1698867792679,"stop":1698867795878,"duration":3199}},{"uid":"2a0d131507b2933e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1081//#testresult/2a0d131507b2933e","status":"passed","time":{"start":1698801794532,"stop":1698801796742,"duration":2210}},{"uid":"91bcdc3ee8e1f5b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/91bcdc3ee8e1f5b1","status":"passed","time":{"start":1698788671801,"stop":1698788674108,"duration":2307}},{"uid":"7b522557d11ae781","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/7b522557d11ae781","status":"passed","time":{"start":1698715212096,"stop":1698715214814,"duration":2718}},{"uid":"ec82debd7ac2dd33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/ec82debd7ac2dd33","status":"passed","time":{"start":1698701616567,"stop":1698701619198,"duration":2631}},{"uid":"7ea359c9bb13928e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/7ea359c9bb13928e","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fd3fea1f6a0>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1698700409063,"stop":1698700539665,"duration":130602}},{"uid":"1019073225add97b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/1019073225add97b","status":"passed","time":{"start":1698693097965,"stop":1698693099774,"duration":1809}},{"uid":"ac4482f4ae1647f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/ac4482f4ae1647f6","status":"passed","time":{"start":1698692925713,"stop":1698692927448,"duration":1735}},{"uid":"76ebcce1ec014f76","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/76ebcce1ec014f76","status":"passed","time":{"start":1698646590825,"stop":1698646593309,"duration":2484}},{"uid":"c43ba67b0a20006d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/c43ba67b0a20006d","status":"passed","time":{"start":1698628811063,"stop":1698628813290,"duration":2227}},{"uid":"1fbfa26b6dae2b04","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/1fbfa26b6dae2b04","status":"passed","time":{"start":1698615474061,"stop":1698615476258,"duration":2197}}]},"tags":[]},"source":"3a362c9edc1a4a4d.json","parameterValues":["ValeofGlamorganCouncil"]}