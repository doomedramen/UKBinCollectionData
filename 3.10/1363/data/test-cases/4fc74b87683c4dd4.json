{"uid":"4fc74b87683c4dd4","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1704356756727,"stop":1704356777679,"duration":20952},"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55ac5ad84f83 <unknown>\n#1 0x55ac5aa3dcf7 <unknown>\n#2 0x55ac5aa356ea <unknown>\n#3 0x55ac5aa245a1 <unknown>\n#4 0x55ac5aa25d40 <unknown>\n#5 0x55ac5aa24854 <unknown>\n#6 0x55ac5aa23586 <unknown>\n#7 0x55ac5aa2344a <unknown>\n#8 0x55ac5aa217e1 <unknown>\n#9 0x55ac5aa2201a <unknown>\n#10 0x55ac5aa40bbe <unknown>\n#11 0x55ac5aad67a5 <unknown>\n#12 0x55ac5aab70b2 <unknown>\n#13 0x55ac5aad6006 <unknown>\n#14 0x55ac5aab6e53 <unknown>\n#15 0x55ac5aa7edd4 <unknown>\n#16 0x55ac5aa801de <unknown>\n#17 0x55ac5ad49531 <unknown>\n#18 0x55ac5ad4d455 <unknown>\n#19 0x55ac5ad35f55 <unknown>\n#20 0x55ac5ad4e0ef <unknown>\n#21 0x55ac5ad1999f <unknown>\n#22 0x55ac5ad72008 <unknown>\n#23 0x55ac5ad721d7 <unknown>\n#24 0x55ac5ad84124 <unknown>\n#25 0x7fe4e5c94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f8269a5c0d0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8257dc6e60>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:28: in parse_data\n    driver.get(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f82574dfac0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_NAME_NOT_RESOLVED\\\\n  (...\\\\n#23 0x55ac5ad721d7 \\\\u003Cunknown>\\\\n#24 0x55ac5ad84124 \\\\u003Cunknown>\\\\n#25 0x7fe4e5c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55ac5ad84f83 <unknown>\nE       #1 0x55ac5aa3dcf7 <unknown>\nE       #2 0x55ac5aa356ea <unknown>\nE       #3 0x55ac5aa245a1 <unknown>\nE       #4 0x55ac5aa25d40 <unknown>\nE       #5 0x55ac5aa24854 <unknown>\nE       #6 0x55ac5aa23586 <unknown>\nE       #7 0x55ac5aa2344a <unknown>\nE       #8 0x55ac5aa217e1 <unknown>\nE       #9 0x55ac5aa2201a <unknown>\nE       #10 0x55ac5aa40bbe <unknown>\nE       #11 0x55ac5aad67a5 <unknown>\nE       #12 0x55ac5aab70b2 <unknown>\nE       #13 0x55ac5aad6006 <unknown>\nE       #14 0x55ac5aab6e53 <unknown>\nE       #15 0x55ac5aa7edd4 <unknown>\nE       #16 0x55ac5aa801de <unknown>\nE       #17 0x55ac5ad49531 <unknown>\nE       #18 0x55ac5ad4d455 <unknown>\nE       #19 0x55ac5ad35f55 <unknown>\nE       #20 0x55ac5ad4e0ef <unknown>\nE       #21 0x55ac5ad1999f <unknown>\nE       #22 0x55ac5ad72008 <unknown>\nE       #23 0x55ac5ad721d7 <unknown>\nE       #24 0x55ac5ad84124 <unknown>\nE       #25 0x7fe4e5c94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55ac5ad84f83 <unknown>\n#1 0x55ac5aa3dcf7 <unknown>\n#2 0x55ac5aa356ea <unknown>\n#3 0x55ac5aa245a1 <unknown>\n#4 0x55ac5aa25d40 <unknown>\n#5 0x55ac5aa24854 <unknown>\n#6 0x55ac5aa23586 <unknown>\n#7 0x55ac5aa2344a <unknown>\n#8 0x55ac5aa217e1 <unknown>\n#9 0x55ac5aa2201a <unknown>\n#10 0x55ac5aa40bbe <unknown>\n#11 0x55ac5aad67a5 <unknown>\n#12 0x55ac5aab70b2 <unknown>\n#13 0x55ac5aad6006 <unknown>\n#14 0x55ac5aab6e53 <unknown>\n#15 0x55ac5aa7edd4 <unknown>\n#16 0x55ac5aa801de <unknown>\n#17 0x55ac5ad49531 <unknown>\n#18 0x55ac5ad4d455 <unknown>\n#19 0x55ac5ad35f55 <unknown>\n#20 0x55ac5ad4e0ef <unknown>\n#21 0x55ac5ad1999f <unknown>\n#22 0x55ac5ad72008 <unknown>\n#23 0x55ac5ad721d7 <unknown>\n#24 0x55ac5ad84124 <unknown>\n#25 0x7fe4e5c94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f8269a5c0d0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8257dc6e60>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:28: in parse_data\n    driver.get(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f82574dfac0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_NAME_NOT_RESOLVED\\\\n  (...\\\\n#23 0x55ac5ad721d7 \\\\u003Cunknown>\\\\n#24 0x55ac5ad84124 \\\\u003Cunknown>\\\\n#25 0x7fe4e5c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55ac5ad84f83 <unknown>\nE       #1 0x55ac5aa3dcf7 <unknown>\nE       #2 0x55ac5aa356ea <unknown>\nE       #3 0x55ac5aa245a1 <unknown>\nE       #4 0x55ac5aa25d40 <unknown>\nE       #5 0x55ac5aa24854 <unknown>\nE       #6 0x55ac5aa23586 <unknown>\nE       #7 0x55ac5aa2344a <unknown>\nE       #8 0x55ac5aa217e1 <unknown>\nE       #9 0x55ac5aa2201a <unknown>\nE       #10 0x55ac5aa40bbe <unknown>\nE       #11 0x55ac5aad67a5 <unknown>\nE       #12 0x55ac5aab70b2 <unknown>\nE       #13 0x55ac5aad6006 <unknown>\nE       #14 0x55ac5aab6e53 <unknown>\nE       #15 0x55ac5aa7edd4 <unknown>\nE       #16 0x55ac5aa801de <unknown>\nE       #17 0x55ac5ad49531 <unknown>\nE       #18 0x55ac5ad4d455 <unknown>\nE       #19 0x55ac5ad35f55 <unknown>\nE       #20 0x55ac5ad4e0ef <unknown>\nE       #21 0x55ac5ad1999f <unknown>\nE       #22 0x55ac5ad72008 <unknown>\nE       #23 0x55ac5ad721d7 <unknown>\nE       #24 0x55ac5ad84124 <unknown>\nE       #25 0x7fe4e5c94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1704356756727,"stop":1704356756727,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1704356756727,"stop":1704356777679,"duration":20952},"status":"failed","statusMessage":"Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55ac5ad84f83 <unknown>\n#1 0x55ac5aa3dcf7 <unknown>\n#2 0x55ac5aa356ea <unknown>\n#3 0x55ac5aa245a1 <unknown>\n#4 0x55ac5aa25d40 <unknown>\n#5 0x55ac5aa24854 <unknown>\n#6 0x55ac5aa23586 <unknown>\n#7 0x55ac5aa2344a <unknown>\n#8 0x55ac5aa217e1 <unknown>\n#9 0x55ac5aa2201a <unknown>\n#10 0x55ac5aa40bbe <unknown>\n#11 0x55ac5aad67a5 <unknown>\n#12 0x55ac5aab70b2 <unknown>\n#13 0x55ac5aad6006 <unknown>\n#14 0x55ac5aab6e53 <unknown>\n#15 0x55ac5aa7edd4 <unknown>\n#16 0x55ac5aa801de <unknown>\n#17 0x55ac5ad49531 <unknown>\n#18 0x55ac5ad4d455 <unknown>\n#19 0x55ac5ad35f55 <unknown>\n#20 0x55ac5ad4e0ef <unknown>\n#21 0x55ac5ad1999f <unknown>\n#22 0x55ac5ad72008 <unknown>\n#23 0x55ac5ad721d7 <unknown>\n#24 0x55ac5ad84124 <unknown>\n#25 0x7fe4e5c94ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55ac5ad84f83 <unknown>\n#1 0x55ac5aa3dcf7 <unknown>\n#2 0x55ac5aa356ea <unknown>\n#3 0x55ac5aa245a1 <unknown>\n#4 0x55ac5aa25d40 <unknown>\n#5 0x55ac5aa24854 <unknown>\n#6 0x55ac5aa23586 <unknown>\n#7 0x55ac5aa2344a <unknown>\n#8 0x55ac5aa217e1 <unknown>\n#9 0x55ac5aa2201a <unknown>\n#10 0x55ac5aa40bbe <unknown>\n#11 0x55ac5aad67a5 <unknown>\n#12 0x55ac5aab70b2 <unknown>\n#13 0x55ac5aad6006 <unknown>\n#14 0x55ac5aab6e53 <unknown>\n#15 0x55ac5aa7edd4 <unknown>\n#16 0x55ac5aa801de <unknown>\n#17 0x55ac5ad49531 <unknown>\n#18 0x55ac5ad4d455 <unknown>\n#19 0x55ac5ad35f55 <unknown>\n#20 0x55ac5ad4e0ef <unknown>\n#21 0x55ac5ad1999f <unknown>\n#22 0x55ac5ad72008 <unknown>\n#23 0x55ac5ad721d7 <unknown>\n#24 0x55ac5ad84124 <unknown>\n#25 0x7fe4e5c94ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az575-626"},{"name":"thread","value":"2698-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":106,"unknown":0,"total":122},"items":[{"uid":"c500ee373f12802c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1361//#testresult/c500ee373f12802c","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x556da9a2df83 <unknown>\n#1 0x556da96e6cf7 <unknown>\n#2 0x556da96de6ea <unknown>\n#3 0x556da96cd5a1 <unknown>\n#4 0x556da96ced40 <unknown>\n#5 0x556da96cd854 <unknown>\n#6 0x556da96cc586 <unknown>\n#7 0x556da96cc44a <unknown>\n#8 0x556da96ca7e1 <unknown>\n#9 0x556da96cb01a <unknown>\n#10 0x556da96e9bbe <unknown>\n#11 0x556da977f7a5 <unknown>\n#12 0x556da97600b2 <unknown>\n#13 0x556da977f006 <unknown>\n#14 0x556da975fe53 <unknown>\n#15 0x556da9727dd4 <unknown>\n#16 0x556da97291de <unknown>\n#17 0x556da99f2531 <unknown>\n#18 0x556da99f6455 <unknown>\n#19 0x556da99def55 <unknown>\n#20 0x556da99f70ef <unknown>\n#21 0x556da99c299f <unknown>\n#22 0x556da9a1b008 <unknown>\n#23 0x556da9a1b1d7 <unknown>\n#24 0x556da9a2d124 <unknown>\n#25 0x7fdda9494ac3 <unknown>","time":{"start":1704355901118,"stop":1704355922221,"duration":21103}},{"uid":"25a9c01ad34a5d55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1359//#testresult/25a9c01ad34a5d55","status":"passed","time":{"start":1704331065836,"stop":1704331074583,"duration":8747}},{"uid":"fa3bdb828c60008c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1355//#testresult/fa3bdb828c60008c","status":"passed","time":{"start":1704303705775,"stop":1704303713774,"duration":7999}},{"uid":"52bb8e2138487013","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1354//#testresult/52bb8e2138487013","status":"passed","time":{"start":1704303673182,"stop":1704303681033,"duration":7851}},{"uid":"b6f3484e30de2259","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1352//#testresult/b6f3484e30de2259","status":"passed","time":{"start":1704301388746,"stop":1704301398486,"duration":9740}},{"uid":"115cf8e30c286001","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1349//#testresult/115cf8e30c286001","status":"passed","time":{"start":1704244701975,"stop":1704244708641,"duration":6666}},{"uid":"2633882417df6f97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1348//#testresult/2633882417df6f97","status":"passed","time":{"start":1704180279252,"stop":1704180286985,"duration":7733}},{"uid":"34d57e845a9907c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1346//#testresult/34d57e845a9907c8","status":"passed","time":{"start":1704158302553,"stop":1704158311242,"duration":8689}},{"uid":"fd0f5ff73af31ee4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1345//#testresult/fd0f5ff73af31ee4","status":"passed","time":{"start":1704114673729,"stop":1704114682055,"duration":8326}},{"uid":"b04c03f96ce5cd9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1343//#testresult/b04c03f96ce5cd9b","status":"passed","time":{"start":1704113765319,"stop":1704113773921,"duration":8602}},{"uid":"70f394164a247f34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1341//#testresult/70f394164a247f34","status":"passed","time":{"start":1704112305124,"stop":1704112315011,"duration":9887}},{"uid":"7ef19ae32cad1ab0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1339//#testresult/7ef19ae32cad1ab0","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x562819bb4f83 <unknown>\n#1 0x56281986dcf7 <unknown>\n#2 0x5628198537a1 <unknown>\n#3 0x56281985344a <unknown>\n#4 0x5628198517e1 <unknown>\n#5 0x56281985218a <unknown>\n#6 0x56281986307c <unknown>\n#7 0x56281987b7c1 <unknown>\n#8 0x5628198816bb <unknown>\n#9 0x56281985292d <unknown>\n#10 0x56281987b5c2 <unknown>\n#11 0x562819906204 <unknown>\n#12 0x5628198e6e53 <unknown>\n#13 0x5628198aedd4 <unknown>\n#14 0x5628198b01de <unknown>\n#15 0x562819b79531 <unknown>\n#16 0x562819b7d455 <unknown>\n#17 0x562819b65f55 <unknown>\n#18 0x562819b7e0ef <unknown>\n#19 0x562819b4999f <unknown>\n#20 0x562819ba2008 <unknown>\n#21 0x562819ba21d7 <unknown>\n#22 0x562819bb4124 <unknown>\n#23 0x7f48be294ac3 <unknown>","time":{"start":1704112149950,"stop":1704112453968,"duration":304018}},{"uid":"13eb1df2369f32f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1338//#testresult/13eb1df2369f32f7","status":"passed","time":{"start":1704112053131,"stop":1704112061778,"duration":8647}},{"uid":"f7ccc958d27935d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1336//#testresult/f7ccc958d27935d3","status":"passed","time":{"start":1704111873937,"stop":1704111880931,"duration":6994}},{"uid":"263dca2b13232581","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1335//#testresult/263dca2b13232581","status":"passed","time":{"start":1704111566594,"stop":1704111573342,"duration":6748}},{"uid":"ef403a64e2c6f5f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1334//#testresult/ef403a64e2c6f5f5","status":"passed","time":{"start":1704111518292,"stop":1704111527648,"duration":9356}},{"uid":"53369b5cfc630218","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1332//#testresult/53369b5cfc630218","status":"passed","time":{"start":1704111319724,"stop":1704111327178,"duration":7454}},{"uid":"7e48fe4a0845b102","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1330//#testresult/7e48fe4a0845b102","status":"passed","time":{"start":1704099931858,"stop":1704099939725,"duration":7867}},{"uid":"cbbef9464d068e04","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1329//#testresult/cbbef9464d068e04","status":"passed","time":{"start":1704072255327,"stop":1704072263896,"duration":8569}},{"uid":"f1e754bd5f171e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1327//#testresult/f1e754bd5f171e8","status":"passed","time":{"start":1704050382957,"stop":1704050391646,"duration":8689}}]},"tags":[]},"source":"4fc74b87683c4dd4.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}