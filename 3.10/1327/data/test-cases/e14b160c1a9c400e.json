{"uid":"e14b160c1a9c400e","name":"Validate Council Output [GlasgowCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"afbda54786d9dbd764f92d2f8c30a5fd","time":{"start":1704050393781,"stop":1704050396217,"duration":2436},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f3b53e38820>\nrequest = <FixtureRequest for <Function test_scenario_outline[GlasgowCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3b472dd840>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f3b472dd840>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f3b53e38820>\nrequest = <FixtureRequest for <Function test_scenario_outline[GlasgowCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3b472dd840>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f3b472dd840>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: GlasgowCityCouncil","time":{"start":1704050393781,"stop":1704050393781,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GlasgowCityCouncil using None and the None is set","time":{"start":1704050393782,"stop":1704050396215,"duration":2433},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704050396215,"stop":1704050396215,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704050396215,"stop":1704050396217,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1426-779"},{"name":"thread","value":"2674-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GlasgowCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":89,"unknown":0,"total":102},"items":[{"uid":"44f79adfee05c32d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1325//#testresult/44f79adfee05c32d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704043942386,"stop":1704043944837,"duration":2451}},{"uid":"f1e3a80902a8bda6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1320//#testresult/f1e3a80902a8bda6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703985745191,"stop":1703985747224,"duration":2033}},{"uid":"a72cc78a456f5626","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1316//#testresult/a72cc78a456f5626","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703898909341,"stop":1703898911524,"duration":2183}},{"uid":"3ff3f7b861d026b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1314//#testresult/3ff3f7b861d026b5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703853464474,"stop":1703853467155,"duration":2681}},{"uid":"c7f73e8e19f69371","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1311//#testresult/c7f73e8e19f69371","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703851377040,"stop":1703851379618,"duration":2578}},{"uid":"f1c76416a2f60f2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1312//#testresult/f1c76416a2f60f2a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703851112283,"stop":1703851114714,"duration":2431}},{"uid":"64c022577a98233","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1309//#testresult/64c022577a98233","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703812015800,"stop":1703812017840,"duration":2040}},{"uid":"77a009204ef1ad95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1306//#testresult/77a009204ef1ad95","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703756151661,"stop":1703756154196,"duration":2535}},{"uid":"b2a9da44c11b128a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1305//#testresult/b2a9da44c11b128a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703726135060,"stop":1703726137191,"duration":2131}},{"uid":"f3c423a2073aead2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1304//#testresult/f3c423a2073aead2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703717616449,"stop":1703717618738,"duration":2289}},{"uid":"fd65c9238a450288","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1303//#testresult/fd65c9238a450288","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703717272619,"stop":1703717274711,"duration":2092}},{"uid":"55cdf263e5a36e07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1301//#testresult/55cdf263e5a36e07","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703639724542,"stop":1703639726648,"duration":2106}},{"uid":"28f4ec329827f005","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1300//#testresult/28f4ec329827f005","status":"passed","time":{"start":1703553313162,"stop":1703553315241,"duration":2079}},{"uid":"a2448ce6d5e9d37f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1298//#testresult/a2448ce6d5e9d37f","status":"passed","time":{"start":1703541411467,"stop":1703541413506,"duration":2039}},{"uid":"3dc1854b5b075eb6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1295//#testresult/3dc1854b5b075eb6","status":"passed","time":{"start":1703467402361,"stop":1703467404491,"duration":2130}},{"uid":"2773f283a32a8c34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1292//#testresult/2773f283a32a8c34","status":"passed","time":{"start":1703416386743,"stop":1703416389196,"duration":2453}},{"uid":"79935dd63986a170","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1291//#testresult/79935dd63986a170","status":"passed","time":{"start":1703416351048,"stop":1703416353121,"duration":2073}},{"uid":"12f5274836b8eaf3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1289//#testresult/12f5274836b8eaf3","status":"passed","time":{"start":1703381263091,"stop":1703381265544,"duration":2453}},{"uid":"2ebb9d6dada8ae16","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1287//#testresult/2ebb9d6dada8ae16","status":"passed","time":{"start":1703294116176,"stop":1703294118201,"duration":2025}},{"uid":"eb14436fa204ea55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1282//#testresult/eb14436fa204ea55","status":"passed","time":{"start":1703207862183,"stop":1703207864574,"duration":2391}}]},"tags":[]},"source":"e14b160c1a9c400e.json","parameterValues":["GlasgowCityCouncil","None","None"]}