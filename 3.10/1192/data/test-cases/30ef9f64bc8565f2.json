{"uid":"30ef9f64bc8565f2","name":"Validate Council Output [RushmoorCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9e9824bacc749482fde9fb74bc6e375c","time":{"start":1701758704393,"stop":1701758705781,"duration":1388},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0be045e950>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0bcd95c940>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f0bcd95c940>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0be045e950>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0bcd95c940>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f0bcd95c940>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: RushmoorCouncil","time":{"start":1701758704394,"stop":1701758704394,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from RushmoorCouncil using None and the None is set","time":{"start":1701758704394,"stop":1701758705778,"duration":1384},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701758705779,"stop":1701758705779,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701758705779,"stop":1701758705781,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az979-599"},{"name":"thread","value":"2710-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RushmoorCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":46,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":46},"items":[{"uid":"3aa959bd1a5e7bd6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1191//#testresult/3aa959bd1a5e7bd6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701739220749,"stop":1701739222096,"duration":1347}},{"uid":"d8c8c80223d8eba3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1187//#testresult/d8c8c80223d8eba3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701714379660,"stop":1701714380720,"duration":1060}},{"uid":"46f1eb03d4f00b72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1186//#testresult/46f1eb03d4f00b72","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701714335586,"stop":1701714336932,"duration":1346}},{"uid":"855f840a9ec038cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1184//#testresult/855f840a9ec038cc","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701652804921,"stop":1701652805779,"duration":858}},{"uid":"c345879775bf3ddc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1183//#testresult/c345879775bf3ddc","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701566613566,"stop":1701566614828,"duration":1262}},{"uid":"d9adfe811e48e978","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1182//#testresult/d9adfe811e48e978","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701479780854,"stop":1701479782189,"duration":1335}},{"uid":"b81e9c85e8a487f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1179//#testresult/b81e9c85e8a487f9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701419026760,"stop":1701419027783,"duration":1023}},{"uid":"ae13b4488817cb75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1176//#testresult/ae13b4488817cb75","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418931349,"stop":1701418932243,"duration":894}},{"uid":"3912010b6a949e0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1175//#testresult/3912010b6a949e0e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701414410391,"stop":1701414411275,"duration":884}},{"uid":"f68c41455b02f96c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1174//#testresult/f68c41455b02f96c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701414358783,"stop":1701414359617,"duration":834}},{"uid":"3366e6c7cf0f1b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1173//#testresult/3366e6c7cf0f1b5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701393980276,"stop":1701393981152,"duration":876}},{"uid":"986a1659d61d76b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1169//#testresult/986a1659d61d76b7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701353394311,"stop":1701353395317,"duration":1006}},{"uid":"56480067e9781c9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1163//#testresult/56480067e9781c9d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701307128019,"stop":1701307128861,"duration":842}},{"uid":"7038764d6c581bce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1161//#testresult/7038764d6c581bce","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701279424653,"stop":1701279426052,"duration":1399}},{"uid":"f6f6f86013931130","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1162//#testresult/f6f6f86013931130","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701279385793,"stop":1701279387030,"duration":1237}},{"uid":"a950c23d0d2d58b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1156//#testresult/a950c23d0d2d58b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701220802235,"stop":1701220803110,"duration":875}},{"uid":"8da9cb8a296c9eb8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1155//#testresult/8da9cb8a296c9eb8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701134406060,"stop":1701134407051,"duration":991}},{"uid":"5535661a204171a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1152//#testresult/5535661a204171a1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701047967255,"stop":1701047968471,"duration":1216}},{"uid":"bca20ab663927973","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1151//#testresult/bca20ab663927973","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036190870,"stop":1701036191890,"duration":1020}},{"uid":"70cc7b10f1a4a1f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1150//#testresult/70cc7b10f1a4a1f8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036183832,"stop":1701036184732,"duration":900}}]},"tags":[]},"source":"30ef9f64bc8565f2.json","parameterValues":["RushmoorCouncil","None","None"]}