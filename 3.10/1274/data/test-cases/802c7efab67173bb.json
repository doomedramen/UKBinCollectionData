{"uid":"802c7efab67173bb","name":"Validate Council Output [BromleyBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f99c7ea76f01e7f999185ee0dfc6d3a7","time":{"start":1702859985807,"stop":1702859989541,"duration":3734},"status":"failed","statusMessage":"ValueError: unconverted data remains: \n              (this collection has been adjusted from its usual time)","statusTrace":"fixturefunc = <function scrape_step at 0x7f7962357640>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f794f884ee0>, 'council': 'BromleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:64: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BromleyBoroughCouncil.py:39: in parse_data\n    next_collection = datetime.strptime(remove_ordinal_indicator_from_date_string(collection_date.replace(',', '')), \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tuesday 2 January\\n              (this collection has been adjusted from its usual time)'\nformat = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n            raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\n        if len(data_string) != found.end():\n>           raise ValueError(\"unconverted data remains: %s\" %\n                              data_string[found.end():])\nE           ValueError: unconverted data remains: \nE                         (this collection has been adjusted from its usual time)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:352: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: unconverted data remains: \n              (this collection has been adjusted from its usual time)","statusTrace":"fixturefunc = <function scrape_step at 0x7f7962357640>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f794f884ee0>, 'council': 'BromleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:64: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BromleyBoroughCouncil.py:39: in parse_data\n    next_collection = datetime.strptime(remove_ordinal_indicator_from_date_string(collection_date.replace(',', '')), \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tuesday 2 January\\n              (this collection has been adjusted from its usual time)'\nformat = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n            raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\n        if len(data_string) != found.end():\n>           raise ValueError(\"unconverted data remains: %s\" %\n                              data_string[found.end():])\nE           ValueError: unconverted data remains: \nE                         (this collection has been adjusted from its usual time)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:352: ValueError","steps":[{"name":"Given the council: BromleyBoroughCouncil","time":{"start":1702859985807,"stop":1702859985808,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BromleyBoroughCouncil using None and the None is set","time":{"start":1702859985808,"stop":1702859989541,"duration":3733},"status":"failed","statusMessage":"unconverted data remains: \n              (this collection has been adjusted from its usual time)","statusTrace":"ValueError: unconverted data remains: \n              (this collection has been adjusted from its usual time)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az569-231"},{"name":"thread","value":"2830-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BromleyBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":75,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":76},"items":[{"uid":"b28197a78502c0eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1272//#testresult/b28197a78502c0eb","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702843531815,"stop":1702843533124,"duration":1309}},{"uid":"c88a5af49ee7ce5a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1270//#testresult/c88a5af49ee7ce5a","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702809358374,"stop":1702809359793,"duration":1419}},{"uid":"bd535134eabb030e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1247//#testresult/bd535134eabb030e","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702657113831,"stop":1702657114790,"duration":959}},{"uid":"64b1909ec37798fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1244//#testresult/64b1909ec37798fb","status":"failed","statusDetails":"ValueError: unconverted data remains: \n              \n              (In progress)","time":{"start":1702603156296,"stop":1702603160105,"duration":3809}},{"uid":"f46c2638e5e807c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1243//#testresult/f46c2638e5e807c2","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702540026998,"stop":1702540028519,"duration":1521}},{"uid":"44ac12b6cec93568","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1241//#testresult/44ac12b6cec93568","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702516653035,"stop":1702516654597,"duration":1562}},{"uid":"b26a54ad03b8a6e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1238//#testresult/b26a54ad03b8a6e3","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702447455660,"stop":1702447459771,"duration":4111}},{"uid":"ccaf1295f69e4b45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1237//#testresult/ccaf1295f69e4b45","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702447418049,"stop":1702447419404,"duration":1355}},{"uid":"a0e2614563978012","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1236//#testresult/a0e2614563978012","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702430314498,"stop":1702430315786,"duration":1288}},{"uid":"548b00a7199e2160","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1232//#testresult/548b00a7199e2160","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702366481554,"stop":1702366482408,"duration":854}},{"uid":"f0246b388d4e9ac2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1231//#testresult/f0246b388d4e9ac2","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702343935874,"stop":1702343937373,"duration":1499}},{"uid":"4faed080405ed15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1229//#testresult/4faed080405ed15","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702257534828,"stop":1702257535745,"duration":917}},{"uid":"d97e6e18fdfe28a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1228//#testresult/d97e6e18fdfe28a6","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702171378952,"stop":1702171379960,"duration":1008}},{"uid":"c2cfbf6103ee30dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1227//#testresult/c2cfbf6103ee30dc","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702084618628,"stop":1702084619618,"duration":990}},{"uid":"3b61390ace1f0473","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1225//#testresult/3b61390ace1f0473","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1702066705627,"stop":1702066707029,"duration":1402}},{"uid":"93ddbe7cb80e76cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1222//#testresult/93ddbe7cb80e76cb","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702054344633,"stop":1702054348162,"duration":3529}},{"uid":"4633caf8fa915bb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1219//#testresult/4633caf8fa915bb3","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1701998350617,"stop":1701998351899,"duration":1282}},{"uid":"c3d91acab7e1c1dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1218//#testresult/c3d91acab7e1c1dd","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1701990357370,"stop":1701990358481,"duration":1111}},{"uid":"f10f0a52d758e3f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1217//#testresult/f10f0a52d758e3f0","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1701990325336,"stop":1701990326274,"duration":938}},{"uid":"8b9ed8f14ac86548","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1215//#testresult/8b9ed8f14ac86548","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701942770645,"stop":1701942774846,"duration":4201}}]},"tags":[]},"source":"802c7efab67173bb.json","parameterValues":["BromleyBoroughCouncil","None","None"]}