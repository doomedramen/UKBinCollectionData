{"uid":"b072a2a350548123","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1712967941343,"stop":1712967971876,"duration":30533},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f8729b33490>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8728ddb580>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f873d26cbb0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f8729b33490>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8728ddb580>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f873d26cbb0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1712967941344,"stop":1712967941344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1712967941344,"stop":1712967971876,"duration":30532},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1040-457"},{"name":"thread","value":"2757-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":0,"skipped":0,"passed":224,"unknown":0,"total":243},"items":[{"uid":"b965b3d6acf804cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1675//#testresult/b965b3d6acf804cc","status":"passed","time":{"start":1712881760159,"stop":1712881761519,"duration":1360}},{"uid":"9b7532c7d8c80b3e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1674//#testresult/9b7532c7d8c80b3e","status":"passed","time":{"start":1712795352951,"stop":1712795354702,"duration":1751}},{"uid":"3ae8adc43c8e95a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1673//#testresult/3ae8adc43c8e95a9","status":"passed","time":{"start":1712708895154,"stop":1712708896429,"duration":1275}},{"uid":"40f19e1246f432b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1671//#testresult/40f19e1246f432b7","status":"passed","time":{"start":1712700452320,"stop":1712700453085,"duration":765}},{"uid":"b64eca74de565bd0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1668//#testresult/b64eca74de565bd0","status":"passed","time":{"start":1712622562830,"stop":1712622564137,"duration":1307}},{"uid":"abdd3f83f7590c7f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1667//#testresult/abdd3f83f7590c7f","status":"passed","time":{"start":1712536223676,"stop":1712536224428,"duration":752}},{"uid":"a09ceb24cbe34919","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1666//#testresult/a09ceb24cbe34919","status":"passed","time":{"start":1712449939543,"stop":1712449940643,"duration":1100}},{"uid":"36f07c60f9c86335","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1665//#testresult/36f07c60f9c86335","status":"passed","time":{"start":1712363372274,"stop":1712363373759,"duration":1485}},{"uid":"b27ccbeaef27ecde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1664//#testresult/b27ccbeaef27ecde","status":"passed","time":{"start":1712276951857,"stop":1712276952537,"duration":680}},{"uid":"192c1efe5a1da30a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1660//#testresult/192c1efe5a1da30a","status":"passed","time":{"start":1712190620686,"stop":1712190621799,"duration":1113}},{"uid":"44c10d1e603a35e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1657//#testresult/44c10d1e603a35e1","status":"passed","time":{"start":1712137035452,"stop":1712137036168,"duration":716}},{"uid":"6d1aedcc52743533","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1655//#testresult/6d1aedcc52743533","status":"passed","time":{"start":1712104084423,"stop":1712104085076,"duration":653}},{"uid":"7923702c29be0848","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1654//#testresult/7923702c29be0848","status":"passed","time":{"start":1712017733265,"stop":1712017734346,"duration":1081}},{"uid":"b46eb577b2351265","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1653//#testresult/b46eb577b2351265","status":"passed","time":{"start":1711931574749,"stop":1711931575793,"duration":1044}},{"uid":"ecfe494be35c7307","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1652//#testresult/ecfe494be35c7307","status":"passed","time":{"start":1711845123453,"stop":1711845124166,"duration":713}},{"uid":"df81837047cd8218","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1649//#testresult/df81837047cd8218","status":"passed","time":{"start":1711672113720,"stop":1711672123131,"duration":9411}},{"uid":"c9f216a28ad57584","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1648//#testresult/c9f216a28ad57584","status":"passed","time":{"start":1711585740089,"stop":1711585741587,"duration":1498}},{"uid":"6e2ccd8bf6144a68","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1646//#testresult/6e2ccd8bf6144a68","status":"passed","time":{"start":1711499315408,"stop":1711499343843,"duration":28435}},{"uid":"53f837fb35a05fe6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1645//#testresult/53f837fb35a05fe6","status":"passed","time":{"start":1711412892880,"stop":1711412894013,"duration":1133}},{"uid":"787e293d8b87360e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1641//#testresult/787e293d8b87360e","status":"passed","time":{"start":1711326588423,"stop":1711326589407,"duration":984}}]},"tags":[]},"source":"b072a2a350548123.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}