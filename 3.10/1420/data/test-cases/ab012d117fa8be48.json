{"uid":"ab012d117fa8be48","name":"Validate Council Output [TorridgeDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"da903249529007ec357275ac5f075b6c","time":{"start":1704587634657,"stop":1704587637645,"duration":2988},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2512d437f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f251183b970>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f251183b970>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2512d437f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f251183b970>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f251183b970>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1704587634657,"stop":1704587634657,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from TorridgeDistrictCouncil using None and the None is set","time":{"start":1704587634657,"stop":1704587637643,"duration":2986},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704587637643,"stop":1704587637643,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704587637643,"stop":1704587637645,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1432-133"},{"name":"thread","value":"2841-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":38,"broken":0,"skipped":0,"passed":103,"unknown":0,"total":141},"items":[{"uid":"3e38c7afa22d97bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1413//#testresult/3e38c7afa22d97bb","status":"passed","time":{"start":1704543012832,"stop":1704543015712,"duration":2880}},{"uid":"3616b365c2f2bd00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1408//#testresult/3616b365c2f2bd00","status":"passed","time":{"start":1704496336343,"stop":1704496339413,"duration":3070}},{"uid":"69d12b98630b169d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1406//#testresult/69d12b98630b169d","status":"passed","time":{"start":1704453594467,"stop":1704453597426,"duration":2959}},{"uid":"2dcc4b221e912153","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1407//#testresult/2dcc4b221e912153","status":"passed","time":{"start":1704453562542,"stop":1704453565292,"duration":2750}},{"uid":"5cc17bad13a35ffa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1405//#testresult/5cc17bad13a35ffa","status":"passed","time":{"start":1704452789435,"stop":1704452792191,"duration":2756}},{"uid":"3b7235b50bfd7589","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1400//#testresult/3b7235b50bfd7589","status":"passed","time":{"start":1704443905526,"stop":1704443908022,"duration":2496}},{"uid":"6cc18087c820f66c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1399//#testresult/6cc18087c820f66c","status":"passed","time":{"start":1704443588670,"stop":1704443591494,"duration":2824}},{"uid":"1439f7f2e40978a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1397//#testresult/1439f7f2e40978a9","status":"passed","time":{"start":1704442624862,"stop":1704442627715,"duration":2853}},{"uid":"7b1fe46966ccb985","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1390//#testresult/7b1fe46966ccb985","status":"passed","time":{"start":1704417658452,"stop":1704417661862,"duration":3410}},{"uid":"a52ed45669571d57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1379//#testresult/a52ed45669571d57","status":"passed","time":{"start":1704406148859,"stop":1704406151904,"duration":3045}},{"uid":"4a66e39ff2d03244","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1378//#testresult/4a66e39ff2d03244","status":"passed","time":{"start":1704406090617,"stop":1704406093535,"duration":2918}},{"uid":"2d8eed28a98e58ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1376//#testresult/2d8eed28a98e58ab","status":"passed","time":{"start":1704398938776,"stop":1704398942906,"duration":4130}},{"uid":"903c06010bf32d87","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1375//#testresult/903c06010bf32d87","status":"passed","time":{"start":1704399001310,"stop":1704399004021,"duration":2711}},{"uid":"660a01b4b6e244c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1373//#testresult/660a01b4b6e244c3","status":"passed","time":{"start":1704388460006,"stop":1704388462958,"duration":2952}},{"uid":"5462be707b9a7e49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1372//#testresult/5462be707b9a7e49","status":"passed","time":{"start":1704388528948,"stop":1704388531794,"duration":2846}},{"uid":"5bf653984e2adcda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1369//#testresult/5bf653984e2adcda","status":"passed","time":{"start":1704378502284,"stop":1704378507383,"duration":5099}},{"uid":"303cfa86cf145235","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1367//#testresult/303cfa86cf145235","status":"passed","time":{"start":1704378297579,"stop":1704378301113,"duration":3534}},{"uid":"f1032c9575b2a80a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1366//#testresult/f1032c9575b2a80a","status":"passed","time":{"start":1704375983177,"stop":1704375987494,"duration":4317}},{"uid":"8e86279562917595","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1363//#testresult/8e86279562917595","status":"passed","time":{"start":1704356894868,"stop":1704356901992,"duration":7124}},{"uid":"3f38ad4df0c7c33e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1361//#testresult/3f38ad4df0c7c33e","status":"passed","time":{"start":1704356069929,"stop":1704356072852,"duration":2923}}]},"tags":[]},"source":"ab012d117fa8be48.json","parameterValues":["TorridgeDistrictCouncil","None","None"]}