{"uid":"a6e6d1debc7a8951","name":"Validate Council Output [BuryCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a4aaab859b0cc98805b6ab39b299e88b","time":{"start":1707956785486,"stop":1707956808542,"duration":23056},"status":"failed","statusMessage":"ConnectionAbortedError: Issue encountered getting addresses.","statusTrace":"fixturefunc = <function scrape_step at 0x7fd2c4b171c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BuryCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd2c3d6f970>, 'council': 'BuryCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BuryCouncil.CouncilClass object at 0x7fd2c49ede40>, page = ''\nkwargs = {'headless': True, 'paon': '3', 'postcode': 'M26 3XY', 'uprn': None, ...}\ncollections = [], data = {'bins': []}, postcode = 'M26 3XY'\naddr_response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        collections = []\n        data = {\"bins\": []}\n    \n        # Get and check postcode and PAON\n        postcode = kwargs.get(\"postcode\")\n        paon = kwargs.get(\"paon\")\n        check_postcode(postcode)\n        check_paon(paon)\n    \n        # Make API call to get property info using postcode\n        addr_response = requests.get(\n            f'https://www.bury.gov.uk/app-services/getProperties?postcode={postcode.replace(\" \", \"\")}'\n        )\n        if addr_response.status_code != 200:\n>           raise ConnectionAbortedError(\"Issue encountered getting addresses.\")\nE           ConnectionAbortedError: Issue encountered getting addresses.\n\nuk_bin_collection/uk_bin_collection/councils/BuryCouncil.py:30: ConnectionAbortedError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Issue encountered getting addresses.","statusTrace":"fixturefunc = <function scrape_step at 0x7fd2c4b171c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BuryCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd2c3d6f970>, 'council': 'BuryCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BuryCouncil.CouncilClass object at 0x7fd2c49ede40>, page = ''\nkwargs = {'headless': True, 'paon': '3', 'postcode': 'M26 3XY', 'uprn': None, ...}\ncollections = [], data = {'bins': []}, postcode = 'M26 3XY'\naddr_response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        collections = []\n        data = {\"bins\": []}\n    \n        # Get and check postcode and PAON\n        postcode = kwargs.get(\"postcode\")\n        paon = kwargs.get(\"paon\")\n        check_postcode(postcode)\n        check_paon(paon)\n    \n        # Make API call to get property info using postcode\n        addr_response = requests.get(\n            f'https://www.bury.gov.uk/app-services/getProperties?postcode={postcode.replace(\" \", \"\")}'\n        )\n        if addr_response.status_code != 200:\n>           raise ConnectionAbortedError(\"Issue encountered getting addresses.\")\nE           ConnectionAbortedError: Issue encountered getting addresses.\n\nuk_bin_collection/uk_bin_collection/councils/BuryCouncil.py:30: ConnectionAbortedError","steps":[{"name":"Given the council: BuryCouncil","time":{"start":1707956785486,"stop":1707956785487,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BuryCouncil using None and the None is set","time":{"start":1707956785487,"stop":1707956808541,"duration":23054},"status":"failed","statusMessage":"Issue encountered getting addresses.","statusTrace":"ConnectionAbortedError: Issue encountered getting addresses.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az530-262"},{"name":"thread","value":"2776-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BuryCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":190,"unknown":0,"total":192},"items":[{"uid":"504ad8866b628460","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1561//#testresult/504ad8866b628460","status":"passed","time":{"start":1707870380650,"stop":1707870382570,"duration":1920}},{"uid":"e9a00525de3fb925","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1560//#testresult/e9a00525de3fb925","status":"passed","time":{"start":1707784031068,"stop":1707784033193,"duration":2125}},{"uid":"5f79bca27ef08f70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1559//#testresult/5f79bca27ef08f70","status":"passed","time":{"start":1707697659308,"stop":1707697660823,"duration":1515}},{"uid":"1afb3dbbdbd381c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1556//#testresult/1afb3dbbdbd381c9","status":"passed","time":{"start":1707611343710,"stop":1707611345469,"duration":1759}},{"uid":"4fb6ed4ced47a759","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1554//#testresult/4fb6ed4ced47a759","status":"passed","time":{"start":1707524733160,"stop":1707524735172,"duration":2012}},{"uid":"d51c3e1433b18388","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1553//#testresult/d51c3e1433b18388","status":"passed","time":{"start":1707438355914,"stop":1707438357766,"duration":1852}},{"uid":"27031882e3197274","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1552//#testresult/27031882e3197274","status":"passed","time":{"start":1707351983100,"stop":1707351985068,"duration":1968}},{"uid":"67c787b32002104c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1551//#testresult/67c787b32002104c","status":"failed","statusDetails":"ConnectionAbortedError: Issue encountered getting bin data.","time":{"start":1707265508444,"stop":1707265539921,"duration":31477}},{"uid":"e09910e3e9313245","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1549//#testresult/e09910e3e9313245","status":"passed","time":{"start":1707179184785,"stop":1707179186214,"duration":1429}},{"uid":"3238330fdd5fc980","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1548//#testresult/3238330fdd5fc980","status":"passed","time":{"start":1707092961220,"stop":1707092962616,"duration":1396}},{"uid":"c0d9054b31902ef2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1547//#testresult/c0d9054b31902ef2","status":"passed","time":{"start":1707006549774,"stop":1707006551391,"duration":1617}},{"uid":"9fee25b2bd7a8997","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1545//#testresult/9fee25b2bd7a8997","status":"passed","time":{"start":1706941915268,"stop":1706941916819,"duration":1551}},{"uid":"ce399d772cfd0e39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1544//#testresult/ce399d772cfd0e39","status":"passed","time":{"start":1706938989943,"stop":1706938991367,"duration":1424}},{"uid":"2cf9f7eb50422c1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1542//#testresult/2cf9f7eb50422c1a","status":"passed","time":{"start":1706938481208,"stop":1706938482780,"duration":1572}},{"uid":"ca061f258eb38fba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1541//#testresult/ca061f258eb38fba","status":"passed","time":{"start":1706920012900,"stop":1706920014890,"duration":1990}},{"uid":"fd1ac73197a8e22b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1540//#testresult/fd1ac73197a8e22b","status":"passed","time":{"start":1706833568924,"stop":1706833570586,"duration":1662}},{"uid":"1f64e7c4b120c41b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1538//#testresult/1f64e7c4b120c41b","status":"passed","time":{"start":1706747295439,"stop":1706747297266,"duration":1827}},{"uid":"3cf8f705807713d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1537//#testresult/3cf8f705807713d5","status":"passed","time":{"start":1706660857525,"stop":1706660859932,"duration":2407}},{"uid":"af7db546a896d838","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1535//#testresult/af7db546a896d838","status":"passed","time":{"start":1706574354829,"stop":1706574358561,"duration":3732}},{"uid":"dd8e9202ab5f575f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1534//#testresult/dd8e9202ab5f575f","status":"passed","time":{"start":1706488034773,"stop":1706488037115,"duration":2342}}]},"tags":[]},"source":"a6e6d1debc7a8951.json","parameterValues":["BuryCouncil","None","None"]}