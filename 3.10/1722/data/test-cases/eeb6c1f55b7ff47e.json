{"uid":"eeb6c1f55b7ff47e","name":"Validate Council Output [WealdenDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b3ddf98c8383031d63a6bd27b361f868","time":{"start":1714234317308,"stop":1714234318259,"duration":951},"status":"failed","statusMessage":"TypeError: 'int' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7fd5c840b2e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd5c7de0580>, 'council': 'WealdenDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WealdenDistrictCouncil.CouncilClass object at 0x7fd5c727e950>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '10033413624', ...}\nuser_uprn = '10033413624'\nheaders = {'accept': '*/*', 'accept-language': 'en-GB,en;q=0.7', 'authority': 'www.wealden.gov.uk', 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', ...}\ndata = {'action': 'wealden_get_collections_for_uprn', 'uprn': '10033413624'}\nresponse = <Response [400]>, json_data = 0\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"authority\": \"www.wealden.gov.uk\",\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en-GB,en;q=0.7\",\n            \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n            # Requests sorts cookies= alphabetically\n            # 'cookie': 'ARRAffinity=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872; ARRAffinitySameSite=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872',\n            \"origin\": \"https://www.wealden.gov.uk\",\n            \"referer\": \"https://www.wealden.gov.uk/recycling-and-waste/bin-search/?uprn=10033413624\",\n            \"sec-fetch-dest\": \"empty\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"sec-gpc\": \"1\",\n            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"x-requested-with\": \"XMLHttpRequest\",\n        }\n    \n        data = {\n            \"action\": \"wealden_get_collections_for_uprn\",\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(\n            \"https://www.wealden.gov.uk/wp-admin/admin-ajax.php\",\n            headers=headers,\n            data=data,\n        )\n        json_data = json.loads(response.text)\n    \n>       if json_data[\"status\"] != \"success\":\nE       TypeError: 'int' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/WealdenDistrictCouncil.py:51: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"TypeError: 'int' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7fd5c840b2e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd5c7de0580>, 'council': 'WealdenDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WealdenDistrictCouncil.CouncilClass object at 0x7fd5c727e950>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '10033413624', ...}\nuser_uprn = '10033413624'\nheaders = {'accept': '*/*', 'accept-language': 'en-GB,en;q=0.7', 'authority': 'www.wealden.gov.uk', 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', ...}\ndata = {'action': 'wealden_get_collections_for_uprn', 'uprn': '10033413624'}\nresponse = <Response [400]>, json_data = 0\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"authority\": \"www.wealden.gov.uk\",\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en-GB,en;q=0.7\",\n            \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n            # Requests sorts cookies= alphabetically\n            # 'cookie': 'ARRAffinity=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872; ARRAffinitySameSite=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872',\n            \"origin\": \"https://www.wealden.gov.uk\",\n            \"referer\": \"https://www.wealden.gov.uk/recycling-and-waste/bin-search/?uprn=10033413624\",\n            \"sec-fetch-dest\": \"empty\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"sec-gpc\": \"1\",\n            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"x-requested-with\": \"XMLHttpRequest\",\n        }\n    \n        data = {\n            \"action\": \"wealden_get_collections_for_uprn\",\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(\n            \"https://www.wealden.gov.uk/wp-admin/admin-ajax.php\",\n            headers=headers,\n            data=data,\n        )\n        json_data = json.loads(response.text)\n    \n>       if json_data[\"status\"] != \"success\":\nE       TypeError: 'int' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/WealdenDistrictCouncil.py:51: TypeError","steps":[{"name":"Given the council: WealdenDistrictCouncil","time":{"start":1714234317308,"stop":1714234317309,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WealdenDistrictCouncil using None and the None is set","time":{"start":1714234317309,"stop":1714234318259,"duration":950},"status":"failed","statusMessage":"'int' object is not subscriptable","statusTrace":"TypeError: 'int' object is not subscriptable\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1536-576"},{"name":"thread","value":"2642-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WealdenDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":37,"broken":0,"skipped":0,"passed":225,"unknown":0,"total":262},"items":[{"uid":"d7a4f457f59560d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1714//#testresult/d7a4f457f59560d2","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1714232920304,"stop":1714232921858,"duration":1554}},{"uid":"9ffae82672be44d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1713//#testresult/9ffae82672be44d4","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1714177960508,"stop":1714177961793,"duration":1285}},{"uid":"ab7db297fabde533","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1712//#testresult/ab7db297fabde533","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1714091564497,"stop":1714091565995,"duration":1498}},{"uid":"e5e2265871319d49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1711//#testresult/e5e2265871319d49","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1714005169893,"stop":1714005171166,"duration":1273}},{"uid":"becbd2033b4ab95e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1710//#testresult/becbd2033b4ab95e","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713918796911,"stop":1713918798100,"duration":1189}},{"uid":"7f9ffa69e776c103","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1709//#testresult/7f9ffa69e776c103","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713832780236,"stop":1713832781426,"duration":1190}},{"uid":"59a4a1dcf173418e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1708//#testresult/59a4a1dcf173418e","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713745909494,"stop":1713745911046,"duration":1552}},{"uid":"7b25c417648ebf60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1707//#testresult/7b25c417648ebf60","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713659611000,"stop":1713659612219,"duration":1219}},{"uid":"57e232a4d166591d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1706//#testresult/57e232a4d166591d","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713573050920,"stop":1713573052413,"duration":1493}},{"uid":"46b672170304e1eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1702//#testresult/46b672170304e1eb","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713486710069,"stop":1713486711418,"duration":1349}},{"uid":"9c9f92cc28fa7cb4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1698//#testresult/9c9f92cc28fa7cb4","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713400258379,"stop":1713400259993,"duration":1614}},{"uid":"1555f5b4170a6e0b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1697//#testresult/1555f5b4170a6e0b","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713313854230,"stop":1713313855342,"duration":1112}},{"uid":"1da9233ac1141cb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1696//#testresult/1da9233ac1141cb9","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713252902037,"stop":1713252903059,"duration":1022}},{"uid":"a953640769ec085f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1695//#testresult/a953640769ec085f","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713227423029,"stop":1713227424941,"duration":1912}},{"uid":"4f646ac43837e2df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1692//#testresult/4f646ac43837e2df","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713207929845,"stop":1713207931073,"duration":1228}},{"uid":"de20eb97322d3252","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1683//#testresult/de20eb97322d3252","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713188463480,"stop":1713188465152,"duration":1672}},{"uid":"56129326d7b6f4c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1682//#testresult/56129326d7b6f4c3","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713149934309,"stop":1713149935492,"duration":1183}},{"uid":"18c2152c04c3f00b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1681//#testresult/18c2152c04c3f00b","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713053403050,"stop":1713053404180,"duration":1130}},{"uid":"bcd9d3a9d36a0e01","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1677//#testresult/bcd9d3a9d36a0e01","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712968131758,"stop":1712968132968,"duration":1210}},{"uid":"acf1f5ad3857add9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1675//#testresult/acf1f5ad3857add9","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712881882405,"stop":1712881883962,"duration":1557}}]},"tags":[]},"source":"eeb6c1f55b7ff47e.json","parameterValues":["WealdenDistrictCouncil","None","None"]}