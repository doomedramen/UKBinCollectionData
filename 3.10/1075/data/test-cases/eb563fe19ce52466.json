{"uid":"eb563fe19ce52466","name":"Validate Council Output [WiganBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d724d8b9a4d0593a99f53e95b03e558b","time":{"start":1698701647039,"stop":1698701650910,"duration":3871},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f4015ed3250>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4009beb1c0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f4009beb1c0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f4015ed3250>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4009beb1c0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f4009beb1c0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","steps":[{"name":"Given the council: WiganBoroughCouncil","time":{"start":1698701647039,"stop":1698701647040,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WiganBoroughCouncil","time":{"start":1698701647040,"stop":1698701650905,"duration":3865},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698701650905,"stop":1698701650907,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698701650907,"stop":1698701650910,"duration":3},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az575-65"},{"name":"thread","value":"2120-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiganBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":93,"broken":0,"skipped":0,"passed":72,"unknown":0,"total":165},"items":[{"uid":"cedbb1261177414d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/cedbb1261177414d","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698700545095,"stop":1698700548458,"duration":3363}},{"uid":"dc0ce6216e6982ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/dc0ce6216e6982ed","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698693123601,"stop":1698693126653,"duration":3052}},{"uid":"b5ac2cfb21d2dd53","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/b5ac2cfb21d2dd53","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698692950551,"stop":1698692953917,"duration":3366}},{"uid":"1c7c387b4ff66f89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/1c7c387b4ff66f89","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698646620839,"stop":1698646624797,"duration":3958}},{"uid":"2ecd5ef69e7a27f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/2ecd5ef69e7a27f3","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698628840333,"stop":1698628844203,"duration":3870}},{"uid":"40d9b36304f633a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/40d9b36304f633a2","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698615503540,"stop":1698615507728,"duration":4188}},{"uid":"90483e440e197e74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/90483e440e197e74","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698615337042,"stop":1698615341078,"duration":4036}},{"uid":"574bc8c6672ca707","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/574bc8c6672ca707","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698542639993,"stop":1698542644054,"duration":4061}},{"uid":"9f0ccecb1c7f46bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1053//#testresult/9f0ccecb1c7f46bc","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698455833684,"stop":1698455839984,"duration":6300}},{"uid":"566841f018f37d61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1051//#testresult/566841f018f37d61","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698369562515,"stop":1698369565999,"duration":3484}},{"uid":"4fe695403797f769","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1050//#testresult/4fe695403797f769","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698283168883,"stop":1698283174378,"duration":5495}},{"uid":"38ef3bd890979ef1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1049//#testresult/38ef3bd890979ef1","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698196782265,"stop":1698196785996,"duration":3731}},{"uid":"199ce4ac4540e5ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1048//#testresult/199ce4ac4540e5ba","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178517795,"stop":1698178521667,"duration":3872}},{"uid":"ebf06efca2570b2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1047//#testresult/ebf06efca2570b2c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178451795,"stop":1698178455134,"duration":3339}},{"uid":"4e5b810c832a7959","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1046//#testresult/4e5b810c832a7959","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698110422371,"stop":1698110425703,"duration":3332}},{"uid":"dc0e74a4041a63e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1044//#testresult/dc0e74a4041a63e3","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698065266069,"stop":1698065269482,"duration":3413}},{"uid":"7a7f5b8cc47dbbda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1045//#testresult/7a7f5b8cc47dbbda","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698065207342,"stop":1698065211059,"duration":3717}},{"uid":"16774b5d5330186e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1042//#testresult/16774b5d5330186e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698024043151,"stop":1698024047466,"duration":4315}},{"uid":"b22be167281b5999","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1040//#testresult/b22be167281b5999","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697937874253,"stop":1697937878673,"duration":4420}},{"uid":"5e81670ec9250112","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1039//#testresult/5e81670ec9250112","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697851071715,"stop":1697851075711,"duration":3996}}]},"tags":[]},"source":"eb563fe19ce52466.json","parameterValues":["WiganBoroughCouncil"]}