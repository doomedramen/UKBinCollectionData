{"uid":"ee2580cc429a1ef9","name":"Validate Council Output [WestSuffolkCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f49da38cf3e195a06db2680429130b4a","time":{"start":1715967276822,"stop":1715967276823,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1033 column 5 (char 51655)","statusTrace":"fixturefunc = <function get_council_step at 0x7f6ed9e87130>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6ed9ecd300>, 'council_name': 'WestSuffolkCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:43: in get_council_step\n    council_input_data = file_handler.load_json_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:17: in load_json_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f6eed480be0>\ns = '{\\n    \"AdurAndWorthingCouncils\": {\\n        \"url\": \"https://www.adur-worthing.gov.uk/bin-day/?brlu-selected-address=...://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n        \"wiki_name\": \"York Council\"\\n    }\\n}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1033 column 5 (char 51655)\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1033 column 5 (char 51655)","statusTrace":"fixturefunc = <function get_council_step at 0x7f6ed9e87130>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6ed9ecd300>, 'council_name': 'WestSuffolkCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:43: in get_council_step\n    council_input_data = file_handler.load_json_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:17: in load_json_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f6eed480be0>\ns = '{\\n    \"AdurAndWorthingCouncils\": {\\n        \"url\": \"https://www.adur-worthing.gov.uk/bin-day/?brlu-selected-address=...://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n        \"wiki_name\": \"York Council\"\\n    }\\n}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1033 column 5 (char 51655)\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: WestSuffolkCouncil","time":{"start":1715967276822,"stop":1715967276823,"duration":1},"status":"failed","statusMessage":"Expecting property name enclosed in double quotes: line 1033 column 5 (char 51655)","statusTrace":"json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1033 column 5 (char 51655)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1391-405"},{"name":"thread","value":"2675-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ee2580cc429a1ef9.json","parameterValues":["WestSuffolkCouncil"]}