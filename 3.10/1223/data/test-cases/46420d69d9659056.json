{"uid":"46420d69d9659056","name":"Validate Council Output [NewcastleCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a63cb1391c4aa4a9ce00ac5e7dcb85fb","time":{"start":1702054409702,"stop":1702054443839,"duration":34137},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f7ce51c3be0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f7cd1814ee0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f7cd1814ee0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f7ce51c3be0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f7cd1814ee0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f7cd1814ee0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1702054409702,"stop":1702054409703,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NewcastleCityCouncil using None and the None is set","time":{"start":1702054409703,"stop":1702054443837,"duration":34134},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1702054443837,"stop":1702054443837,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1702054443837,"stop":1702054443839,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1249-362"},{"name":"thread","value":"2754-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":46,"unknown":0,"total":60},"items":[{"uid":"89e1c630e82ad91b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1219//#testresult/89e1c630e82ad91b","status":"passed","time":{"start":1701998423518,"stop":1701998459087,"duration":35569}},{"uid":"e8bdd61027add3f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1218//#testresult/e8bdd61027add3f4","status":"passed","time":{"start":1701990397212,"stop":1701990410998,"duration":13786}},{"uid":"250e4e4371f15b00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1217//#testresult/250e4e4371f15b00","status":"passed","time":{"start":1701990351948,"stop":1701990368918,"duration":16970}},{"uid":"456a96a50ececd02","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1215//#testresult/456a96a50ececd02","status":"passed","time":{"start":1701942816625,"stop":1701942834399,"duration":17774}},{"uid":"ed2f81d8f37761e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1214//#testresult/ed2f81d8f37761e8","status":"passed","time":{"start":1701936526717,"stop":1701936563661,"duration":36944}},{"uid":"9d34d7807720dbc6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1213//#testresult/9d34d7807720dbc6","status":"passed","time":{"start":1701936486611,"stop":1701936507888,"duration":21277}},{"uid":"661b17bc7ede43ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1211//#testresult/661b17bc7ede43ae","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701911985568,"stop":1701912018509,"duration":32941}},{"uid":"d70172c517cd499e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1209//#testresult/d70172c517cd499e","status":"passed","time":{"start":1701904886275,"stop":1701904899954,"duration":13679}},{"uid":"3a0b8bb59bef40ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1201//#testresult/3a0b8bb59bef40ae","status":"passed","time":{"start":1701882542605,"stop":1701882562329,"duration":19724}},{"uid":"1f620a33347e3849","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1199//#testresult/1f620a33347e3849","status":"passed","time":{"start":1701825563670,"stop":1701825585486,"duration":21816}},{"uid":"e250f0ca75ef47e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1198//#testresult/e250f0ca75ef47e6","status":"passed","time":{"start":1701795581397,"stop":1701795592999,"duration":11602}},{"uid":"4ef9bd474ee8ea45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1197//#testresult/4ef9bd474ee8ea45","status":"passed","time":{"start":1701795515687,"stop":1701795526889,"duration":11202}},{"uid":"21cd4d8327c3b249","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1193//#testresult/21cd4d8327c3b249","status":"passed","time":{"start":1701758522630,"stop":1701758538038,"duration":15408}},{"uid":"f344e807342bfabc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1192//#testresult/f344e807342bfabc","status":"passed","time":{"start":1701758528839,"stop":1701758550752,"duration":21913}},{"uid":"1c7b957f5a1d493a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1191//#testresult/1c7b957f5a1d493a","status":"passed","time":{"start":1701739187160,"stop":1701739202212,"duration":15052}},{"uid":"71b35146c67b5365","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1187//#testresult/71b35146c67b5365","status":"passed","time":{"start":1701714360834,"stop":1701714374371,"duration":13537}},{"uid":"57ae09fcb03b3ae4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1186//#testresult/57ae09fcb03b3ae4","status":"passed","time":{"start":1701714313039,"stop":1701714324736,"duration":11697}},{"uid":"e572aa125f2f5f42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1184//#testresult/e572aa125f2f5f42","status":"passed","time":{"start":1701652773766,"stop":1701652792911,"duration":19145}},{"uid":"ab44151329301833","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1183//#testresult/ab44151329301833","status":"passed","time":{"start":1701566556579,"stop":1701566606419,"duration":49840}},{"uid":"db05ef69505ff8cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1182//#testresult/db05ef69505ff8cf","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701479810688,"stop":1701479841422,"duration":30734}}]},"tags":[]},"source":"46420d69d9659056.json","parameterValues":["NewcastleCityCouncil","None","None"]}