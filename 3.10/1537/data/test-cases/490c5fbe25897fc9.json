{"uid":"490c5fbe25897fc9","name":"Validate Council Output [EastRidingCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"db3e594df94ba6e24f9d458b81f7e5a4","time":{"start":1706660833290,"stop":1706660839542,"duration":6252},"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.224); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x562108c9bf83 <unknown>\n#1 0x562108954cf7 <unknown>\n#2 0x56210895b2a3 <unknown>\n#3 0x56210895d798 <unknown>\n#4 0x56210895d8ec <unknown>\n#5 0x56210899e6e2 <unknown>\n#6 0x5621089ce0b2 <unknown>\n#7 0x562108997b49 <unknown>\n#8 0x5621089ce4ce <unknown>\n#9 0x5621089ed006 <unknown>\n#10 0x5621089cde53 <unknown>\n#11 0x562108995dd4 <unknown>\n#12 0x5621089971de <unknown>\n#13 0x562108c60531 <unknown>\n#14 0x562108c64455 <unknown>\n#15 0x562108c4cf55 <unknown>\n#16 0x562108c650ef <unknown>\n#17 0x562108c3099f <unknown>\n#18 0x562108c89008 <unknown>\n#19 0x562108c891d7 <unknown>\n#20 0x562108c9b124 <unknown>\n#21 0x7f70f7094ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fdf89ddef80>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastRidingCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fdf88f31750>, 'council': 'EastRidingCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/EastRidingCouncil.py:89: in parse_data\n    drop.select_by_visible_text(str(user_paon))\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/select.py:117: in select_by_visible_text\n    self._set_selected(opt)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/select.py:211: in _set_selected\n    if not option.is_selected():\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:187: in is_selected\n    return self._execute(Command.IS_ELEMENT_SELECTED)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fdf898e69e0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x562108c891d7 \\\\u003Cunknown>\\\\n#20 0x562108c9b124 \\\\u003Cunknown>\\\\n#21 0x7f70f7094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.224); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x562108c9bf83 <unknown>\nE       #1 0x562108954cf7 <unknown>\nE       #2 0x56210895b2a3 <unknown>\nE       #3 0x56210895d798 <unknown>\nE       #4 0x56210895d8ec <unknown>\nE       #5 0x56210899e6e2 <unknown>\nE       #6 0x5621089ce0b2 <unknown>\nE       #7 0x562108997b49 <unknown>\nE       #8 0x5621089ce4ce <unknown>\nE       #9 0x5621089ed006 <unknown>\nE       #10 0x5621089cde53 <unknown>\nE       #11 0x562108995dd4 <unknown>\nE       #12 0x5621089971de <unknown>\nE       #13 0x562108c60531 <unknown>\nE       #14 0x562108c64455 <unknown>\nE       #15 0x562108c4cf55 <unknown>\nE       #16 0x562108c650ef <unknown>\nE       #17 0x562108c3099f <unknown>\nE       #18 0x562108c89008 <unknown>\nE       #19 0x562108c891d7 <unknown>\nE       #20 0x562108c9b124 <unknown>\nE       #21 0x7f70f7094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.224); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x562108c9bf83 <unknown>\n#1 0x562108954cf7 <unknown>\n#2 0x56210895b2a3 <unknown>\n#3 0x56210895d798 <unknown>\n#4 0x56210895d8ec <unknown>\n#5 0x56210899e6e2 <unknown>\n#6 0x5621089ce0b2 <unknown>\n#7 0x562108997b49 <unknown>\n#8 0x5621089ce4ce <unknown>\n#9 0x5621089ed006 <unknown>\n#10 0x5621089cde53 <unknown>\n#11 0x562108995dd4 <unknown>\n#12 0x5621089971de <unknown>\n#13 0x562108c60531 <unknown>\n#14 0x562108c64455 <unknown>\n#15 0x562108c4cf55 <unknown>\n#16 0x562108c650ef <unknown>\n#17 0x562108c3099f <unknown>\n#18 0x562108c89008 <unknown>\n#19 0x562108c891d7 <unknown>\n#20 0x562108c9b124 <unknown>\n#21 0x7f70f7094ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fdf89ddef80>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastRidingCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fdf88f31750>, 'council': 'EastRidingCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/EastRidingCouncil.py:89: in parse_data\n    drop.select_by_visible_text(str(user_paon))\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/select.py:117: in select_by_visible_text\n    self._set_selected(opt)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/select.py:211: in _set_selected\n    if not option.is_selected():\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:187: in is_selected\n    return self._execute(Command.IS_ELEMENT_SELECTED)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fdf898e69e0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x562108c891d7 \\\\u003Cunknown>\\\\n#20 0x562108c9b124 \\\\u003Cunknown>\\\\n#21 0x7f70f7094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.224); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x562108c9bf83 <unknown>\nE       #1 0x562108954cf7 <unknown>\nE       #2 0x56210895b2a3 <unknown>\nE       #3 0x56210895d798 <unknown>\nE       #4 0x56210895d8ec <unknown>\nE       #5 0x56210899e6e2 <unknown>\nE       #6 0x5621089ce0b2 <unknown>\nE       #7 0x562108997b49 <unknown>\nE       #8 0x5621089ce4ce <unknown>\nE       #9 0x5621089ed006 <unknown>\nE       #10 0x5621089cde53 <unknown>\nE       #11 0x562108995dd4 <unknown>\nE       #12 0x5621089971de <unknown>\nE       #13 0x562108c60531 <unknown>\nE       #14 0x562108c64455 <unknown>\nE       #15 0x562108c4cf55 <unknown>\nE       #16 0x562108c650ef <unknown>\nE       #17 0x562108c3099f <unknown>\nE       #18 0x562108c89008 <unknown>\nE       #19 0x562108c891d7 <unknown>\nE       #20 0x562108c9b124 <unknown>\nE       #21 0x7f70f7094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Given the council: EastRidingCouncil","time":{"start":1706660833290,"stop":1706660833291,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from EastRidingCouncil using local and the http://selenium:4444 is set","time":{"start":1706660833291,"stop":1706660839542,"duration":6251},"status":"failed","statusMessage":"Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.224); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x562108c9bf83 <unknown>\n#1 0x562108954cf7 <unknown>\n#2 0x56210895b2a3 <unknown>\n#3 0x56210895d798 <unknown>\n#4 0x56210895d8ec <unknown>\n#5 0x56210899e6e2 <unknown>\n#6 0x5621089ce0b2 <unknown>\n#7 0x562108997b49 <unknown>\n#8 0x5621089ce4ce <unknown>\n#9 0x5621089ed006 <unknown>\n#10 0x5621089cde53 <unknown>\n#11 0x562108995dd4 <unknown>\n#12 0x5621089971de <unknown>\n#13 0x562108c60531 <unknown>\n#14 0x562108c64455 <unknown>\n#15 0x562108c4cf55 <unknown>\n#16 0x562108c650ef <unknown>\n#17 0x562108c3099f <unknown>\n#18 0x562108c89008 <unknown>\n#19 0x562108c891d7 <unknown>\n#20 0x562108c9b124 <unknown>\n#21 0x7f70f7094ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.224); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x562108c9bf83 <unknown>\n#1 0x562108954cf7 <unknown>\n#2 0x56210895b2a3 <unknown>\n#3 0x56210895d798 <unknown>\n#4 0x56210895d8ec <unknown>\n#5 0x56210899e6e2 <unknown>\n#6 0x5621089ce0b2 <unknown>\n#7 0x562108997b49 <unknown>\n#8 0x5621089ce4ce <unknown>\n#9 0x5621089ed006 <unknown>\n#10 0x5621089cde53 <unknown>\n#11 0x562108995dd4 <unknown>\n#12 0x5621089971de <unknown>\n#13 0x562108c60531 <unknown>\n#14 0x562108c64455 <unknown>\n#15 0x562108c4cf55 <unknown>\n#16 0x562108c650ef <unknown>\n#17 0x562108c3099f <unknown>\n#18 0x562108c89008 <unknown>\n#19 0x562108c891d7 <unknown>\n#20 0x562108c9b124 <unknown>\n#21 0x7f70f7094ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1426-895"},{"name":"thread","value":"2868-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastRidingCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":89,"broken":0,"skipped":0,"passed":14,"unknown":0,"total":103},"items":[{"uid":"87a7e9263ed7524c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1535//#testresult/87a7e9263ed7524c","status":"passed","time":{"start":1706574343031,"stop":1706574351519,"duration":8488}},{"uid":"dcffb9fe392b4733","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1534//#testresult/dcffb9fe392b4733","status":"passed","time":{"start":1706487992841,"stop":1706488001649,"duration":8808}},{"uid":"817a1c0f5998e795","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1531//#testresult/817a1c0f5998e795","status":"passed","time":{"start":1706401681917,"stop":1706401690425,"duration":8508}},{"uid":"c327f76c1fbf6380","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1529//#testresult/c327f76c1fbf6380","status":"passed","time":{"start":1706315142133,"stop":1706315146488,"duration":4355}},{"uid":"83bd475461bc18f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1528//#testresult/83bd475461bc18f0","status":"failed","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.224); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5638d7278f83 <unknown>\n#1 0x5638d6f31cf7 <unknown>\n#2 0x5638d6f382a3 <unknown>\n#3 0x5638d6f3a798 <unknown>\n#4 0x5638d6f3a8ec <unknown>\n#5 0x5638d6f7b6e2 <unknown>\n#6 0x5638d6fab0b2 <unknown>\n#7 0x5638d6f74b49 <unknown>\n#8 0x5638d6fab4ce <unknown>\n#9 0x5638d6fca006 <unknown>\n#10 0x5638d6faae53 <unknown>\n#11 0x5638d6f72dd4 <unknown>\n#12 0x5638d6f741de <unknown>\n#13 0x5638d723d531 <unknown>\n#14 0x5638d7241455 <unknown>\n#15 0x5638d7229f55 <unknown>\n#16 0x5638d72420ef <unknown>\n#17 0x5638d720d99f <unknown>\n#18 0x5638d7266008 <unknown>\n#19 0x5638d72661d7 <unknown>\n#20 0x5638d7278124 <unknown>\n#21 0x7fe61b094ac3 <unknown>","time":{"start":1706228776607,"stop":1706228783454,"duration":6847}},{"uid":"87fcb27ec7ad0e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1523//#testresult/87fcb27ec7ad0e4","status":"passed","time":{"start":1706142474820,"stop":1706142484082,"duration":9262}},{"uid":"e8dbd23f0ffc641f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1522//#testresult/e8dbd23f0ffc641f","status":"passed","time":{"start":1706056084942,"stop":1706056094525,"duration":9583}},{"uid":"7d7421f94222c9db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1521//#testresult/7d7421f94222c9db","status":"passed","time":{"start":1705969691065,"stop":1705969701148,"duration":10083}},{"uid":"17eb112d6f7ae340","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1520//#testresult/17eb112d6f7ae340","status":"passed","time":{"start":1705883351449,"stop":1705883358382,"duration":6933}},{"uid":"7f99fde3b3ef1480","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1519//#testresult/7f99fde3b3ef1480","status":"passed","time":{"start":1705797049267,"stop":1705797053716,"duration":4449}},{"uid":"3623f1f671899ad2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1515//#testresult/3623f1f671899ad2","status":"passed","time":{"start":1705710429494,"stop":1705710433897,"duration":4403}},{"uid":"a87899005f5a757","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1511//#testresult/a87899005f5a757","status":"passed","time":{"start":1705624060997,"stop":1705624065896,"duration":4899}},{"uid":"7308afa90bc63b02","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1505//#testresult/7308afa90bc63b02","status":"failed","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.216); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55b66a4caf83 <unknown>\n#1 0x55b66a183cf7 <unknown>\n#2 0x55b66a18a2a3 <unknown>\n#3 0x55b66a18c798 <unknown>\n#4 0x55b66a18c8ec <unknown>\n#5 0x55b66a1d5c33 <unknown>\n#6 0x55b66a1c7181 <unknown>\n#7 0x55b66a1fd0b2 <unknown>\n#8 0x55b66a1c6b49 <unknown>\n#9 0x55b66a1fd4ce <unknown>\n#10 0x55b66a21c006 <unknown>\n#11 0x55b66a1fce53 <unknown>\n#12 0x55b66a1c4dd4 <unknown>\n#13 0x55b66a1c61de <unknown>\n#14 0x55b66a48f531 <unknown>\n#15 0x55b66a493455 <unknown>\n#16 0x55b66a47bf55 <unknown>\n#17 0x55b66a4940ef <unknown>\n#18 0x55b66a45f99f <unknown>\n#19 0x55b66a4b8008 <unknown>\n#20 0x55b66a4b81d7 <unknown>\n#21 0x55b66a4ca124 <unknown>\n#22 0x7eff5ba94ac3 <unknown>","time":{"start":1705537636880,"stop":1705537646195,"duration":9315}},{"uid":"a16f703e336fa5b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1500//#testresult/a16f703e336fa5b7","status":"passed","time":{"start":1705451244621,"stop":1705451249308,"duration":4687}},{"uid":"b3d1f234cc96886c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1499//#testresult/b3d1f234cc96886c","status":"passed","time":{"start":1705364896308,"stop":1705364900738,"duration":4430}},{"uid":"9ed2c47955595c01","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1492//#testresult/9ed2c47955595c01","status":"passed","time":{"start":1705295610249,"stop":1705295616390,"duration":6141}},{"uid":"22731237e26a135b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1491//#testresult/22731237e26a135b","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705295133801,"stop":1705295133803,"duration":2}},{"uid":"feb050fecb57df1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1490//#testresult/feb050fecb57df1f","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705278539741,"stop":1705278539744,"duration":3}},{"uid":"87e720b549ddc5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1485//#testresult/87e720b549ddc5e","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705192212951,"stop":1705192212954,"duration":3}},{"uid":"1e3bed3fc392f729","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1484//#testresult/1e3bed3fc392f729","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705105628437,"stop":1705105628439,"duration":2}}]},"tags":[]},"source":"490c5fbe25897fc9.json","parameterValues":["EastRidingCouncil","local","http://selenium:4444"]}