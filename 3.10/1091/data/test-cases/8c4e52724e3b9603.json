{"uid":"8c4e52724e3b9603","name":"Validate Council Output [BasingstokeCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"920a57bf4f74278e86b973f40cf06007","time":{"start":1698887629221,"stop":1698887630030,"duration":809},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f07e556e950>\nrequest = <FixtureRequest for <Function test_scenario_outline[BasingstokeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f07d24474c0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f07d24474c0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f07e556e950>\nrequest = <FixtureRequest for <Function test_scenario_outline[BasingstokeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f07d24474c0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f07d24474c0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","steps":[{"name":"Given the council: BasingstokeCouncil","time":{"start":1698887629222,"stop":1698887629222,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BasingstokeCouncil","time":{"start":1698887629222,"stop":1698887630027,"duration":805},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698887630027,"stop":1698887630028,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698887630028,"stop":1698887630030,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az651-783"},{"name":"thread","value":"2223-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BasingstokeCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":126,"broken":0,"skipped":0,"passed":46,"unknown":0,"total":172},"items":[{"uid":"8d8b17b8335b463c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1090//#testresult/8d8b17b8335b463c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878266706,"stop":1698878267342,"duration":636}},{"uid":"1123a7e5902addc3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1086//#testresult/1123a7e5902addc3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867372363,"stop":1698867373359,"duration":996}},{"uid":"eba5457bfc4b331f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1087//#testresult/eba5457bfc4b331f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867406389,"stop":1698867407117,"duration":728}},{"uid":"691ec64981b6d1b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1081//#testresult/691ec64981b6d1b9","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801502340,"stop":1698801503063,"duration":723}},{"uid":"a858944b67c95910","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/a858944b67c95910","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788410338,"stop":1698788410946,"duration":608}},{"uid":"d42f0287b699ed2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/d42f0287b699ed2f","status":"passed","time":{"start":1698714882387,"stop":1698714883179,"duration":792}},{"uid":"4537a75f14039652","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/4537a75f14039652","status":"passed","time":{"start":1698701275449,"stop":1698701276416,"duration":967}},{"uid":"24bea55adef15963","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/24bea55adef15963","status":"passed","time":{"start":1698700146355,"stop":1698700147111,"duration":756}},{"uid":"11745c0f184bd9a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/11745c0f184bd9a","status":"passed","time":{"start":1698692692089,"stop":1698692692838,"duration":749}},{"uid":"af62bb23c9fe2870","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/af62bb23c9fe2870","status":"passed","time":{"start":1698692659204,"stop":1698692659777,"duration":573}},{"uid":"2685284f25f24e38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/2685284f25f24e38","status":"passed","time":{"start":1698646218202,"stop":1698646219199,"duration":997}},{"uid":"d35380dcd9c5034","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/d35380dcd9c5034","status":"passed","time":{"start":1698628468782,"stop":1698628469749,"duration":967}},{"uid":"3e9677667d12e2e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/3e9677667d12e2e5","status":"passed","time":{"start":1698615107502,"stop":1698615108476,"duration":974}},{"uid":"db1c8a6966c5dd9e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/db1c8a6966c5dd9e","status":"passed","time":{"start":1698615029271,"stop":1698615030053,"duration":782}},{"uid":"4a94fc685cbdb73b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/4a94fc685cbdb73b","status":"passed","time":{"start":1698542274639,"stop":1698542275753,"duration":1114}},{"uid":"8fbad17e250d1df5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1053//#testresult/8fbad17e250d1df5","status":"passed","time":{"start":1698455466979,"stop":1698455467572,"duration":593}},{"uid":"3ee0fe07ff92c98c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1051//#testresult/3ee0fe07ff92c98c","status":"passed","time":{"start":1698369148815,"stop":1698369149432,"duration":617}},{"uid":"dc81b050cc80ce73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1050//#testresult/dc81b050cc80ce73","status":"passed","time":{"start":1698282734457,"stop":1698282735721,"duration":1264}},{"uid":"794478d2e547caac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1049//#testresult/794478d2e547caac","status":"passed","time":{"start":1698196407819,"stop":1698196408769,"duration":950}},{"uid":"83bcb5c4b5ed96a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1048//#testresult/83bcb5c4b5ed96a1","status":"passed","time":{"start":1698178134071,"stop":1698178135053,"duration":982}}]},"tags":[]},"source":"8c4e52724e3b9603.json","parameterValues":["BasingstokeCouncil"]}