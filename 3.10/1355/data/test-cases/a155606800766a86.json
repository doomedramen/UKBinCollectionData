{"uid":"a155606800766a86","name":"Validate Council Output [LeedsCityCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e870ec7a4b63dba5084328afd26df9c8","time":{"start":1704303726904,"stop":1704304027955,"duration":301051},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 298.848\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55d51c5e0f83 <unknown>\n#1 0x55d51c299cf7 <unknown>\n#2 0x55d51c27f7a1 <unknown>\n#3 0x55d51c27f44a <unknown>\n#4 0x55d51c27d7e1 <unknown>\n#5 0x55d51c27e18a <unknown>\n#6 0x55d51c28f07c <unknown>\n#7 0x55d51c2a77c1 <unknown>\n#8 0x55d51c2ad6bb <unknown>\n#9 0x55d51c27e92d <unknown>\n#10 0x55d51c2a75c2 <unknown>\n#11 0x55d51c332204 <unknown>\n#12 0x55d51c312e53 <unknown>\n#13 0x55d51c2dadd4 <unknown>\n#14 0x55d51c2dc1de <unknown>\n#15 0x55d51c5a5531 <unknown>\n#16 0x55d51c5a9455 <unknown>\n#17 0x55d51c591f55 <unknown>\n#18 0x55d51c5aa0ef <unknown>\n#19 0x55d51c57599f <unknown>\n#20 0x55d51c5ce008 <unknown>\n#21 0x55d51c5ce1d7 <unknown>\n#22 0x55d51c5e0124 <unknown>\n#23 0x7fc4a4694ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fe6b1e9f5b0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LeedsCityCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe6b0bc7460>, 'council': 'LeedsCityCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/LeedsCityCouncil.py:40: in parse_data\n    driver.get(page)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe6a0623eb0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x55d51c5ce1d7 \\\\u003Cunknown>\\\\n#22 0x55d51c5e0124 \\\\u003Cunknown>\\\\n#23 0x7fc4a4694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 298.848\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55d51c5e0f83 <unknown>\nE       #1 0x55d51c299cf7 <unknown>\nE       #2 0x55d51c27f7a1 <unknown>\nE       #3 0x55d51c27f44a <unknown>\nE       #4 0x55d51c27d7e1 <unknown>\nE       #5 0x55d51c27e18a <unknown>\nE       #6 0x55d51c28f07c <unknown>\nE       #7 0x55d51c2a77c1 <unknown>\nE       #8 0x55d51c2ad6bb <unknown>\nE       #9 0x55d51c27e92d <unknown>\nE       #10 0x55d51c2a75c2 <unknown>\nE       #11 0x55d51c332204 <unknown>\nE       #12 0x55d51c312e53 <unknown>\nE       #13 0x55d51c2dadd4 <unknown>\nE       #14 0x55d51c2dc1de <unknown>\nE       #15 0x55d51c5a5531 <unknown>\nE       #16 0x55d51c5a9455 <unknown>\nE       #17 0x55d51c591f55 <unknown>\nE       #18 0x55d51c5aa0ef <unknown>\nE       #19 0x55d51c57599f <unknown>\nE       #20 0x55d51c5ce008 <unknown>\nE       #21 0x55d51c5ce1d7 <unknown>\nE       #22 0x55d51c5e0124 <unknown>\nE       #23 0x7fc4a4694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 298.848\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55d51c5e0f83 <unknown>\n#1 0x55d51c299cf7 <unknown>\n#2 0x55d51c27f7a1 <unknown>\n#3 0x55d51c27f44a <unknown>\n#4 0x55d51c27d7e1 <unknown>\n#5 0x55d51c27e18a <unknown>\n#6 0x55d51c28f07c <unknown>\n#7 0x55d51c2a77c1 <unknown>\n#8 0x55d51c2ad6bb <unknown>\n#9 0x55d51c27e92d <unknown>\n#10 0x55d51c2a75c2 <unknown>\n#11 0x55d51c332204 <unknown>\n#12 0x55d51c312e53 <unknown>\n#13 0x55d51c2dadd4 <unknown>\n#14 0x55d51c2dc1de <unknown>\n#15 0x55d51c5a5531 <unknown>\n#16 0x55d51c5a9455 <unknown>\n#17 0x55d51c591f55 <unknown>\n#18 0x55d51c5aa0ef <unknown>\n#19 0x55d51c57599f <unknown>\n#20 0x55d51c5ce008 <unknown>\n#21 0x55d51c5ce1d7 <unknown>\n#22 0x55d51c5e0124 <unknown>\n#23 0x7fc4a4694ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fe6b1e9f5b0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LeedsCityCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe6b0bc7460>, 'council': 'LeedsCityCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/LeedsCityCouncil.py:40: in parse_data\n    driver.get(page)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe6a0623eb0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x55d51c5ce1d7 \\\\u003Cunknown>\\\\n#22 0x55d51c5e0124 \\\\u003Cunknown>\\\\n#23 0x7fc4a4694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 298.848\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55d51c5e0f83 <unknown>\nE       #1 0x55d51c299cf7 <unknown>\nE       #2 0x55d51c27f7a1 <unknown>\nE       #3 0x55d51c27f44a <unknown>\nE       #4 0x55d51c27d7e1 <unknown>\nE       #5 0x55d51c27e18a <unknown>\nE       #6 0x55d51c28f07c <unknown>\nE       #7 0x55d51c2a77c1 <unknown>\nE       #8 0x55d51c2ad6bb <unknown>\nE       #9 0x55d51c27e92d <unknown>\nE       #10 0x55d51c2a75c2 <unknown>\nE       #11 0x55d51c332204 <unknown>\nE       #12 0x55d51c312e53 <unknown>\nE       #13 0x55d51c2dadd4 <unknown>\nE       #14 0x55d51c2dc1de <unknown>\nE       #15 0x55d51c5a5531 <unknown>\nE       #16 0x55d51c5a9455 <unknown>\nE       #17 0x55d51c591f55 <unknown>\nE       #18 0x55d51c5aa0ef <unknown>\nE       #19 0x55d51c57599f <unknown>\nE       #20 0x55d51c5ce008 <unknown>\nE       #21 0x55d51c5ce1d7 <unknown>\nE       #22 0x55d51c5e0124 <unknown>\nE       #23 0x7fc4a4694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: LeedsCityCouncil","time":{"start":1704303726904,"stop":1704303726905,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from LeedsCityCouncil using local and the http://selenium:4444 is set","time":{"start":1704303726905,"stop":1704304027955,"duration":301050},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 298.848\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55d51c5e0f83 <unknown>\n#1 0x55d51c299cf7 <unknown>\n#2 0x55d51c27f7a1 <unknown>\n#3 0x55d51c27f44a <unknown>\n#4 0x55d51c27d7e1 <unknown>\n#5 0x55d51c27e18a <unknown>\n#6 0x55d51c28f07c <unknown>\n#7 0x55d51c2a77c1 <unknown>\n#8 0x55d51c2ad6bb <unknown>\n#9 0x55d51c27e92d <unknown>\n#10 0x55d51c2a75c2 <unknown>\n#11 0x55d51c332204 <unknown>\n#12 0x55d51c312e53 <unknown>\n#13 0x55d51c2dadd4 <unknown>\n#14 0x55d51c2dc1de <unknown>\n#15 0x55d51c5a5531 <unknown>\n#16 0x55d51c5a9455 <unknown>\n#17 0x55d51c591f55 <unknown>\n#18 0x55d51c5aa0ef <unknown>\n#19 0x55d51c57599f <unknown>\n#20 0x55d51c5ce008 <unknown>\n#21 0x55d51c5ce1d7 <unknown>\n#22 0x55d51c5e0124 <unknown>\n#23 0x7fc4a4694ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 298.848\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55d51c5e0f83 <unknown>\n#1 0x55d51c299cf7 <unknown>\n#2 0x55d51c27f7a1 <unknown>\n#3 0x55d51c27f44a <unknown>\n#4 0x55d51c27d7e1 <unknown>\n#5 0x55d51c27e18a <unknown>\n#6 0x55d51c28f07c <unknown>\n#7 0x55d51c2a77c1 <unknown>\n#8 0x55d51c2ad6bb <unknown>\n#9 0x55d51c27e92d <unknown>\n#10 0x55d51c2a75c2 <unknown>\n#11 0x55d51c332204 <unknown>\n#12 0x55d51c312e53 <unknown>\n#13 0x55d51c2dadd4 <unknown>\n#14 0x55d51c2dc1de <unknown>\n#15 0x55d51c5a5531 <unknown>\n#16 0x55d51c5a9455 <unknown>\n#17 0x55d51c591f55 <unknown>\n#18 0x55d51c5aa0ef <unknown>\n#19 0x55d51c57599f <unknown>\n#20 0x55d51c5ce008 <unknown>\n#21 0x55d51c5ce1d7 <unknown>\n#22 0x55d51c5e0124 <unknown>\n#23 0x7fc4a4694ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1020-8"},{"name":"thread","value":"2718-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LeedsCityCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":45,"unknown":0,"total":46},"items":[{"uid":"720e328fdfc66cc4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1354//#testresult/720e328fdfc66cc4","status":"passed","time":{"start":1704303692458,"stop":1704303702245,"duration":9787}},{"uid":"3a792f289d02096","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1352//#testresult/3a792f289d02096","status":"passed","time":{"start":1704301441741,"stop":1704301450087,"duration":8346}},{"uid":"eae51ca2c1407fe2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1349//#testresult/eae51ca2c1407fe2","status":"passed","time":{"start":1704244750207,"stop":1704244760447,"duration":10240}},{"uid":"e9db0c6bef8cb59d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1348//#testresult/e9db0c6bef8cb59d","status":"passed","time":{"start":1704180250034,"stop":1704180259869,"duration":9835}},{"uid":"b6e1062b8effeedf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1346//#testresult/b6e1062b8effeedf","status":"passed","time":{"start":1704158285279,"stop":1704158295686,"duration":10407}},{"uid":"ecbc79c9a9b6647e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1345//#testresult/ecbc79c9a9b6647e","status":"passed","time":{"start":1704114635484,"stop":1704114645189,"duration":9705}},{"uid":"ca9a020400a19411","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1343//#testresult/ca9a020400a19411","status":"passed","time":{"start":1704113723394,"stop":1704113732834,"duration":9440}},{"uid":"710e85fa35d395a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1341//#testresult/710e85fa35d395a1","status":"passed","time":{"start":1704112261969,"stop":1704112270813,"duration":8844}},{"uid":"c22adb999cc0f5e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1339//#testresult/c22adb999cc0f5e6","status":"passed","time":{"start":1704112109942,"stop":1704112119608,"duration":9666}},{"uid":"9eee63c13c00aa20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1338//#testresult/9eee63c13c00aa20","status":"passed","time":{"start":1704112090793,"stop":1704112100306,"duration":9513}},{"uid":"954410d4c5e00fcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1336//#testresult/954410d4c5e00fcd","status":"passed","time":{"start":1704111833070,"stop":1704111843438,"duration":10368}},{"uid":"936091933c4193dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1335//#testresult/936091933c4193dc","status":"passed","time":{"start":1704111525681,"stop":1704111535521,"duration":9840}},{"uid":"13369b3f3dd84c50","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1334//#testresult/13369b3f3dd84c50","status":"passed","time":{"start":1704111481330,"stop":1704111490459,"duration":9129}},{"uid":"7605e2f1b0a2b5ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1332//#testresult/7605e2f1b0a2b5ce","status":"passed","time":{"start":1704111336621,"stop":1704111346842,"duration":10221}},{"uid":"4a4041a83dbbbc1e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1330//#testresult/4a4041a83dbbbc1e","status":"passed","time":{"start":1704100029163,"stop":1704100038791,"duration":9628}},{"uid":"f5912a3c559e0656","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1329//#testresult/f5912a3c559e0656","status":"passed","time":{"start":1704072595717,"stop":1704072606374,"duration":10657}},{"uid":"f71b6b687da6c3c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1327//#testresult/f71b6b687da6c3c8","status":"passed","time":{"start":1704050395549,"stop":1704050403660,"duration":8111}},{"uid":"c1ecb6e11aa9a14f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1325//#testresult/c1ecb6e11aa9a14f","status":"passed","time":{"start":1704043937392,"stop":1704043946522,"duration":9130}},{"uid":"7a1d2bcb28a1a9bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1320//#testresult/7a1d2bcb28a1a9bc","status":"passed","time":{"start":1703985769567,"stop":1703985779717,"duration":10150}},{"uid":"5454f2f37deab020","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1316//#testresult/5454f2f37deab020","status":"passed","time":{"start":1703898966873,"stop":1703898977885,"duration":11012}}]},"tags":[]},"source":"a155606800766a86.json","parameterValues":["LeedsCityCouncil","local","http://selenium:4444"]}