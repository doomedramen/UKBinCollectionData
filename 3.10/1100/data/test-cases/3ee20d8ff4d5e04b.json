{"uid":"3ee20d8ff4d5e04b","name":"Validate Council Output [WiltshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aedb86c72e1849b4679ed1a7ee37cf59","time":{"start":1699007873884,"stop":1699007876393,"duration":2509},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f547f88e7a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiltshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5475bf4550>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f5475bf4550>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f547f88e7a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiltshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5475bf4550>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f5475bf4550>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","steps":[{"name":"Given the council: WiltshireCouncil","time":{"start":1699007873884,"stop":1699007873885,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WiltshireCouncil","time":{"start":1699007873885,"stop":1699007876390,"duration":2505},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699007876390,"stop":1699007876391,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699007876391,"stop":1699007876393,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az586-611"},{"name":"thread","value":"2611-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiltshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":163,"unknown":0,"total":175},"items":[{"uid":"3538f2e046a515a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1095//#testresult/3538f2e046a515a4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698988693161,"stop":1698988695545,"duration":2384}},{"uid":"8d3333679934527","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1094//#testresult/8d3333679934527","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698974465938,"stop":1698974474280,"duration":8342}},{"uid":"31b05d7d589ab8a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1091//#testresult/31b05d7d589ab8a1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698887834692,"stop":1698887837825,"duration":3133}},{"uid":"186214bc6c954d94","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1090//#testresult/186214bc6c954d94","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878565704,"stop":1698878571278,"duration":5574}},{"uid":"c82b503bd54a0452","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1086//#testresult/c82b503bd54a0452","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867831558,"stop":1698867834506,"duration":2948}},{"uid":"4e812de7870a0f5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1087//#testresult/4e812de7870a0f5c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867798819,"stop":1698867802875,"duration":4056}},{"uid":"e18c4772d0b178b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1081//#testresult/e18c4772d0b178b7","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801824068,"stop":1698801830670,"duration":6602}},{"uid":"5978f35dd62a0c7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1079//#testresult/5978f35dd62a0c7b","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788711795,"stop":1698788713841,"duration":2046}},{"uid":"a2ff21b00362fd5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1077//#testresult/a2ff21b00362fd5c","status":"passed","time":{"start":1698715244862,"stop":1698715251300,"duration":6438}},{"uid":"e71cd1e96501605f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1075//#testresult/e71cd1e96501605f","status":"passed","time":{"start":1698701650963,"stop":1698701655080,"duration":4117}},{"uid":"c39bbab094caff24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1073//#testresult/c39bbab094caff24","status":"passed","time":{"start":1698700547675,"stop":1698700553810,"duration":6135}},{"uid":"4d1128a7200416db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1070//#testresult/4d1128a7200416db","status":"passed","time":{"start":1698693126687,"stop":1698693130101,"duration":3414}},{"uid":"93ae454dfbd578e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1069//#testresult/93ae454dfbd578e2","status":"passed","time":{"start":1698692953952,"stop":1698692961358,"duration":7406}},{"uid":"7f90173def1dea35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1066//#testresult/7f90173def1dea35","status":"passed","time":{"start":1698646742622,"stop":1698646746014,"duration":3392}},{"uid":"49fa3fc43d657393","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1064//#testresult/49fa3fc43d657393","status":"passed","time":{"start":1698628844243,"stop":1698628847429,"duration":3186}},{"uid":"a9f973f2a8f9454e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1062//#testresult/a9f973f2a8f9454e","status":"passed","time":{"start":1698615507771,"stop":1698615510432,"duration":2661}},{"uid":"1b844514bf848495","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1061//#testresult/1b844514bf848495","status":"passed","time":{"start":1698615341109,"stop":1698615345629,"duration":4520}},{"uid":"1b6549fd5f1412e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1054//#testresult/1b6549fd5f1412e2","status":"passed","time":{"start":1698542644085,"stop":1698542651891,"duration":7806}},{"uid":"dcf48aa9c0cebeda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1053//#testresult/dcf48aa9c0cebeda","status":"passed","time":{"start":1698455840018,"stop":1698455847552,"duration":7534}},{"uid":"4722089fc28a24f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1051//#testresult/4722089fc28a24f8","status":"passed","time":{"start":1698369566033,"stop":1698369568292,"duration":2259}}]},"tags":[]},"source":"3ee20d8ff4d5e04b.json","parameterValues":["WiltshireCouncil"]}