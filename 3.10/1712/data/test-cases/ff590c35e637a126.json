{"uid":"ff590c35e637a126","name":"Validate Council Output [LondonBoroughHounslow-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2d5d41f2f80a2dfc213e6858543e98d5","time":{"start":1714091310681,"stop":1714091371924,"duration":61243},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f8b03272dd0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8b0244fa60>, 'council': 'LondonBoroughHounslow', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LondonBoroughHounslow.CouncilClass object at 0x7f8b022ad240>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100021577765', ...}\napi_url = 'https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder'\nuser_uprn = '100021577765', form_data = {'UPRN': '100021577765'}\nresponse = <Response [504]>\nsoup = <html>\n<head><title>504 Gateway Time-out</title></head>\n<body>\n<center><h1>504 Gateway Time-out</h1></center>\n</body>\n</html>\n\ndata = {'bins': []}, div_element = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder\"\n        user_uprn = kwargs.get(\"uprn\")\n    \n        # Check the UPRN is valid\n        check_uprn(user_uprn)\n    \n        # Create the form data\n        form_data = {\n            \"UPRN\": user_uprn,\n        }\n    \n        # Make a request to the API\n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        # Get the div element\n        div_element = soup.find(\"div\", {\"class\": \"bin_day_main_wrapper\"})\n    \n        # Get all bins with their corresponding dates using list comprehension\n        # This creates a list of tuples, where each tuple contains the bin type and collection date\n        bins_with_dates = [\n            (\n                bin.get_text().strip(),\n                h4.get_text().replace(\"This \", \"\").replace(\"Next \", \"\"),\n            )\n            # This first for loop iterates over each h4 element\n>           for h4 in div_element.find_all(\"h4\")\n            # This nested for loop iterates over each li element within the corresponding ul element\n            for bin in h4.find_next_sibling(\"ul\").find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/LondonBoroughHounslow.py:47: AttributeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f8b03272dd0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8b0244fa60>, 'council': 'LondonBoroughHounslow', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LondonBoroughHounslow.CouncilClass object at 0x7f8b022ad240>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100021577765', ...}\napi_url = 'https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder'\nuser_uprn = '100021577765', form_data = {'UPRN': '100021577765'}\nresponse = <Response [504]>\nsoup = <html>\n<head><title>504 Gateway Time-out</title></head>\n<body>\n<center><h1>504 Gateway Time-out</h1></center>\n</body>\n</html>\n\ndata = {'bins': []}, div_element = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder\"\n        user_uprn = kwargs.get(\"uprn\")\n    \n        # Check the UPRN is valid\n        check_uprn(user_uprn)\n    \n        # Create the form data\n        form_data = {\n            \"UPRN\": user_uprn,\n        }\n    \n        # Make a request to the API\n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        # Get the div element\n        div_element = soup.find(\"div\", {\"class\": \"bin_day_main_wrapper\"})\n    \n        # Get all bins with their corresponding dates using list comprehension\n        # This creates a list of tuples, where each tuple contains the bin type and collection date\n        bins_with_dates = [\n            (\n                bin.get_text().strip(),\n                h4.get_text().replace(\"This \", \"\").replace(\"Next \", \"\"),\n            )\n            # This first for loop iterates over each h4 element\n>           for h4 in div_element.find_all(\"h4\")\n            # This nested for loop iterates over each li element within the corresponding ul element\n            for bin in h4.find_next_sibling(\"ul\").find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/LondonBoroughHounslow.py:47: AttributeError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1714091310681,"stop":1714091310681,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from LondonBoroughHounslow using None and the None is set","time":{"start":1714091310682,"stop":1714091371924,"duration":61242},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az914-54"},{"name":"thread","value":"2654-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":223,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":260},"items":[{"uid":"fe497434be0606b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1711//#testresult/fe497434be0606b6","status":"passed","time":{"start":1714004961903,"stop":1714004964679,"duration":2776}},{"uid":"8656c8c8c2591f5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1710//#testresult/8656c8c8c2591f5d","status":"passed","time":{"start":1713918533042,"stop":1713918535794,"duration":2752}},{"uid":"345ebe44ff728b0b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1709//#testresult/345ebe44ff728b0b","status":"passed","time":{"start":1713832567219,"stop":1713832569697,"duration":2478}},{"uid":"e5541c09ee4bd836","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1708//#testresult/e5541c09ee4bd836","status":"passed","time":{"start":1713745733124,"stop":1713745736031,"duration":2907}},{"uid":"14f0a25ef46c7f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1707//#testresult/14f0a25ef46c7f6","status":"passed","time":{"start":1713659391094,"stop":1713659393872,"duration":2778}},{"uid":"42139d700f5c1e73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1706//#testresult/42139d700f5c1e73","status":"passed","time":{"start":1713572846389,"stop":1713572860916,"duration":14527}},{"uid":"aaae7f1165b14b13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1702//#testresult/aaae7f1165b14b13","status":"passed","time":{"start":1713486474313,"stop":1713486478080,"duration":3767}},{"uid":"9041ba62e4762688","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1698//#testresult/9041ba62e4762688","status":"passed","time":{"start":1713400085151,"stop":1713400088194,"duration":3043}},{"uid":"94eaf5678d673519","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1697//#testresult/94eaf5678d673519","status":"passed","time":{"start":1713313666765,"stop":1713313669886,"duration":3121}},{"uid":"680b2da46ade09fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1696//#testresult/680b2da46ade09fc","status":"passed","time":{"start":1713252758199,"stop":1713252761183,"duration":2984}},{"uid":"814ff0d766067de0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1695//#testresult/814ff0d766067de0","status":"passed","time":{"start":1713227266437,"stop":1713227269320,"duration":2883}},{"uid":"fc7cca52c0633b40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1692//#testresult/fc7cca52c0633b40","status":"passed","time":{"start":1713207797231,"stop":1713207799686,"duration":2455}},{"uid":"92ef32089eb3eefb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1683//#testresult/92ef32089eb3eefb","status":"passed","time":{"start":1713188331794,"stop":1713188334896,"duration":3102}},{"uid":"9f92172e9d58abc9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1682//#testresult/9f92172e9d58abc9","status":"passed","time":{"start":1713149812500,"stop":1713149815374,"duration":2874}},{"uid":"3ce59d1652206023","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1681//#testresult/3ce59d1652206023","status":"passed","time":{"start":1713053315642,"stop":1713053319914,"duration":4272}},{"uid":"f73c402e443d096b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1677//#testresult/f73c402e443d096b","status":"passed","time":{"start":1712967830723,"stop":1712967860696,"duration":29973}},{"uid":"b694429fe15b0b13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1675//#testresult/b694429fe15b0b13","status":"passed","time":{"start":1712881703390,"stop":1712881706430,"duration":3040}},{"uid":"25c8912223d6de36","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1674//#testresult/25c8912223d6de36","status":"passed","time":{"start":1712795283344,"stop":1712795286761,"duration":3417}},{"uid":"9b3fbce1861db9df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1673//#testresult/9b3fbce1861db9df","status":"passed","time":{"start":1712708827008,"stop":1712708830119,"duration":3111}},{"uid":"6662c7474339edff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1671//#testresult/6662c7474339edff","status":"passed","time":{"start":1712700381403,"stop":1712700384463,"duration":3060}}]},"tags":[]},"source":"ff590c35e637a126.json","parameterValues":["LondonBoroughHounslow","None","None"]}