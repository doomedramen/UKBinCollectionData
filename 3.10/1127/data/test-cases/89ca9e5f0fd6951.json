{"uid":"89ca9e5f0fd6951","name":"Validate Council Output [TorridgeDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"da903249529007ec357275ac5f075b6c","time":{"start":1699838604717,"stop":1699838609077,"duration":4360},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f84abfde9e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f84aab51ea0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f84aab51ea0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f84abfde9e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f84aab51ea0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f84aab51ea0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1699838604717,"stop":1699838604718,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from TorridgeDistrictCouncil using None and the None is set","time":{"start":1699838604718,"stop":1699838609074,"duration":4356},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699838609075,"stop":1699838609075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699838609075,"stop":1699838609077,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az616-267"},{"name":"thread","value":"2923-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":11},"items":[{"uid":"da729cea3194280c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1126//#testresult/da729cea3194280c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699752221424,"stop":1699752224213,"duration":2789}},{"uid":"f5ea99932d64d829","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1125//#testresult/f5ea99932d64d829","status":"passed","time":{"start":1699669624800,"stop":1699669627983,"duration":3183}},{"uid":"7bb589081f7c3258","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1124//#testresult/7bb589081f7c3258","status":"passed","time":{"start":1699579029663,"stop":1699579032743,"duration":3080}},{"uid":"1be7cee444c14487","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1123//#testresult/1be7cee444c14487","status":"passed","time":{"start":1699492713413,"stop":1699492716501,"duration":3088}},{"uid":"f15ff5458e1c2e51","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1121//#testresult/f15ff5458e1c2e51","status":"passed","time":{"start":1699481319026,"stop":1699481321717,"duration":2691}},{"uid":"c2891eec57deaa4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1117//#testresult/c2891eec57deaa4b","status":"passed","time":{"start":1699445352149,"stop":1699445354659,"duration":2510}},{"uid":"d34b0197bb86e0b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1115//#testresult/d34b0197bb86e0b6","status":"passed","time":{"start":1699406566254,"stop":1699406569338,"duration":3084}},{"uid":"c75420f62fcfa171","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1114//#testresult/c75420f62fcfa171","status":"passed","time":{"start":1699319983066,"stop":1699319985975,"duration":2909}},{"uid":"785209976bdc1d3e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1113//#testresult/785209976bdc1d3e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699233632274,"stop":1699233634942,"duration":2668}},{"uid":"98519137ec3c868e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1111//#testresult/98519137ec3c868e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699170747729,"stop":1699170750746,"duration":3017}}]},"tags":[]},"source":"89ca9e5f0fd6951.json","parameterValues":["TorridgeDistrictCouncil","None","None"]}