{"uid":"47cf338f211922a1","name":"Validate Council Output [StokeOnTrentCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"17b62d612f29f2bda9703e241b337994","time":{"start":1703853562068,"stop":1703853562571,"duration":503},"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f6c2a718160>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6c18a41a50>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:64: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f6c18b81f30>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\"\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:50: ConnectionAbortedError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f6c2a718160>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6c18a41a50>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:64: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f6c18b81f30>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\"\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:50: ConnectionAbortedError","steps":[{"name":"Given the council: StokeOnTrentCityCouncil","time":{"start":1703853562068,"stop":1703853562068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from StokeOnTrentCityCouncil using None and the None is set","time":{"start":1703853562069,"stop":1703853562571,"duration":502},"status":"failed","statusMessage":"Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az775-694"},{"name":"thread","value":"2782-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StokeOnTrentCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":56,"unknown":0,"total":59},"items":[{"uid":"2ca021a2edc1068","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1311//#testresult/2ca021a2edc1068","status":"passed","time":{"start":1703851301714,"stop":1703851304732,"duration":3018}},{"uid":"29dae2c23648bd95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1312//#testresult/29dae2c23648bd95","status":"passed","time":{"start":1703851292160,"stop":1703851294223,"duration":2063}},{"uid":"76f1912dbb1ba655","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1309//#testresult/76f1912dbb1ba655","status":"passed","time":{"start":1703812173381,"stop":1703812175342,"duration":1961}},{"uid":"7d4d4bd075aa5220","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1306//#testresult/7d4d4bd075aa5220","status":"passed","time":{"start":1703756322387,"stop":1703756324026,"duration":1639}},{"uid":"e437e7c42e357922","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1305//#testresult/e437e7c42e357922","status":"passed","time":{"start":1703726290571,"stop":1703726292027,"duration":1456}},{"uid":"526c7aa9046b75f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1304//#testresult/526c7aa9046b75f","status":"passed","time":{"start":1703717529224,"stop":1703717530863,"duration":1639}},{"uid":"7cc23b4550305751","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1303//#testresult/7cc23b4550305751","status":"passed","time":{"start":1703717401913,"stop":1703717404048,"duration":2135}},{"uid":"91f76bb1d6ad5f2e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1301//#testresult/91f76bb1d6ad5f2e","status":"passed","time":{"start":1703639863402,"stop":1703639864451,"duration":1049}},{"uid":"41faa25c19957469","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1300//#testresult/41faa25c19957469","status":"passed","time":{"start":1703553463487,"stop":1703553464814,"duration":1327}},{"uid":"cc8abb4de5c5044c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1298//#testresult/cc8abb4de5c5044c","status":"passed","time":{"start":1703541296260,"stop":1703541297302,"duration":1042}},{"uid":"55d800e123f4e453","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1295//#testresult/55d800e123f4e453","status":"passed","time":{"start":1703467318481,"stop":1703467319561,"duration":1080}},{"uid":"a0a4a7e70d0033bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1292//#testresult/a0a4a7e70d0033bf","status":"passed","time":{"start":1703416534716,"stop":1703416536452,"duration":1736}},{"uid":"39e649233a7bf61e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1291//#testresult/39e649233a7bf61e","status":"passed","time":{"start":1703416477239,"stop":1703416478255,"duration":1016}},{"uid":"3a66372b8e7441d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1289//#testresult/3a66372b8e7441d4","status":"passed","time":{"start":1703381173130,"stop":1703381174587,"duration":1457}},{"uid":"ff54aec13ad4f908","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1287//#testresult/ff54aec13ad4f908","status":"passed","time":{"start":1703294176088,"stop":1703294178956,"duration":2868}},{"uid":"435faf50f9e4bd91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1282//#testresult/435faf50f9e4bd91","status":"passed","time":{"start":1703207957237,"stop":1703207959055,"duration":1818}},{"uid":"ab4a57726a9b22f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1281//#testresult/ab4a57726a9b22f","status":"passed","time":{"start":1703121584761,"stop":1703121586481,"duration":1720}},{"uid":"357a954aad838961","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1280//#testresult/357a954aad838961","status":"passed","time":{"start":1703034429052,"stop":1703034430814,"duration":1762}},{"uid":"67c24eff3dbb35ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1279//#testresult/67c24eff3dbb35ea","status":"passed","time":{"start":1703024999768,"stop":1703025001311,"duration":1543}},{"uid":"e7656665d531fe15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1276//#testresult/e7656665d531fe15","status":"passed","time":{"start":1702948816824,"stop":1702948817987,"duration":1163}}]},"tags":[]},"source":"47cf338f211922a1.json","parameterValues":["StokeOnTrentCityCouncil","None","None"]}