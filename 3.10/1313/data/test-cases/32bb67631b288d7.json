{"uid":"32bb67631b288d7","name":"Validate Council Output [SouthNorfolkCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e5d83111f1a9552c04e48720eaedba42","time":{"start":1703853532269,"stop":1703853534197,"duration":1928},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc9a4447520>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc9919dcac0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc9919dcac0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc9a4447520>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc9919dcac0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc9919dcac0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: SouthNorfolkCouncil","time":{"start":1703853532269,"stop":1703853532269,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SouthNorfolkCouncil using None and the None is set","time":{"start":1703853532270,"stop":1703853534194,"duration":1924},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1703853534195,"stop":1703853534195,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1703853534195,"stop":1703853534197,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az775-694"},{"name":"thread","value":"2776-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthNorfolkCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":36,"broken":0,"skipped":0,"passed":62,"unknown":0,"total":98},"items":[{"uid":"f90cd8eb82d89375","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1311//#testresult/f90cd8eb82d89375","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703851279996,"stop":1703851281699,"duration":1703}},{"uid":"2b1d1408dac2b1ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1312//#testresult/2b1d1408dac2b1ad","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703851264869,"stop":1703851267438,"duration":2569}},{"uid":"5f77662fe72eb1ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1309//#testresult/5f77662fe72eb1ac","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703812155473,"stop":1703812157591,"duration":2118}},{"uid":"92d58e80d4200fec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1306//#testresult/92d58e80d4200fec","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703756308642,"stop":1703756309957,"duration":1315}},{"uid":"ec1d5803bb634780","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1305//#testresult/ec1d5803bb634780","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703726273348,"stop":1703726276032,"duration":2684}},{"uid":"72a46cda78fc7cbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1304//#testresult/72a46cda78fc7cbc","status":"passed","time":{"start":1703717515931,"stop":1703717517712,"duration":1781}},{"uid":"6c90a5a6a2eeeb2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1303//#testresult/6c90a5a6a2eeeb2f","status":"passed","time":{"start":1703717389519,"stop":1703717391204,"duration":1685}},{"uid":"bfbf371ccc934b06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1301//#testresult/bfbf371ccc934b06","status":"passed","time":{"start":1703639851314,"stop":1703639853667,"duration":2353}},{"uid":"d1b39b7604fc2991","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1300//#testresult/d1b39b7604fc2991","status":"passed","time":{"start":1703553453417,"stop":1703553456627,"duration":3210}},{"uid":"3d0931504be6b86c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1298//#testresult/3d0931504be6b86c","status":"passed","time":{"start":1703541282279,"stop":1703541283654,"duration":1375}},{"uid":"4d3762b3bf89b1e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1295//#testresult/4d3762b3bf89b1e8","status":"passed","time":{"start":1703467313683,"stop":1703467315264,"duration":1581}},{"uid":"7427f1d3b87d801b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1292//#testresult/7427f1d3b87d801b","status":"passed","time":{"start":1703416530065,"stop":1703416531824,"duration":1759}},{"uid":"b4c75d6d019dad42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1291//#testresult/b4c75d6d019dad42","status":"passed","time":{"start":1703416468674,"stop":1703416470426,"duration":1752}},{"uid":"b0ccb77011406695","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1289//#testresult/b0ccb77011406695","status":"passed","time":{"start":1703381145710,"stop":1703381148099,"duration":2389}},{"uid":"be3cfa9a6234cfcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1287//#testresult/be3cfa9a6234cfcd","status":"passed","time":{"start":1703294167251,"stop":1703294171385,"duration":4134}},{"uid":"c9d8ad7bbb51e586","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1282//#testresult/c9d8ad7bbb51e586","status":"passed","time":{"start":1703207953222,"stop":1703207956979,"duration":3757}},{"uid":"1314986e7cab4dd6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1281//#testresult/1314986e7cab4dd6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703121575085,"stop":1703121578937,"duration":3852}},{"uid":"f75b853bb30d2206","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1280//#testresult/f75b853bb30d2206","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703034412920,"stop":1703034414773,"duration":1853}},{"uid":"7d30d40db89c855f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1279//#testresult/7d30d40db89c855f","status":"passed","time":{"start":1703024992233,"stop":1703024993790,"duration":1557}},{"uid":"31f5f0035c6a7be3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1276//#testresult/31f5f0035c6a7be3","status":"passed","time":{"start":1702948808586,"stop":1702948810332,"duration":1746}}]},"tags":[]},"source":"32bb67631b288d7.json","parameterValues":["SouthNorfolkCouncil","None","None"]}