{"uid":"67d749a17f201a82","name":"Validate Council Output [StokeOnTrentCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"17b62d612f29f2bda9703e241b337994","time":{"start":1704113854941,"stop":1704113855427,"duration":486},"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f742b2d3640>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f741c92aad0>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f741dcee530>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\",\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:49: ConnectionAbortedError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f742b2d3640>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f741c92aad0>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f741dcee530>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\",\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:49: ConnectionAbortedError","steps":[{"name":"Given the council: StokeOnTrentCityCouncil","time":{"start":1704113854941,"stop":1704113854942,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from StokeOnTrentCityCouncil using None and the None is set","time":{"start":1704113854942,"stop":1704113855427,"duration":485},"status":"failed","statusMessage":"Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1543-731"},{"name":"thread","value":"2670-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StokeOnTrentCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":63,"unknown":0,"total":73},"items":[{"uid":"d4e5896d35e9b21a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1341//#testresult/d4e5896d35e9b21a","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704112430263,"stop":1704112431044,"duration":781}},{"uid":"379392f1773b3191","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1339//#testresult/379392f1773b3191","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704112330987,"stop":1704112331528,"duration":541}},{"uid":"176f85902c03a042","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1338//#testresult/176f85902c03a042","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704112259819,"stop":1704112260478,"duration":659}},{"uid":"5618c6f44906d529","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1336//#testresult/5618c6f44906d529","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704111991692,"stop":1704111992200,"duration":508}},{"uid":"15063baeff068991","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1335//#testresult/15063baeff068991","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704111693959,"stop":1704111694445,"duration":486}},{"uid":"c9a60dd656a4d877","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1334//#testresult/c9a60dd656a4d877","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704111643134,"stop":1704111643957,"duration":823}},{"uid":"b5d5b0407df2a278","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1332//#testresult/b5d5b0407df2a278","status":"passed","time":{"start":1704111482586,"stop":1704111484318,"duration":1732}},{"uid":"766058e0794edbf0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1330//#testresult/766058e0794edbf0","status":"passed","time":{"start":1704100146410,"stop":1704100147423,"duration":1013}},{"uid":"8778908d555f5abd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1329//#testresult/8778908d555f5abd","status":"passed","time":{"start":1704072421604,"stop":1704072422713,"duration":1109}},{"uid":"6c9ad27732558eb1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1327//#testresult/6c9ad27732558eb1","status":"passed","time":{"start":1704050558118,"stop":1704050559435,"duration":1317}},{"uid":"c55829a485cc850b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1325//#testresult/c55829a485cc850b","status":"passed","time":{"start":1704044077608,"stop":1704044079852,"duration":2244}},{"uid":"de2f584ef9870b2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1320//#testresult/de2f584ef9870b2c","status":"passed","time":{"start":1703985975816,"stop":1703985977533,"duration":1717}},{"uid":"d3d4ea222acfcde9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1316//#testresult/d3d4ea222acfcde9","status":"passed","time":{"start":1703899123202,"stop":1703899125419,"duration":2217}},{"uid":"c9eb0b0a374e0b6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1314//#testresult/c9eb0b0a374e0b6b","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1703853646558,"stop":1703853647388,"duration":830}},{"uid":"2ca021a2edc1068","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1311//#testresult/2ca021a2edc1068","status":"passed","time":{"start":1703851301714,"stop":1703851304732,"duration":3018}},{"uid":"29dae2c23648bd95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1312//#testresult/29dae2c23648bd95","status":"passed","time":{"start":1703851292160,"stop":1703851294223,"duration":2063}},{"uid":"76f1912dbb1ba655","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1309//#testresult/76f1912dbb1ba655","status":"passed","time":{"start":1703812173381,"stop":1703812175342,"duration":1961}},{"uid":"7d4d4bd075aa5220","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1306//#testresult/7d4d4bd075aa5220","status":"passed","time":{"start":1703756322387,"stop":1703756324026,"duration":1639}},{"uid":"e437e7c42e357922","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1305//#testresult/e437e7c42e357922","status":"passed","time":{"start":1703726290571,"stop":1703726292027,"duration":1456}},{"uid":"526c7aa9046b75f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1304//#testresult/526c7aa9046b75f","status":"passed","time":{"start":1703717529224,"stop":1703717530863,"duration":1639}}]},"tags":[]},"source":"67d749a17f201a82.json","parameterValues":["StokeOnTrentCityCouncil","None","None"]}