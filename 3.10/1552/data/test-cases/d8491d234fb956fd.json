{"uid":"d8491d234fb956fd","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1707352060022,"stop":1707352090768,"duration":30746},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fe9eb86f2e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe9eb36efb0>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fe9fef8a6e0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fe9eb86f2e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe9eb36efb0>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fe9fef8a6e0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1707352060022,"stop":1707352060022,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1707352060023,"stop":1707352090768,"duration":30745},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az564-333"},{"name":"thread","value":"2713-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":178,"unknown":0,"total":185},"items":[{"uid":"f80847678aa0accc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1551//#testresult/f80847678aa0accc","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1707265558958,"stop":1707265589990,"duration":31032}},{"uid":"123789140d87ec27","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1549//#testresult/123789140d87ec27","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1707179246611,"stop":1707179277501,"duration":30890}},{"uid":"c8dda46ea5a72e65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1548//#testresult/c8dda46ea5a72e65","status":"passed","time":{"start":1707092973528,"stop":1707092974445,"duration":917}},{"uid":"1f1b66a979f8b445","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1547//#testresult/1f1b66a979f8b445","status":"passed","time":{"start":1707006602456,"stop":1707006609470,"duration":7014}},{"uid":"fa83bd6f893cbcd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1545//#testresult/fa83bd6f893cbcd8","status":"passed","time":{"start":1706941950613,"stop":1706941951577,"duration":964}},{"uid":"bc8efb95aeb19fa2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1544//#testresult/bc8efb95aeb19fa2","status":"passed","time":{"start":1706939010401,"stop":1706939011101,"duration":700}},{"uid":"74957380ff5920e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1542//#testresult/74957380ff5920e1","status":"passed","time":{"start":1706938546091,"stop":1706938547018,"duration":927}},{"uid":"19f9a504389c4aff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1541//#testresult/19f9a504389c4aff","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1706920076055,"stop":1706920107205,"duration":31150}},{"uid":"1aa117d0708c1720","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1540//#testresult/1aa117d0708c1720","status":"passed","time":{"start":1706833622369,"stop":1706833623168,"duration":799}},{"uid":"5fab280888e43972","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1538//#testresult/5fab280888e43972","status":"passed","time":{"start":1706747313854,"stop":1706747317770,"duration":3916}},{"uid":"67a038f7f0182098","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1537//#testresult/67a038f7f0182098","status":"passed","time":{"start":1706660909822,"stop":1706660910795,"duration":973}},{"uid":"69fb6e672ced9cf2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1535//#testresult/69fb6e672ced9cf2","status":"passed","time":{"start":1706574413645,"stop":1706574419003,"duration":5358}},{"uid":"d833c3412e8331a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1534//#testresult/d833c3412e8331a4","status":"passed","time":{"start":1706488108900,"stop":1706488112705,"duration":3805}},{"uid":"d68dadf2dedc2a53","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1531//#testresult/d68dadf2dedc2a53","status":"passed","time":{"start":1706401784257,"stop":1706401788526,"duration":4269}},{"uid":"82b1bb1f6ef31fb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1529//#testresult/82b1bb1f6ef31fb9","status":"passed","time":{"start":1706315230407,"stop":1706315235110,"duration":4703}},{"uid":"2647a559a5633ec9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1528//#testresult/2647a559a5633ec9","status":"passed","time":{"start":1706228885643,"stop":1706228886666,"duration":1023}},{"uid":"bc642ec353dd4b32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1523//#testresult/bc642ec353dd4b32","status":"passed","time":{"start":1706142561571,"stop":1706142567797,"duration":6226}},{"uid":"41523fd29f9b3c33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1522//#testresult/41523fd29f9b3c33","status":"passed","time":{"start":1706056169968,"stop":1706056174167,"duration":4199}},{"uid":"71f12586bdac14c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1521//#testresult/71f12586bdac14c8","status":"passed","time":{"start":1705969800687,"stop":1705969801690,"duration":1003}},{"uid":"289c8911adeaee5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1520//#testresult/289c8911adeaee5d","status":"passed","time":{"start":1705883487311,"stop":1705883488422,"duration":1111}}]},"tags":[]},"source":"d8491d234fb956fd.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}