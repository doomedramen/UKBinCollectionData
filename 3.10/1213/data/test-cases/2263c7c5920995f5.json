{"uid":"2263c7c5920995f5","name":"Validate Council Output [EastLindseyDistrictCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"eb374edb17b4c377c221232fbb03cdfe","time":{"start":1701936447819,"stop":1701936453233,"duration":5414},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7fef51dbc1f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fef40150490>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7fef519b6770>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': [{'collectionDate': '15/12/2023', 'type': 'Domestic Waste (Black Bin)'}]}\nuser_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY', web_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fd0f8836f26c3918a4a0a4f07ad9f2d3\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"fd0f8836f26c3918a4a0a4f07ad9f2d3\", element=\"6F0A1F49DF3B43ACF37BB3E8371A1190_element_8\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"fd0f8836f26c3918a4a0a4f07ad9f2d3\", element=\"6F0A1F49DF3B43ACF37BB3E8371A1190_element_10\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7fef51dbc1f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fef40150490>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7fef519b6770>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': [{'collectionDate': '15/12/2023', 'type': 'Domestic Waste (Black Bin)'}]}\nuser_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY', web_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fd0f8836f26c3918a4a0a4f07ad9f2d3\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"fd0f8836f26c3918a4a0a4f07ad9f2d3\", element=\"6F0A1F49DF3B43ACF37BB3E8371A1190_element_8\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"fd0f8836f26c3918a4a0a4f07ad9f2d3\", element=\"6F0A1F49DF3B43ACF37BB3E8371A1190_element_10\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","steps":[{"name":"Given the council: EastLindseyDistrictCouncil","time":{"start":1701936447819,"stop":1701936447820,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from EastLindseyDistrictCouncil using local and the http://selenium:4444 is set","time":{"start":1701936447820,"stop":1701936453233,"duration":5413},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az985-106"},{"name":"thread","value":"2709-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastLindseyDistrictCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":0,"skipped":0,"passed":24,"unknown":0,"total":54},"items":[{"uid":"352a5802590ae9fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1211//#testresult/352a5802590ae9fa","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701911927866,"stop":1701911936248,"duration":8382}},{"uid":"fb557d268af06a73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1209//#testresult/fb557d268af06a73","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701904851165,"stop":1701904857393,"duration":6228}},{"uid":"f3f91999b7e78a5a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1201//#testresult/f3f91999b7e78a5a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701882515178,"stop":1701882520291,"duration":5113}},{"uid":"1a511427172acdf8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1199//#testresult/1a511427172acdf8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701825537973,"stop":1701825543878,"duration":5905}},{"uid":"357ad8ce601a2967","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1198//#testresult/357ad8ce601a2967","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701795548964,"stop":1701795555753,"duration":6789}},{"uid":"59a1a712a4d34a7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1197//#testresult/59a1a712a4d34a7c","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701795486182,"stop":1701795491581,"duration":5399}},{"uid":"fd2b94d6495faa5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1193//#testresult/fd2b94d6495faa5d","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701758495794,"stop":1701758501026,"duration":5232}},{"uid":"c02489ba9a717c69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1192//#testresult/c02489ba9a717c69","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701758498338,"stop":1701758504444,"duration":6106}},{"uid":"8356d8425802bed7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1191//#testresult/8356d8425802bed7","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701739153848,"stop":1701739160524,"duration":6676}},{"uid":"2118a233b978d50a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1187//#testresult/2118a233b978d50a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701714323123,"stop":1701714329178,"duration":6055}},{"uid":"99b42ad2e3b02dd1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1186//#testresult/99b42ad2e3b02dd1","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701714272797,"stop":1701714280440,"duration":7643}},{"uid":"8bf8d188faf101a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1184//#testresult/8bf8d188faf101a9","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701652724664,"stop":1701652747741,"duration":23077}},{"uid":"9166a404e7c3de56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1183//#testresult/9166a404e7c3de56","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701566516738,"stop":1701566525476,"duration":8738}},{"uid":"d2aecf99353f53f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1182//#testresult/d2aecf99353f53f","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701479732029,"stop":1701479739902,"duration":7873}},{"uid":"78d01db7633359f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1179//#testresult/78d01db7633359f9","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701419075815,"stop":1701419080989,"duration":5174}},{"uid":"56f3a65af2de1040","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1176//#testresult/56f3a65af2de1040","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701418886042,"stop":1701418891793,"duration":5751}},{"uid":"2a1bba71c390aacf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1175//#testresult/2a1bba71c390aacf","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701414337019,"stop":1701414355059,"duration":18040}},{"uid":"1b0f5985cbe04111","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1174//#testresult/1b0f5985cbe04111","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701414295268,"stop":1701414303296,"duration":8028}},{"uid":"eb78cccbd5ea6f0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1173//#testresult/eb78cccbd5ea6f0e","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701393879823,"stop":1701393886955,"duration":7132}},{"uid":"304bc1f301355fdc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1169//#testresult/304bc1f301355fdc","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701353323577,"stop":1701353329484,"duration":5907}}]},"tags":[]},"source":"2263c7c5920995f5.json","parameterValues":["EastLindseyDistrictCouncil","local","http://selenium:4444"]}