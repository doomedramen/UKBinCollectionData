{"uid":"b696dc36b84aab94","name":"Validate Council Output [WestSuffolkCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"446a4369fb450b9e3ee2f74bbf8ed65b","time":{"start":1709598500125,"stop":1709598516039,"duration":15914},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7f520a917010>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f520964b1f0>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8a3c8ae00eda8ec124e98fc1f7994ae7\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f5209d99ab0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7f520a917010>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f520964b1f0>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8a3c8ae00eda8ec124e98fc1f7994ae7\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f5209d99ab0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Given the council: WestSuffolkCouncil","time":{"start":1709598500125,"stop":1709598500126,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestSuffolkCouncil using local and the http://selenium:4444 is set","time":{"start":1709598500126,"stop":1709598516039,"duration":15913},"status":"failed","statusMessage":"Message: \n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1148-702"},{"name":"thread","value":"2700-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":170,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":170},"items":[{"uid":"207660cab8fda1cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1592//#testresult/207660cab8fda1cf","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1709512181922,"stop":1709512193775,"duration":11853}},{"uid":"c4b5219d18b265ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1572//#testresult/c4b5219d18b265ef","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708561725607,"stop":1708561738555,"duration":12948}},{"uid":"b40a11c38033beee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1570//#testresult/b40a11c38033beee","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708475310610,"stop":1708475327367,"duration":16757}},{"uid":"4aa0e97b4aaed87","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1569//#testresult/4aa0e97b4aaed87","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708388941011,"stop":1708388954175,"duration":13164}},{"uid":"35e5c43d55674fb7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1568//#testresult/35e5c43d55674fb7","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708302636594,"stop":1708302646654,"duration":10060}},{"uid":"ae3dbd5104535d74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1567//#testresult/ae3dbd5104535d74","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708216265194,"stop":1708216276126,"duration":10932}},{"uid":"87fcf0d4de3db877","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1566//#testresult/87fcf0d4de3db877","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708129733527,"stop":1708129747000,"duration":13473}},{"uid":"5305d242fcabe523","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1563//#testresult/5305d242fcabe523","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708043319619,"stop":1708043333220,"duration":13601}},{"uid":"298c26a751fd1926","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1562//#testresult/298c26a751fd1926","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707956904757,"stop":1707956916260,"duration":11503}},{"uid":"9d8458bad7f563ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1561//#testresult/9d8458bad7f563ae","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707870532295,"stop":1707870543938,"duration":11643}},{"uid":"542ea52917a58f4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1560//#testresult/542ea52917a58f4a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707784172118,"stop":1707784183402,"duration":11284}},{"uid":"4a8f47231b71da8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1559//#testresult/4a8f47231b71da8f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707697768688,"stop":1707697781728,"duration":13040}},{"uid":"c5d51c61ead615a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1556//#testresult/c5d51c61ead615a9","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707611477432,"stop":1707611491246,"duration":13814}},{"uid":"667efdcfea3d2b7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1554//#testresult/667efdcfea3d2b7e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707524894890,"stop":1707524906158,"duration":11268}},{"uid":"1e157b9d102e13eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1553//#testresult/1e157b9d102e13eb","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707438534386,"stop":1707438549589,"duration":15203}},{"uid":"5c2b67c962feef9a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1552//#testresult/5c2b67c962feef9a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707352175186,"stop":1707352186934,"duration":11748}},{"uid":"b58e43958bbfcfe8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1551//#testresult/b58e43958bbfcfe8","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707265669413,"stop":1707265683393,"duration":13980}},{"uid":"125ef4d2371498f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1549//#testresult/125ef4d2371498f4","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707179340596,"stop":1707179351051,"duration":10455}},{"uid":"2aa75b9b7917e54e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1548//#testresult/2aa75b9b7917e54e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707093056472,"stop":1707093067241,"duration":10769}},{"uid":"3d05800c52a4bc38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/1547//#testresult/3d05800c52a4bc38","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707006699206,"stop":1707006709978,"duration":10772}}]},"tags":[]},"source":"b696dc36b84aab94.json","parameterValues":["WestSuffolkCouncil","local","http://selenium:4444"]}