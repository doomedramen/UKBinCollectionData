{"uid":"ee03b7af4ac32f4d","name":"Validate Council Output [DerbyshireDalesDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9239389a2bc21b81d8e3ab51bc478351","time":{"start":1727914446320,"stop":1727914475327,"duration":29007},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find'","statusTrace":"fixturefunc = <function scrape_step at 0x7fc78ca27060>\nrequest = <FixtureRequest for <Function test_scenario_outline[DerbyshireDalesDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fc79f389610>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <DerbyshireDalesDistrictCouncil.CouncilClass object at 0x7fc78c4284d0>\npage = 'https://selfserve.derbyshiredales.gov.uk/renderform.aspx?t=103&k=9644C066D2168A4C21BCDA351DA2642526359DFF'\nkwargs = {'council_module_str': 'DerbyshireDalesDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"4b714e163c6604f83787344f16f890cc\")>\ndata = {'bins': []}, user_uprn = '10070102161', user_postcode = 'DE4 3AS'\nweb_driver = 'http://localhost:4444', headless = True\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"4b714e163c6604f83787344f16f890cc\", element=\"f.12156A55E5B5B9DFDBE5D3CB4B8B72CF.d.861CC4C91D181BDE6BF26DD71A01CBF4.e.5\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            page = \"https://selfserve.derbyshiredales.gov.uk/renderform.aspx?t=103&k=9644C066D2168A4C21BCDA351DA2642526359DFF\"\n    \n            data = {\"bins\": []}\n    \n            user_uprn = kwargs.get(\"uprn\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_uprn(user_uprn)\n            check_postcode(user_postcode)\n    \n            # Create Selenium webdriver\n            driver = create_webdriver(web_driver, headless, None, __name__)\n            driver.get(page)\n    \n            # Populate postcode field\n            inputElement_postcode = driver.find_element(\n                By.ID,\n                \"ctl00_ContentPlaceHolder1_FF2924TB\",\n            )\n            inputElement_postcode.send_keys(user_postcode)\n    \n            # Click search button\n            driver.find_element(\n                By.ID,\n                \"ctl00_ContentPlaceHolder1_FF2924BTN\",\n            ).click()\n    \n            # Wait for the 'Select address' dropdown to appear and select option matching UPRN\n            dropdown = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ctl00_ContentPlaceHolder1_FF2924DDL\")\n                )\n            )\n            # Create a 'Select' for it, then select the matching URPN option\n            dropdownSelect = Select(dropdown)\n            dropdownSelect.select_by_value(\"U\" + user_uprn)\n    \n            # Wait for the submit button to appear, then click it to get the collection dates\n            submit = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ctl00_ContentPlaceHolder1_btnSubmit\")\n                )\n            )\n            submit.click()\n    \n            soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n            bin_rows = (\n                soup.find(\"div\", id=\"ctl00_ContentPlaceHolder1_pnlConfirmation\")\n>               .find(\"div\", {\"class\": \"row\"})\n                .find_all(\"div\", {\"class\": \"row\"})\n            )\nE           AttributeError: 'NoneType' object has no attribute 'find'\n\nuk_bin_collection/uk_bin_collection/councils/DerbyshireDalesDistrictCouncil.py:72: AttributeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find'","statusTrace":"fixturefunc = <function scrape_step at 0x7fc78ca27060>\nrequest = <FixtureRequest for <Function test_scenario_outline[DerbyshireDalesDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fc79f389610>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <DerbyshireDalesDistrictCouncil.CouncilClass object at 0x7fc78c4284d0>\npage = 'https://selfserve.derbyshiredales.gov.uk/renderform.aspx?t=103&k=9644C066D2168A4C21BCDA351DA2642526359DFF'\nkwargs = {'council_module_str': 'DerbyshireDalesDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"4b714e163c6604f83787344f16f890cc\")>\ndata = {'bins': []}, user_uprn = '10070102161', user_postcode = 'DE4 3AS'\nweb_driver = 'http://localhost:4444', headless = True\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"4b714e163c6604f83787344f16f890cc\", element=\"f.12156A55E5B5B9DFDBE5D3CB4B8B72CF.d.861CC4C91D181BDE6BF26DD71A01CBF4.e.5\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            page = \"https://selfserve.derbyshiredales.gov.uk/renderform.aspx?t=103&k=9644C066D2168A4C21BCDA351DA2642526359DFF\"\n    \n            data = {\"bins\": []}\n    \n            user_uprn = kwargs.get(\"uprn\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_uprn(user_uprn)\n            check_postcode(user_postcode)\n    \n            # Create Selenium webdriver\n            driver = create_webdriver(web_driver, headless, None, __name__)\n            driver.get(page)\n    \n            # Populate postcode field\n            inputElement_postcode = driver.find_element(\n                By.ID,\n                \"ctl00_ContentPlaceHolder1_FF2924TB\",\n            )\n            inputElement_postcode.send_keys(user_postcode)\n    \n            # Click search button\n            driver.find_element(\n                By.ID,\n                \"ctl00_ContentPlaceHolder1_FF2924BTN\",\n            ).click()\n    \n            # Wait for the 'Select address' dropdown to appear and select option matching UPRN\n            dropdown = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ctl00_ContentPlaceHolder1_FF2924DDL\")\n                )\n            )\n            # Create a 'Select' for it, then select the matching URPN option\n            dropdownSelect = Select(dropdown)\n            dropdownSelect.select_by_value(\"U\" + user_uprn)\n    \n            # Wait for the submit button to appear, then click it to get the collection dates\n            submit = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ctl00_ContentPlaceHolder1_btnSubmit\")\n                )\n            )\n            submit.click()\n    \n            soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n            bin_rows = (\n                soup.find(\"div\", id=\"ctl00_ContentPlaceHolder1_pnlConfirmation\")\n>               .find(\"div\", {\"class\": \"row\"})\n                .find_all(\"div\", {\"class\": \"row\"})\n            )\nE           AttributeError: 'NoneType' object has no attribute 'find'\n\nuk_bin_collection/uk_bin_collection/councils/DerbyshireDalesDistrictCouncil.py:72: AttributeError","steps":[{"name":"Given the council","time":{"start":1727914446320,"stop":1727914446321,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1727914446321,"stop":1727914475327,"duration":29006},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f63da0d6adfecd3c","name":"stdout","source":"f63da0d6adfecd3c.txt","type":"text/plain","size":118}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az700-494"},{"name":"thread","value":"2830-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"DerbyshireDalesDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":157,"unknown":0,"total":159},"items":[{"uid":"ed6a41cd0ccc2cf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2139//#testresult/ed6a41cd0ccc2cf6","status":"passed","time":{"start":1727827961068,"stop":1727827979235,"duration":18167}},{"uid":"c9f294144dabbcf1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2138//#testresult/c9f294144dabbcf1","status":"passed","time":{"start":1727741577660,"stop":1727741603779,"duration":26119}},{"uid":"e84617dee4c387ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2137//#testresult/e84617dee4c387ec","status":"passed","time":{"start":1727655183373,"stop":1727655215399,"duration":32026}},{"uid":"a55e096b6651e639","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2136//#testresult/a55e096b6651e639","status":"passed","time":{"start":1727568771994,"stop":1727568857561,"duration":85567}},{"uid":"79c57f4965667911","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2135//#testresult/79c57f4965667911","status":"passed","time":{"start":1727482377060,"stop":1727482430380,"duration":53320}},{"uid":"7ec8e70b0bc1ef97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2131//#testresult/7ec8e70b0bc1ef97","status":"passed","time":{"start":1727422317589,"stop":1727422346468,"duration":28879}},{"uid":"cf94008069fac3a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2130//#testresult/cf94008069fac3a7","status":"passed","time":{"start":1727395982914,"stop":1727396085044,"duration":102130}},{"uid":"2ab4cc70e8b3b78b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2129//#testresult/2ab4cc70e8b3b78b","status":"passed","time":{"start":1727309594896,"stop":1727309615373,"duration":20477}},{"uid":"5dc876b8db6d954a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2128//#testresult/5dc876b8db6d954a","status":"passed","time":{"start":1727223170087,"stop":1727223270603,"duration":100516}},{"uid":"cd7d2c06551ae307","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2127//#testresult/cd7d2c06551ae307","status":"passed","time":{"start":1727136924539,"stop":1727136965668,"duration":41129}},{"uid":"ef199a8be0504ab7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2126//#testresult/ef199a8be0504ab7","status":"passed","time":{"start":1727050558782,"stop":1727050596583,"duration":37801}},{"uid":"e8acb9eff0137de1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2125//#testresult/e8acb9eff0137de1","status":"passed","time":{"start":1726964087001,"stop":1726964129650,"duration":42649}},{"uid":"b88b909b9570e6f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2124//#testresult/b88b909b9570e6f3","status":"passed","time":{"start":1726877743282,"stop":1726877806986,"duration":63704}},{"uid":"ee2d6ab284e7c8f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2123//#testresult/ee2d6ab284e7c8f6","status":"passed","time":{"start":1726791219101,"stop":1726791291982,"duration":72881}},{"uid":"251110dd27fd05cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2122//#testresult/251110dd27fd05cb","status":"passed","time":{"start":1726704892089,"stop":1726704913844,"duration":21755}},{"uid":"d0017486a09dba6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2121//#testresult/d0017486a09dba6b","status":"passed","time":{"start":1726618432605,"stop":1726618479056,"duration":46451}},{"uid":"cea338e0f8196b44","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2120//#testresult/cea338e0f8196b44","status":"passed","time":{"start":1726532061913,"stop":1726532079954,"duration":18041}},{"uid":"6b4ae8cf0f254ef4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2116//#testresult/6b4ae8cf0f254ef4","status":"passed","time":{"start":1726445751419,"stop":1726445790206,"duration":38787}},{"uid":"bbdfe863fe7f1295","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2115//#testresult/bbdfe863fe7f1295","status":"passed","time":{"start":1726359253598,"stop":1726359269649,"duration":16051}},{"uid":"a92c4b80ef35a690","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2114//#testresult/a92c4b80ef35a690","status":"passed","time":{"start":1726272788737,"stop":1726272866019,"duration":77282}}]},"tags":[]},"source":"ee03b7af4ac32f4d.json","parameterValues":["DerbyshireDalesDistrictCouncil"]}