{"uid":"7b48d4dd186681e4","name":"Validate Council Output [BarnetCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cae1315fb7beebce62becdf5abb57d74","time":{"start":1727913719815,"stop":1727913845949,"duration":126134},"status":"failed","statusMessage":"UnboundLocalError: cannot access local variable 'addr_option' where it is not associated with a value","statusTrace":"fixturefunc = <function scrape_step at 0x7f0947334540>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f0959e3b650>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BarnetCouncil.CouncilClass object at 0x7f094675f710>\npage = 'https://account.barnet.gov.uk/Forms/Home/Redirector/Index/?id=6a2ac067-3322-46e5-96e4-16c0c214454a&mod=OA&casetype=BAR&formname=BNTCOLDATE'\nkwargs = {'council_module_str': 'BarnetCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"87cdf19ca54919d4a72f217670aac2b6\")>\nuser_postcode = 'HA8 7NA'\nuser_paon = 'HA8 7NA, 2, MANOR PARK GARDENS, EDGWARE, BARNET', headless = True\nweb_driver = 'http://localhost:4444'\naccept_cookies = <selenium.webdriver.remote.webelement.WebElement (session=\"87cdf19ca54919d4a72f217670aac2b6\", element=\"f.6DFB76BE60BA92DC37D44AE415CDAD4C.d.F4C69EAE140306D72F1759C553405466.e.15\")>\naccept_cookies_submit = <selenium.webdriver.remote.webelement.WebElement (session=\"87cdf19ca54919d4a72f217670aac2b6\", element=\"f.6DFB76BE60BA92DC37D44AE415CDAD4C.d.F4C69EAE140306D72F1759C553405466.e.22\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            user_postcode = kwargs.get(\"postcode\")\n            if not user_postcode:\n                raise ValueError(\"No postcode provided.\")\n            check_postcode(user_postcode)\n    \n            user_paon = kwargs.get(\"paon\")\n            check_paon(user_paon)\n            headless = kwargs.get(\"headless\")\n            web_driver = kwargs.get(\"web_driver\")\n            driver = create_webdriver(web_driver, headless, None, __name__)\n            page = \"https://account.barnet.gov.uk/Forms/Home/Redirector/Index/?id=6a2ac067-3322-46e5-96e4-16c0c214454a&mod=OA&casetype=BAR&formname=BNTCOLDATE\"\n            driver.get(page)\n    \n            time.sleep(5)\n    \n            try:\n                accept_cookies = WebDriverWait(driver, timeout=10).until(\n                    EC.presence_of_element_located((By.ID, \"epdagree\"))\n                )\n                accept_cookies.click()\n                accept_cookies_submit = WebDriverWait(driver, timeout=10).until(\n                    EC.presence_of_element_located((By.ID, \"epdsubmit\"))\n                )\n                accept_cookies_submit.click()\n            except:\n                print(\n                    \"Accept cookies banner not found or clickable within the specified time.\"\n                )\n                pass\n    \n            postcode_input = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (By.CSS_SELECTOR, '[aria-label=\"Postcode\"]')\n                )\n            )\n    \n            postcode_input.send_keys(user_postcode)\n    \n            find_address_button = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (By.CSS_SELECTOR, '[value=\"Find address\"]')\n                )\n            )\n            find_address_button.click()\n    \n            time.sleep(15)\n            # Wait for address box to be visible\n            select_address_input = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.ID,\n                        \"MainContent_CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9eeaf8742f49cb4f7fa9bef99405b859f2\",\n                    )\n                )\n            )\n    \n            # Select address based\n            select = Select(select_address_input)\n            addr_label = f\"{user_postcode}, {user_paon},\"\n            for addr_option in select.options:\n                option_name = addr_option.accessible_name[0 : len(addr_label)]\n                if option_name == addr_label:\n                    break\n>           select.select_by_value(addr_option.text)\nE           UnboundLocalError: cannot access local variable 'addr_option' where it is not associated with a value\n\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:126: UnboundLocalError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"UnboundLocalError: cannot access local variable 'addr_option' where it is not associated with a value","statusTrace":"fixturefunc = <function scrape_step at 0x7f0947334540>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f0959e3b650>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BarnetCouncil.CouncilClass object at 0x7f094675f710>\npage = 'https://account.barnet.gov.uk/Forms/Home/Redirector/Index/?id=6a2ac067-3322-46e5-96e4-16c0c214454a&mod=OA&casetype=BAR&formname=BNTCOLDATE'\nkwargs = {'council_module_str': 'BarnetCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"87cdf19ca54919d4a72f217670aac2b6\")>\nuser_postcode = 'HA8 7NA'\nuser_paon = 'HA8 7NA, 2, MANOR PARK GARDENS, EDGWARE, BARNET', headless = True\nweb_driver = 'http://localhost:4444'\naccept_cookies = <selenium.webdriver.remote.webelement.WebElement (session=\"87cdf19ca54919d4a72f217670aac2b6\", element=\"f.6DFB76BE60BA92DC37D44AE415CDAD4C.d.F4C69EAE140306D72F1759C553405466.e.15\")>\naccept_cookies_submit = <selenium.webdriver.remote.webelement.WebElement (session=\"87cdf19ca54919d4a72f217670aac2b6\", element=\"f.6DFB76BE60BA92DC37D44AE415CDAD4C.d.F4C69EAE140306D72F1759C553405466.e.22\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            user_postcode = kwargs.get(\"postcode\")\n            if not user_postcode:\n                raise ValueError(\"No postcode provided.\")\n            check_postcode(user_postcode)\n    \n            user_paon = kwargs.get(\"paon\")\n            check_paon(user_paon)\n            headless = kwargs.get(\"headless\")\n            web_driver = kwargs.get(\"web_driver\")\n            driver = create_webdriver(web_driver, headless, None, __name__)\n            page = \"https://account.barnet.gov.uk/Forms/Home/Redirector/Index/?id=6a2ac067-3322-46e5-96e4-16c0c214454a&mod=OA&casetype=BAR&formname=BNTCOLDATE\"\n            driver.get(page)\n    \n            time.sleep(5)\n    \n            try:\n                accept_cookies = WebDriverWait(driver, timeout=10).until(\n                    EC.presence_of_element_located((By.ID, \"epdagree\"))\n                )\n                accept_cookies.click()\n                accept_cookies_submit = WebDriverWait(driver, timeout=10).until(\n                    EC.presence_of_element_located((By.ID, \"epdsubmit\"))\n                )\n                accept_cookies_submit.click()\n            except:\n                print(\n                    \"Accept cookies banner not found or clickable within the specified time.\"\n                )\n                pass\n    \n            postcode_input = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (By.CSS_SELECTOR, '[aria-label=\"Postcode\"]')\n                )\n            )\n    \n            postcode_input.send_keys(user_postcode)\n    \n            find_address_button = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (By.CSS_SELECTOR, '[value=\"Find address\"]')\n                )\n            )\n            find_address_button.click()\n    \n            time.sleep(15)\n            # Wait for address box to be visible\n            select_address_input = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (\n                        By.ID,\n                        \"MainContent_CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9eeaf8742f49cb4f7fa9bef99405b859f2\",\n                    )\n                )\n            )\n    \n            # Select address based\n            select = Select(select_address_input)\n            addr_label = f\"{user_postcode}, {user_paon},\"\n            for addr_option in select.options:\n                option_name = addr_option.accessible_name[0 : len(addr_label)]\n                if option_name == addr_label:\n                    break\n>           select.select_by_value(addr_option.text)\nE           UnboundLocalError: cannot access local variable 'addr_option' where it is not associated with a value\n\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:126: UnboundLocalError","steps":[{"name":"Given the council","time":{"start":1727913719815,"stop":1727913719815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1727913719815,"stop":1727913845949,"duration":126134},"status":"failed","statusMessage":"cannot access local variable 'addr_option' where it is not associated with a value","statusTrace":"UnboundLocalError: cannot access local variable 'addr_option' where it is not associated with a value\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"91f716551e1737c6","name":"stdout","source":"91f716551e1737c6.txt","type":"text/plain","size":142}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az700-494"},{"name":"thread","value":"2821-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BarnetCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":122,"broken":0,"skipped":0,"passed":38,"unknown":0,"total":160},"items":[{"uid":"caff8e60bc1f1361","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2139//#testresult/caff8e60bc1f1361","status":"failed","statusDetails":"UnboundLocalError: cannot access local variable 'addr_option' where it is not associated with a value","time":{"start":1727827315489,"stop":1727827382178,"duration":66689}},{"uid":"3d5dc2238951189d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2138//#testresult/3d5dc2238951189d","status":"failed","statusDetails":"UnboundLocalError: cannot access local variable 'addr_option' where it is not associated with a value","time":{"start":1727740916368,"stop":1727740978018,"duration":61650}},{"uid":"3c47e2836331f54c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2137//#testresult/3c47e2836331f54c","status":"passed","time":{"start":1727654510857,"stop":1727654604717,"duration":93860}},{"uid":"1aa364d5145f21c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2136//#testresult/1aa364d5145f21c9","status":"passed","time":{"start":1727568110558,"stop":1727568196710,"duration":86152}},{"uid":"ebcd2b327c954c3d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2135//#testresult/ebcd2b327c954c3d","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: Could not start a new session. New session request timed out \nHost info: host: 'selenium', ip: '172.18.0.2'\nBuild info: version: '4.25.0', revision: '030fcf7918'\nSystem info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.8.0-1014-azure', java.version: '17.0.12'\nDriver info: driver.version: unknown\nStacktrace:\n    at org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue.addToQueue (LocalNewSessionQueue.java:221)\n    at org.openqa.selenium.grid.sessionqueue.NewSessionQueue.lambda$new$0 (NewSessionQueue.java:68)\n    at org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle (Route.java:192)\n    at org.openqa.selenium.remote.http.Route.execute (Route.java:69)\n    at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:360)\n    at org.openqa.selenium.remote.http.Route.execute (Route.java:69)\n    at org.openqa.selenium.grid.sessionqueue.NewSessionQueue.execute (NewSessionQueue.java:128)\n    at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute (SpanWrappedHttpHandler.java:87)\n    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:63)\n    at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:360)\n    at org.openqa.selenium.remote.http.Route.execute (Route.java:69)\n    at org.openqa.selenium.grid.router.Router.execute (Router.java:87)\n    at org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0 (EnsureSpecCompliantResponseHeaders.java:34)\n    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:63)\n    at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:360)\n    at org.openqa.selenium.remote.http.Route.execute (Route.java:69)\n    at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0 (AddWebDriverSpecHeaders.java:35)\n    at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0 (ErrorFilter.java:44)\n    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:63)\n    at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0 (ErrorFilter.java:44)\n    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:63)\n    at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0 (SeleniumHandler.java:44)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:539)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1136)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:635)\n    at java.lang.Thread.run (Thread.java:840)","time":{"start":1727481790351,"stop":1727482090392,"duration":300041}},{"uid":"2529f22436114f94","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2131//#testresult/2529f22436114f94","status":"passed","time":{"start":1727421668626,"stop":1727421756345,"duration":87719}},{"uid":"49807e6b471c95a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2130//#testresult/49807e6b471c95a8","status":"passed","time":{"start":1727395340767,"stop":1727395427067,"duration":86300}},{"uid":"d1f1c1fa02eb76d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2129//#testresult/d1f1c1fa02eb76d4","status":"passed","time":{"start":1727308918080,"stop":1727309007822,"duration":89742}},{"uid":"24fb47abf0b3d99e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2128//#testresult/24fb47abf0b3d99e","status":"passed","time":{"start":1727222534817,"stop":1727222617599,"duration":82782}},{"uid":"83ccc827715bfbe0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2127//#testresult/83ccc827715bfbe0","status":"passed","time":{"start":1727136137305,"stop":1727136238035,"duration":100730}},{"uid":"f03cfd493eba5522","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2126//#testresult/f03cfd493eba5522","status":"passed","time":{"start":1727049707622,"stop":1727049806509,"duration":98887}},{"uid":"c1e178b672fc793b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2125//#testresult/c1e178b672fc793b","status":"passed","time":{"start":1726963324749,"stop":1726963467622,"duration":142873}},{"uid":"bd22c24c258d1b75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2124//#testresult/bd22c24c258d1b75","status":"passed","time":{"start":1726876968598,"stop":1726877055951,"duration":87353}},{"uid":"8eb917753653f386","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2123//#testresult/8eb917753653f386","status":"passed","time":{"start":1726790568724,"stop":1726790650287,"duration":81563}},{"uid":"19f189d8aa7905f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2122//#testresult/19f189d8aa7905f8","status":"passed","time":{"start":1726704257770,"stop":1726704337097,"duration":79327}},{"uid":"c49dd1073794efec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2121//#testresult/c49dd1073794efec","status":"passed","time":{"start":1726617765850,"stop":1726617844392,"duration":78542}},{"uid":"4eb3070c46cc5dff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2120//#testresult/4eb3070c46cc5dff","status":"passed","time":{"start":1726531355763,"stop":1726531482497,"duration":126734}},{"uid":"f4e4c584a14844d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2116//#testresult/f4e4c584a14844d","status":"passed","time":{"start":1726444942894,"stop":1726445031705,"duration":88811}},{"uid":"98089de6c2e6042c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2115//#testresult/98089de6c2e6042c","status":"passed","time":{"start":1726358510874,"stop":1726358654886,"duration":144012}},{"uid":"82758c5ce9f39c6a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2114//#testresult/82758c5ce9f39c6a","status":"passed","time":{"start":1726272135442,"stop":1726272216859,"duration":81417}}]},"tags":[]},"source":"7b48d4dd186681e4.json","parameterValues":["BarnetCouncil"]}