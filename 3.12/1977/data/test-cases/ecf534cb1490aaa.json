{"uid":"ecf534cb1490aaa","name":"Validate Council Output [SwanseaCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2cd79e784bcbfa4417889a1e970aa426","time":{"start":1720572561617,"stop":1720572605217,"duration":43600},"status":"failed","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"fixturefunc = <function scrape_step at 0x7f071e505a80>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwanseaCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f071f2de4b0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SwanseaCouncil.py:38: in parse_data\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"fixturefunc = <function scrape_step at 0x7f071e505a80>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwanseaCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f071f2de4b0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SwanseaCouncil.py:38: in parse_data\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"Given the council","time":{"start":1720572561618,"stop":1720572561618,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1720572561618,"stop":1720572605217,"duration":43599},"status":"failed","statusMessage":"502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d2bea3e2b4228604","name":"stdout","source":"d2bea3e2b4228604.txt","type":"text/plain","size":41}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az568-359"},{"name":"thread","value":"2747-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwanseaCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":38},"items":[{"uid":"d85bc22bec92d207","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1976//#testresult/d85bc22bec92d207","status":"passed","time":{"start":1720485778116,"stop":1720485780167,"duration":2051}},{"uid":"cb581ab2e5e5909e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1975//#testresult/cb581ab2e5e5909e","status":"passed","time":{"start":1720399610484,"stop":1720399611449,"duration":965}},{"uid":"c539f08edaa5590","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1971//#testresult/c539f08edaa5590","status":"passed","time":{"start":1720313321259,"stop":1720313324016,"duration":2757}},{"uid":"14cf9ce949e809e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1970//#testresult/14cf9ce949e809e5","status":"passed","time":{"start":1720226566407,"stop":1720226567491,"duration":1084}},{"uid":"99abfbfe21fe50a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1969//#testresult/99abfbfe21fe50a1","status":"passed","time":{"start":1720140119747,"stop":1720140120831,"duration":1084}},{"uid":"6ab430115cc96190","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1968//#testresult/6ab430115cc96190","status":"passed","time":{"start":1720053759727,"stop":1720053761195,"duration":1468}},{"uid":"b6bd74b6256d788c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1967//#testresult/b6bd74b6256d788c","status":"passed","time":{"start":1719967231702,"stop":1719967232894,"duration":1192}},{"uid":"f6e8e548fa923b3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1966//#testresult/f6e8e548fa923b3a","status":"passed","time":{"start":1719880989978,"stop":1719880991226,"duration":1248}},{"uid":"ff8d3381b80717f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1965//#testresult/ff8d3381b80717f2","status":"passed","time":{"start":1719794760053,"stop":1719794761182,"duration":1129}},{"uid":"9a7e1c4f0c4c8ec1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1964//#testresult/9a7e1c4f0c4c8ec1","status":"passed","time":{"start":1719708414141,"stop":1719708415687,"duration":1546}},{"uid":"7d82d46e70b5bc69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1962//#testresult/7d82d46e70b5bc69","status":"passed","time":{"start":1719621483047,"stop":1719621484671,"duration":1624}},{"uid":"743cb91f61ad2b10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1958//#testresult/743cb91f61ad2b10","status":"passed","time":{"start":1719535075689,"stop":1719535077021,"duration":1332}},{"uid":"15433e871f218ad6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1954//#testresult/15433e871f218ad6","status":"passed","time":{"start":1719362605438,"stop":1719362606530,"duration":1092}},{"uid":"173a14fe1b4206a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1953//#testresult/173a14fe1b4206a8","status":"passed","time":{"start":1719276257906,"stop":1719276258696,"duration":790}},{"uid":"1ecfba0c44558b6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1952//#testresult/1ecfba0c44558b6c","status":"passed","time":{"start":1719190083389,"stop":1719190084638,"duration":1249}},{"uid":"61e5faa511bf6764","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1951//#testresult/61e5faa511bf6764","status":"passed","time":{"start":1719103693468,"stop":1719103694720,"duration":1252}},{"uid":"1554a08a10bfce8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1950//#testresult/1554a08a10bfce8f","status":"passed","time":{"start":1719017003212,"stop":1719017004312,"duration":1100}},{"uid":"8412c0194616a213","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1949//#testresult/8412c0194616a213","status":"passed","time":{"start":1718930639131,"stop":1718930640938,"duration":1807}},{"uid":"63ef8ecd65a5399e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1948//#testresult/63ef8ecd65a5399e","status":"passed","time":{"start":1718844151038,"stop":1718844152668,"duration":1630}},{"uid":"79723a5266188950","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1947//#testresult/79723a5266188950","status":"passed","time":{"start":1718757983070,"stop":1718757984180,"duration":1110}}]},"tags":[]},"source":"ecf534cb1490aaa.json","parameterValues":["SwanseaCouncil"]}