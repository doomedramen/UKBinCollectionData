{"uid":"280557a6d40b73c6","name":"Validate Council Output [SunderlandCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1a7ab024f39f9d5f723a6a4b1c23ccbf","time":{"start":1719621765976,"stop":1719621914814,"duration":148838},"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x561846f9069a <unknown>\n#1 0x561846c730dc <unknown>\n#2 0x561846c6ac70 <unknown>\n#3 0x561846c5a772 <unknown>\n#4 0x561846c5bdf2 <unknown>\n#5 0x561846c5aa2d <unknown>\n#6 0x561846c5a143 <unknown>\n#7 0x561846c5a035 <unknown>\n#8 0x561846c57f76 <unknown>\n#9 0x561846c5847a <unknown>\n#10 0x561846c75b27 <unknown>\n#11 0x561846d021f5 <unknown>\n#12 0x561846ce2872 <unknown>\n#13 0x561846d015c3 <unknown>\n#14 0x561846ce2613 <unknown>\n#15 0x561846cb24f7 <unknown>\n#16 0x561846cb2e4e <unknown>\n#17 0x561846f5686b <unknown>\n#18 0x561846f5a911 <unknown>\n#19 0x561846f4235e <unknown>\n#20 0x561846f5b472 <unknown>\n#21 0x561846f26cbf <unknown>\n#22 0x561846f80098 <unknown>\n#23 0x561846f80270 <unknown>\n#24 0x561846f8f7cc <unknown>\n#25 0x7fe702e68ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb8b6235f80>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb8b763e510>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:33: in parse_data\n    driver.get(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb8b531b920>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x561846f80270 \\\\u003Cunknown>\\\\n#24 0x561846f8f7cc \\\\u003Cunknown>\\\\n#25 0x7fe702e68ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=126.0.6478.114)\nE       Stacktrace:\nE       #0 0x561846f9069a <unknown>\nE       #1 0x561846c730dc <unknown>\nE       #2 0x561846c6ac70 <unknown>\nE       #3 0x561846c5a772 <unknown>\nE       #4 0x561846c5bdf2 <unknown>\nE       #5 0x561846c5aa2d <unknown>\nE       #6 0x561846c5a143 <unknown>\nE       #7 0x561846c5a035 <unknown>\nE       #8 0x561846c57f76 <unknown>\nE       #9 0x561846c5847a <unknown>\nE       #10 0x561846c75b27 <unknown>\nE       #11 0x561846d021f5 <unknown>\nE       #12 0x561846ce2872 <unknown>\nE       #13 0x561846d015c3 <unknown>\nE       #14 0x561846ce2613 <unknown>\nE       #15 0x561846cb24f7 <unknown>\nE       #16 0x561846cb2e4e <unknown>\nE       #17 0x561846f5686b <unknown>\nE       #18 0x561846f5a911 <unknown>\nE       #19 0x561846f4235e <unknown>\nE       #20 0x561846f5b472 <unknown>\nE       #21 0x561846f26cbf <unknown>\nE       #22 0x561846f80098 <unknown>\nE       #23 0x561846f80270 <unknown>\nE       #24 0x561846f8f7cc <unknown>\nE       #25 0x7fe702e68ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x561846f9069a <unknown>\n#1 0x561846c730dc <unknown>\n#2 0x561846c6ac70 <unknown>\n#3 0x561846c5a772 <unknown>\n#4 0x561846c5bdf2 <unknown>\n#5 0x561846c5aa2d <unknown>\n#6 0x561846c5a143 <unknown>\n#7 0x561846c5a035 <unknown>\n#8 0x561846c57f76 <unknown>\n#9 0x561846c5847a <unknown>\n#10 0x561846c75b27 <unknown>\n#11 0x561846d021f5 <unknown>\n#12 0x561846ce2872 <unknown>\n#13 0x561846d015c3 <unknown>\n#14 0x561846ce2613 <unknown>\n#15 0x561846cb24f7 <unknown>\n#16 0x561846cb2e4e <unknown>\n#17 0x561846f5686b <unknown>\n#18 0x561846f5a911 <unknown>\n#19 0x561846f4235e <unknown>\n#20 0x561846f5b472 <unknown>\n#21 0x561846f26cbf <unknown>\n#22 0x561846f80098 <unknown>\n#23 0x561846f80270 <unknown>\n#24 0x561846f8f7cc <unknown>\n#25 0x7fe702e68ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb8b6235f80>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb8b763e510>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:33: in parse_data\n    driver.get(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb8b531b920>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x561846f80270 \\\\u003Cunknown>\\\\n#24 0x561846f8f7cc \\\\u003Cunknown>\\\\n#25 0x7fe702e68ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=126.0.6478.114)\nE       Stacktrace:\nE       #0 0x561846f9069a <unknown>\nE       #1 0x561846c730dc <unknown>\nE       #2 0x561846c6ac70 <unknown>\nE       #3 0x561846c5a772 <unknown>\nE       #4 0x561846c5bdf2 <unknown>\nE       #5 0x561846c5aa2d <unknown>\nE       #6 0x561846c5a143 <unknown>\nE       #7 0x561846c5a035 <unknown>\nE       #8 0x561846c57f76 <unknown>\nE       #9 0x561846c5847a <unknown>\nE       #10 0x561846c75b27 <unknown>\nE       #11 0x561846d021f5 <unknown>\nE       #12 0x561846ce2872 <unknown>\nE       #13 0x561846d015c3 <unknown>\nE       #14 0x561846ce2613 <unknown>\nE       #15 0x561846cb24f7 <unknown>\nE       #16 0x561846cb2e4e <unknown>\nE       #17 0x561846f5686b <unknown>\nE       #18 0x561846f5a911 <unknown>\nE       #19 0x561846f4235e <unknown>\nE       #20 0x561846f5b472 <unknown>\nE       #21 0x561846f26cbf <unknown>\nE       #22 0x561846f80098 <unknown>\nE       #23 0x561846f80270 <unknown>\nE       #24 0x561846f8f7cc <unknown>\nE       #25 0x7fe702e68ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","steps":[{"name":"Given the council","time":{"start":1719621765976,"stop":1719621765976,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1719621765977,"stop":1719621914814,"duration":148837},"status":"failed","statusMessage":"Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x561846f9069a <unknown>\n#1 0x561846c730dc <unknown>\n#2 0x561846c6ac70 <unknown>\n#3 0x561846c5a772 <unknown>\n#4 0x561846c5bdf2 <unknown>\n#5 0x561846c5aa2d <unknown>\n#6 0x561846c5a143 <unknown>\n#7 0x561846c5a035 <unknown>\n#8 0x561846c57f76 <unknown>\n#9 0x561846c5847a <unknown>\n#10 0x561846c75b27 <unknown>\n#11 0x561846d021f5 <unknown>\n#12 0x561846ce2872 <unknown>\n#13 0x561846d015c3 <unknown>\n#14 0x561846ce2613 <unknown>\n#15 0x561846cb24f7 <unknown>\n#16 0x561846cb2e4e <unknown>\n#17 0x561846f5686b <unknown>\n#18 0x561846f5a911 <unknown>\n#19 0x561846f4235e <unknown>\n#20 0x561846f5b472 <unknown>\n#21 0x561846f26cbf <unknown>\n#22 0x561846f80098 <unknown>\n#23 0x561846f80270 <unknown>\n#24 0x561846f8f7cc <unknown>\n#25 0x7fe702e68ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x561846f9069a <unknown>\n#1 0x561846c730dc <unknown>\n#2 0x561846c6ac70 <unknown>\n#3 0x561846c5a772 <unknown>\n#4 0x561846c5bdf2 <unknown>\n#5 0x561846c5aa2d <unknown>\n#6 0x561846c5a143 <unknown>\n#7 0x561846c5a035 <unknown>\n#8 0x561846c57f76 <unknown>\n#9 0x561846c5847a <unknown>\n#10 0x561846c75b27 <unknown>\n#11 0x561846d021f5 <unknown>\n#12 0x561846ce2872 <unknown>\n#13 0x561846d015c3 <unknown>\n#14 0x561846ce2613 <unknown>\n#15 0x561846cb24f7 <unknown>\n#16 0x561846cb2e4e <unknown>\n#17 0x561846f5686b <unknown>\n#18 0x561846f5a911 <unknown>\n#19 0x561846f4235e <unknown>\n#20 0x561846f5b472 <unknown>\n#21 0x561846f26cbf <unknown>\n#22 0x561846f80098 <unknown>\n#23 0x561846f80270 <unknown>\n#24 0x561846f8f7cc <unknown>\n#25 0x7fe702e68ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4e31a79cf815a049","name":"stdout","source":"4e31a79cf815a049.txt","type":"text/plain","size":933}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az651-306"},{"name":"thread","value":"2662-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SunderlandCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":49,"unknown":0,"total":51},"items":[{"uid":"87a2bf7580a5edfe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1958//#testresult/87a2bf7580a5edfe","status":"passed","time":{"start":1719535343482,"stop":1719535369406,"duration":25924}},{"uid":"715d76c287d77540","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1954//#testresult/715d76c287d77540","status":"passed","time":{"start":1719362469931,"stop":1719362606938,"duration":137007}},{"uid":"dc25fda0b0554028","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1953//#testresult/dc25fda0b0554028","status":"passed","time":{"start":1719276229727,"stop":1719276252169,"duration":22442}},{"uid":"8cbb04c1a3f9a75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1952//#testresult/8cbb04c1a3f9a75","status":"passed","time":{"start":1719189905953,"stop":1719190043096,"duration":137143}},{"uid":"81cd433480c316b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1951//#testresult/81cd433480c316b","status":"passed","time":{"start":1719103598104,"stop":1719103691694,"duration":93590}},{"uid":"e6f2ffbd69468688","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1950//#testresult/e6f2ffbd69468688","status":"passed","time":{"start":1719016858608,"stop":1719017014008,"duration":155400}},{"uid":"1fef58b3b063815b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1949//#testresult/1fef58b3b063815b","status":"passed","time":{"start":1718930608661,"stop":1718930636557,"duration":27896}},{"uid":"aa9aaf66ac8a44d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1948//#testresult/aa9aaf66ac8a44d7","status":"passed","time":{"start":1718844014297,"stop":1718844147988,"duration":133691}},{"uid":"ddcd37ab66f57e3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1947//#testresult/ddcd37ab66f57e3a","status":"passed","time":{"start":1718757692639,"stop":1718757961754,"duration":269115}},{"uid":"ec5ec0876b87786","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1946//#testresult/ec5ec0876b87786","status":"passed","time":{"start":1718671352937,"stop":1718671499636,"duration":146699}},{"uid":"8b83ad3dba544809","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1945//#testresult/8b83ad3dba544809","status":"passed","time":{"start":1718584912674,"stop":1718585042382,"duration":129708}},{"uid":"df61510767ce2e07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1944//#testresult/df61510767ce2e07","status":"passed","time":{"start":1718498482966,"stop":1718498749561,"duration":266595}},{"uid":"e095da8abf33fa35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1943//#testresult/e095da8abf33fa35","status":"passed","time":{"start":1718412074213,"stop":1718412211932,"duration":137719}},{"uid":"a23fcc2c0d68b3fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1942//#testresult/a23fcc2c0d68b3fe","status":"passed","time":{"start":1718325879325,"stop":1718325897845,"duration":18520}},{"uid":"d2470c0483d9d0cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1939//#testresult/d2470c0483d9d0cc","status":"passed","time":{"start":1718239400199,"stop":1718239557702,"duration":157503}},{"uid":"f8a9c6272a00561c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1938//#testresult/f8a9c6272a00561c","status":"passed","time":{"start":1718152837173,"stop":1718153105957,"duration":268784}},{"uid":"50c988804af01b3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1937//#testresult/50c988804af01b3f","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556af5fc4e9a <unknown>\n#1 0x556af5cae45c <unknown>\n#2 0x556af5ca5fd0 <unknown>\n#3 0x556af5c95b32 <unknown>\n#4 0x556af5c97162 <unknown>\n#5 0x556af5c95ded <unknown>\n#6 0x556af5c95503 <unknown>\n#7 0x556af5c953f5 <unknown>\n#8 0x556af5c93336 <unknown>\n#9 0x556af5c9383a <unknown>\n#10 0x556af5cb0ea7 <unknown>\n#11 0x556af5d3ced5 <unknown>\n#12 0x556af5d1d4b2 <unknown>\n#13 0x556af5d3c2cc <unknown>\n#14 0x556af5d1d253 <unknown>\n#15 0x556af5ced1c7 <unknown>\n#16 0x556af5cedb3e <unknown>\n#17 0x556af5f8b2db <unknown>\n#18 0x556af5f8f387 <unknown>\n#19 0x556af5f77e0e <unknown>\n#20 0x556af5f8fe52 <unknown>\n#21 0x556af5f5c7af <unknown>\n#22 0x556af5fb4188 <unknown>\n#23 0x556af5fb435b <unknown>\n#24 0x556af5fc3fcc <unknown>\n#25 0x7fbf36576ac3 <unknown>","time":{"start":1718066706673,"stop":1718066854758,"duration":148085}},{"uid":"53d244013c8610e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1936//#testresult/53d244013c8610e4","status":"passed","time":{"start":1717980200315,"stop":1717980220529,"duration":20214}},{"uid":"3d4ae498f6983a6d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1934//#testresult/3d4ae498f6983a6d","status":"passed","time":{"start":1717893641164,"stop":1717893771890,"duration":130726}},{"uid":"69b6e5a111eee763","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1933//#testresult/69b6e5a111eee763","status":"passed","time":{"start":1717807369689,"stop":1717807549356,"duration":179667}}]},"tags":[]},"source":"280557a6d40b73c6.json","parameterValues":["SunderlandCityCouncil"]}