{"uid":"42cc990ff20c9f61","name":"Validate Council Output [WalthamForest]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f804494c5f4de0ecd7ce05105f7ab6a0","time":{"start":1723680981771,"stop":1723681050558,"duration":68787},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561c28d7c6aa <unknown>\n#1 0x561c28a4d600 <unknown>\n#2 0x561c28a9cbcb <unknown>\n#3 0x561c28a9ceb1 <unknown>\n#4 0x561c28ae0b24 <unknown>\n#5 0x561c28abf8cd <unknown>\n#6 0x561c28ade04a <unknown>\n#7 0x561c28abf643 <unknown>\n#8 0x561c28a8fd31 <unknown>\n#9 0x561c28a9079e <unknown>\n#10 0x561c28d4423b <unknown>\n#11 0x561c28d481d2 <unknown>\n#12 0x561c28d315f5 <unknown>\n#13 0x561c28d48d62 <unknown>\n#14 0x561c28d1623f <unknown>\n#15 0x561c28d6be48 <unknown>\n#16 0x561c28d6c020 <unknown>\n#17 0x561c28d7b47c <unknown>\n#18 0x7fd2b32dda94 <unknown>\n#19 0x7fd2b336aa34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f3e2bc22200>\nrequest = <FixtureRequest for <Function test_scenario_outline[WalthamForest]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f3e3f494b60>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/WalthamForest.py:43: in parse_data\n    inputElement_postcodesearch = wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c70f33737ead9a6325ee0851b854c683\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f3e2b280360>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x561c28d7c6aa <unknown>\nE       #1 0x561c28a4d600 <unknown>\nE       #2 0x561c28a9cbcb <unknown>\nE       #3 0x561c28a9ceb1 <unknown>\nE       #4 0x561c28ae0b24 <unknown>\nE       #5 0x561c28abf8cd <unknown>\nE       #6 0x561c28ade04a <unknown>\nE       #7 0x561c28abf643 <unknown>\nE       #8 0x561c28a8fd31 <unknown>\nE       #9 0x561c28a9079e <unknown>\nE       #10 0x561c28d4423b <unknown>\nE       #11 0x561c28d481d2 <unknown>\nE       #12 0x561c28d315f5 <unknown>\nE       #13 0x561c28d48d62 <unknown>\nE       #14 0x561c28d1623f <unknown>\nE       #15 0x561c28d6be48 <unknown>\nE       #16 0x561c28d6c020 <unknown>\nE       #17 0x561c28d7b47c <unknown>\nE       #18 0x7fd2b32dda94 <unknown>\nE       #19 0x7fd2b336aa34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561c28d7c6aa <unknown>\n#1 0x561c28a4d600 <unknown>\n#2 0x561c28a9cbcb <unknown>\n#3 0x561c28a9ceb1 <unknown>\n#4 0x561c28ae0b24 <unknown>\n#5 0x561c28abf8cd <unknown>\n#6 0x561c28ade04a <unknown>\n#7 0x561c28abf643 <unknown>\n#8 0x561c28a8fd31 <unknown>\n#9 0x561c28a9079e <unknown>\n#10 0x561c28d4423b <unknown>\n#11 0x561c28d481d2 <unknown>\n#12 0x561c28d315f5 <unknown>\n#13 0x561c28d48d62 <unknown>\n#14 0x561c28d1623f <unknown>\n#15 0x561c28d6be48 <unknown>\n#16 0x561c28d6c020 <unknown>\n#17 0x561c28d7b47c <unknown>\n#18 0x7fd2b32dda94 <unknown>\n#19 0x7fd2b336aa34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f3e2bc22200>\nrequest = <FixtureRequest for <Function test_scenario_outline[WalthamForest]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f3e3f494b60>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/WalthamForest.py:43: in parse_data\n    inputElement_postcodesearch = wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c70f33737ead9a6325ee0851b854c683\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f3e2b280360>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x561c28d7c6aa <unknown>\nE       #1 0x561c28a4d600 <unknown>\nE       #2 0x561c28a9cbcb <unknown>\nE       #3 0x561c28a9ceb1 <unknown>\nE       #4 0x561c28ae0b24 <unknown>\nE       #5 0x561c28abf8cd <unknown>\nE       #6 0x561c28ade04a <unknown>\nE       #7 0x561c28abf643 <unknown>\nE       #8 0x561c28a8fd31 <unknown>\nE       #9 0x561c28a9079e <unknown>\nE       #10 0x561c28d4423b <unknown>\nE       #11 0x561c28d481d2 <unknown>\nE       #12 0x561c28d315f5 <unknown>\nE       #13 0x561c28d48d62 <unknown>\nE       #14 0x561c28d1623f <unknown>\nE       #15 0x561c28d6be48 <unknown>\nE       #16 0x561c28d6c020 <unknown>\nE       #17 0x561c28d7b47c <unknown>\nE       #18 0x7fd2b32dda94 <unknown>\nE       #19 0x7fd2b336aa34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Given the council","time":{"start":1723680981772,"stop":1723680981772,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1723680981772,"stop":1723681050558,"duration":68786},"status":"failed","statusMessage":"Message: \nStacktrace:\n#0 0x561c28d7c6aa <unknown>\n#1 0x561c28a4d600 <unknown>\n#2 0x561c28a9cbcb <unknown>\n#3 0x561c28a9ceb1 <unknown>\n#4 0x561c28ae0b24 <unknown>\n#5 0x561c28abf8cd <unknown>\n#6 0x561c28ade04a <unknown>\n#7 0x561c28abf643 <unknown>\n#8 0x561c28a8fd31 <unknown>\n#9 0x561c28a9079e <unknown>\n#10 0x561c28d4423b <unknown>\n#11 0x561c28d481d2 <unknown>\n#12 0x561c28d315f5 <unknown>\n#13 0x561c28d48d62 <unknown>\n#14 0x561c28d1623f <unknown>\n#15 0x561c28d6be48 <unknown>\n#16 0x561c28d6c020 <unknown>\n#17 0x561c28d7b47c <unknown>\n#18 0x7fd2b32dda94 <unknown>\n#19 0x7fd2b336aa34 __clone\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561c28d7c6aa <unknown>\n#1 0x561c28a4d600 <unknown>\n#2 0x561c28a9cbcb <unknown>\n#3 0x561c28a9ceb1 <unknown>\n#4 0x561c28ae0b24 <unknown>\n#5 0x561c28abf8cd <unknown>\n#6 0x561c28ade04a <unknown>\n#7 0x561c28abf643 <unknown>\n#8 0x561c28a8fd31 <unknown>\n#9 0x561c28a9079e <unknown>\n#10 0x561c28d4423b <unknown>\n#11 0x561c28d481d2 <unknown>\n#12 0x561c28d315f5 <unknown>\n#13 0x561c28d48d62 <unknown>\n#14 0x561c28d1623f <unknown>\n#15 0x561c28d6be48 <unknown>\n#16 0x561c28d6c020 <unknown>\n#17 0x561c28d7b47c <unknown>\n#18 0x7fd2b32dda94 <unknown>\n#19 0x7fd2b336aa34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a900e99956e51cdf","name":"stdout","source":"a900e99956e51cdf.txt","type":"text/plain","size":650}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1014-339"},{"name":"thread","value":"2803-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WalthamForest"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":73,"unknown":0,"total":80},"items":[{"uid":"85bb3a491e2a96c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2026//#testresult/85bb3a491e2a96c7","status":"passed","time":{"start":1723595082988,"stop":1723595118605,"duration":35617}},{"uid":"c40fcd5ef73959f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2025//#testresult/c40fcd5ef73959f6","status":"passed","time":{"start":1723508836760,"stop":1723508884206,"duration":47446}},{"uid":"f2cd7b3b3ceed66b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2024//#testresult/f2cd7b3b3ceed66b","status":"passed","time":{"start":1723422450901,"stop":1723422469769,"duration":18868}},{"uid":"1d8d7fed45d7fa72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2022//#testresult/1d8d7fed45d7fa72","status":"passed","time":{"start":1723336190884,"stop":1723336210736,"duration":19852}},{"uid":"48131d8ad681af68","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2020//#testresult/48131d8ad681af68","status":"passed","time":{"start":1723249602607,"stop":1723249632265,"duration":29658}},{"uid":"ea246bef7a368316","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2019//#testresult/ea246bef7a368316","status":"passed","time":{"start":1723163181123,"stop":1723163204386,"duration":23263}},{"uid":"81b53fe1fceb8deb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2014//#testresult/81b53fe1fceb8deb","status":"passed","time":{"start":1723076851247,"stop":1723076866853,"duration":15606}},{"uid":"dd73c86d7dc76c09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2012//#testresult/dd73c86d7dc76c09","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55599bc716ba <unknown>\n#1 0x55599b941730 <unknown>\n#2 0x55599b990d9b <unknown>\n#3 0x55599b991081 <unknown>\n#4 0x55599b9d4cd4 <unknown>\n#5 0x55599b9b3a7d <unknown>\n#6 0x55599b9d21ca <unknown>\n#7 0x55599b9b37f3 <unknown>\n#8 0x55599b983ec9 <unknown>\n#9 0x55599b98491e <unknown>\n#10 0x55599bc379eb <unknown>\n#11 0x55599bc3b972 <unknown>\n#12 0x55599bc24e15 <unknown>\n#13 0x55599bc3c502 <unknown>\n#14 0x55599bc09d2f <unknown>\n#15 0x55599bc60578 <unknown>\n#16 0x55599bc60750 <unknown>\n#17 0x55599bc7048c <unknown>\n#18 0x7fee24a4ca94 <unknown>\n#19 0x7fee24ad9a34 __clone","time":{"start":1722990320200,"stop":1722990363394,"duration":43194}},{"uid":"fced43a3dc2c5271","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2007//#testresult/fced43a3dc2c5271","status":"passed","time":{"start":1722903947263,"stop":1722903968944,"duration":21681}},{"uid":"e564a3687c6a5922","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2006//#testresult/e564a3687c6a5922","status":"passed","time":{"start":1722817758361,"stop":1722817791297,"duration":32936}},{"uid":"ab60662961551472","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2005//#testresult/ab60662961551472","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1722731228685,"stop":1722731301661,"duration":72976}},{"uid":"4a535c7d3d1e98a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2004//#testresult/4a535c7d3d1e98a7","status":"passed","time":{"start":1722644862178,"stop":1722644907808,"duration":45630}},{"uid":"13e4506a54a5fb74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2003//#testresult/13e4506a54a5fb74","status":"passed","time":{"start":1722558385678,"stop":1722558420678,"duration":35000}},{"uid":"1f175563a9c0c6bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2002//#testresult/1f175563a9c0c6bd","status":"passed","time":{"start":1722471841401,"stop":1722471876436,"duration":35035}},{"uid":"873b72fec8ee13e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1998//#testresult/873b72fec8ee13e","status":"passed","time":{"start":1722385559565,"stop":1722385580619,"duration":21054}},{"uid":"9d3da86fc7537290","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1997//#testresult/9d3da86fc7537290","status":"passed","time":{"start":1722299033920,"stop":1722299069504,"duration":35584}},{"uid":"10708d0f43fb8292","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1996//#testresult/10708d0f43fb8292","status":"passed","time":{"start":1722212650094,"stop":1722212677338,"duration":27244}},{"uid":"7d9c0580d3453477","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1995//#testresult/7d9c0580d3453477","status":"passed","time":{"start":1722126209385,"stop":1722126233064,"duration":23679}},{"uid":"6274ee12faaab457","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1994//#testresult/6274ee12faaab457","status":"passed","time":{"start":1722039983170,"stop":1722040017518,"duration":34348}},{"uid":"874570b0967dba5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1993//#testresult/874570b0967dba5e","status":"passed","time":{"start":1721953510187,"stop":1721953528473,"duration":18286}}]},"tags":[]},"source":"42cc990ff20c9f61.json","parameterValues":["WalthamForest"]}