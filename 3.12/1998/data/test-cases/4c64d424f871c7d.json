{"uid":"4c64d424f871c7d","name":"Validate Council Output [StHelensBC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aefb4666f5cfa7265d9db53c16df38b6","time":{"start":1722385234143,"stop":1722385236868,"duration":2725},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find'","statusTrace":"fixturefunc = <function scrape_step at 0x7fb72e8c2660>\nrequest = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb72fa27b30>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StHelensBC.CouncilClass object at 0x7fb72db976e0>\npage = <Response [200]>\nkwargs = {'council_module_str': 'StHelensBC', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuprn = '39081672'\nurl = 'https://secure.sthelens.net/website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672'\ns = <requests.sessions.Session object at 0x7fb72db94920>\nsoup = \n<!DOCTYPE html>\n\n<html lang=\"en\">\n<head> <script>\r\n\t\t\t\twindow[\"ga-disable-UA-5699802-49\"] = true;\r\n\t\t\t</script>\n<scri...chnology, online self-service and web content management provided by GOSS\">Powered by GOSS</a>\n</footer>\n</body></html>\ndata = {'bins': []}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        # Check the UPRN is valid\n        check_uprn(uprn)\n    \n        # Request URL\n        url = f\"https://secure.sthelens.net/website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid={uprn}\"\n    \n        # Make Request\n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n        page = s.get(url)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(\n            re.sub(\"<div([^>]+)>\", \"\", page.text).replace(\"</div>\", \"\"),\n            features=\"html.parser\",\n        )\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collection_rows = (\n>           soup.find(\"table\", {\"class\": \"multitable\"}).find(\"tbody\").find_all(\"tr\")\n        )\nE       AttributeError: 'NoneType' object has no attribute 'find'\n\nuk_bin_collection/uk_bin_collection/councils/StHelensBC.py:37: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find'","statusTrace":"fixturefunc = <function scrape_step at 0x7fb72e8c2660>\nrequest = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb72fa27b30>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StHelensBC.CouncilClass object at 0x7fb72db976e0>\npage = <Response [200]>\nkwargs = {'council_module_str': 'StHelensBC', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuprn = '39081672'\nurl = 'https://secure.sthelens.net/website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672'\ns = <requests.sessions.Session object at 0x7fb72db94920>\nsoup = \n<!DOCTYPE html>\n\n<html lang=\"en\">\n<head> <script>\r\n\t\t\t\twindow[\"ga-disable-UA-5699802-49\"] = true;\r\n\t\t\t</script>\n<scri...chnology, online self-service and web content management provided by GOSS\">Powered by GOSS</a>\n</footer>\n</body></html>\ndata = {'bins': []}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        # Check the UPRN is valid\n        check_uprn(uprn)\n    \n        # Request URL\n        url = f\"https://secure.sthelens.net/website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid={uprn}\"\n    \n        # Make Request\n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n        page = s.get(url)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(\n            re.sub(\"<div([^>]+)>\", \"\", page.text).replace(\"</div>\", \"\"),\n            features=\"html.parser\",\n        )\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collection_rows = (\n>           soup.find(\"table\", {\"class\": \"multitable\"}).find(\"tbody\").find_all(\"tr\")\n        )\nE       AttributeError: 'NoneType' object has no attribute 'find'\n\nuk_bin_collection/uk_bin_collection/councils/StHelensBC.py:37: AttributeError","steps":[{"name":"Given the council","time":{"start":1722385234143,"stop":1722385234144,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1722385234144,"stop":1722385236868,"duration":2724},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b0d93a1be398fce0","name":"stdout","source":"b0d93a1be398fce0.txt","type":"text/plain","size":37}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1272-825"},{"name":"thread","value":"2777-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StHelensBC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":83,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":83},"items":[{"uid":"bdb32fa7116d3a23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1997//#testresult/bdb32fa7116d3a23","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1722298855449,"stop":1722298856139,"duration":690}},{"uid":"f7ba9692681abd0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1996//#testresult/f7ba9692681abd0e","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1722212490059,"stop":1722212491055,"duration":996}},{"uid":"4a362d1a433458a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1995//#testresult/4a362d1a433458a3","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1722126066574,"stop":1722126067333,"duration":759}},{"uid":"ffa3301f19f28180","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1994//#testresult/ffa3301f19f28180","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1722039831862,"stop":1722039833021,"duration":1159}},{"uid":"9055c186e39a4010","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1993//#testresult/9055c186e39a4010","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1721953339043,"stop":1721953339777,"duration":734}},{"uid":"66ecb7c947d6db9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1992//#testresult/66ecb7c947d6db9b","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1721866803644,"stop":1721866804347,"duration":703}},{"uid":"d72e67a148368dc1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1991//#testresult/d72e67a148368dc1","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1721780505364,"stop":1721780506363,"duration":999}},{"uid":"64ea38cd810a3282","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1990//#testresult/64ea38cd810a3282","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1721694141419,"stop":1721694142112,"duration":693}},{"uid":"e8636c0b2fa688fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1989//#testresult/e8636c0b2fa688fe","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1721607501082,"stop":1721607502127,"duration":1045}},{"uid":"7b6b25b6eaf14366","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1988//#testresult/7b6b25b6eaf14366","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1721521273076,"stop":1721521275042,"duration":1966}},{"uid":"7d29f2f197d939bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1987//#testresult/7d29f2f197d939bc","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1721434824440,"stop":1721434825100,"duration":660}},{"uid":"4bec313e4b698d71","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1986//#testresult/4bec313e4b698d71","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='secure.sthelens.net', port=443): Max retries exceeded with url: /website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fbe05777200>, 'Connection to secure.sthelens.net timed out. (connect timeout=None)'))","time":{"start":1721372880942,"stop":1721373015399,"duration":134457}},{"uid":"6bee20e95b4c5105","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1985//#testresult/6bee20e95b4c5105","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1721263928054,"stop":1721263929208,"duration":1154}},{"uid":"5377b4a30cf95dc2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1984//#testresult/5377b4a30cf95dc2","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1721177301054,"stop":1721177301808,"duration":754}},{"uid":"68255f6759221eff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1983//#testresult/68255f6759221eff","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1721090927887,"stop":1721090928604,"duration":717}},{"uid":"e3abc0afc401e030","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1982//#testresult/e3abc0afc401e030","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1721004666439,"stop":1721004667261,"duration":822}},{"uid":"8cac73701412fab9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1981//#testresult/8cac73701412fab9","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1720918322802,"stop":1720918323503,"duration":701}},{"uid":"992d88bfa5f5164f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1980//#testresult/992d88bfa5f5164f","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1720831722379,"stop":1720831723111,"duration":732}},{"uid":"6d6ea6c7309a123f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1979//#testresult/6d6ea6c7309a123f","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1720745246212,"stop":1720745246846,"duration":634}},{"uid":"252a653a5bf06406","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1978//#testresult/252a653a5bf06406","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1720658824603,"stop":1720658825410,"duration":807}}]},"tags":[]},"source":"4c64d424f871c7d.json","parameterValues":["StHelensBC"]}