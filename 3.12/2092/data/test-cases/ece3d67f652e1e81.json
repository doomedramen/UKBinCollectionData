{"uid":"ece3d67f652e1e81","name":"Validate Council Output [EastCambridgeshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"94109bff7ef580f8a70ff49447a40d87","time":{"start":1725667449002,"stop":1725667480437,"duration":31435},"status":"failed","statusMessage":"ValueError: not enough values to unpack (expected 3, got 1)","statusTrace":"fixturefunc = <function scrape_step at 0x7fe9804b3e20>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastCambridgeshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fe992ff94c0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastCambridgeshireCouncil.CouncilClass object at 0x7fe98035e9f0>\npage = <Response [200]>\nkwargs = {'council_module_str': 'EastCambridgeshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuprn = '10002597178'\nurl = 'https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn=10002597178'\ns = <requests.sessions.Session object at 0x7fe97fe9c530>\nsoup = <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n\n<html>\n<he...\n\r\n    $('#collectionaddress').attr('src', '/fillform/?iframe_id=collectionaddress');\r\n\r\n})();</script></body>\n</html>\n\ndata = {'bins': []}\nbins = <div class=\"row collectionsrow\"><div class=\"col-xs-12 title collectionscell\">\n          \t\t\t\t            Please select an address to view the upcoming collections.\n          \t\t\t\t          </div></div>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        # Check the UPRN is valid\n        check_uprn(uprn)\n    \n        # Request URL\n        url = f\"https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn={uprn}\"\n    \n        # Make Request\n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n        page = s.get(url)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Form a JSON wrapper\n        data = {\"bins\": []}\n    \n        for bins in soup.find_all(\"div\", {\"class\": \"row collectionsrow\"}):\n            # Find the collection dates\n>           _, bin_type, date = bins.find_all(\"div\")\nE           ValueError: not enough values to unpack (expected 3, got 1)\n\nuk_bin_collection/uk_bin_collection/councils/EastCambridgeshireCouncil.py:37: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: not enough values to unpack (expected 3, got 1)","statusTrace":"fixturefunc = <function scrape_step at 0x7fe9804b3e20>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastCambridgeshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fe992ff94c0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastCambridgeshireCouncil.CouncilClass object at 0x7fe98035e9f0>\npage = <Response [200]>\nkwargs = {'council_module_str': 'EastCambridgeshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuprn = '10002597178'\nurl = 'https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn=10002597178'\ns = <requests.sessions.Session object at 0x7fe97fe9c530>\nsoup = <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n\n<html>\n<he...\n\r\n    $('#collectionaddress').attr('src', '/fillform/?iframe_id=collectionaddress');\r\n\r\n})();</script></body>\n</html>\n\ndata = {'bins': []}\nbins = <div class=\"row collectionsrow\"><div class=\"col-xs-12 title collectionscell\">\n          \t\t\t\t            Please select an address to view the upcoming collections.\n          \t\t\t\t          </div></div>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        # Check the UPRN is valid\n        check_uprn(uprn)\n    \n        # Request URL\n        url = f\"https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn={uprn}\"\n    \n        # Make Request\n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n        page = s.get(url)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Form a JSON wrapper\n        data = {\"bins\": []}\n    \n        for bins in soup.find_all(\"div\", {\"class\": \"row collectionsrow\"}):\n            # Find the collection dates\n>           _, bin_type, date = bins.find_all(\"div\")\nE           ValueError: not enough values to unpack (expected 3, got 1)\n\nuk_bin_collection/uk_bin_collection/councils/EastCambridgeshireCouncil.py:37: ValueError","steps":[{"name":"Given the council","time":{"start":1725667449002,"stop":1725667449003,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725667449003,"stop":1725667480437,"duration":31434},"status":"failed","statusMessage":"not enough values to unpack (expected 3, got 1)","statusTrace":"ValueError: not enough values to unpack (expected 3, got 1)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4137e086b4dee048","name":"stdout","source":"4137e086b4dee048.txt","type":"text/plain","size":52}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1780-881"},{"name":"thread","value":"2736-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastCambridgeshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":129,"unknown":0,"total":131},"items":[{"uid":"650a69caacafd974","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2088//#testresult/650a69caacafd974","status":"passed","time":{"start":1725581031662,"stop":1725581033003,"duration":1341}},{"uid":"f1c2ad4f4d5f81fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2086//#testresult/f1c2ad4f4d5f81fe","status":"passed","time":{"start":1725568895512,"stop":1725568898920,"duration":3408}},{"uid":"d431b62b8642fbbe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2083//#testresult/d431b62b8642fbbe","status":"passed","time":{"start":1725494623970,"stop":1725494625199,"duration":1229}},{"uid":"b169afcdda35e7eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/b169afcdda35e7eb","status":"passed","time":{"start":1725429781713,"stop":1725429783152,"duration":1439}},{"uid":"52339fd797c38c06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/52339fd797c38c06","status":"passed","time":{"start":1725408347019,"stop":1725408348690,"duration":1671}},{"uid":"4040d941af2df88c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2080//#testresult/4040d941af2df88c","status":"passed","time":{"start":1725403398401,"stop":1725403399635,"duration":1234}},{"uid":"2d31ac1199692de5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2073//#testresult/2d31ac1199692de5","status":"passed","time":{"start":1725384339018,"stop":1725384340072,"duration":1054}},{"uid":"40c4db8b303fab19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2070//#testresult/40c4db8b303fab19","status":"passed","time":{"start":1725346556488,"stop":1725346558001,"duration":1513}},{"uid":"82ad1d5a10f8d0bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2069//#testresult/82ad1d5a10f8d0bb","status":"passed","time":{"start":1725322452512,"stop":1725322453752,"duration":1240}},{"uid":"c5948927651bac96","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2068//#testresult/c5948927651bac96","status":"passed","time":{"start":1725315738444,"stop":1725315740480,"duration":2036}},{"uid":"7936f3fc257bfe55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2066//#testresult/7936f3fc257bfe55","status":"passed","time":{"start":1725312484785,"stop":1725312487755,"duration":2970}},{"uid":"9f50cdb3f0169b14","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2064//#testresult/9f50cdb3f0169b14","status":"passed","time":{"start":1725310308624,"stop":1725310309826,"duration":1202}},{"uid":"679daf2733fcdafc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2060//#testresult/679daf2733fcdafc","status":"passed","time":{"start":1725307646307,"stop":1725307647436,"duration":1129}},{"uid":"75d356a42232b7ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2059//#testresult/75d356a42232b7ec","status":"passed","time":{"start":1725307517008,"stop":1725307518344,"duration":1336}},{"uid":"d9ea80d144fd39e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2054//#testresult/d9ea80d144fd39e5","status":"passed","time":{"start":1725235672098,"stop":1725235674904,"duration":2806}},{"uid":"57d0464c9ab447df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2053//#testresult/57d0464c9ab447df","status":"passed","time":{"start":1725149306440,"stop":1725149309856,"duration":3416}},{"uid":"703c96e9593e8628","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2052//#testresult/703c96e9593e8628","status":"passed","time":{"start":1725063320748,"stop":1725063322158,"duration":1410}},{"uid":"eff6af69f80c4c5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2051//#testresult/eff6af69f80c4c5e","status":"passed","time":{"start":1724976506774,"stop":1724976507973,"duration":1199}},{"uid":"dd30332df7ec5485","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2049//#testresult/dd30332df7ec5485","status":"passed","time":{"start":1724890444731,"stop":1724890446271,"duration":1540}},{"uid":"cd1d9f82c8559aef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2048//#testresult/cd1d9f82c8559aef","status":"passed","time":{"start":1724804048797,"stop":1724804049949,"duration":1152}}]},"tags":[]},"source":"ece3d67f652e1e81.json","parameterValues":["EastCambridgeshireCouncil"]}