{"uid":"e5bd77df5bda44ef","name":"Validate Council Output [MidAndEastAntrimBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a483f237a3c589a1d176bf722aa074f8","time":{"start":1720053102609,"stop":1720053192713,"duration":90104},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f8a4b42dd00>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidAndEastAntrimBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f8a5efa1820>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidAndEastAntrimBoroughCouncil.CouncilClass object at 0x7f8a4ae46690>\npage = '<div id=\"divCalendarGraphics\"><br>  UnableToContinue--InvalidUserCredentials</div>'\nkwargs = {'council_module_str': 'MidAndEastAntrimBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"66f5a412fd39780cc82ad0a4a51097c6\")>\nuser_postcode = '100 Galgorm Road', web_driver = 'http://localhost:4444'\nheadless = True\noptions = <selenium.webdriver.chrome.options.Options object at 0x7f8a4ae447d0>\nnumber = 0\ninputElement_pc = <selenium.webdriver.remote.webelement.WebElement (session=\"66f5a412fd39780cc82ad0a4a51097c6\", element=\"f.5D55F3D9DDC0FC8366D2DD38A2835562.d.531EE2FA6435EBB1084710DD98FF815C.e.24\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            page = \"https://www.midandeastantrim.gov.uk/resident/waste-recycling/collection-dates/\"\n    \n            # Assign user info\n            user_postcode = kwargs.get(\"postcode\")\n            # not used: user_paon = kwargs.get(\"paon\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n    \n            # Create Selenium webdriver\n            options = webdriver.ChromeOptions()\n            options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])\n            driver = create_webdriver(web_driver, headless, None, __name__)\n    \n            driver.get(page)\n    \n            time.sleep(5)\n            number = 0\n            driver.switch_to.frame(number)\n            # Enter postcode in text box and wait\n            inputElement_pc = driver.find_element(By.ID, \"txtAjaxSearch\")\n            inputElement_pc.send_keys(user_postcode)\n    \n            time.sleep(5)\n    \n            # Submit address information and wait - selecting the top one only\n            # if it is an exact match then it will go straight to the results\n            try:\n                button = driver.find_element(By.XPATH, '//*[@id=\"show-button-0\"]')\n                driver.execute_script(\"arguments[0].click();\", button)\n            except NoSuchElementException:\n                pass\n    \n            time.sleep(4)\n    \n            # Read next collection information\n            page = driver.find_element(By.ID, \"divCalendarGraphics\").get_attribute(\n                \"outerHTML\"\n            )\n    \n            # Make a BS4 object - remove bold tags and add @ so we can split the lines later\n            soup = BeautifulSoup(\n                page.strip()\n                .replace(\"<b>\", \"\")\n                .replace(\"</b>\", \"\")\n                .replace(\"<br>\", \"@\"),\n                features=\"html.parser\",\n            )\n            soup.prettify()\n    \n            # Data to return\n            data = {\"bins\": []}\n    \n            # Valid bin types\n            binTypes = [\"Refuse\", \"Garden\"]\n    \n            # Value to create dict for bin values\n            keys, values = [], []\n    \n            # Loop though html for text containing bins\n            # example of html (bold tags removed above)\n            # <div id=\"divCalendarGraphics\">\n            # <br>  <b>Refuse</b>: Tue 14 Nov then every alternate  Tue<br><b>Recycling</b>: No Recycling waste collection for this address<br><b>Garden</b>: Tue 21 Nov then every alternate  Tue<br><img src=\"img/Gif-Spacer.gif\" alt=\"spacer\" height=\"1\" width=\"30\">\n            # split by br tag and take first 4 splits\n            lines = soup.text.split(\"@\", 4)\n            for line in lines[1:4]:\n                keys.append(line.split(\":\")[0].strip())\n                # strip out the day and month from the text\n>               values.append(line.split(\":\")[1].strip().split(\" \")[:3])\nE               IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/MidAndEastAntrimBoroughCouncil.py:91: IndexError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f8a4b42dd00>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidAndEastAntrimBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f8a5efa1820>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidAndEastAntrimBoroughCouncil.CouncilClass object at 0x7f8a4ae46690>\npage = '<div id=\"divCalendarGraphics\"><br>  UnableToContinue--InvalidUserCredentials</div>'\nkwargs = {'council_module_str': 'MidAndEastAntrimBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"66f5a412fd39780cc82ad0a4a51097c6\")>\nuser_postcode = '100 Galgorm Road', web_driver = 'http://localhost:4444'\nheadless = True\noptions = <selenium.webdriver.chrome.options.Options object at 0x7f8a4ae447d0>\nnumber = 0\ninputElement_pc = <selenium.webdriver.remote.webelement.WebElement (session=\"66f5a412fd39780cc82ad0a4a51097c6\", element=\"f.5D55F3D9DDC0FC8366D2DD38A2835562.d.531EE2FA6435EBB1084710DD98FF815C.e.24\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            page = \"https://www.midandeastantrim.gov.uk/resident/waste-recycling/collection-dates/\"\n    \n            # Assign user info\n            user_postcode = kwargs.get(\"postcode\")\n            # not used: user_paon = kwargs.get(\"paon\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n    \n            # Create Selenium webdriver\n            options = webdriver.ChromeOptions()\n            options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])\n            driver = create_webdriver(web_driver, headless, None, __name__)\n    \n            driver.get(page)\n    \n            time.sleep(5)\n            number = 0\n            driver.switch_to.frame(number)\n            # Enter postcode in text box and wait\n            inputElement_pc = driver.find_element(By.ID, \"txtAjaxSearch\")\n            inputElement_pc.send_keys(user_postcode)\n    \n            time.sleep(5)\n    \n            # Submit address information and wait - selecting the top one only\n            # if it is an exact match then it will go straight to the results\n            try:\n                button = driver.find_element(By.XPATH, '//*[@id=\"show-button-0\"]')\n                driver.execute_script(\"arguments[0].click();\", button)\n            except NoSuchElementException:\n                pass\n    \n            time.sleep(4)\n    \n            # Read next collection information\n            page = driver.find_element(By.ID, \"divCalendarGraphics\").get_attribute(\n                \"outerHTML\"\n            )\n    \n            # Make a BS4 object - remove bold tags and add @ so we can split the lines later\n            soup = BeautifulSoup(\n                page.strip()\n                .replace(\"<b>\", \"\")\n                .replace(\"</b>\", \"\")\n                .replace(\"<br>\", \"@\"),\n                features=\"html.parser\",\n            )\n            soup.prettify()\n    \n            # Data to return\n            data = {\"bins\": []}\n    \n            # Valid bin types\n            binTypes = [\"Refuse\", \"Garden\"]\n    \n            # Value to create dict for bin values\n            keys, values = [], []\n    \n            # Loop though html for text containing bins\n            # example of html (bold tags removed above)\n            # <div id=\"divCalendarGraphics\">\n            # <br>  <b>Refuse</b>: Tue 14 Nov then every alternate  Tue<br><b>Recycling</b>: No Recycling waste collection for this address<br><b>Garden</b>: Tue 21 Nov then every alternate  Tue<br><img src=\"img/Gif-Spacer.gif\" alt=\"spacer\" height=\"1\" width=\"30\">\n            # split by br tag and take first 4 splits\n            lines = soup.text.split(\"@\", 4)\n            for line in lines[1:4]:\n                keys.append(line.split(\":\")[0].strip())\n                # strip out the day and month from the text\n>               values.append(line.split(\":\")[1].strip().split(\" \")[:3])\nE               IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/MidAndEastAntrimBoroughCouncil.py:91: IndexError","steps":[{"name":"Given the council","time":{"start":1720053102609,"stop":1720053102610,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1720053102610,"stop":1720053192713,"duration":90103},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"330ae212e1905c47","name":"stdout","source":"330ae212e1905c47.txt","type":"text/plain","size":100}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1429-927"},{"name":"thread","value":"2757-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MidAndEastAntrimBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":55,"unknown":0,"total":56},"items":[{"uid":"58601c8e13a1eb3e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1967//#testresult/58601c8e13a1eb3e","status":"passed","time":{"start":1719966788015,"stop":1719966822845,"duration":34830}},{"uid":"77e9b44bc1e87150","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1966//#testresult/77e9b44bc1e87150","status":"passed","time":{"start":1719880336066,"stop":1719880425494,"duration":89428}},{"uid":"d7cd4f0a4733c587","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1965//#testresult/d7cd4f0a4733c587","status":"passed","time":{"start":1719794467582,"stop":1719794558309,"duration":90727}},{"uid":"1150c6e457901f16","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1964//#testresult/1150c6e457901f16","status":"passed","time":{"start":1719708037673,"stop":1719708136497,"duration":98824}},{"uid":"51834d4e053c2d70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1962//#testresult/51834d4e053c2d70","status":"passed","time":{"start":1719621171092,"stop":1719621200657,"duration":29565}},{"uid":"6e50fcbd6bc30554","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1958//#testresult/6e50fcbd6bc30554","status":"passed","time":{"start":1719534755412,"stop":1719534805160,"duration":49748}},{"uid":"752e338018419526","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1954//#testresult/752e338018419526","status":"passed","time":{"start":1719362175308,"stop":1719362256120,"duration":80812}},{"uid":"488e02a70c19c7a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1953//#testresult/488e02a70c19c7a9","status":"passed","time":{"start":1719275740803,"stop":1719275806500,"duration":65697}},{"uid":"8a1dc193bd05c1e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1952//#testresult/8a1dc193bd05c1e4","status":"passed","time":{"start":1719189514817,"stop":1719189603753,"duration":88936}},{"uid":"30f9cb46da99f29f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1951//#testresult/30f9cb46da99f29f","status":"passed","time":{"start":1719103162960,"stop":1719103224419,"duration":61459}},{"uid":"25552bf133fe2ceb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1950//#testresult/25552bf133fe2ceb","status":"passed","time":{"start":1719016609788,"stop":1719016698876,"duration":89088}},{"uid":"e35a7cb97315004d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1949//#testresult/e35a7cb97315004d","status":"passed","time":{"start":1718930283150,"stop":1718930345273,"duration":62123}},{"uid":"6639c7990d46f370","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1948//#testresult/6639c7990d46f370","status":"passed","time":{"start":1718843818202,"stop":1718843855682,"duration":37480}},{"uid":"f7453f348c9b2f5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1947//#testresult/f7453f348c9b2f5b","status":"passed","time":{"start":1718757419504,"stop":1718757520382,"duration":100878}},{"uid":"e4e44cde33b6e453","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1946//#testresult/e4e44cde33b6e453","status":"passed","time":{"start":1718671041432,"stop":1718671087465,"duration":46033}},{"uid":"5dc353e9d6446483","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1945//#testresult/5dc353e9d6446483","status":"passed","time":{"start":1718584700597,"stop":1718584759820,"duration":59223}},{"uid":"d44972dc6400a415","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1944//#testresult/d44972dc6400a415","status":"passed","time":{"start":1718498218295,"stop":1718498309087,"duration":90792}},{"uid":"975e2a503ec44d73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1943//#testresult/975e2a503ec44d73","status":"passed","time":{"start":1718411821153,"stop":1718411911623,"duration":90470}},{"uid":"9b10225ba6912823","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1942//#testresult/9b10225ba6912823","status":"passed","time":{"start":1718325400682,"stop":1718325469085,"duration":68403}},{"uid":"d2133124614aa503","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1939//#testresult/d2133124614aa503","status":"passed","time":{"start":1718239056697,"stop":1718239132681,"duration":75984}}]},"tags":[]},"source":"e5bd77df5bda44ef.json","parameterValues":["MidAndEastAntrimBoroughCouncil"]}