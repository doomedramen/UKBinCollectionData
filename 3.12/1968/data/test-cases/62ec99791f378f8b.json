{"uid":"62ec99791f378f8b","name":"Validate Council Output [RenfrewshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"21c77c05ec171f4a60a68c21bf3d0b55","time":{"start":1720053580014,"stop":1720053740366,"duration":160352},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55bdec06969a <unknown>\n#1 0x55bdebd4c0dc <unknown>\n#2 0x55bdebd9f6c6 <unknown>\n#3 0x55bdebd9d516 <unknown>\n#4 0x55bdebd9aef7 <unknown>\n#5 0x55bdebd99d2c <unknown>\n#6 0x55bdebd8d40f <unknown>\n#7 0x55bdebdbb872 <unknown>\n#8 0x55bdebd8cd89 <unknown>\n#9 0x55bdebdbba3e <unknown>\n#10 0x55bdebdda5c3 <unknown>\n#11 0x55bdebdbb613 <unknown>\n#12 0x55bdebd8b4f7 <unknown>\n#13 0x55bdebd8be4e <unknown>\n#14 0x55bdec02f86b <unknown>\n#15 0x55bdec033911 <unknown>\n#16 0x55bdec01b35e <unknown>\n#17 0x55bdec034472 <unknown>\n#18 0x55bdebfffcbf <unknown>\n#19 0x55bdec059098 <unknown>\n#20 0x55bdec059270 <unknown>\n#21 0x55bdec0687cc <unknown>\n#22 0x7f7f4ad28ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f096b62a7a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f096c375c10>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f096aa7ddf0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55bdec059270 \\\\u003Cunknown>\\\\n#21 0x55bdec0687cc \\\\u003Cunknown>\\\\n#22 0x7f7f4ad28ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\nE         (Session info: chrome-headless-shell=126.0.6478.114)\nE       Stacktrace:\nE       #0 0x55bdec06969a <unknown>\nE       #1 0x55bdebd4c0dc <unknown>\nE       #2 0x55bdebd9f6c6 <unknown>\nE       #3 0x55bdebd9d516 <unknown>\nE       #4 0x55bdebd9aef7 <unknown>\nE       #5 0x55bdebd99d2c <unknown>\nE       #6 0x55bdebd8d40f <unknown>\nE       #7 0x55bdebdbb872 <unknown>\nE       #8 0x55bdebd8cd89 <unknown>\nE       #9 0x55bdebdbba3e <unknown>\nE       #10 0x55bdebdda5c3 <unknown>\nE       #11 0x55bdebdbb613 <unknown>\nE       #12 0x55bdebd8b4f7 <unknown>\nE       #13 0x55bdebd8be4e <unknown>\nE       #14 0x55bdec02f86b <unknown>\nE       #15 0x55bdec033911 <unknown>\nE       #16 0x55bdec01b35e <unknown>\nE       #17 0x55bdec034472 <unknown>\nE       #18 0x55bdebfffcbf <unknown>\nE       #19 0x55bdec059098 <unknown>\nE       #20 0x55bdec059270 <unknown>\nE       #21 0x55bdec0687cc <unknown>\nE       #22 0x7f7f4ad28ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55bdec06969a <unknown>\n#1 0x55bdebd4c0dc <unknown>\n#2 0x55bdebd9f6c6 <unknown>\n#3 0x55bdebd9d516 <unknown>\n#4 0x55bdebd9aef7 <unknown>\n#5 0x55bdebd99d2c <unknown>\n#6 0x55bdebd8d40f <unknown>\n#7 0x55bdebdbb872 <unknown>\n#8 0x55bdebd8cd89 <unknown>\n#9 0x55bdebdbba3e <unknown>\n#10 0x55bdebdda5c3 <unknown>\n#11 0x55bdebdbb613 <unknown>\n#12 0x55bdebd8b4f7 <unknown>\n#13 0x55bdebd8be4e <unknown>\n#14 0x55bdec02f86b <unknown>\n#15 0x55bdec033911 <unknown>\n#16 0x55bdec01b35e <unknown>\n#17 0x55bdec034472 <unknown>\n#18 0x55bdebfffcbf <unknown>\n#19 0x55bdec059098 <unknown>\n#20 0x55bdec059270 <unknown>\n#21 0x55bdec0687cc <unknown>\n#22 0x7f7f4ad28ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f096b62a7a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f096c375c10>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f096aa7ddf0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55bdec059270 \\\\u003Cunknown>\\\\n#21 0x55bdec0687cc \\\\u003Cunknown>\\\\n#22 0x7f7f4ad28ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\nE         (Session info: chrome-headless-shell=126.0.6478.114)\nE       Stacktrace:\nE       #0 0x55bdec06969a <unknown>\nE       #1 0x55bdebd4c0dc <unknown>\nE       #2 0x55bdebd9f6c6 <unknown>\nE       #3 0x55bdebd9d516 <unknown>\nE       #4 0x55bdebd9aef7 <unknown>\nE       #5 0x55bdebd99d2c <unknown>\nE       #6 0x55bdebd8d40f <unknown>\nE       #7 0x55bdebdbb872 <unknown>\nE       #8 0x55bdebd8cd89 <unknown>\nE       #9 0x55bdebdbba3e <unknown>\nE       #10 0x55bdebdda5c3 <unknown>\nE       #11 0x55bdebdbb613 <unknown>\nE       #12 0x55bdebd8b4f7 <unknown>\nE       #13 0x55bdebd8be4e <unknown>\nE       #14 0x55bdec02f86b <unknown>\nE       #15 0x55bdec033911 <unknown>\nE       #16 0x55bdec01b35e <unknown>\nE       #17 0x55bdec034472 <unknown>\nE       #18 0x55bdebfffcbf <unknown>\nE       #19 0x55bdec059098 <unknown>\nE       #20 0x55bdec059270 <unknown>\nE       #21 0x55bdec0687cc <unknown>\nE       #22 0x7f7f4ad28ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1720053580014,"stop":1720053580015,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1720053580015,"stop":1720053740366,"duration":160351},"status":"failed","statusMessage":"Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55bdec06969a <unknown>\n#1 0x55bdebd4c0dc <unknown>\n#2 0x55bdebd9f6c6 <unknown>\n#3 0x55bdebd9d516 <unknown>\n#4 0x55bdebd9aef7 <unknown>\n#5 0x55bdebd99d2c <unknown>\n#6 0x55bdebd8d40f <unknown>\n#7 0x55bdebdbb872 <unknown>\n#8 0x55bdebd8cd89 <unknown>\n#9 0x55bdebdbba3e <unknown>\n#10 0x55bdebdda5c3 <unknown>\n#11 0x55bdebdbb613 <unknown>\n#12 0x55bdebd8b4f7 <unknown>\n#13 0x55bdebd8be4e <unknown>\n#14 0x55bdec02f86b <unknown>\n#15 0x55bdec033911 <unknown>\n#16 0x55bdec01b35e <unknown>\n#17 0x55bdec034472 <unknown>\n#18 0x55bdebfffcbf <unknown>\n#19 0x55bdec059098 <unknown>\n#20 0x55bdec059270 <unknown>\n#21 0x55bdec0687cc <unknown>\n#22 0x7f7f4ad28ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55bdec06969a <unknown>\n#1 0x55bdebd4c0dc <unknown>\n#2 0x55bdebd9f6c6 <unknown>\n#3 0x55bdebd9d516 <unknown>\n#4 0x55bdebd9aef7 <unknown>\n#5 0x55bdebd99d2c <unknown>\n#6 0x55bdebd8d40f <unknown>\n#7 0x55bdebdbb872 <unknown>\n#8 0x55bdebd8cd89 <unknown>\n#9 0x55bdebdbba3e <unknown>\n#10 0x55bdebdda5c3 <unknown>\n#11 0x55bdebdbb613 <unknown>\n#12 0x55bdebd8b4f7 <unknown>\n#13 0x55bdebd8be4e <unknown>\n#14 0x55bdec02f86b <unknown>\n#15 0x55bdec033911 <unknown>\n#16 0x55bdec01b35e <unknown>\n#17 0x55bdec034472 <unknown>\n#18 0x55bdebfffcbf <unknown>\n#19 0x55bdec059098 <unknown>\n#20 0x55bdec059270 <unknown>\n#21 0x55bdec0687cc <unknown>\n#22 0x7f7f4ad28ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"329fc82e3164053d","name":"stdout","source":"329fc82e3164053d.txt","type":"text/plain","size":871}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1429-927"},{"name":"thread","value":"2751-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RenfrewshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":56},"items":[{"uid":"5eecde99c8009a13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1967//#testresult/5eecde99c8009a13","status":"passed","time":{"start":1719967018760,"stop":1719967077250,"duration":58490}},{"uid":"20838f3db6dafe0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1966//#testresult/20838f3db6dafe0e","status":"passed","time":{"start":1719880804415,"stop":1719880832492,"duration":28077}},{"uid":"c76b9619b78392cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1965//#testresult/c76b9619b78392cf","status":"passed","time":{"start":1719794680194,"stop":1719794694029,"duration":13835}},{"uid":"ff3e36069c694831","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1964//#testresult/ff3e36069c694831","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55b9f089769a <unknown>\n#1 0x55b9f057a0dc <unknown>\n#2 0x55b9f05cd6c6 <unknown>\n#3 0x55b9f05cb516 <unknown>\n#4 0x55b9f05c8ef7 <unknown>\n#5 0x55b9f05c7d2c <unknown>\n#6 0x55b9f05bb40f <unknown>\n#7 0x55b9f05e9872 <unknown>\n#8 0x55b9f05bad89 <unknown>\n#9 0x55b9f05e9a3e <unknown>\n#10 0x55b9f06085c3 <unknown>\n#11 0x55b9f05e9613 <unknown>\n#12 0x55b9f05b94f7 <unknown>\n#13 0x55b9f05b9e4e <unknown>\n#14 0x55b9f085d86b <unknown>\n#15 0x55b9f0861911 <unknown>\n#16 0x55b9f084935e <unknown>\n#17 0x55b9f0862472 <unknown>\n#18 0x55b9f082dcbf <unknown>\n#19 0x55b9f0887098 <unknown>\n#20 0x55b9f0887270 <unknown>\n#21 0x55b9f08967cc <unknown>\n#22 0x7f53eac6eac3 <unknown>","time":{"start":1719708234684,"stop":1719708254356,"duration":19672}},{"uid":"b8b24a1e54a134d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1962//#testresult/b8b24a1e54a134d0","status":"passed","time":{"start":1719621409343,"stop":1719621472542,"duration":63199}},{"uid":"48dbfef16546d1ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1958//#testresult/48dbfef16546d1ed","status":"passed","time":{"start":1719535000248,"stop":1719535060234,"duration":59986}},{"uid":"b7518eca2d4b0947","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1954//#testresult/b7518eca2d4b0947","status":"passed","time":{"start":1719362417556,"stop":1719362433183,"duration":15627}},{"uid":"c9fd65b579bfa278","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1953//#testresult/c9fd65b579bfa278","status":"passed","time":{"start":1719276242974,"stop":1719276268800,"duration":25826}},{"uid":"772f178edc086b62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1952//#testresult/772f178edc086b62","status":"passed","time":{"start":1719189889150,"stop":1719190029929,"duration":140779}},{"uid":"3e9660b918ff973c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1951//#testresult/3e9660b918ff973c","status":"passed","time":{"start":1719103534568,"stop":1719103684928,"duration":150360}},{"uid":"52d85ef8e8c994fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1950//#testresult/52d85ef8e8c994fe","status":"passed","time":{"start":1719016808452,"stop":1719016817966,"duration":9514}},{"uid":"a41af85f3c0ecce5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1949//#testresult/a41af85f3c0ecce5","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55a69fba3e9a <unknown>\n#1 0x55a69f88d45c <unknown>\n#2 0x55a69f8e0336 <unknown>\n#3 0x55a69f8de176 <unknown>\n#4 0x55a69f8dbb57 <unknown>\n#5 0x55a69f8da97c <unknown>\n#6 0x55a69f8ce0ff <unknown>\n#7 0x55a69f8fc4b2 <unknown>\n#8 0x55a69f8cda79 <unknown>\n#9 0x55a69f8fc67e <unknown>\n#10 0x55a69f91b2cc <unknown>\n#11 0x55a69f8fc253 <unknown>\n#12 0x55a69f8cc1c7 <unknown>\n#13 0x55a69f8ccb3e <unknown>\n#14 0x55a69fb6a2db <unknown>\n#15 0x55a69fb6e387 <unknown>\n#16 0x55a69fb56e0e <unknown>\n#17 0x55a69fb6ee52 <unknown>\n#18 0x55a69fb3b7af <unknown>\n#19 0x55a69fb93188 <unknown>\n#20 0x55a69fb9335b <unknown>\n#21 0x55a69fba2fcc <unknown>\n#22 0x7fbbffa31ac3 <unknown>","time":{"start":1718930441974,"stop":1718930454542,"duration":12568}},{"uid":"c8aea278f4b0e933","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1948//#testresult/c8aea278f4b0e933","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 625)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556251a29e9a <unknown>\n#1 0x55625171345c <unknown>\n#2 0x556251766336 <unknown>\n#3 0x556251764176 <unknown>\n#4 0x556251761b57 <unknown>\n#5 0x55625176097c <unknown>\n#6 0x5562517540ff <unknown>\n#7 0x5562517824b2 <unknown>\n#8 0x556251753a79 <unknown>\n#9 0x55625178267e <unknown>\n#10 0x5562517a12cc <unknown>\n#11 0x556251782253 <unknown>\n#12 0x5562517521c7 <unknown>\n#13 0x556251752b3e <unknown>\n#14 0x5562519f02db <unknown>\n#15 0x5562519f4387 <unknown>\n#16 0x5562519dce0e <unknown>\n#17 0x5562519f4e52 <unknown>\n#18 0x5562519c17af <unknown>\n#19 0x556251a19188 <unknown>\n#20 0x556251a1935b <unknown>\n#21 0x556251a28fcc <unknown>\n#22 0x7fe36e61fac3 <unknown>","time":{"start":1718843969488,"stop":1718843982462,"duration":12974}},{"uid":"2b40a6d774e0d9c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1947//#testresult/2b40a6d774e0d9c0","status":"passed","time":{"start":1718757630016,"stop":1718757645254,"duration":15238}},{"uid":"7ad73305304ece33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1946//#testresult/7ad73305304ece33","status":"passed","time":{"start":1718671323867,"stop":1718671351743,"duration":27876}},{"uid":"9210980c3082a2db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1945//#testresult/9210980c3082a2db","status":"passed","time":{"start":1718584860228,"stop":1718584877286,"duration":17058}},{"uid":"41e14e02992df79e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1944//#testresult/41e14e02992df79e","status":"passed","time":{"start":1718498419851,"stop":1718498436303,"duration":16452}},{"uid":"eb19fa019d9dbb88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1943//#testresult/eb19fa019d9dbb88","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 668)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55c53abe5e9a <unknown>\n#1 0x55c53a8cf45c <unknown>\n#2 0x55c53a922336 <unknown>\n#3 0x55c53a920176 <unknown>\n#4 0x55c53a91db57 <unknown>\n#5 0x55c53a91c97c <unknown>\n#6 0x55c53a9100ff <unknown>\n#7 0x55c53a93e4b2 <unknown>\n#8 0x55c53a90fa79 <unknown>\n#9 0x55c53a93e67e <unknown>\n#10 0x55c53a95d2cc <unknown>\n#11 0x55c53a93e253 <unknown>\n#12 0x55c53a90e1c7 <unknown>\n#13 0x55c53a90eb3e <unknown>\n#14 0x55c53abac2db <unknown>\n#15 0x55c53abb0387 <unknown>\n#16 0x55c53ab98e0e <unknown>\n#17 0x55c53abb0e52 <unknown>\n#18 0x55c53ab7d7af <unknown>\n#19 0x55c53abd5188 <unknown>\n#20 0x55c53abd535b <unknown>\n#21 0x55c53abe4fcc <unknown>\n#22 0x7fc11419bac3 <unknown>","time":{"start":1718412018844,"stop":1718412036270,"duration":17426}},{"uid":"b8b9aee11fd5db77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1942//#testresult/b8b9aee11fd5db77","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x563cf705be9a <unknown>\n#1 0x563cf6d4545c <unknown>\n#2 0x563cf6d98336 <unknown>\n#3 0x563cf6d96176 <unknown>\n#4 0x563cf6d93b57 <unknown>\n#5 0x563cf6d9297c <unknown>\n#6 0x563cf6d860ff <unknown>\n#7 0x563cf6db44b2 <unknown>\n#8 0x563cf6d85a79 <unknown>\n#9 0x563cf6db467e <unknown>\n#10 0x563cf6dd32cc <unknown>\n#11 0x563cf6db4253 <unknown>\n#12 0x563cf6d841c7 <unknown>\n#13 0x563cf6d84b3e <unknown>\n#14 0x563cf70222db <unknown>\n#15 0x563cf7026387 <unknown>\n#16 0x563cf700ee0e <unknown>\n#17 0x563cf7026e52 <unknown>\n#18 0x563cf6ff37af <unknown>\n#19 0x563cf704b188 <unknown>\n#20 0x563cf704b35b <unknown>\n#21 0x563cf705afcc <unknown>\n#22 0x7f92de540ac3 <unknown>","time":{"start":1718325714284,"stop":1718325881111,"duration":166827}},{"uid":"934f2e1cfc94a9d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1939//#testresult/934f2e1cfc94a9d6","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55d29fa76e9a <unknown>\n#1 0x55d29f76045c <unknown>\n#2 0x55d29f7b3336 <unknown>\n#3 0x55d29f7b1176 <unknown>\n#4 0x55d29f7aeb57 <unknown>\n#5 0x55d29f7ad97c <unknown>\n#6 0x55d29f7a10ff <unknown>\n#7 0x55d29f7cf4b2 <unknown>\n#8 0x55d29f7a0a79 <unknown>\n#9 0x55d29f7cf67e <unknown>\n#10 0x55d29f7ee2cc <unknown>\n#11 0x55d29f7cf253 <unknown>\n#12 0x55d29f79f1c7 <unknown>\n#13 0x55d29f79fb3e <unknown>\n#14 0x55d29fa3d2db <unknown>\n#15 0x55d29fa41387 <unknown>\n#16 0x55d29fa29e0e <unknown>\n#17 0x55d29fa41e52 <unknown>\n#18 0x55d29fa0e7af <unknown>\n#19 0x55d29fa66188 <unknown>\n#20 0x55d29fa6635b <unknown>\n#21 0x55d29fa75fcc <unknown>\n#22 0x7f93b15c1ac3 <unknown>","time":{"start":1718239368914,"stop":1718239386761,"duration":17847}}]},"tags":[]},"source":"62ec99791f378f8b.json","parameterValues":["RenfrewshireCouncil"]}