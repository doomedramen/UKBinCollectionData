{"uid":"1d7691f871d493d9","name":"Validate Council Output [BexleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b14d94c00a7a02b15ede5862fe9627b6","time":{"start":1717115240439,"stop":1717115275169,"duration":34730},"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x555dc795de9a <unknown>\n#1 0x555dc76472a1 <unknown>\n#2 0x555dc768d3e8 <unknown>\n#3 0x555dc768b7cf <unknown>\n#4 0x555dc76b64b2 <unknown>\n#5 0x555dc7687a79 <unknown>\n#6 0x555dc76b667e <unknown>\n#7 0x555dc76d52cc <unknown>\n#8 0x555dc76b6253 <unknown>\n#9 0x555dc76861c7 <unknown>\n#10 0x555dc7686b3e <unknown>\n#11 0x555dc79242db <unknown>\n#12 0x555dc7928387 <unknown>\n#13 0x555dc7910e0e <unknown>\n#14 0x555dc7928e52 <unknown>\n#15 0x555dc78f57af <unknown>\n#16 0x555dc794d188 <unknown>\n#17 0x555dc794d35b <unknown>\n#18 0x555dc795cfcc <unknown>\n#19 0x7f8b5331cac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fbf809485e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fbf81e7b5f0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbf818da390>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x555dc794d35b \\\\u003Cunknown>\\\\n#18 0x555dc795cfcc \\\\u003Cunknown>\\\\n#19 0x7f8b5331cac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x555dc795de9a <unknown>\nE       #1 0x555dc76472a1 <unknown>\nE       #2 0x555dc768d3e8 <unknown>\nE       #3 0x555dc768b7cf <unknown>\nE       #4 0x555dc76b64b2 <unknown>\nE       #5 0x555dc7687a79 <unknown>\nE       #6 0x555dc76b667e <unknown>\nE       #7 0x555dc76d52cc <unknown>\nE       #8 0x555dc76b6253 <unknown>\nE       #9 0x555dc76861c7 <unknown>\nE       #10 0x555dc7686b3e <unknown>\nE       #11 0x555dc79242db <unknown>\nE       #12 0x555dc7928387 <unknown>\nE       #13 0x555dc7910e0e <unknown>\nE       #14 0x555dc7928e52 <unknown>\nE       #15 0x555dc78f57af <unknown>\nE       #16 0x555dc794d188 <unknown>\nE       #17 0x555dc794d35b <unknown>\nE       #18 0x555dc795cfcc <unknown>\nE       #19 0x7f8b5331cac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x555dc795de9a <unknown>\n#1 0x555dc76472a1 <unknown>\n#2 0x555dc768d3e8 <unknown>\n#3 0x555dc768b7cf <unknown>\n#4 0x555dc76b64b2 <unknown>\n#5 0x555dc7687a79 <unknown>\n#6 0x555dc76b667e <unknown>\n#7 0x555dc76d52cc <unknown>\n#8 0x555dc76b6253 <unknown>\n#9 0x555dc76861c7 <unknown>\n#10 0x555dc7686b3e <unknown>\n#11 0x555dc79242db <unknown>\n#12 0x555dc7928387 <unknown>\n#13 0x555dc7910e0e <unknown>\n#14 0x555dc7928e52 <unknown>\n#15 0x555dc78f57af <unknown>\n#16 0x555dc794d188 <unknown>\n#17 0x555dc794d35b <unknown>\n#18 0x555dc795cfcc <unknown>\n#19 0x7f8b5331cac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fbf809485e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fbf81e7b5f0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbf818da390>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x555dc794d35b \\\\u003Cunknown>\\\\n#18 0x555dc795cfcc \\\\u003Cunknown>\\\\n#19 0x7f8b5331cac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x555dc795de9a <unknown>\nE       #1 0x555dc76472a1 <unknown>\nE       #2 0x555dc768d3e8 <unknown>\nE       #3 0x555dc768b7cf <unknown>\nE       #4 0x555dc76b64b2 <unknown>\nE       #5 0x555dc7687a79 <unknown>\nE       #6 0x555dc76b667e <unknown>\nE       #7 0x555dc76d52cc <unknown>\nE       #8 0x555dc76b6253 <unknown>\nE       #9 0x555dc76861c7 <unknown>\nE       #10 0x555dc7686b3e <unknown>\nE       #11 0x555dc79242db <unknown>\nE       #12 0x555dc7928387 <unknown>\nE       #13 0x555dc7910e0e <unknown>\nE       #14 0x555dc7928e52 <unknown>\nE       #15 0x555dc78f57af <unknown>\nE       #16 0x555dc794d188 <unknown>\nE       #17 0x555dc794d35b <unknown>\nE       #18 0x555dc795cfcc <unknown>\nE       #19 0x7f8b5331cac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Given the council","time":{"start":1717115240440,"stop":1717115240441,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1717115240441,"stop":1717115275169,"duration":34728},"status":"failed","statusMessage":"Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x555dc795de9a <unknown>\n#1 0x555dc76472a1 <unknown>\n#2 0x555dc768d3e8 <unknown>\n#3 0x555dc768b7cf <unknown>\n#4 0x555dc76b64b2 <unknown>\n#5 0x555dc7687a79 <unknown>\n#6 0x555dc76b667e <unknown>\n#7 0x555dc76d52cc <unknown>\n#8 0x555dc76b6253 <unknown>\n#9 0x555dc76861c7 <unknown>\n#10 0x555dc7686b3e <unknown>\n#11 0x555dc79242db <unknown>\n#12 0x555dc7928387 <unknown>\n#13 0x555dc7910e0e <unknown>\n#14 0x555dc7928e52 <unknown>\n#15 0x555dc78f57af <unknown>\n#16 0x555dc794d188 <unknown>\n#17 0x555dc794d35b <unknown>\n#18 0x555dc795cfcc <unknown>\n#19 0x7f8b5331cac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x555dc795de9a <unknown>\n#1 0x555dc76472a1 <unknown>\n#2 0x555dc768d3e8 <unknown>\n#3 0x555dc768b7cf <unknown>\n#4 0x555dc76b64b2 <unknown>\n#5 0x555dc7687a79 <unknown>\n#6 0x555dc76b667e <unknown>\n#7 0x555dc76d52cc <unknown>\n#8 0x555dc76b6253 <unknown>\n#9 0x555dc76861c7 <unknown>\n#10 0x555dc7686b3e <unknown>\n#11 0x555dc79242db <unknown>\n#12 0x555dc7928387 <unknown>\n#13 0x555dc7910e0e <unknown>\n#14 0x555dc7928e52 <unknown>\n#15 0x555dc78f57af <unknown>\n#16 0x555dc794d188 <unknown>\n#17 0x555dc794d35b <unknown>\n#18 0x555dc795cfcc <unknown>\n#19 0x7f8b5331cac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1975815d3f3561ab","name":"stdout","source":"1975815d3f3561ab.txt","type":"text/plain","size":730}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az888-402"},{"name":"thread","value":"2649-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":14,"unknown":0,"total":22},"items":[{"uid":"f1907e8197c75c62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1903//#testresult/f1907e8197c75c62","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55806835ae9a <unknown>\n#1 0x55806804445c <unknown>\n#2 0x5580680905b5 <unknown>\n#3 0x558068090671 <unknown>\n#4 0x5580680d4f14 <unknown>\n#5 0x5580680b34dd <unknown>\n#6 0x5580680d22cc <unknown>\n#7 0x5580680b3253 <unknown>\n#8 0x5580680831c7 <unknown>\n#9 0x558068083b3e <unknown>\n#10 0x5580683212db <unknown>\n#11 0x558068325387 <unknown>\n#12 0x55806830de0e <unknown>\n#13 0x558068325e52 <unknown>\n#14 0x5580682f27af <unknown>\n#15 0x55806834a188 <unknown>\n#16 0x55806834a35b <unknown>\n#17 0x558068359fcc <unknown>\n#18 0x7fe0cbab1ac3 <unknown>","time":{"start":1717028878484,"stop":1717028973111,"duration":94627}},{"uid":"8dcdc95684e53afc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1898//#testresult/8dcdc95684e53afc","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1716942519507,"stop":1716942560595,"duration":41088}},{"uid":"fdef5158f88320a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1893//#testresult/fdef5158f88320a3","status":"passed","time":{"start":1716856057459,"stop":1716856093769,"duration":36310}},{"uid":"cf1bb785c2a06feb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1883//#testresult/cf1bb785c2a06feb","status":"passed","time":{"start":1716769721422,"stop":1716769738476,"duration":17054}},{"uid":"41c83390e19b0fd0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1881//#testresult/41c83390e19b0fd0","status":"passed","time":{"start":1716753032642,"stop":1716753123674,"duration":91032}},{"uid":"719902e4cb40a2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1877//#testresult/719902e4cb40a2b","status":"passed","time":{"start":1716743182586,"stop":1716743263548,"duration":80962}},{"uid":"91c24924594f4c47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1871//#testresult/91c24924594f4c47","status":"passed","time":{"start":1716709792493,"stop":1716709838888,"duration":46395}},{"uid":"60e744e6eb6fb0b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1866//#testresult/60e744e6eb6fb0b","status":"passed","time":{"start":1716705105438,"stop":1716705138099,"duration":32661}},{"uid":"ba910096b6169edc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1865//#testresult/ba910096b6169edc","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556dc524ee9a <unknown>\n#1 0x556dc4f3845c <unknown>\n#2 0x556dc4f845b5 <unknown>\n#3 0x556dc4f84671 <unknown>\n#4 0x556dc4fc8f14 <unknown>\n#5 0x556dc4fa74dd <unknown>\n#6 0x556dc4fc62cc <unknown>\n#7 0x556dc4fa7253 <unknown>\n#8 0x556dc4f771c7 <unknown>\n#9 0x556dc4f77b3e <unknown>\n#10 0x556dc52152db <unknown>\n#11 0x556dc5219387 <unknown>\n#12 0x556dc5201e0e <unknown>\n#13 0x556dc5219e52 <unknown>\n#14 0x556dc51e67af <unknown>\n#15 0x556dc523e188 <unknown>\n#16 0x556dc523e35b <unknown>\n#17 0x556dc524dfcc <unknown>\n#18 0x7fd3e9815ac3 <unknown>","time":{"start":1716683434253,"stop":1716683525370,"duration":91117}},{"uid":"38be2d01e203ea57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1863//#testresult/38be2d01e203ea57","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ecb3b4ce9a <unknown>\n#1 0x55ecb383645c <unknown>\n#2 0x55ecb38825b5 <unknown>\n#3 0x55ecb3882671 <unknown>\n#4 0x55ecb38c6f14 <unknown>\n#5 0x55ecb38a54dd <unknown>\n#6 0x55ecb38c42cc <unknown>\n#7 0x55ecb38a5253 <unknown>\n#8 0x55ecb38751c7 <unknown>\n#9 0x55ecb3875b3e <unknown>\n#10 0x55ecb3b132db <unknown>\n#11 0x55ecb3b17387 <unknown>\n#12 0x55ecb3affe0e <unknown>\n#13 0x55ecb3b17e52 <unknown>\n#14 0x55ecb3ae47af <unknown>\n#15 0x55ecb3b3c188 <unknown>\n#16 0x55ecb3b3c35b <unknown>\n#17 0x55ecb3b4bfcc <unknown>\n#18 0x7f781cc52ac3 <unknown>","time":{"start":1716624813706,"stop":1716624909130,"duration":95424}},{"uid":"1ceba82761c4b62d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1862//#testresult/1ceba82761c4b62d","status":"passed","time":{"start":1716596791342,"stop":1716596817252,"duration":25910}},{"uid":"79d3f4e4f471f584","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1856//#testresult/79d3f4e4f471f584","status":"passed","time":{"start":1716510461454,"stop":1716510498488,"duration":37034}},{"uid":"c0427bd889f3ab7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1855//#testresult/c0427bd889f3ab7c","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55f99f97ce9a <unknown>\n#1 0x55f99f66645c <unknown>\n#2 0x55f99f6b25b5 <unknown>\n#3 0x55f99f6b2671 <unknown>\n#4 0x55f99f6f6f14 <unknown>\n#5 0x55f99f6d54dd <unknown>\n#6 0x55f99f6f42cc <unknown>\n#7 0x55f99f6d5253 <unknown>\n#8 0x55f99f6a51c7 <unknown>\n#9 0x55f99f6a5b3e <unknown>\n#10 0x55f99f9432db <unknown>\n#11 0x55f99f947387 <unknown>\n#12 0x55f99f92fe0e <unknown>\n#13 0x55f99f947e52 <unknown>\n#14 0x55f99f9147af <unknown>\n#15 0x55f99f96c188 <unknown>\n#16 0x55f99f96c35b <unknown>\n#17 0x55f99f97bfcc <unknown>\n#18 0x7f88daa32ac3 <unknown>","time":{"start":1716424027839,"stop":1716424108124,"duration":80285}},{"uid":"ace6c5fb23cd2cbf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1854//#testresult/ace6c5fb23cd2cbf","status":"passed","time":{"start":1716337620804,"stop":1716337636850,"duration":16046}},{"uid":"fe56a0494ea37d5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1853//#testresult/fe56a0494ea37d5e","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1716251254850,"stop":1716251293138,"duration":38288}},{"uid":"53d22ca22408a199","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1852//#testresult/53d22ca22408a199","status":"passed","time":{"start":1716164884851,"stop":1716164903765,"duration":18914}},{"uid":"86c8dbf8544b8781","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1851//#testresult/86c8dbf8544b8781","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55fcb436aeca <unknown>\n#1 0x55fcb40542a1 <unknown>\n#2 0x55fcb409a3e8 <unknown>\n#3 0x55fcb40987cf <unknown>\n#4 0x55fcb40c34b2 <unknown>\n#5 0x55fcb4094a79 <unknown>\n#6 0x55fcb40c367e <unknown>\n#7 0x55fcb40e22cc <unknown>\n#8 0x55fcb40c3253 <unknown>\n#9 0x55fcb40931c7 <unknown>\n#10 0x55fcb4093b3e <unknown>\n#11 0x55fcb433130b <unknown>\n#12 0x55fcb43353b7 <unknown>\n#13 0x55fcb431de3e <unknown>\n#14 0x55fcb4335e82 <unknown>\n#15 0x55fcb43027df <unknown>\n#16 0x55fcb435a1b8 <unknown>\n#17 0x55fcb435a38b <unknown>\n#18 0x55fcb4369ffc <unknown>\n#19 0x7f135ee53ac3 <unknown>","time":{"start":1716154875027,"stop":1716154901149,"duration":26122}},{"uid":"90c20a6781132870","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1849//#testresult/90c20a6781132870","status":"passed","time":{"start":1716152333313,"stop":1716152352331,"duration":19018}},{"uid":"476333efdff9ab2d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1846//#testresult/476333efdff9ab2d","status":"passed","time":{"start":1716078613511,"stop":1716078634074,"duration":20563}},{"uid":"9994d2201d964bb8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1842//#testresult/9994d2201d964bb8","status":"passed","time":{"start":1715992032711,"stop":1715992060186,"duration":27475}}]},"tags":[]},"source":"1d7691f871d493d9.json","parameterValues":["BexleyCouncil"]}