{"uid":"35659ba97abbf3ac","name":"Validate Council Output [SunderlandCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1a7ab024f39f9d5f723a6a4b1c23ccbf","time":{"start":1723767686889,"stop":1723767881348,"duration":194459},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_text'","statusTrace":"fixturefunc = <function scrape_step at 0x7f724ce2ab60>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f724dc5ff20>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SunderlandCityCouncil.CouncilClass object at 0x7f724c047440>, page = ''\nkwargs = {'council_module_str': 'SunderlandCityCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"03158feaad3ebd7a81f57cfecd22c18c\")>\ndata = {'bins': []}, collections = [], user_paon = '13'\nuser_postcode = 'SR4 6BJ', web_driver = 'http://localhost:4444', headless = True\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            collections = []\n    \n            user_paon = kwargs.get(\"paon\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_paon(user_paon)\n            check_postcode(user_postcode)\n    \n            driver = create_webdriver(web_driver, headless, None, __name__)\n            driver.get(\n                \"https://webapps.sunderland.gov.uk/WEBAPPS/WSS/Sunderland_Portal/Forms/bindaychecker.aspx\"\n            )\n    \n            inputElement_postcode = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_tbPostCode_controltext\")\n                )\n            )\n            inputElement_postcode.send_keys(user_postcode)\n    \n            inputElement_submit_button = WebDriverWait(driver, 30).until(\n                EC.element_to_be_clickable((By.ID, \"ContentPlaceHolder1_btnLLPG\"))\n            )\n            inputElement_submit_button.click()\n    \n            addressList = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_ddlAddresses\")\n                )\n            )\n            selected_addressList = Select(addressList)\n            for idx, addr_option in enumerate(selected_addressList.options):\n                option_name = addr_option.accessible_name[0 : len(user_paon)]\n                if option_name == user_paon:\n                    break\n            selected_addressList.select_by_index(idx)\n    \n            # Make a BS4 object\n            soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n            soup.prettify()\n    \n            household_bin_date = datetime.strptime(\n>               soup.find(\"span\", {\"id\": \"ContentPlaceHolder1_LabelHouse\"}).get_text(\n                    strip=True\n                ),\n                \"%A %d %B %Y\",\n            )\nE           AttributeError: 'NoneType' object has no attribute 'get_text'\n\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:66: AttributeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_text'","statusTrace":"fixturefunc = <function scrape_step at 0x7f724ce2ab60>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f724dc5ff20>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SunderlandCityCouncil.CouncilClass object at 0x7f724c047440>, page = ''\nkwargs = {'council_module_str': 'SunderlandCityCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"03158feaad3ebd7a81f57cfecd22c18c\")>\ndata = {'bins': []}, collections = [], user_paon = '13'\nuser_postcode = 'SR4 6BJ', web_driver = 'http://localhost:4444', headless = True\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            collections = []\n    \n            user_paon = kwargs.get(\"paon\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_paon(user_paon)\n            check_postcode(user_postcode)\n    \n            driver = create_webdriver(web_driver, headless, None, __name__)\n            driver.get(\n                \"https://webapps.sunderland.gov.uk/WEBAPPS/WSS/Sunderland_Portal/Forms/bindaychecker.aspx\"\n            )\n    \n            inputElement_postcode = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_tbPostCode_controltext\")\n                )\n            )\n            inputElement_postcode.send_keys(user_postcode)\n    \n            inputElement_submit_button = WebDriverWait(driver, 30).until(\n                EC.element_to_be_clickable((By.ID, \"ContentPlaceHolder1_btnLLPG\"))\n            )\n            inputElement_submit_button.click()\n    \n            addressList = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_ddlAddresses\")\n                )\n            )\n            selected_addressList = Select(addressList)\n            for idx, addr_option in enumerate(selected_addressList.options):\n                option_name = addr_option.accessible_name[0 : len(user_paon)]\n                if option_name == user_paon:\n                    break\n            selected_addressList.select_by_index(idx)\n    \n            # Make a BS4 object\n            soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n            soup.prettify()\n    \n            household_bin_date = datetime.strptime(\n>               soup.find(\"span\", {\"id\": \"ContentPlaceHolder1_LabelHouse\"}).get_text(\n                    strip=True\n                ),\n                \"%A %d %B %Y\",\n            )\nE           AttributeError: 'NoneType' object has no attribute 'get_text'\n\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:66: AttributeError","steps":[{"name":"Given the council","time":{"start":1723767686889,"stop":1723767686890,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1723767686890,"stop":1723767881347,"duration":194457},"status":"failed","statusMessage":"'NoneType' object has no attribute 'get_text'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'get_text'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c6f78fab6469e56c","name":"stdout","source":"c6f78fab6469e56c.txt","type":"text/plain","size":113}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1200-556"},{"name":"thread","value":"2748-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SunderlandCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":95,"unknown":0,"total":99},"items":[{"uid":"877813a31cc4de40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2027//#testresult/877813a31cc4de40","status":"passed","time":{"start":1723680944597,"stop":1723680962138,"duration":17541}},{"uid":"23eb7fb72591e2b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2026//#testresult/23eb7fb72591e2b9","status":"passed","time":{"start":1723594912023,"stop":1723595056217,"duration":144194}},{"uid":"2042962f03a28ce5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2025//#testresult/2042962f03a28ce5","status":"passed","time":{"start":1723508667245,"stop":1723508787416,"duration":120171}},{"uid":"d36dd7f2ef54484f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2024//#testresult/d36dd7f2ef54484f","status":"passed","time":{"start":1723422273764,"stop":1723422425691,"duration":151927}},{"uid":"67aa61bef3d04f6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2022//#testresult/67aa61bef3d04f6b","status":"passed","time":{"start":1723336038051,"stop":1723336067447,"duration":29396}},{"uid":"afb1f437bc3778a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2020//#testresult/afb1f437bc3778a8","status":"passed","time":{"start":1723249449549,"stop":1723249599013,"duration":149464}},{"uid":"96a9d3c7c5fc2347","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2019//#testresult/96a9d3c7c5fc2347","status":"passed","time":{"start":1723163010650,"stop":1723163161842,"duration":151192}},{"uid":"55879cd48bbf4b69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2014//#testresult/55879cd48bbf4b69","status":"passed","time":{"start":1723076570471,"stop":1723076713616,"duration":143145}},{"uid":"63f75da3c89223ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2012//#testresult/63f75da3c89223ec","status":"passed","time":{"start":1722990158353,"stop":1722990300761,"duration":142408}},{"uid":"12c0f3ced911292f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2007//#testresult/12c0f3ced911292f","status":"passed","time":{"start":1722903774610,"stop":1722903917017,"duration":142407}},{"uid":"47b6b720c0c5496c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2006//#testresult/47b6b720c0c5496c","status":"passed","time":{"start":1722817585469,"stop":1722817728669,"duration":143200}},{"uid":"a9827c4e1c0d8c85","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2005//#testresult/a9827c4e1c0d8c85","status":"passed","time":{"start":1722730947657,"stop":1722731200249,"duration":252592}},{"uid":"987fb9f5d477609b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2004//#testresult/987fb9f5d477609b","status":"passed","time":{"start":1722644598173,"stop":1722644757209,"duration":159036}},{"uid":"d7038a57b2fd16c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2003//#testresult/d7038a57b2fd16c7","status":"passed","time":{"start":1722558089835,"stop":1722558351483,"duration":261648}},{"uid":"7a225f6759844c5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2002//#testresult/7a225f6759844c5e","status":"passed","time":{"start":1722471666532,"stop":1722471810042,"duration":143510}},{"uid":"ef1f6b253e4b90c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1998//#testresult/ef1f6b253e4b90c","status":"passed","time":{"start":1722385490456,"stop":1722385517877,"duration":27421}},{"uid":"c15dcfe659072c71","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1997//#testresult/c15dcfe659072c71","status":"passed","time":{"start":1722298979691,"stop":1722298995778,"duration":16087}},{"uid":"5401ba745f0205be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1996//#testresult/5401ba745f0205be","status":"passed","time":{"start":1722212500745,"stop":1722212646322,"duration":145577}},{"uid":"482bc9c7f9cc4d9c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1995//#testresult/482bc9c7f9cc4d9c","status":"passed","time":{"start":1722126181327,"stop":1722126195836,"duration":14509}},{"uid":"59581f92b58d3b79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1994//#testresult/59581f92b58d3b79","status":"passed","time":{"start":1722039841566,"stop":1722039966445,"duration":124879}}]},"tags":[]},"source":"35659ba97abbf3ac.json","parameterValues":["SunderlandCityCouncil"]}