{"uid":"e24e1576411164ba","name":"Validate Council Output [SwaleBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"af246d65f1eea891cf11ee497308965a","time":{"start":1716710284231,"stop":1716710286121,"duration":1890},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f1aa1f442c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f1aa105df40>, 'council': 'SwaleBoroughCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f1aa105d040>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>Bins - Check Your Bin Days</ti...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:41: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f1aa1f442c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f1aa105df40>, 'council': 'SwaleBoroughCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f1aa105d040>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>Bins - Check Your Bin Days</ti...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:41: AttributeError","steps":[{"name":"Given the council: SwaleBoroughCouncil","time":{"start":1716710284232,"stop":1716710284232,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SwaleBoroughCouncil","time":{"start":1716710284232,"stop":1716710286121,"duration":1889},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1427-160"},{"name":"thread","value":"2853-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwaleBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":14},"items":[{"uid":"250a460ffcf05112","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1866//#testresult/250a460ffcf05112","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716705647846,"stop":1716705649582,"duration":1736}},{"uid":"72b611627ebc3d21","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1865//#testresult/72b611627ebc3d21","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716684060154,"stop":1716684062004,"duration":1850}},{"uid":"89f70ae4cd351a27","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1863//#testresult/89f70ae4cd351a27","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716625427099,"stop":1716625428824,"duration":1725}},{"uid":"df5d9951dc76b0df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1862//#testresult/df5d9951dc76b0df","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716597470093,"stop":1716597472306,"duration":2213}},{"uid":"5f306701dc87fa15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1856//#testresult/5f306701dc87fa15","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716511231788,"stop":1716511233520,"duration":1732}},{"uid":"512f7bc5b7d26692","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1855//#testresult/512f7bc5b7d26692","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716424904734,"stop":1716424907244,"duration":2510}},{"uid":"6c81463b50c3f4f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1854//#testresult/6c81463b50c3f4f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716338356953,"stop":1716338358526,"duration":1573}},{"uid":"4000a38dfd87d310","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1853//#testresult/4000a38dfd87d310","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716252026223,"stop":1716252028287,"duration":2064}},{"uid":"fce425326f43166f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1852//#testresult/fce425326f43166f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716165635569,"stop":1716165637434,"duration":1865}},{"uid":"e8501777aa80db5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1851//#testresult/e8501777aa80db5c","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716155391590,"stop":1716155393531,"duration":1941}},{"uid":"558d6ceecc444e7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1846//#testresult/558d6ceecc444e7a","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716079402397,"stop":1716079404090,"duration":1693}},{"uid":"b75d9172ee49cd1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1842//#testresult/b75d9172ee49cd1f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1715992652543,"stop":1715992654332,"duration":1789}},{"uid":"b1388202b4bbc90b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1839//#testresult/b1388202b4bbc90b","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1715983705138,"stop":1715983707480,"duration":2342}}]},"tags":[]},"source":"e24e1576411164ba.json","parameterValues":["SwaleBoroughCouncil"]}