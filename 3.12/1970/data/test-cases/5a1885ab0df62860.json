{"uid":"5a1885ab0df62860","name":"Validate Council Output [SunderlandCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1a7ab024f39f9d5f723a6a4b1c23ccbf","time":{"start":1720226569561,"stop":1720226643730,"duration":74169},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_text'","statusTrace":"fixturefunc = <function scrape_step at 0x7f2a1ff06160>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f2a20dd1cd0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SunderlandCityCouncil.CouncilClass object at 0x7f2a1edcd160>, page = ''\nkwargs = {'council_module_str': 'SunderlandCityCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"fab1e3d86c6d5c52bd25c7b6114ef7e5\")>\ndata = {'bins': []}, collections = [], user_paon = '13'\nuser_postcode = 'SR4 6BJ', web_driver = 'http://localhost:4444', headless = True\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            collections = []\n    \n            user_paon = kwargs.get(\"paon\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_paon(user_paon)\n            check_postcode(user_postcode)\n    \n            driver = create_webdriver(web_driver, headless, None, __name__)\n            driver.get(\n                \"https://webapps.sunderland.gov.uk/WEBAPPS/WSS/Sunderland_Portal/Forms/bindaychecker.aspx\"\n            )\n    \n            inputElement_postcode = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_tbPostCode_controltext\")\n                )\n            )\n            inputElement_postcode.send_keys(user_postcode)\n    \n            inputElement_submit_button = WebDriverWait(driver, 30).until(\n                EC.element_to_be_clickable((By.ID, \"ContentPlaceHolder1_btnLLPG\"))\n            )\n            inputElement_submit_button.click()\n    \n            addressList = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_ddlAddresses\")\n                )\n            )\n            selected_addressList = Select(addressList)\n            for idx, addr_option in enumerate(selected_addressList.options):\n                option_name = addr_option.accessible_name[0 : len(user_paon)]\n                if option_name == user_paon:\n                    break\n            selected_addressList.select_by_index(idx)\n    \n            # Make a BS4 object\n            soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n            soup.prettify()\n    \n            household_bin_date = datetime.strptime(\n>               soup.find(\"span\", {\"id\": \"ContentPlaceHolder1_LabelHouse\"}).get_text(\n                    strip=True\n                ),\n                \"%A %d %B %Y\",\n            )\nE           AttributeError: 'NoneType' object has no attribute 'get_text'\n\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:66: AttributeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_text'","statusTrace":"fixturefunc = <function scrape_step at 0x7f2a1ff06160>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f2a20dd1cd0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SunderlandCityCouncil.CouncilClass object at 0x7f2a1edcd160>, page = ''\nkwargs = {'council_module_str': 'SunderlandCityCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"fab1e3d86c6d5c52bd25c7b6114ef7e5\")>\ndata = {'bins': []}, collections = [], user_paon = '13'\nuser_postcode = 'SR4 6BJ', web_driver = 'http://localhost:4444', headless = True\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            collections = []\n    \n            user_paon = kwargs.get(\"paon\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_paon(user_paon)\n            check_postcode(user_postcode)\n    \n            driver = create_webdriver(web_driver, headless, None, __name__)\n            driver.get(\n                \"https://webapps.sunderland.gov.uk/WEBAPPS/WSS/Sunderland_Portal/Forms/bindaychecker.aspx\"\n            )\n    \n            inputElement_postcode = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_tbPostCode_controltext\")\n                )\n            )\n            inputElement_postcode.send_keys(user_postcode)\n    \n            inputElement_submit_button = WebDriverWait(driver, 30).until(\n                EC.element_to_be_clickable((By.ID, \"ContentPlaceHolder1_btnLLPG\"))\n            )\n            inputElement_submit_button.click()\n    \n            addressList = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_ddlAddresses\")\n                )\n            )\n            selected_addressList = Select(addressList)\n            for idx, addr_option in enumerate(selected_addressList.options):\n                option_name = addr_option.accessible_name[0 : len(user_paon)]\n                if option_name == user_paon:\n                    break\n            selected_addressList.select_by_index(idx)\n    \n            # Make a BS4 object\n            soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n            soup.prettify()\n    \n            household_bin_date = datetime.strptime(\n>               soup.find(\"span\", {\"id\": \"ContentPlaceHolder1_LabelHouse\"}).get_text(\n                    strip=True\n                ),\n                \"%A %d %B %Y\",\n            )\nE           AttributeError: 'NoneType' object has no attribute 'get_text'\n\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:66: AttributeError","steps":[{"name":"Given the council","time":{"start":1720226569561,"stop":1720226569562,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1720226569562,"stop":1720226643730,"duration":74168},"status":"failed","statusMessage":"'NoneType' object has no attribute 'get_text'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'get_text'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"356e66872d311221","name":"stdout","source":"356e66872d311221.txt","type":"text/plain","size":113}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az520-771"},{"name":"thread","value":"2644-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SunderlandCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":55,"unknown":0,"total":58},"items":[{"uid":"e75dc1460e566522","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1969//#testresult/e75dc1460e566522","status":"passed","time":{"start":1720139965048,"stop":1720140123701,"duration":158653}},{"uid":"a4823e479a1a03cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1968//#testresult/a4823e479a1a03cf","status":"passed","time":{"start":1720053631723,"stop":1720053757836,"duration":126113}},{"uid":"bf2931f19dc6455b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1967//#testresult/bf2931f19dc6455b","status":"passed","time":{"start":1719967080663,"stop":1719967229963,"duration":149300}},{"uid":"8a31b2ee5e3f2dfc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1966//#testresult/8a31b2ee5e3f2dfc","status":"passed","time":{"start":1719880840233,"stop":1719880988104,"duration":147871}},{"uid":"9539059b273db221","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1965//#testresult/9539059b273db221","status":"passed","time":{"start":1719795032745,"stop":1719795056246,"duration":23501}},{"uid":"cd1b729312516560","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1964//#testresult/cd1b729312516560","status":"passed","time":{"start":1719708557492,"stop":1719708591978,"duration":34486}},{"uid":"280557a6d40b73c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1962//#testresult/280557a6d40b73c6","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x561846f9069a <unknown>\n#1 0x561846c730dc <unknown>\n#2 0x561846c6ac70 <unknown>\n#3 0x561846c5a772 <unknown>\n#4 0x561846c5bdf2 <unknown>\n#5 0x561846c5aa2d <unknown>\n#6 0x561846c5a143 <unknown>\n#7 0x561846c5a035 <unknown>\n#8 0x561846c57f76 <unknown>\n#9 0x561846c5847a <unknown>\n#10 0x561846c75b27 <unknown>\n#11 0x561846d021f5 <unknown>\n#12 0x561846ce2872 <unknown>\n#13 0x561846d015c3 <unknown>\n#14 0x561846ce2613 <unknown>\n#15 0x561846cb24f7 <unknown>\n#16 0x561846cb2e4e <unknown>\n#17 0x561846f5686b <unknown>\n#18 0x561846f5a911 <unknown>\n#19 0x561846f4235e <unknown>\n#20 0x561846f5b472 <unknown>\n#21 0x561846f26cbf <unknown>\n#22 0x561846f80098 <unknown>\n#23 0x561846f80270 <unknown>\n#24 0x561846f8f7cc <unknown>\n#25 0x7fe702e68ac3 <unknown>","time":{"start":1719621765976,"stop":1719621914814,"duration":148838}},{"uid":"87a2bf7580a5edfe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1958//#testresult/87a2bf7580a5edfe","status":"passed","time":{"start":1719535343482,"stop":1719535369406,"duration":25924}},{"uid":"715d76c287d77540","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1954//#testresult/715d76c287d77540","status":"passed","time":{"start":1719362469931,"stop":1719362606938,"duration":137007}},{"uid":"dc25fda0b0554028","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1953//#testresult/dc25fda0b0554028","status":"passed","time":{"start":1719276229727,"stop":1719276252169,"duration":22442}},{"uid":"8cbb04c1a3f9a75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1952//#testresult/8cbb04c1a3f9a75","status":"passed","time":{"start":1719189905953,"stop":1719190043096,"duration":137143}},{"uid":"81cd433480c316b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1951//#testresult/81cd433480c316b","status":"passed","time":{"start":1719103598104,"stop":1719103691694,"duration":93590}},{"uid":"e6f2ffbd69468688","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1950//#testresult/e6f2ffbd69468688","status":"passed","time":{"start":1719016858608,"stop":1719017014008,"duration":155400}},{"uid":"1fef58b3b063815b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1949//#testresult/1fef58b3b063815b","status":"passed","time":{"start":1718930608661,"stop":1718930636557,"duration":27896}},{"uid":"aa9aaf66ac8a44d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1948//#testresult/aa9aaf66ac8a44d7","status":"passed","time":{"start":1718844014297,"stop":1718844147988,"duration":133691}},{"uid":"ddcd37ab66f57e3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1947//#testresult/ddcd37ab66f57e3a","status":"passed","time":{"start":1718757692639,"stop":1718757961754,"duration":269115}},{"uid":"ec5ec0876b87786","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1946//#testresult/ec5ec0876b87786","status":"passed","time":{"start":1718671352937,"stop":1718671499636,"duration":146699}},{"uid":"8b83ad3dba544809","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1945//#testresult/8b83ad3dba544809","status":"passed","time":{"start":1718584912674,"stop":1718585042382,"duration":129708}},{"uid":"df61510767ce2e07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1944//#testresult/df61510767ce2e07","status":"passed","time":{"start":1718498482966,"stop":1718498749561,"duration":266595}},{"uid":"e095da8abf33fa35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1943//#testresult/e095da8abf33fa35","status":"passed","time":{"start":1718412074213,"stop":1718412211932,"duration":137719}}]},"tags":[]},"source":"5a1885ab0df62860.json","parameterValues":["SunderlandCityCouncil"]}