{"uid":"22ee7a37b8181ed5","name":"Validate Council Output [NorthNorthamptonshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"92c0f84b87cb9703264ef6f7bea152ee","time":{"start":1720226343411,"stop":1720226374039,"duration":30628},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7f0ef1129da0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f0ef1e0db20>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7f0eefe4f950>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', today = 1720226343000\ndateforurl = '2024-07-06', dateforurl2 = '2024-08-17'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7f0ef1129da0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f0ef1e0db20>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7f0eefe4f950>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', today = 1720226343000\ndateforurl = '2024-07-06', dateforurl2 = '2024-08-17'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","steps":[{"name":"Given the council","time":{"start":1720226343411,"stop":1720226343412,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1720226343412,"stop":1720226374039,"duration":30627},"status":"failed","statusMessage":"No bin data found for provided UPRN..","statusTrace":"ValueError: No bin data found for provided UPRN..\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1c9f23c32f7acbaf","name":"stdout","source":"1c9f23c32f7acbaf.txt","type":"text/plain","size":55}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az520-771"},{"name":"thread","value":"2650-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":56,"unknown":0,"total":57},"items":[{"uid":"c8377b4fdf2e8a74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1969//#testresult/c8377b4fdf2e8a74","status":"passed","time":{"start":1720139760493,"stop":1720139761175,"duration":682}},{"uid":"2a9c03c1d8bc3699","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1968//#testresult/2a9c03c1d8bc3699","status":"passed","time":{"start":1720053569343,"stop":1720053570268,"duration":925}},{"uid":"606cda9939ab2080","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1967//#testresult/606cda9939ab2080","status":"passed","time":{"start":1719966914850,"stop":1719966918778,"duration":3928}},{"uid":"ca5a23540944650d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1966//#testresult/ca5a23540944650d","status":"passed","time":{"start":1719880787374,"stop":1719880788097,"duration":723}},{"uid":"e7e7a9f1a355d09a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1965//#testresult/e7e7a9f1a355d09a","status":"passed","time":{"start":1719794611249,"stop":1719794612735,"duration":1486}},{"uid":"f476396265e3a918","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1964//#testresult/f476396265e3a918","status":"passed","time":{"start":1719708189450,"stop":1719708190360,"duration":910}},{"uid":"a132775e2b44a63f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1962//#testresult/a132775e2b44a63f","status":"passed","time":{"start":1719621328845,"stop":1719621336811,"duration":7966}},{"uid":"fffe072d4084d19f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1958//#testresult/fffe072d4084d19f","status":"passed","time":{"start":1719534904627,"stop":1719534905583,"duration":956}},{"uid":"59e3c5e02a983c92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1954//#testresult/59e3c5e02a983c92","status":"passed","time":{"start":1719362303045,"stop":1719362304203,"duration":1158}},{"uid":"f69b6f95a533be40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1953//#testresult/f69b6f95a533be40","status":"passed","time":{"start":1719275907089,"stop":1719275907764,"duration":675}},{"uid":"52550f7091f53723","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1952//#testresult/52550f7091f53723","status":"passed","time":{"start":1719189689950,"stop":1719189691279,"duration":1329}},{"uid":"31f69f3a5ca485f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1951//#testresult/31f69f3a5ca485f3","status":"passed","time":{"start":1719103339729,"stop":1719103340708,"duration":979}},{"uid":"3fe2b61f09bcb9f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1950//#testresult/3fe2b61f09bcb9f2","status":"passed","time":{"start":1719016751129,"stop":1719016755418,"duration":4289}},{"uid":"4590faff299bb1c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1949//#testresult/4590faff299bb1c0","status":"passed","time":{"start":1718930431299,"stop":1718930432333,"duration":1034}},{"uid":"a9b3af7322f6f6e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1948//#testresult/a9b3af7322f6f6e0","status":"passed","time":{"start":1718843996143,"stop":1718843998190,"duration":2047}},{"uid":"4d4d9702c312882e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1947//#testresult/4d4d9702c312882e","status":"passed","time":{"start":1718757573416,"stop":1718757574164,"duration":748}},{"uid":"98596e29f1766083","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1946//#testresult/98596e29f1766083","status":"passed","time":{"start":1718671309560,"stop":1718671310515,"duration":955}},{"uid":"c5e278fe4db12cba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1945//#testresult/c5e278fe4db12cba","status":"passed","time":{"start":1718584807456,"stop":1718584809564,"duration":2108}},{"uid":"6da538f1264ef781","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1944//#testresult/6da538f1264ef781","status":"passed","time":{"start":1718498365603,"stop":1718498367036,"duration":1433}},{"uid":"b4436b4cc1d17352","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1943//#testresult/b4436b4cc1d17352","status":"passed","time":{"start":1718411965959,"stop":1718411967021,"duration":1062}}]},"tags":[]},"source":"22ee7a37b8181ed5.json","parameterValues":["NorthNorthamptonshireCouncil"]}