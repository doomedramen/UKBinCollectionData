{"uid":"85bf003e4d0c40a5","name":"Validate Council Output [BexleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b14d94c00a7a02b15ede5862fe9627b6","time":{"start":1721089777470,"stop":1721089817937,"duration":40467},"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fb210d7a340>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb211936330>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/_strptime.py:554: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/_strptime.py:333: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fb210d7a340>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb211936330>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/_strptime.py:554: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/_strptime.py:333: ValueError","steps":[{"name":"Given the council","time":{"start":1721089777470,"stop":1721089777471,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1721089777471,"stop":1721089817937,"duration":40466},"status":"failed","statusMessage":"time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"ValueError: time data 'Being collected today' does not match format '%A %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"bde5060a81e1b3ae","name":"stdout","source":"bde5060a81e1b3ae.txt","type":"text/plain","size":126}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1146-524"},{"name":"thread","value":"2754-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":25,"broken":0,"skipped":0,"passed":43,"unknown":0,"total":68},"items":[{"uid":"22e39d7fc2c0eb9c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1982//#testresult/22e39d7fc2c0eb9c","status":"passed","time":{"start":1721003471102,"stop":1721003505002,"duration":33900}},{"uid":"df884ffcedc22564","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1981//#testresult/df884ffcedc22564","status":"passed","time":{"start":1720917190561,"stop":1720917223369,"duration":32808}},{"uid":"594fc4bef21908b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1980//#testresult/594fc4bef21908b8","status":"passed","time":{"start":1720830563383,"stop":1720830608632,"duration":45249}},{"uid":"d41c06e8cc9f393c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1979//#testresult/d41c06e8cc9f393c","status":"passed","time":{"start":1720744140188,"stop":1720744174852,"duration":34664}},{"uid":"f1a9b0e48b48462e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1978//#testresult/f1a9b0e48b48462e","status":"passed","time":{"start":1720657793654,"stop":1720657836144,"duration":42490}},{"uid":"96a9ecb97081c154","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1977//#testresult/96a9ecb97081c154","status":"passed","time":{"start":1720571388966,"stop":1720571439432,"duration":50466}},{"uid":"3755db11e6a8ccb0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1976//#testresult/3755db11e6a8ccb0","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1720484939798,"stop":1720484983522,"duration":43724}},{"uid":"6bfa3fa3a9b1bd0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1975//#testresult/6bfa3fa3a9b1bd0a","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x559f8ddef69a <unknown>\n#1 0x559f8dad1f21 <unknown>\n#2 0x559f8db186d8 <unknown>\n#3 0x559f8db16abf <unknown>\n#4 0x559f8db41872 <unknown>\n#5 0x559f8db12d89 <unknown>\n#6 0x559f8db41a3e <unknown>\n#7 0x559f8db605c3 <unknown>\n#8 0x559f8db41613 <unknown>\n#9 0x559f8db114f7 <unknown>\n#10 0x559f8db11e4e <unknown>\n#11 0x559f8ddb586b <unknown>\n#12 0x559f8ddb9911 <unknown>\n#13 0x559f8dda135e <unknown>\n#14 0x559f8ddba472 <unknown>\n#15 0x559f8dd85cbf <unknown>\n#16 0x559f8dddf098 <unknown>\n#17 0x559f8dddf270 <unknown>\n#18 0x559f8ddee7cc <unknown>\n#19 0x7f02b4573ac3 <unknown>","time":{"start":1720398636130,"stop":1720398677311,"duration":41181}},{"uid":"30133a94c06224e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1971//#testresult/30133a94c06224e0","status":"passed","time":{"start":1720312324122,"stop":1720312365120,"duration":40998}},{"uid":"a018356250d1f297","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1970//#testresult/a018356250d1f297","status":"passed","time":{"start":1720225688408,"stop":1720225721044,"duration":32636}},{"uid":"4b0b425ccfc54637","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1969//#testresult/4b0b425ccfc54637","status":"passed","time":{"start":1720139317318,"stop":1720139356692,"duration":39374}},{"uid":"4f401b0fdbed4371","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1968//#testresult/4f401b0fdbed4371","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x560ccbfac69a <unknown>\n#1 0x560ccbc8ef21 <unknown>\n#2 0x560ccbcd56d8 <unknown>\n#3 0x560ccbcd3abf <unknown>\n#4 0x560ccbcfe872 <unknown>\n#5 0x560ccbccfd89 <unknown>\n#6 0x560ccbcfea3e <unknown>\n#7 0x560ccbd1d5c3 <unknown>\n#8 0x560ccbcfe613 <unknown>\n#9 0x560ccbcce4f7 <unknown>\n#10 0x560ccbccee4e <unknown>\n#11 0x560ccbf7286b <unknown>\n#12 0x560ccbf76911 <unknown>\n#13 0x560ccbf5e35e <unknown>\n#14 0x560ccbf77472 <unknown>\n#15 0x560ccbf42cbf <unknown>\n#16 0x560ccbf9c098 <unknown>\n#17 0x560ccbf9c270 <unknown>\n#18 0x560ccbfab7cc <unknown>\n#19 0x7f06bf4f3ac3 <unknown>","time":{"start":1720052924079,"stop":1720052954936,"duration":30857}},{"uid":"809599f464d96c65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1967//#testresult/809599f464d96c65","status":"passed","time":{"start":1719966522097,"stop":1719966555485,"duration":33388}},{"uid":"d28f118130f3b393","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1966//#testresult/d28f118130f3b393","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1719880188504,"stop":1719880229092,"duration":40588}},{"uid":"860879f19ca4fe75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1965//#testresult/860879f19ca4fe75","status":"passed","time":{"start":1719794011121,"stop":1719794044270,"duration":33149}},{"uid":"652bd6e84351e1c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1964//#testresult/652bd6e84351e1c7","status":"passed","time":{"start":1719707511492,"stop":1719707545797,"duration":34305}},{"uid":"883a9e075602a2ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1962//#testresult/883a9e075602a2ce","status":"passed","time":{"start":1719620883071,"stop":1719620920229,"duration":37158}},{"uid":"f2d3f7164bfa3b89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1958//#testresult/f2d3f7164bfa3b89","status":"passed","time":{"start":1719534506632,"stop":1719534539061,"duration":32429}},{"uid":"9eaffcce67dd34d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1954//#testresult/9eaffcce67dd34d1","status":"passed","time":{"start":1719361711174,"stop":1719361753350,"duration":42176}},{"uid":"6b8cf743f9e76efe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1953//#testresult/6b8cf743f9e76efe","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1719275289453,"stop":1719275322041,"duration":32588}}]},"tags":[]},"source":"85bf003e4d0c40a5.json","parameterValues":["BexleyCouncil"]}