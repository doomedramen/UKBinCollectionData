{"uid":"c8aea278f4b0e933","name":"Validate Council Output [RenfrewshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"21c77c05ec171f4a60a68c21bf3d0b55","time":{"start":1718843969488,"stop":1718843982462,"duration":12974},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 625)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556251a29e9a <unknown>\n#1 0x55625171345c <unknown>\n#2 0x556251766336 <unknown>\n#3 0x556251764176 <unknown>\n#4 0x556251761b57 <unknown>\n#5 0x55625176097c <unknown>\n#6 0x5562517540ff <unknown>\n#7 0x5562517824b2 <unknown>\n#8 0x556251753a79 <unknown>\n#9 0x55625178267e <unknown>\n#10 0x5562517a12cc <unknown>\n#11 0x556251782253 <unknown>\n#12 0x5562517521c7 <unknown>\n#13 0x556251752b3e <unknown>\n#14 0x5562519f02db <unknown>\n#15 0x5562519f4387 <unknown>\n#16 0x5562519dce0e <unknown>\n#17 0x5562519f4e52 <unknown>\n#18 0x5562519c17af <unknown>\n#19 0x556251a19188 <unknown>\n#20 0x556251a1935b <unknown>\n#21 0x556251a28fcc <unknown>\n#22 0x7fe36e61fac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f31630bade0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f3175be1bb0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f316241fe30>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x556251a1935b \\\\u003Cunknown>\\\\n#21 0x556251a28fcc \\\\u003Cunknown>\\\\n#22 0x7fe36e61fac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 625)\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x556251a29e9a <unknown>\nE       #1 0x55625171345c <unknown>\nE       #2 0x556251766336 <unknown>\nE       #3 0x556251764176 <unknown>\nE       #4 0x556251761b57 <unknown>\nE       #5 0x55625176097c <unknown>\nE       #6 0x5562517540ff <unknown>\nE       #7 0x5562517824b2 <unknown>\nE       #8 0x556251753a79 <unknown>\nE       #9 0x55625178267e <unknown>\nE       #10 0x5562517a12cc <unknown>\nE       #11 0x556251782253 <unknown>\nE       #12 0x5562517521c7 <unknown>\nE       #13 0x556251752b3e <unknown>\nE       #14 0x5562519f02db <unknown>\nE       #15 0x5562519f4387 <unknown>\nE       #16 0x5562519dce0e <unknown>\nE       #17 0x5562519f4e52 <unknown>\nE       #18 0x5562519c17af <unknown>\nE       #19 0x556251a19188 <unknown>\nE       #20 0x556251a1935b <unknown>\nE       #21 0x556251a28fcc <unknown>\nE       #22 0x7fe36e61fac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 625)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556251a29e9a <unknown>\n#1 0x55625171345c <unknown>\n#2 0x556251766336 <unknown>\n#3 0x556251764176 <unknown>\n#4 0x556251761b57 <unknown>\n#5 0x55625176097c <unknown>\n#6 0x5562517540ff <unknown>\n#7 0x5562517824b2 <unknown>\n#8 0x556251753a79 <unknown>\n#9 0x55625178267e <unknown>\n#10 0x5562517a12cc <unknown>\n#11 0x556251782253 <unknown>\n#12 0x5562517521c7 <unknown>\n#13 0x556251752b3e <unknown>\n#14 0x5562519f02db <unknown>\n#15 0x5562519f4387 <unknown>\n#16 0x5562519dce0e <unknown>\n#17 0x5562519f4e52 <unknown>\n#18 0x5562519c17af <unknown>\n#19 0x556251a19188 <unknown>\n#20 0x556251a1935b <unknown>\n#21 0x556251a28fcc <unknown>\n#22 0x7fe36e61fac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f31630bade0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f3175be1bb0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f316241fe30>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x556251a1935b \\\\u003Cunknown>\\\\n#21 0x556251a28fcc \\\\u003Cunknown>\\\\n#22 0x7fe36e61fac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 625)\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x556251a29e9a <unknown>\nE       #1 0x55625171345c <unknown>\nE       #2 0x556251766336 <unknown>\nE       #3 0x556251764176 <unknown>\nE       #4 0x556251761b57 <unknown>\nE       #5 0x55625176097c <unknown>\nE       #6 0x5562517540ff <unknown>\nE       #7 0x5562517824b2 <unknown>\nE       #8 0x556251753a79 <unknown>\nE       #9 0x55625178267e <unknown>\nE       #10 0x5562517a12cc <unknown>\nE       #11 0x556251782253 <unknown>\nE       #12 0x5562517521c7 <unknown>\nE       #13 0x556251752b3e <unknown>\nE       #14 0x5562519f02db <unknown>\nE       #15 0x5562519f4387 <unknown>\nE       #16 0x5562519dce0e <unknown>\nE       #17 0x5562519f4e52 <unknown>\nE       #18 0x5562519c17af <unknown>\nE       #19 0x556251a19188 <unknown>\nE       #20 0x556251a1935b <unknown>\nE       #21 0x556251a28fcc <unknown>\nE       #22 0x7fe36e61fac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1718843969488,"stop":1718843969489,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1718843969489,"stop":1718843982462,"duration":12973},"status":"failed","statusMessage":"Message: element click intercepted: Element is not clickable at point (141, 625)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556251a29e9a <unknown>\n#1 0x55625171345c <unknown>\n#2 0x556251766336 <unknown>\n#3 0x556251764176 <unknown>\n#4 0x556251761b57 <unknown>\n#5 0x55625176097c <unknown>\n#6 0x5562517540ff <unknown>\n#7 0x5562517824b2 <unknown>\n#8 0x556251753a79 <unknown>\n#9 0x55625178267e <unknown>\n#10 0x5562517a12cc <unknown>\n#11 0x556251782253 <unknown>\n#12 0x5562517521c7 <unknown>\n#13 0x556251752b3e <unknown>\n#14 0x5562519f02db <unknown>\n#15 0x5562519f4387 <unknown>\n#16 0x5562519dce0e <unknown>\n#17 0x5562519f4e52 <unknown>\n#18 0x5562519c17af <unknown>\n#19 0x556251a19188 <unknown>\n#20 0x556251a1935b <unknown>\n#21 0x556251a28fcc <unknown>\n#22 0x7fe36e61fac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 625)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556251a29e9a <unknown>\n#1 0x55625171345c <unknown>\n#2 0x556251766336 <unknown>\n#3 0x556251764176 <unknown>\n#4 0x556251761b57 <unknown>\n#5 0x55625176097c <unknown>\n#6 0x5562517540ff <unknown>\n#7 0x5562517824b2 <unknown>\n#8 0x556251753a79 <unknown>\n#9 0x55625178267e <unknown>\n#10 0x5562517a12cc <unknown>\n#11 0x556251782253 <unknown>\n#12 0x5562517521c7 <unknown>\n#13 0x556251752b3e <unknown>\n#14 0x5562519f02db <unknown>\n#15 0x5562519f4387 <unknown>\n#16 0x5562519dce0e <unknown>\n#17 0x5562519f4e52 <unknown>\n#18 0x5562519c17af <unknown>\n#19 0x556251a19188 <unknown>\n#20 0x556251a1935b <unknown>\n#21 0x556251a28fcc <unknown>\n#22 0x7fe36e61fac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"69e7cdbc895a9dfb","name":"stdout","source":"69e7cdbc895a9dfb.txt","type":"text/plain","size":870}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1345-97"},{"name":"thread","value":"2677-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RenfrewshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":30,"unknown":0,"total":43},"items":[{"uid":"2b40a6d774e0d9c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1947//#testresult/2b40a6d774e0d9c0","status":"passed","time":{"start":1718757630016,"stop":1718757645254,"duration":15238}},{"uid":"7ad73305304ece33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1946//#testresult/7ad73305304ece33","status":"passed","time":{"start":1718671323867,"stop":1718671351743,"duration":27876}},{"uid":"9210980c3082a2db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1945//#testresult/9210980c3082a2db","status":"passed","time":{"start":1718584860228,"stop":1718584877286,"duration":17058}},{"uid":"41e14e02992df79e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1944//#testresult/41e14e02992df79e","status":"passed","time":{"start":1718498419851,"stop":1718498436303,"duration":16452}},{"uid":"eb19fa019d9dbb88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1943//#testresult/eb19fa019d9dbb88","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 668)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55c53abe5e9a <unknown>\n#1 0x55c53a8cf45c <unknown>\n#2 0x55c53a922336 <unknown>\n#3 0x55c53a920176 <unknown>\n#4 0x55c53a91db57 <unknown>\n#5 0x55c53a91c97c <unknown>\n#6 0x55c53a9100ff <unknown>\n#7 0x55c53a93e4b2 <unknown>\n#8 0x55c53a90fa79 <unknown>\n#9 0x55c53a93e67e <unknown>\n#10 0x55c53a95d2cc <unknown>\n#11 0x55c53a93e253 <unknown>\n#12 0x55c53a90e1c7 <unknown>\n#13 0x55c53a90eb3e <unknown>\n#14 0x55c53abac2db <unknown>\n#15 0x55c53abb0387 <unknown>\n#16 0x55c53ab98e0e <unknown>\n#17 0x55c53abb0e52 <unknown>\n#18 0x55c53ab7d7af <unknown>\n#19 0x55c53abd5188 <unknown>\n#20 0x55c53abd535b <unknown>\n#21 0x55c53abe4fcc <unknown>\n#22 0x7fc11419bac3 <unknown>","time":{"start":1718412018844,"stop":1718412036270,"duration":17426}},{"uid":"b8b9aee11fd5db77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1942//#testresult/b8b9aee11fd5db77","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x563cf705be9a <unknown>\n#1 0x563cf6d4545c <unknown>\n#2 0x563cf6d98336 <unknown>\n#3 0x563cf6d96176 <unknown>\n#4 0x563cf6d93b57 <unknown>\n#5 0x563cf6d9297c <unknown>\n#6 0x563cf6d860ff <unknown>\n#7 0x563cf6db44b2 <unknown>\n#8 0x563cf6d85a79 <unknown>\n#9 0x563cf6db467e <unknown>\n#10 0x563cf6dd32cc <unknown>\n#11 0x563cf6db4253 <unknown>\n#12 0x563cf6d841c7 <unknown>\n#13 0x563cf6d84b3e <unknown>\n#14 0x563cf70222db <unknown>\n#15 0x563cf7026387 <unknown>\n#16 0x563cf700ee0e <unknown>\n#17 0x563cf7026e52 <unknown>\n#18 0x563cf6ff37af <unknown>\n#19 0x563cf704b188 <unknown>\n#20 0x563cf704b35b <unknown>\n#21 0x563cf705afcc <unknown>\n#22 0x7f92de540ac3 <unknown>","time":{"start":1718325714284,"stop":1718325881111,"duration":166827}},{"uid":"934f2e1cfc94a9d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1939//#testresult/934f2e1cfc94a9d6","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55d29fa76e9a <unknown>\n#1 0x55d29f76045c <unknown>\n#2 0x55d29f7b3336 <unknown>\n#3 0x55d29f7b1176 <unknown>\n#4 0x55d29f7aeb57 <unknown>\n#5 0x55d29f7ad97c <unknown>\n#6 0x55d29f7a10ff <unknown>\n#7 0x55d29f7cf4b2 <unknown>\n#8 0x55d29f7a0a79 <unknown>\n#9 0x55d29f7cf67e <unknown>\n#10 0x55d29f7ee2cc <unknown>\n#11 0x55d29f7cf253 <unknown>\n#12 0x55d29f79f1c7 <unknown>\n#13 0x55d29f79fb3e <unknown>\n#14 0x55d29fa3d2db <unknown>\n#15 0x55d29fa41387 <unknown>\n#16 0x55d29fa29e0e <unknown>\n#17 0x55d29fa41e52 <unknown>\n#18 0x55d29fa0e7af <unknown>\n#19 0x55d29fa66188 <unknown>\n#20 0x55d29fa6635b <unknown>\n#21 0x55d29fa75fcc <unknown>\n#22 0x7f93b15c1ac3 <unknown>","time":{"start":1718239368914,"stop":1718239386761,"duration":17847}},{"uid":"9a6a3c552e0ef30d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1938//#testresult/9a6a3c552e0ef30d","status":"passed","time":{"start":1718152775574,"stop":1718152792737,"duration":17163}},{"uid":"93bbc280f989a134","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1937//#testresult/93bbc280f989a134","status":"passed","time":{"start":1718066684818,"stop":1718066719238,"duration":34420}},{"uid":"5aab05f54ea2ef1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1936//#testresult/5aab05f54ea2ef1a","status":"passed","time":{"start":1717980020524,"stop":1717980047139,"duration":26615}},{"uid":"1dbbb05dce1f41a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1934//#testresult/1dbbb05dce1f41a9","status":"passed","time":{"start":1717893598283,"stop":1717893614285,"duration":16002}},{"uid":"e428a2eb93aaa2ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1933//#testresult/e428a2eb93aaa2ab","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x5555590fde9a <unknown>\n#1 0x555558de745c <unknown>\n#2 0x555558e3a336 <unknown>\n#3 0x555558e38176 <unknown>\n#4 0x555558e35b57 <unknown>\n#5 0x555558e3497c <unknown>\n#6 0x555558e280ff <unknown>\n#7 0x555558e564b2 <unknown>\n#8 0x555558e27a79 <unknown>\n#9 0x555558e5667e <unknown>\n#10 0x555558e752cc <unknown>\n#11 0x555558e56253 <unknown>\n#12 0x555558e261c7 <unknown>\n#13 0x555558e26b3e <unknown>\n#14 0x5555590c42db <unknown>\n#15 0x5555590c8387 <unknown>\n#16 0x5555590b0e0e <unknown>\n#17 0x5555590c8e52 <unknown>\n#18 0x5555590957af <unknown>\n#19 0x5555590ed188 <unknown>\n#20 0x5555590ed35b <unknown>\n#21 0x5555590fcfcc <unknown>\n#22 0x7ff795234ac3 <unknown>","time":{"start":1717807317391,"stop":1717807325835,"duration":8444}},{"uid":"f069bdb5cc1c5e78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1932//#testresult/f069bdb5cc1c5e78","status":"passed","time":{"start":1717720755106,"stop":1717720902398,"duration":147292}},{"uid":"f176ee36f2d790c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1927//#testresult/f176ee36f2d790c","status":"passed","time":{"start":1717634278829,"stop":1717634291709,"duration":12880}},{"uid":"73c22bc2150b0de4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1924//#testresult/73c22bc2150b0de4","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55981b74ee9a <unknown>\n#1 0x55981b43845c <unknown>\n#2 0x55981b48b336 <unknown>\n#3 0x55981b489176 <unknown>\n#4 0x55981b486b57 <unknown>\n#5 0x55981b48597c <unknown>\n#6 0x55981b4790ff <unknown>\n#7 0x55981b4a74b2 <unknown>\n#8 0x55981b478a79 <unknown>\n#9 0x55981b4a767e <unknown>\n#10 0x55981b4c62cc <unknown>\n#11 0x55981b4a7253 <unknown>\n#12 0x55981b4771c7 <unknown>\n#13 0x55981b477b3e <unknown>\n#14 0x55981b7152db <unknown>\n#15 0x55981b719387 <unknown>\n#16 0x55981b701e0e <unknown>\n#17 0x55981b719e52 <unknown>\n#18 0x55981b6e67af <unknown>\n#19 0x55981b73e188 <unknown>\n#20 0x55981b73e35b <unknown>\n#21 0x55981b74dfcc <unknown>\n#22 0x7f65db864ac3 <unknown>","time":{"start":1717548242482,"stop":1717548260988,"duration":18506}},{"uid":"2e1fe9ab17fcb946","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1923//#testresult/2e1fe9ab17fcb946","status":"passed","time":{"start":1717461686762,"stop":1717461832775,"duration":146013}},{"uid":"a2ad98dcbb986c99","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1921//#testresult/a2ad98dcbb986c99","status":"passed","time":{"start":1717375470767,"stop":1717375489986,"duration":19219}},{"uid":"9f854e3ce61ee4b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1911//#testresult/9f854e3ce61ee4b4","status":"passed","time":{"start":1717317041221,"stop":1717317057982,"duration":16761}},{"uid":"a44ef21723a4fd17","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1908//#testresult/a44ef21723a4fd17","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55d0c8376e9a <unknown>\n#1 0x55d0c806045c <unknown>\n#2 0x55d0c80b3336 <unknown>\n#3 0x55d0c80b1176 <unknown>\n#4 0x55d0c80aeb57 <unknown>\n#5 0x55d0c80ad97c <unknown>\n#6 0x55d0c80a10ff <unknown>\n#7 0x55d0c80cf4b2 <unknown>\n#8 0x55d0c80a0a79 <unknown>\n#9 0x55d0c80cf67e <unknown>\n#10 0x55d0c80ee2cc <unknown>\n#11 0x55d0c80cf253 <unknown>\n#12 0x55d0c809f1c7 <unknown>\n#13 0x55d0c809fb3e <unknown>\n#14 0x55d0c833d2db <unknown>\n#15 0x55d0c8341387 <unknown>\n#16 0x55d0c8329e0e <unknown>\n#17 0x55d0c8341e52 <unknown>\n#18 0x55d0c830e7af <unknown>\n#19 0x55d0c8366188 <unknown>\n#20 0x55d0c836635b <unknown>\n#21 0x55d0c8375fcc <unknown>\n#22 0x7f78dfb3cac3 <unknown>","time":{"start":1717288959550,"stop":1717289105928,"duration":146378}},{"uid":"49a51e9f90f015a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1905//#testresult/49a51e9f90f015a8","status":"passed","time":{"start":1717202792332,"stop":1717202816860,"duration":24528}}]},"tags":[]},"source":"c8aea278f4b0e933.json","parameterValues":["RenfrewshireCouncil"]}