{"uid":"f4f0d0ec71910b9","name":"Validate Council Output [MaldonDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"53c5720a05c261e2bad5904bb33e19b7","time":{"start":1727050748635,"stop":1727050779636,"duration":31001},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f46da997420>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f46dbd09730>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f46da6be990>, page = ''\nkwargs = {'council_module_str': 'MaldonDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f46da997420>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f46dbd09730>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f46da6be990>, page = ''\nkwargs = {'council_module_str': 'MaldonDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council","time":{"start":1727050748635,"stop":1727050748636,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1727050748636,"stop":1727050779636,"duration":31000},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5c0d34944f0d007c","name":"stdout","source":"5c0d34944f0d007c.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1200-84"},{"name":"thread","value":"2800-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":138,"unknown":0,"total":147},"items":[{"uid":"8ca86e315c84dbf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2125//#testresult/8ca86e315c84dbf","status":"passed","time":{"start":1726964188974,"stop":1726964209558,"duration":20584}},{"uid":"dcc5bce8c78e7d67","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2124//#testresult/dcc5bce8c78e7d67","status":"passed","time":{"start":1726877931793,"stop":1726877933087,"duration":1294}},{"uid":"13075d19c04a9f08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2123//#testresult/13075d19c04a9f08","status":"passed","time":{"start":1726791357129,"stop":1726791359146,"duration":2017}},{"uid":"a21b5d5179b27996","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2122//#testresult/a21b5d5179b27996","status":"passed","time":{"start":1726704951675,"stop":1726704981131,"duration":29456}},{"uid":"2531769a55ff1000","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2121//#testresult/2531769a55ff1000","status":"passed","time":{"start":1726618537900,"stop":1726618558705,"duration":20805}},{"uid":"7f888a160024dc75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2120//#testresult/7f888a160024dc75","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1726532110159,"stop":1726532140982,"duration":30823}},{"uid":"72156ca8ff113e0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2116//#testresult/72156ca8ff113e0e","status":"passed","time":{"start":1726445913110,"stop":1726445914589,"duration":1479}},{"uid":"a8454934c8641714","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2115//#testresult/a8454934c8641714","status":"passed","time":{"start":1726359311236,"stop":1726359335631,"duration":24395}},{"uid":"778077fce572a080","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2114//#testresult/778077fce572a080","status":"passed","time":{"start":1726272919497,"stop":1726272940558,"duration":21061}},{"uid":"cb4f1643da569bb4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2113//#testresult/cb4f1643da569bb4","status":"passed","time":{"start":1726186513174,"stop":1726186523075,"duration":9901}},{"uid":"88102b928e2b74d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2112//#testresult/88102b928e2b74d7","status":"passed","time":{"start":1726100261064,"stop":1726100262314,"duration":1250}},{"uid":"4afd7c2c7eafc4c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2111//#testresult/4afd7c2c7eafc4c8","status":"passed","time":{"start":1726013754164,"stop":1726013782760,"duration":28596}},{"uid":"ca7dec75b198c573","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2109//#testresult/ca7dec75b198c573","status":"passed","time":{"start":1725955634700,"stop":1725955635773,"duration":1073}},{"uid":"fc37b28547d2d0f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2107//#testresult/fc37b28547d2d0f9","status":"passed","time":{"start":1725927327411,"stop":1725927328512,"duration":1101}},{"uid":"8e384fb15e8d29ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2095//#testresult/8e384fb15e8d29ae","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1725841315634,"stop":1725841346345,"duration":30711}},{"uid":"e38a4a98b4ed8bdc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2093//#testresult/e38a4a98b4ed8bdc","status":"passed","time":{"start":1725754797141,"stop":1725754798226,"duration":1085}},{"uid":"b0b57a2d7e25db92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2092//#testresult/b0b57a2d7e25db92","status":"passed","time":{"start":1725668366299,"stop":1725668367332,"duration":1033}},{"uid":"551220e81e1d8bb0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2088//#testresult/551220e81e1d8bb0","status":"passed","time":{"start":1725581919142,"stop":1725581928356,"duration":9214}},{"uid":"8ea827ac0fe27e70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2086//#testresult/8ea827ac0fe27e70","status":"passed","time":{"start":1725569723809,"stop":1725569725092,"duration":1283}},{"uid":"b581f5b35e21504f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2083//#testresult/b581f5b35e21504f","status":"passed","time":{"start":1725495541252,"stop":1725495557066,"duration":15814}}]},"tags":[]},"source":"f4f0d0ec71910b9.json","parameterValues":["MaldonDistrictCouncil"]}