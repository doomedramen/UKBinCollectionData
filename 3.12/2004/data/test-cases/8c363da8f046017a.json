{"uid":"8c363da8f046017a","name":"Validate Council Output [BedfordBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4d48486dc2c0a9c252d5ac44f0d62a3d","time":{"start":1722643779912,"stop":1722643840871,"duration":60959},"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7f9aeec932e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f9af0487740>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7f9aee112090>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7f9aeec932e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f9af0487740>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7f9aee112090>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","steps":[{"name":"Given the council","time":{"start":1722643779912,"stop":1722643779912,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1722643779913,"stop":1722643840870,"duration":60957},"status":"failed","statusMessage":"Could not get latest data!","statusTrace":"ConnectionError: Could not get latest data!\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9815cc49dcfc148","name":"stdout","source":"9815cc49dcfc148.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1144-80"},{"name":"thread","value":"2730-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BedfordBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":82,"unknown":0,"total":85},"items":[{"uid":"31e407cd06c210a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2003//#testresult/31e407cd06c210a","status":"passed","time":{"start":1722557374495,"stop":1722557382922,"duration":8427}},{"uid":"aa95f384ed09ecab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2002//#testresult/aa95f384ed09ecab","status":"passed","time":{"start":1722470853363,"stop":1722470875629,"duration":22266}},{"uid":"7ff09a84661d17ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1998//#testresult/7ff09a84661d17ac","status":"passed","time":{"start":1722384529562,"stop":1722384533053,"duration":3491}},{"uid":"11045bb7c55aa4ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1997//#testresult/11045bb7c55aa4ce","status":"passed","time":{"start":1722298041955,"stop":1722298047362,"duration":5407}},{"uid":"a21c1aedc88b081c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1996//#testresult/a21c1aedc88b081c","status":"passed","time":{"start":1722211631214,"stop":1722211634729,"duration":3515}},{"uid":"dca06c5e8ecf5ff3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1995//#testresult/dca06c5e8ecf5ff3","status":"passed","time":{"start":1722125238111,"stop":1722125243160,"duration":5049}},{"uid":"484488732aed196b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1994//#testresult/484488732aed196b","status":"passed","time":{"start":1722038911366,"stop":1722038914989,"duration":3623}},{"uid":"c98e224631628d01","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1993//#testresult/c98e224631628d01","status":"passed","time":{"start":1721952433131,"stop":1721952437608,"duration":4477}},{"uid":"d6e687de6f7e542d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1992//#testresult/d6e687de6f7e542d","status":"passed","time":{"start":1721866093348,"stop":1721866096540,"duration":3192}},{"uid":"dd1dd807148193c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1991//#testresult/dd1dd807148193c8","status":"passed","time":{"start":1721779691892,"stop":1721779695166,"duration":3274}},{"uid":"5de9cd78f1044ad2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1990//#testresult/5de9cd78f1044ad2","status":"passed","time":{"start":1721693239639,"stop":1721693247676,"duration":8037}},{"uid":"89257646245dddf1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1989//#testresult/89257646245dddf1","status":"passed","time":{"start":1721606850981,"stop":1721606854031,"duration":3050}},{"uid":"2c6f49e9e903bbe3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1988//#testresult/2c6f49e9e903bbe3","status":"passed","time":{"start":1721520447155,"stop":1721520452106,"duration":4951}},{"uid":"84d367b65d9990fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1987//#testresult/84d367b65d9990fd","status":"passed","time":{"start":1721434099720,"stop":1721434104704,"duration":4984}},{"uid":"548ab48e3e3b4ae9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1986//#testresult/548ab48e3e3b4ae9","status":"passed","time":{"start":1721372207799,"stop":1721372211780,"duration":3981}},{"uid":"d50ec0a9251dcbce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1985//#testresult/d50ec0a9251dcbce","status":"passed","time":{"start":1721262915324,"stop":1721262917604,"duration":2280}},{"uid":"2e4f06c7a66c6651","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1984//#testresult/2e4f06c7a66c6651","status":"passed","time":{"start":1721176541442,"stop":1721176544922,"duration":3480}},{"uid":"a78a51e841af2f63","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1983//#testresult/a78a51e841af2f63","status":"passed","time":{"start":1721090136144,"stop":1721090138593,"duration":2449}},{"uid":"b0fab7b6e16501e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1982//#testresult/b0fab7b6e16501e6","status":"passed","time":{"start":1721003821734,"stop":1721003823627,"duration":1893}},{"uid":"f9c74849ae87661c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1981//#testresult/f9c74849ae87661c","status":"passed","time":{"start":1720917540586,"stop":1720917542572,"duration":1986}}]},"tags":[]},"source":"8c363da8f046017a.json","parameterValues":["BedfordBoroughCouncil"]}