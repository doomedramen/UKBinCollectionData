{"uid":"6bfa3fa3a9b1bd0a","name":"Validate Council Output [BexleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b14d94c00a7a02b15ede5862fe9627b6","time":{"start":1720398636130,"stop":1720398677311,"duration":41181},"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x559f8ddef69a <unknown>\n#1 0x559f8dad1f21 <unknown>\n#2 0x559f8db186d8 <unknown>\n#3 0x559f8db16abf <unknown>\n#4 0x559f8db41872 <unknown>\n#5 0x559f8db12d89 <unknown>\n#6 0x559f8db41a3e <unknown>\n#7 0x559f8db605c3 <unknown>\n#8 0x559f8db41613 <unknown>\n#9 0x559f8db114f7 <unknown>\n#10 0x559f8db11e4e <unknown>\n#11 0x559f8ddb586b <unknown>\n#12 0x559f8ddb9911 <unknown>\n#13 0x559f8dda135e <unknown>\n#14 0x559f8ddba472 <unknown>\n#15 0x559f8dd85cbf <unknown>\n#16 0x559f8dddf098 <unknown>\n#17 0x559f8dddf270 <unknown>\n#18 0x559f8ddee7cc <unknown>\n#19 0x7f02b4573ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f91e797e020>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f91f816a330>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f91e7a27ce0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x559f8dddf270 \\\\u003Cunknown>\\\\n#18 0x559f8ddee7cc \\\\u003Cunknown>\\\\n#19 0x7f02b4573ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=126.0.6478.114)\nE       Stacktrace:\nE       #0 0x559f8ddef69a <unknown>\nE       #1 0x559f8dad1f21 <unknown>\nE       #2 0x559f8db186d8 <unknown>\nE       #3 0x559f8db16abf <unknown>\nE       #4 0x559f8db41872 <unknown>\nE       #5 0x559f8db12d89 <unknown>\nE       #6 0x559f8db41a3e <unknown>\nE       #7 0x559f8db605c3 <unknown>\nE       #8 0x559f8db41613 <unknown>\nE       #9 0x559f8db114f7 <unknown>\nE       #10 0x559f8db11e4e <unknown>\nE       #11 0x559f8ddb586b <unknown>\nE       #12 0x559f8ddb9911 <unknown>\nE       #13 0x559f8dda135e <unknown>\nE       #14 0x559f8ddba472 <unknown>\nE       #15 0x559f8dd85cbf <unknown>\nE       #16 0x559f8dddf098 <unknown>\nE       #17 0x559f8dddf270 <unknown>\nE       #18 0x559f8ddee7cc <unknown>\nE       #19 0x7f02b4573ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x559f8ddef69a <unknown>\n#1 0x559f8dad1f21 <unknown>\n#2 0x559f8db186d8 <unknown>\n#3 0x559f8db16abf <unknown>\n#4 0x559f8db41872 <unknown>\n#5 0x559f8db12d89 <unknown>\n#6 0x559f8db41a3e <unknown>\n#7 0x559f8db605c3 <unknown>\n#8 0x559f8db41613 <unknown>\n#9 0x559f8db114f7 <unknown>\n#10 0x559f8db11e4e <unknown>\n#11 0x559f8ddb586b <unknown>\n#12 0x559f8ddb9911 <unknown>\n#13 0x559f8dda135e <unknown>\n#14 0x559f8ddba472 <unknown>\n#15 0x559f8dd85cbf <unknown>\n#16 0x559f8dddf098 <unknown>\n#17 0x559f8dddf270 <unknown>\n#18 0x559f8ddee7cc <unknown>\n#19 0x7f02b4573ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f91e797e020>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f91f816a330>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f91e7a27ce0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x559f8dddf270 \\\\u003Cunknown>\\\\n#18 0x559f8ddee7cc \\\\u003Cunknown>\\\\n#19 0x7f02b4573ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=126.0.6478.114)\nE       Stacktrace:\nE       #0 0x559f8ddef69a <unknown>\nE       #1 0x559f8dad1f21 <unknown>\nE       #2 0x559f8db186d8 <unknown>\nE       #3 0x559f8db16abf <unknown>\nE       #4 0x559f8db41872 <unknown>\nE       #5 0x559f8db12d89 <unknown>\nE       #6 0x559f8db41a3e <unknown>\nE       #7 0x559f8db605c3 <unknown>\nE       #8 0x559f8db41613 <unknown>\nE       #9 0x559f8db114f7 <unknown>\nE       #10 0x559f8db11e4e <unknown>\nE       #11 0x559f8ddb586b <unknown>\nE       #12 0x559f8ddb9911 <unknown>\nE       #13 0x559f8dda135e <unknown>\nE       #14 0x559f8ddba472 <unknown>\nE       #15 0x559f8dd85cbf <unknown>\nE       #16 0x559f8dddf098 <unknown>\nE       #17 0x559f8dddf270 <unknown>\nE       #18 0x559f8ddee7cc <unknown>\nE       #19 0x7f02b4573ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Given the council","time":{"start":1720398636131,"stop":1720398636132,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1720398636132,"stop":1720398677310,"duration":41178},"status":"failed","statusMessage":"Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x559f8ddef69a <unknown>\n#1 0x559f8dad1f21 <unknown>\n#2 0x559f8db186d8 <unknown>\n#3 0x559f8db16abf <unknown>\n#4 0x559f8db41872 <unknown>\n#5 0x559f8db12d89 <unknown>\n#6 0x559f8db41a3e <unknown>\n#7 0x559f8db605c3 <unknown>\n#8 0x559f8db41613 <unknown>\n#9 0x559f8db114f7 <unknown>\n#10 0x559f8db11e4e <unknown>\n#11 0x559f8ddb586b <unknown>\n#12 0x559f8ddb9911 <unknown>\n#13 0x559f8dda135e <unknown>\n#14 0x559f8ddba472 <unknown>\n#15 0x559f8dd85cbf <unknown>\n#16 0x559f8dddf098 <unknown>\n#17 0x559f8dddf270 <unknown>\n#18 0x559f8ddee7cc <unknown>\n#19 0x7f02b4573ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x559f8ddef69a <unknown>\n#1 0x559f8dad1f21 <unknown>\n#2 0x559f8db186d8 <unknown>\n#3 0x559f8db16abf <unknown>\n#4 0x559f8db41872 <unknown>\n#5 0x559f8db12d89 <unknown>\n#6 0x559f8db41a3e <unknown>\n#7 0x559f8db605c3 <unknown>\n#8 0x559f8db41613 <unknown>\n#9 0x559f8db114f7 <unknown>\n#10 0x559f8db11e4e <unknown>\n#11 0x559f8ddb586b <unknown>\n#12 0x559f8ddb9911 <unknown>\n#13 0x559f8dda135e <unknown>\n#14 0x559f8ddba472 <unknown>\n#15 0x559f8dd85cbf <unknown>\n#16 0x559f8dddf098 <unknown>\n#17 0x559f8dddf270 <unknown>\n#18 0x559f8ddee7cc <unknown>\n#19 0x7f02b4573ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9de442a78c260a1c","name":"stdout","source":"9de442a78c260a1c.txt","type":"text/plain","size":731}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1210-393"},{"name":"thread","value":"2697-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":23,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":60},"items":[{"uid":"30133a94c06224e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1971//#testresult/30133a94c06224e0","status":"passed","time":{"start":1720312324122,"stop":1720312365120,"duration":40998}},{"uid":"a018356250d1f297","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1970//#testresult/a018356250d1f297","status":"passed","time":{"start":1720225688408,"stop":1720225721044,"duration":32636}},{"uid":"4b0b425ccfc54637","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1969//#testresult/4b0b425ccfc54637","status":"passed","time":{"start":1720139317318,"stop":1720139356692,"duration":39374}},{"uid":"4f401b0fdbed4371","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1968//#testresult/4f401b0fdbed4371","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x560ccbfac69a <unknown>\n#1 0x560ccbc8ef21 <unknown>\n#2 0x560ccbcd56d8 <unknown>\n#3 0x560ccbcd3abf <unknown>\n#4 0x560ccbcfe872 <unknown>\n#5 0x560ccbccfd89 <unknown>\n#6 0x560ccbcfea3e <unknown>\n#7 0x560ccbd1d5c3 <unknown>\n#8 0x560ccbcfe613 <unknown>\n#9 0x560ccbcce4f7 <unknown>\n#10 0x560ccbccee4e <unknown>\n#11 0x560ccbf7286b <unknown>\n#12 0x560ccbf76911 <unknown>\n#13 0x560ccbf5e35e <unknown>\n#14 0x560ccbf77472 <unknown>\n#15 0x560ccbf42cbf <unknown>\n#16 0x560ccbf9c098 <unknown>\n#17 0x560ccbf9c270 <unknown>\n#18 0x560ccbfab7cc <unknown>\n#19 0x7f06bf4f3ac3 <unknown>","time":{"start":1720052924079,"stop":1720052954936,"duration":30857}},{"uid":"809599f464d96c65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1967//#testresult/809599f464d96c65","status":"passed","time":{"start":1719966522097,"stop":1719966555485,"duration":33388}},{"uid":"d28f118130f3b393","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1966//#testresult/d28f118130f3b393","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1719880188504,"stop":1719880229092,"duration":40588}},{"uid":"860879f19ca4fe75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1965//#testresult/860879f19ca4fe75","status":"passed","time":{"start":1719794011121,"stop":1719794044270,"duration":33149}},{"uid":"652bd6e84351e1c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1964//#testresult/652bd6e84351e1c7","status":"passed","time":{"start":1719707511492,"stop":1719707545797,"duration":34305}},{"uid":"883a9e075602a2ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1962//#testresult/883a9e075602a2ce","status":"passed","time":{"start":1719620883071,"stop":1719620920229,"duration":37158}},{"uid":"f2d3f7164bfa3b89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1958//#testresult/f2d3f7164bfa3b89","status":"passed","time":{"start":1719534506632,"stop":1719534539061,"duration":32429}},{"uid":"9eaffcce67dd34d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1954//#testresult/9eaffcce67dd34d1","status":"passed","time":{"start":1719361711174,"stop":1719361753350,"duration":42176}},{"uid":"6b8cf743f9e76efe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1953//#testresult/6b8cf743f9e76efe","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1719275289453,"stop":1719275322041,"duration":32588}},{"uid":"751947b84f7078a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1952//#testresult/751947b84f7078a7","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558998da669a <unknown>\n#1 0x558998a890dc <unknown>\n#2 0x558998ad5931 <unknown>\n#3 0x558998ad5a21 <unknown>\n#4 0x558998b1a234 <unknown>\n#5 0x558998af889d <unknown>\n#6 0x558998b175c3 <unknown>\n#7 0x558998af8613 <unknown>\n#8 0x558998ac84f7 <unknown>\n#9 0x558998ac8e4e <unknown>\n#10 0x558998d6c86b <unknown>\n#11 0x558998d70911 <unknown>\n#12 0x558998d5835e <unknown>\n#13 0x558998d71472 <unknown>\n#14 0x558998d3ccbf <unknown>\n#15 0x558998d96098 <unknown>\n#16 0x558998d96270 <unknown>\n#17 0x558998da57cc <unknown>\n#18 0x7fd1c55caac3 <unknown>","time":{"start":1719189012598,"stop":1719189100710,"duration":88112}},{"uid":"d36b3fe319608f7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1951//#testresult/d36b3fe319608f7c","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55eb7dc6f69a <unknown>\n#1 0x55eb7d9520dc <unknown>\n#2 0x55eb7d99e931 <unknown>\n#3 0x55eb7d99ea21 <unknown>\n#4 0x55eb7d9e3234 <unknown>\n#5 0x55eb7d9c189d <unknown>\n#6 0x55eb7d9e05c3 <unknown>\n#7 0x55eb7d9c1613 <unknown>\n#8 0x55eb7d9914f7 <unknown>\n#9 0x55eb7d991e4e <unknown>\n#10 0x55eb7dc3586b <unknown>\n#11 0x55eb7dc39911 <unknown>\n#12 0x55eb7dc2135e <unknown>\n#13 0x55eb7dc3a472 <unknown>\n#14 0x55eb7dc05cbf <unknown>\n#15 0x55eb7dc5f098 <unknown>\n#16 0x55eb7dc5f270 <unknown>\n#17 0x55eb7dc6e7cc <unknown>\n#18 0x7f19a865dac3 <unknown>","time":{"start":1719102655957,"stop":1719102751876,"duration":95919}},{"uid":"76858026b6ee6aef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1950//#testresult/76858026b6ee6aef","status":"passed","time":{"start":1719016063997,"stop":1719016101285,"duration":37288}},{"uid":"e33f08cc66b1ead4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1949//#testresult/e33f08cc66b1ead4","status":"passed","time":{"start":1718929691729,"stop":1718929724496,"duration":32767}},{"uid":"6621cc2300d08564","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1948//#testresult/6621cc2300d08564","status":"passed","time":{"start":1718843272418,"stop":1718843307334,"duration":34916}},{"uid":"ebe521a5c40957b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1947//#testresult/ebe521a5c40957b3","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5595da246e9a <unknown>\n#1 0x5595d9f3045c <unknown>\n#2 0x5595d9f7c5b5 <unknown>\n#3 0x5595d9f7c671 <unknown>\n#4 0x5595d9fc0f14 <unknown>\n#5 0x5595d9f9f4dd <unknown>\n#6 0x5595d9fbe2cc <unknown>\n#7 0x5595d9f9f253 <unknown>\n#8 0x5595d9f6f1c7 <unknown>\n#9 0x5595d9f6fb3e <unknown>\n#10 0x5595da20d2db <unknown>\n#11 0x5595da211387 <unknown>\n#12 0x5595da1f9e0e <unknown>\n#13 0x5595da211e52 <unknown>\n#14 0x5595da1de7af <unknown>\n#15 0x5595da236188 <unknown>\n#16 0x5595da23635b <unknown>\n#17 0x5595da245fcc <unknown>\n#18 0x7f3e58ec3ac3 <unknown>","time":{"start":1718756923253,"stop":1718757015184,"duration":91931}},{"uid":"b4d3c39d94e8a3dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1946//#testresult/b4d3c39d94e8a3dc","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1718670529302,"stop":1718670560570,"duration":31268}},{"uid":"c6df0699a4c41726","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1945//#testresult/c6df0699a4c41726","status":"passed","time":{"start":1718584211059,"stop":1718584254907,"duration":43848}}]},"tags":[]},"source":"6bfa3fa3a9b1bd0a.json","parameterValues":["BexleyCouncil"]}