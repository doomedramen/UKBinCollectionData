{"uid":"97232456f3e55ae5","name":"Validate Council Output [RenfrewshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"21c77c05ec171f4a60a68c21bf3d0b55","time":{"start":1717029926769,"stop":1717029950593,"duration":23824},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55d89a3c9e9a <unknown>\n#1 0x55d89a0b345c <unknown>\n#2 0x55d89a106336 <unknown>\n#3 0x55d89a104176 <unknown>\n#4 0x55d89a101b57 <unknown>\n#5 0x55d89a10097c <unknown>\n#6 0x55d89a0f40ff <unknown>\n#7 0x55d89a1224b2 <unknown>\n#8 0x55d89a0f3a79 <unknown>\n#9 0x55d89a12267e <unknown>\n#10 0x55d89a1412cc <unknown>\n#11 0x55d89a122253 <unknown>\n#12 0x55d89a0f21c7 <unknown>\n#13 0x55d89a0f2b3e <unknown>\n#14 0x55d89a3902db <unknown>\n#15 0x55d89a394387 <unknown>\n#16 0x55d89a37ce0e <unknown>\n#17 0x55d89a394e52 <unknown>\n#18 0x55d89a3617af <unknown>\n#19 0x55d89a3b9188 <unknown>\n#20 0x55d89a3b935b <unknown>\n#21 0x55d89a3c8fcc <unknown>\n#22 0x7f649ab3cac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb171774400>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb172df9100>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb172355760>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55d89a3b935b \\\\u003Cunknown>\\\\n#21 0x55d89a3c8fcc \\\\u003Cunknown>\\\\n#22 0x7f649ab3cac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x55d89a3c9e9a <unknown>\nE       #1 0x55d89a0b345c <unknown>\nE       #2 0x55d89a106336 <unknown>\nE       #3 0x55d89a104176 <unknown>\nE       #4 0x55d89a101b57 <unknown>\nE       #5 0x55d89a10097c <unknown>\nE       #6 0x55d89a0f40ff <unknown>\nE       #7 0x55d89a1224b2 <unknown>\nE       #8 0x55d89a0f3a79 <unknown>\nE       #9 0x55d89a12267e <unknown>\nE       #10 0x55d89a1412cc <unknown>\nE       #11 0x55d89a122253 <unknown>\nE       #12 0x55d89a0f21c7 <unknown>\nE       #13 0x55d89a0f2b3e <unknown>\nE       #14 0x55d89a3902db <unknown>\nE       #15 0x55d89a394387 <unknown>\nE       #16 0x55d89a37ce0e <unknown>\nE       #17 0x55d89a394e52 <unknown>\nE       #18 0x55d89a3617af <unknown>\nE       #19 0x55d89a3b9188 <unknown>\nE       #20 0x55d89a3b935b <unknown>\nE       #21 0x55d89a3c8fcc <unknown>\nE       #22 0x7f649ab3cac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55d89a3c9e9a <unknown>\n#1 0x55d89a0b345c <unknown>\n#2 0x55d89a106336 <unknown>\n#3 0x55d89a104176 <unknown>\n#4 0x55d89a101b57 <unknown>\n#5 0x55d89a10097c <unknown>\n#6 0x55d89a0f40ff <unknown>\n#7 0x55d89a1224b2 <unknown>\n#8 0x55d89a0f3a79 <unknown>\n#9 0x55d89a12267e <unknown>\n#10 0x55d89a1412cc <unknown>\n#11 0x55d89a122253 <unknown>\n#12 0x55d89a0f21c7 <unknown>\n#13 0x55d89a0f2b3e <unknown>\n#14 0x55d89a3902db <unknown>\n#15 0x55d89a394387 <unknown>\n#16 0x55d89a37ce0e <unknown>\n#17 0x55d89a394e52 <unknown>\n#18 0x55d89a3617af <unknown>\n#19 0x55d89a3b9188 <unknown>\n#20 0x55d89a3b935b <unknown>\n#21 0x55d89a3c8fcc <unknown>\n#22 0x7f649ab3cac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb171774400>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb172df9100>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb172355760>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55d89a3b935b \\\\u003Cunknown>\\\\n#21 0x55d89a3c8fcc \\\\u003Cunknown>\\\\n#22 0x7f649ab3cac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x55d89a3c9e9a <unknown>\nE       #1 0x55d89a0b345c <unknown>\nE       #2 0x55d89a106336 <unknown>\nE       #3 0x55d89a104176 <unknown>\nE       #4 0x55d89a101b57 <unknown>\nE       #5 0x55d89a10097c <unknown>\nE       #6 0x55d89a0f40ff <unknown>\nE       #7 0x55d89a1224b2 <unknown>\nE       #8 0x55d89a0f3a79 <unknown>\nE       #9 0x55d89a12267e <unknown>\nE       #10 0x55d89a1412cc <unknown>\nE       #11 0x55d89a122253 <unknown>\nE       #12 0x55d89a0f21c7 <unknown>\nE       #13 0x55d89a0f2b3e <unknown>\nE       #14 0x55d89a3902db <unknown>\nE       #15 0x55d89a394387 <unknown>\nE       #16 0x55d89a37ce0e <unknown>\nE       #17 0x55d89a394e52 <unknown>\nE       #18 0x55d89a3617af <unknown>\nE       #19 0x55d89a3b9188 <unknown>\nE       #20 0x55d89a3b935b <unknown>\nE       #21 0x55d89a3c8fcc <unknown>\nE       #22 0x7f649ab3cac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1717029926769,"stop":1717029926770,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1717029926770,"stop":1717029950593,"duration":23823},"status":"failed","statusMessage":"Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55d89a3c9e9a <unknown>\n#1 0x55d89a0b345c <unknown>\n#2 0x55d89a106336 <unknown>\n#3 0x55d89a104176 <unknown>\n#4 0x55d89a101b57 <unknown>\n#5 0x55d89a10097c <unknown>\n#6 0x55d89a0f40ff <unknown>\n#7 0x55d89a1224b2 <unknown>\n#8 0x55d89a0f3a79 <unknown>\n#9 0x55d89a12267e <unknown>\n#10 0x55d89a1412cc <unknown>\n#11 0x55d89a122253 <unknown>\n#12 0x55d89a0f21c7 <unknown>\n#13 0x55d89a0f2b3e <unknown>\n#14 0x55d89a3902db <unknown>\n#15 0x55d89a394387 <unknown>\n#16 0x55d89a37ce0e <unknown>\n#17 0x55d89a394e52 <unknown>\n#18 0x55d89a3617af <unknown>\n#19 0x55d89a3b9188 <unknown>\n#20 0x55d89a3b935b <unknown>\n#21 0x55d89a3c8fcc <unknown>\n#22 0x7f649ab3cac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55d89a3c9e9a <unknown>\n#1 0x55d89a0b345c <unknown>\n#2 0x55d89a106336 <unknown>\n#3 0x55d89a104176 <unknown>\n#4 0x55d89a101b57 <unknown>\n#5 0x55d89a10097c <unknown>\n#6 0x55d89a0f40ff <unknown>\n#7 0x55d89a1224b2 <unknown>\n#8 0x55d89a0f3a79 <unknown>\n#9 0x55d89a12267e <unknown>\n#10 0x55d89a1412cc <unknown>\n#11 0x55d89a122253 <unknown>\n#12 0x55d89a0f21c7 <unknown>\n#13 0x55d89a0f2b3e <unknown>\n#14 0x55d89a3902db <unknown>\n#15 0x55d89a394387 <unknown>\n#16 0x55d89a37ce0e <unknown>\n#17 0x55d89a394e52 <unknown>\n#18 0x55d89a3617af <unknown>\n#19 0x55d89a3b9188 <unknown>\n#20 0x55d89a3b935b <unknown>\n#21 0x55d89a3c8fcc <unknown>\n#22 0x7f649ab3cac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"85b9207378dbcb01","name":"stdout","source":"85b9207378dbcb01.txt","type":"text/plain","size":870}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1437-249"},{"name":"thread","value":"2647-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RenfrewshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":15,"unknown":0,"total":21},"items":[{"uid":"f2a5f233e9c0f7c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1898//#testresult/f2a5f233e9c0f7c5","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x5572d6dede9a <unknown>\n#1 0x5572d6ad745c <unknown>\n#2 0x5572d6b2a336 <unknown>\n#3 0x5572d6b28176 <unknown>\n#4 0x5572d6b25b57 <unknown>\n#5 0x5572d6b2497c <unknown>\n#6 0x5572d6b180ff <unknown>\n#7 0x5572d6b464b2 <unknown>\n#8 0x5572d6b17a79 <unknown>\n#9 0x5572d6b4667e <unknown>\n#10 0x5572d6b652cc <unknown>\n#11 0x5572d6b46253 <unknown>\n#12 0x5572d6b161c7 <unknown>\n#13 0x5572d6b16b3e <unknown>\n#14 0x5572d6db42db <unknown>\n#15 0x5572d6db8387 <unknown>\n#16 0x5572d6da0e0e <unknown>\n#17 0x5572d6db8e52 <unknown>\n#18 0x5572d6d857af <unknown>\n#19 0x5572d6ddd188 <unknown>\n#20 0x5572d6ddd35b <unknown>\n#21 0x5572d6decfcc <unknown>\n#22 0x7f626a349ac3 <unknown>","time":{"start":1716943261313,"stop":1716943294117,"duration":32804}},{"uid":"2bed948a7bc4d03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1893//#testresult/2bed948a7bc4d03","status":"passed","time":{"start":1716856651386,"stop":1716856812080,"duration":160694}},{"uid":"ac7dfce54114e5db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1883//#testresult/ac7dfce54114e5db","status":"passed","time":{"start":1716770239402,"stop":1716770263660,"duration":24258}},{"uid":"8f2f458fbc4df7df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1881//#testresult/8f2f458fbc4df7df","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x5617967a2e9a <unknown>\n#1 0x56179648c45c <unknown>\n#2 0x5617964df336 <unknown>\n#3 0x5617964dd176 <unknown>\n#4 0x5617964dab57 <unknown>\n#5 0x5617964d997c <unknown>\n#6 0x5617964cd0ff <unknown>\n#7 0x5617964fb4b2 <unknown>\n#8 0x5617964cca79 <unknown>\n#9 0x5617964fb67e <unknown>\n#10 0x56179651a2cc <unknown>\n#11 0x5617964fb253 <unknown>\n#12 0x5617964cb1c7 <unknown>\n#13 0x5617964cbb3e <unknown>\n#14 0x5617967692db <unknown>\n#15 0x56179676d387 <unknown>\n#16 0x561796755e0e <unknown>\n#17 0x56179676de52 <unknown>\n#18 0x56179673a7af <unknown>\n#19 0x561796792188 <unknown>\n#20 0x56179679235b <unknown>\n#21 0x5617967a1fcc <unknown>\n#22 0x7f21df61cac3 <unknown>","time":{"start":1716753414107,"stop":1716753564540,"duration":150433}},{"uid":"f8cbe63baf853d99","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1877//#testresult/f8cbe63baf853d99","status":"passed","time":{"start":1716743594976,"stop":1716743745666,"duration":150690}},{"uid":"c6fdcd9ff3d155a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1871//#testresult/c6fdcd9ff3d155a3","status":"passed","time":{"start":1716710293374,"stop":1716710300588,"duration":7214}},{"uid":"fe6de618acc9f59a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1866//#testresult/fe6de618acc9f59a","status":"passed","time":{"start":1716705631836,"stop":1716705647843,"duration":16007}},{"uid":"64f3789967540c17","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1865//#testresult/64f3789967540c17","status":"passed","time":{"start":1716684068475,"stop":1716684083293,"duration":14818}},{"uid":"8464308bd1e5e117","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1863//#testresult/8464308bd1e5e117","status":"passed","time":{"start":1716625437144,"stop":1716625446901,"duration":9757}},{"uid":"e51d60fb506f384f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1862//#testresult/e51d60fb506f384f","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 612)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x56210186ae9a <unknown>\n#1 0x56210155445c <unknown>\n#2 0x5621015a7336 <unknown>\n#3 0x5621015a5176 <unknown>\n#4 0x5621015a2b57 <unknown>\n#5 0x5621015a197c <unknown>\n#6 0x5621015950ff <unknown>\n#7 0x5621015c34b2 <unknown>\n#8 0x562101594a79 <unknown>\n#9 0x5621015c367e <unknown>\n#10 0x5621015e22cc <unknown>\n#11 0x5621015c3253 <unknown>\n#12 0x5621015931c7 <unknown>\n#13 0x562101593b3e <unknown>\n#14 0x5621018312db <unknown>\n#15 0x562101835387 <unknown>\n#16 0x56210181de0e <unknown>\n#17 0x562101835e52 <unknown>\n#18 0x5621018027af <unknown>\n#19 0x56210185a188 <unknown>\n#20 0x56210185a35b <unknown>\n#21 0x562101869fcc <unknown>\n#22 0x7fa156792ac3 <unknown>","time":{"start":1716597677892,"stop":1716597682790,"duration":4898}},{"uid":"d3084d917fe19424","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1856//#testresult/d3084d917fe19424","status":"passed","time":{"start":1716511193609,"stop":1716511212193,"duration":18584}},{"uid":"df6bcf8de780e29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1855//#testresult/df6bcf8de780e29","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 612)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55c4d32cbe9a <unknown>\n#1 0x55c4d2fb545c <unknown>\n#2 0x55c4d3008336 <unknown>\n#3 0x55c4d3006176 <unknown>\n#4 0x55c4d3003b57 <unknown>\n#5 0x55c4d300297c <unknown>\n#6 0x55c4d2ff60ff <unknown>\n#7 0x55c4d30244b2 <unknown>\n#8 0x55c4d2ff5a79 <unknown>\n#9 0x55c4d302467e <unknown>\n#10 0x55c4d30432cc <unknown>\n#11 0x55c4d3024253 <unknown>\n#12 0x55c4d2ff41c7 <unknown>\n#13 0x55c4d2ff4b3e <unknown>\n#14 0x55c4d32922db <unknown>\n#15 0x55c4d3296387 <unknown>\n#16 0x55c4d327ee0e <unknown>\n#17 0x55c4d3296e52 <unknown>\n#18 0x55c4d32637af <unknown>\n#19 0x55c4d32bb188 <unknown>\n#20 0x55c4d32bb35b <unknown>\n#21 0x55c4d32cafcc <unknown>\n#22 0x7f0e0d1b7ac3 <unknown>","time":{"start":1716424873519,"stop":1716424892576,"duration":19057}},{"uid":"b2be2d497b860142","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1854//#testresult/b2be2d497b860142","status":"passed","time":{"start":1716338369152,"stop":1716338382199,"duration":13047}},{"uid":"a414b5979c322315","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1853//#testresult/a414b5979c322315","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x562d5b653eca <unknown>\n#1 0x562d5b33d45c <unknown>\n#2 0x562d5b3895b5 <unknown>\n#3 0x562d5b389671 <unknown>\n#4 0x562d5b3cdf14 <unknown>\n#5 0x562d5b3ac4dd <unknown>\n#6 0x562d5b3cb2cc <unknown>\n#7 0x562d5b3ac253 <unknown>\n#8 0x562d5b37c1c7 <unknown>\n#9 0x562d5b37cb3e <unknown>\n#10 0x562d5b61a30b <unknown>\n#11 0x562d5b61e3b7 <unknown>\n#12 0x562d5b606e3e <unknown>\n#13 0x562d5b61ee82 <unknown>\n#14 0x562d5b5eb7df <unknown>\n#15 0x562d5b6431b8 <unknown>\n#16 0x562d5b64338b <unknown>\n#17 0x562d5b652ffc <unknown>\n#18 0x7f09b69cdac3 <unknown>","time":{"start":1716252015571,"stop":1716252035324,"duration":19753}},{"uid":"5bd876fa7711281","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1852//#testresult/5bd876fa7711281","status":"passed","time":{"start":1716165628625,"stop":1716165647012,"duration":18387}},{"uid":"da7c5853fafca2ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1851//#testresult/da7c5853fafca2ea","status":"passed","time":{"start":1716155402886,"stop":1716155416329,"duration":13443}},{"uid":"b691f8b646968529","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1849//#testresult/b691f8b646968529","status":"passed","time":{"start":1716152703484,"stop":1716152865816,"duration":162332}},{"uid":"709b955e3e19797c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1846//#testresult/709b955e3e19797c","status":"passed","time":{"start":1716079376856,"stop":1716079392139,"duration":15283}},{"uid":"ca73ad2d87ae0756","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1842//#testresult/ca73ad2d87ae0756","status":"passed","time":{"start":1715992881507,"stop":1715992888564,"duration":7057}},{"uid":"b729d99c1fbb116b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1839//#testresult/b729d99c1fbb116b","status":"passed","time":{"start":1715983685754,"stop":1715983692095,"duration":6341}}]},"tags":[]},"source":"97232456f3e55ae5.json","parameterValues":["RenfrewshireCouncil"]}