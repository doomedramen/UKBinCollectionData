{"uid":"b9444d2d1d28c559","name":"Validate Council Output [NorthTynesideCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"5f199ed7bccd24a997d0abd44066cd21","time":{"start":1727309950696,"stop":1727309951368,"duration":672},"status":"failed","statusMessage":"TypeError: 'NoneType' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7f264749f240>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthTynesideCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f2659fbe780>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthTynesideCouncil.CouncilClass object at 0x7f26469103e0>, page = ''\nkwargs = {'council_module_str': 'NorthTynesideCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '47097627', user_postcode = 'NE26 2TG'\ns = <requests.sessions.Session object at 0x7f2659d38770>\nresponse = <Response [404]>\nsoup = <!DOCTYPE HTML>\n\n<html>\n<head>\n<title>Squarespace - Domain Not Claimed</title>\n<meta content=\"chrome=1\" http-equiv=\"X-...t>\n</head>\n<body class=\"squarespace-config squarespace-system-page\">\n<div class=\"minimal-logo\"> </div>\n</body>\n</html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n    \n        user_uprn = kwargs.get(\"uprn\")\n        user_postcode = kwargs.get(\"postcode\")\n        check_uprn(user_uprn)\n        check_postcode(user_postcode)\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n    \n        # Get the first form\n        response = s.get(\n            \"https://my.northtyneside.gov.uk/category/81/bin-collection-dates\",\n            verify = False,\n        )\n    \n        # Find the form ID and submit with a postcode\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n>       form_build_id = soup.find(\"input\", {\"name\": \"form_build_id\"})[\"value\"]\nE       TypeError: 'NoneType' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/NorthTynesideCouncil.py:31: TypeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"TypeError: 'NoneType' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7f264749f240>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthTynesideCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f2659fbe780>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthTynesideCouncil.CouncilClass object at 0x7f26469103e0>, page = ''\nkwargs = {'council_module_str': 'NorthTynesideCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '47097627', user_postcode = 'NE26 2TG'\ns = <requests.sessions.Session object at 0x7f2659d38770>\nresponse = <Response [404]>\nsoup = <!DOCTYPE HTML>\n\n<html>\n<head>\n<title>Squarespace - Domain Not Claimed</title>\n<meta content=\"chrome=1\" http-equiv=\"X-...t>\n</head>\n<body class=\"squarespace-config squarespace-system-page\">\n<div class=\"minimal-logo\"> </div>\n</body>\n</html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n    \n        user_uprn = kwargs.get(\"uprn\")\n        user_postcode = kwargs.get(\"postcode\")\n        check_uprn(user_uprn)\n        check_postcode(user_postcode)\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n    \n        # Get the first form\n        response = s.get(\n            \"https://my.northtyneside.gov.uk/category/81/bin-collection-dates\",\n            verify = False,\n        )\n    \n        # Find the form ID and submit with a postcode\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n>       form_build_id = soup.find(\"input\", {\"name\": \"form_build_id\"})[\"value\"]\nE       TypeError: 'NoneType' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/NorthTynesideCouncil.py:31: TypeError","steps":[{"name":"Given the council","time":{"start":1727309950696,"stop":1727309950696,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1727309950696,"stop":1727309951368,"duration":672},"status":"failed","statusMessage":"'NoneType' object is not subscriptable","statusTrace":"TypeError: 'NoneType' object is not subscriptable\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f0e181c37ffaf826","name":"stdout","source":"f0e181c37ffaf826.txt","type":"text/plain","size":47}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1437-693"},{"name":"thread","value":"2737-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthTynesideCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":111,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":152},"items":[{"uid":"1a1702c961fcf430","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2128//#testresult/1a1702c961fcf430","status":"passed","time":{"start":1727223603859,"stop":1727223605847,"duration":1988}},{"uid":"aa629dfcd1d6eb48","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2127//#testresult/aa629dfcd1d6eb48","status":"passed","time":{"start":1727137232764,"stop":1727137234635,"duration":1871}},{"uid":"d28dd1acb56b443e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2126//#testresult/d28dd1acb56b443e","status":"passed","time":{"start":1727050917792,"stop":1727050919813,"duration":2021}},{"uid":"7486686dc471897f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2125//#testresult/7486686dc471897f","status":"passed","time":{"start":1726964431183,"stop":1726964433027,"duration":1844}},{"uid":"5b9ef8f6e95e3342","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2124//#testresult/5b9ef8f6e95e3342","status":"passed","time":{"start":1726878121612,"stop":1726878124112,"duration":2500}},{"uid":"a58cffe15878a2e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2123//#testresult/a58cffe15878a2e7","status":"passed","time":{"start":1726791636675,"stop":1726791638612,"duration":1937}},{"uid":"7e86509b629ae197","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2122//#testresult/7e86509b629ae197","status":"passed","time":{"start":1726705195934,"stop":1726705198098,"duration":2164}},{"uid":"e97c81335c0b7779","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2121//#testresult/e97c81335c0b7779","status":"passed","time":{"start":1726618779446,"stop":1726618781490,"duration":2044}},{"uid":"fc8b0a3c1e7b4ec7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2120//#testresult/fc8b0a3c1e7b4ec7","status":"passed","time":{"start":1726532468939,"stop":1726532470946,"duration":2007}},{"uid":"7600695e4847824e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2116//#testresult/7600695e4847824e","status":"passed","time":{"start":1726446132145,"stop":1726446134492,"duration":2347}},{"uid":"bfa229388932893c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2115//#testresult/bfa229388932893c","status":"passed","time":{"start":1726359538887,"stop":1726359540998,"duration":2111}},{"uid":"433014cb55a0b41a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2114//#testresult/433014cb55a0b41a","status":"passed","time":{"start":1726273254486,"stop":1726273256373,"duration":1887}},{"uid":"c25337302e90b691","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2113//#testresult/c25337302e90b691","status":"passed","time":{"start":1726186807459,"stop":1726186810000,"duration":2541}},{"uid":"51bd569cb108ecbf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2112//#testresult/51bd569cb108ecbf","status":"passed","time":{"start":1726100444398,"stop":1726100446416,"duration":2018}},{"uid":"8d47fce2d1ae1d39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2111//#testresult/8d47fce2d1ae1d39","status":"passed","time":{"start":1726014034608,"stop":1726014036688,"duration":2080}},{"uid":"7c8cea001e87b96b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2109//#testresult/7c8cea001e87b96b","status":"passed","time":{"start":1725955874820,"stop":1725955876778,"duration":1958}},{"uid":"da2492580eea7fd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2107//#testresult/da2492580eea7fd8","status":"passed","time":{"start":1725927519920,"stop":1725927521910,"duration":1990}},{"uid":"7eff195681da7a55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2095//#testresult/7eff195681da7a55","status":"passed","time":{"start":1725841334977,"stop":1725841337258,"duration":2281}},{"uid":"19df0888851f95e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2093//#testresult/19df0888851f95e5","status":"passed","time":{"start":1725754803685,"stop":1725754805600,"duration":1915}},{"uid":"e4fc83955b4e019e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2092//#testresult/e4fc83955b4e019e","status":"passed","time":{"start":1725668372728,"stop":1725668374859,"duration":2131}}]},"tags":[]},"source":"b9444d2d1d28c559.json","parameterValues":["NorthTynesideCouncil"]}