{"uid":"16caf588cd9b7fdb","name":"Validate Council Output [ThreeRiversDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e3654e30da7afdc28f7fe7f42f4ffd96","time":{"start":1722817755154,"stop":1722817769123,"duration":13969},"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55a0679926ba <unknown>\n#1 0x55a067662730 <unknown>\n#2 0x55a0676685c1 <unknown>\n#3 0x55a06766a4e3 <unknown>\n#4 0x55a0676f40ee <unknown>\n#5 0x55a0676d4a52 <unknown>\n#6 0x55a0676f31ca <unknown>\n#7 0x55a0676d47f3 <unknown>\n#8 0x55a0676a4ec9 <unknown>\n#9 0x55a0676a591e <unknown>\n#10 0x55a0679589eb <unknown>\n#11 0x55a06795c972 <unknown>\n#12 0x55a067945e15 <unknown>\n#13 0x55a06795d502 <unknown>\n#14 0x55a06792ad2f <unknown>\n#15 0x55a067981578 <unknown>\n#16 0x55a067981750 <unknown>\n#17 0x55a06799148c <unknown>\n#18 0x7f11ce0faa94 <unknown>\n#19 0x7f11ce187a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f6cc5f83060>\nrequest = <FixtureRequest for <Function test_scenario_outline[ThreeRiversDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f6cc6d56840>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/ThreeRiversDistrictCouncil.py:74: in parse_data\n    driver.execute_script(\"arguments[0].scrollIntoView();\", option_element)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:414: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6cc4ed6ab0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...unknown>\\\\n#17 0x55a06799148c \\\\u003Cunknown>\\\\n#18 0x7f11ce0faa94 \\\\u003Cunknown>\\\\n#19 0x7f11ce187a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55a0679926ba <unknown>\nE       #1 0x55a067662730 <unknown>\nE       #2 0x55a0676685c1 <unknown>\nE       #3 0x55a06766a4e3 <unknown>\nE       #4 0x55a0676f40ee <unknown>\nE       #5 0x55a0676d4a52 <unknown>\nE       #6 0x55a0676f31ca <unknown>\nE       #7 0x55a0676d47f3 <unknown>\nE       #8 0x55a0676a4ec9 <unknown>\nE       #9 0x55a0676a591e <unknown>\nE       #10 0x55a0679589eb <unknown>\nE       #11 0x55a06795c972 <unknown>\nE       #12 0x55a067945e15 <unknown>\nE       #13 0x55a06795d502 <unknown>\nE       #14 0x55a06792ad2f <unknown>\nE       #15 0x55a067981578 <unknown>\nE       #16 0x55a067981750 <unknown>\nE       #17 0x55a06799148c <unknown>\nE       #18 0x7f11ce0faa94 <unknown>\nE       #19 0x7f11ce187a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55a0679926ba <unknown>\n#1 0x55a067662730 <unknown>\n#2 0x55a0676685c1 <unknown>\n#3 0x55a06766a4e3 <unknown>\n#4 0x55a0676f40ee <unknown>\n#5 0x55a0676d4a52 <unknown>\n#6 0x55a0676f31ca <unknown>\n#7 0x55a0676d47f3 <unknown>\n#8 0x55a0676a4ec9 <unknown>\n#9 0x55a0676a591e <unknown>\n#10 0x55a0679589eb <unknown>\n#11 0x55a06795c972 <unknown>\n#12 0x55a067945e15 <unknown>\n#13 0x55a06795d502 <unknown>\n#14 0x55a06792ad2f <unknown>\n#15 0x55a067981578 <unknown>\n#16 0x55a067981750 <unknown>\n#17 0x55a06799148c <unknown>\n#18 0x7f11ce0faa94 <unknown>\n#19 0x7f11ce187a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f6cc5f83060>\nrequest = <FixtureRequest for <Function test_scenario_outline[ThreeRiversDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f6cc6d56840>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/ThreeRiversDistrictCouncil.py:74: in parse_data\n    driver.execute_script(\"arguments[0].scrollIntoView();\", option_element)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:414: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6cc4ed6ab0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...unknown>\\\\n#17 0x55a06799148c \\\\u003Cunknown>\\\\n#18 0x7f11ce0faa94 \\\\u003Cunknown>\\\\n#19 0x7f11ce187a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55a0679926ba <unknown>\nE       #1 0x55a067662730 <unknown>\nE       #2 0x55a0676685c1 <unknown>\nE       #3 0x55a06766a4e3 <unknown>\nE       #4 0x55a0676f40ee <unknown>\nE       #5 0x55a0676d4a52 <unknown>\nE       #6 0x55a0676f31ca <unknown>\nE       #7 0x55a0676d47f3 <unknown>\nE       #8 0x55a0676a4ec9 <unknown>\nE       #9 0x55a0676a591e <unknown>\nE       #10 0x55a0679589eb <unknown>\nE       #11 0x55a06795c972 <unknown>\nE       #12 0x55a067945e15 <unknown>\nE       #13 0x55a06795d502 <unknown>\nE       #14 0x55a06792ad2f <unknown>\nE       #15 0x55a067981578 <unknown>\nE       #16 0x55a067981750 <unknown>\nE       #17 0x55a06799148c <unknown>\nE       #18 0x7f11ce0faa94 <unknown>\nE       #19 0x7f11ce187a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Given the council","time":{"start":1722817755154,"stop":1722817755155,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"When we scrape the data from the council","time":{"start":1722817755155,"stop":1722817769123,"duration":13968},"status":"failed","statusMessage":"Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55a0679926ba <unknown>\n#1 0x55a067662730 <unknown>\n#2 0x55a0676685c1 <unknown>\n#3 0x55a06766a4e3 <unknown>\n#4 0x55a0676f40ee <unknown>\n#5 0x55a0676d4a52 <unknown>\n#6 0x55a0676f31ca <unknown>\n#7 0x55a0676d47f3 <unknown>\n#8 0x55a0676a4ec9 <unknown>\n#9 0x55a0676a591e <unknown>\n#10 0x55a0679589eb <unknown>\n#11 0x55a06795c972 <unknown>\n#12 0x55a067945e15 <unknown>\n#13 0x55a06795d502 <unknown>\n#14 0x55a06792ad2f <unknown>\n#15 0x55a067981578 <unknown>\n#16 0x55a067981750 <unknown>\n#17 0x55a06799148c <unknown>\n#18 0x7f11ce0faa94 <unknown>\n#19 0x7f11ce187a34 __clone\n","statusTrace":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55a0679926ba <unknown>\n#1 0x55a067662730 <unknown>\n#2 0x55a0676685c1 <unknown>\n#3 0x55a06766a4e3 <unknown>\n#4 0x55a0676f40ee <unknown>\n#5 0x55a0676d4a52 <unknown>\n#6 0x55a0676f31ca <unknown>\n#7 0x55a0676d47f3 <unknown>\n#8 0x55a0676a4ec9 <unknown>\n#9 0x55a0676a591e <unknown>\n#10 0x55a0679589eb <unknown>\n#11 0x55a06795c972 <unknown>\n#12 0x55a067945e15 <unknown>\n#13 0x55a06795d502 <unknown>\n#14 0x55a06792ad2f <unknown>\n#15 0x55a067981578 <unknown>\n#16 0x55a067981750 <unknown>\n#17 0x55a06799148c <unknown>\n#18 0x7f11ce0faa94 <unknown>\n#19 0x7f11ce187a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[{"uid":"cb7499fc44e3b51c","name":"log","source":"cb7499fc44e3b51c.txt","type":"text/plain","size":933},{"uid":"349f1929be5e4200","name":"stdout","source":"349f1929be5e4200.txt","type":"text/plain","size":53}],"parameters":[],"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1269-709"},{"name":"thread","value":"2836-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ThreeRiversDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":62,"unknown":0,"total":65},"items":[{"uid":"1d603459f2fe8fd7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2005//#testresult/1d603459f2fe8fd7","status":"passed","time":{"start":1722731230712,"stop":1722731327198,"duration":96486}},{"uid":"3d98a364b8f77161","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2004//#testresult/3d98a364b8f77161","status":"passed","time":{"start":1722644798045,"stop":1722644862175,"duration":64130}},{"uid":"339e41b27c79948b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2003//#testresult/339e41b27c79948b","status":"passed","time":{"start":1722558383263,"stop":1722558402274,"duration":19011}},{"uid":"f4e3f5dd2f5d4e7d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2002//#testresult/f4e3f5dd2f5d4e7d","status":"passed","time":{"start":1722471837723,"stop":1722471859389,"duration":21666}},{"uid":"25571b0845398792","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1998//#testresult/25571b0845398792","status":"passed","time":{"start":1722385531950,"stop":1722385553179,"duration":21229}},{"uid":"95c3b0ac53a51bc5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1997//#testresult/95c3b0ac53a51bc5","status":"passed","time":{"start":1722299027321,"stop":1722299046226,"duration":18905}},{"uid":"33e662fb77d7524f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1996//#testresult/33e662fb77d7524f","status":"passed","time":{"start":1722212665810,"stop":1722212707120,"duration":41310}},{"uid":"c51f04cf9d05b54b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1995//#testresult/c51f04cf9d05b54b","status":"passed","time":{"start":1722126216701,"stop":1722126242418,"duration":25717}},{"uid":"7e508f72c711e548","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1994//#testresult/7e508f72c711e548","status":"passed","time":{"start":1722039990449,"stop":1722040035239,"duration":44790}},{"uid":"54532234cc022096","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1993//#testresult/54532234cc022096","status":"passed","time":{"start":1721953511273,"stop":1721953541345,"duration":30072}},{"uid":"aa94ec51d733130d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1992//#testresult/aa94ec51d733130d","status":"passed","time":{"start":1721867081382,"stop":1721867099766,"duration":18384}},{"uid":"2a381c9f218cb6b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1991//#testresult/2a381c9f218cb6b3","status":"passed","time":{"start":1721780676902,"stop":1721780702902,"duration":26000}},{"uid":"3c26b368b3251d3d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1990//#testresult/3c26b368b3251d3d","status":"passed","time":{"start":1721694197630,"stop":1721694221173,"duration":23543}},{"uid":"873e09912632ea7f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1989//#testresult/873e09912632ea7f","status":"passed","time":{"start":1721607797230,"stop":1721607816048,"duration":18818}},{"uid":"2e120090a2e2586a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1988//#testresult/2e120090a2e2586a","status":"passed","time":{"start":1721521412635,"stop":1721521455338,"duration":42703}},{"uid":"991e232ce2d0c9a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1987//#testresult/991e232ce2d0c9a9","status":"passed","time":{"start":1721435080838,"stop":1721435127417,"duration":46579}},{"uid":"f436ef68359d92b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1986//#testresult/f436ef68359d92b8","status":"failed","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.114); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x557b428ab69a <unknown>\n#1 0x557b4258e0dc <unknown>\n#2 0x557b425937e9 <unknown>\n#3 0x557b42595595 <unknown>\n#4 0x557b4259561c <unknown>\n#5 0x557b425de703 <unknown>\n#6 0x557b425cf689 <unknown>\n#7 0x557b425fd872 <unknown>\n#8 0x557b425ced89 <unknown>\n#9 0x557b425fda3e <unknown>\n#10 0x557b4261c5c3 <unknown>\n#11 0x557b425fd613 <unknown>\n#12 0x557b425cd4f7 <unknown>\n#13 0x557b425cde4e <unknown>\n#14 0x557b4287186b <unknown>\n#15 0x557b42875911 <unknown>\n#16 0x557b4285d35e <unknown>\n#17 0x557b42876472 <unknown>\n#18 0x557b42841cbf <unknown>\n#19 0x557b4289b098 <unknown>\n#20 0x557b4289b270 <unknown>\n#21 0x557b428aa7cc <unknown>\n#22 0x7f4682431ac3 <unknown>","time":{"start":1721373207139,"stop":1721373236826,"duration":29687}},{"uid":"890df9bf85e7265d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1985//#testresult/890df9bf85e7265d","status":"passed","time":{"start":1721264087949,"stop":1721264135914,"duration":47965}},{"uid":"2bf3816df5b0f0a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1984//#testresult/2bf3816df5b0f0a9","status":"passed","time":{"start":1721177465230,"stop":1721177504169,"duration":38939}},{"uid":"f05b26d541435916","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1983//#testresult/f05b26d541435916","status":"passed","time":{"start":1721091126771,"stop":1721091143059,"duration":16288}}]},"tags":[]},"source":"16caf588cd9b7fdb.json","parameterValues":["ThreeRiversDistrictCouncil"]}