{"uid":"716513155410332d","name":"Validate Council Output [BexleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b14d94c00a7a02b15ede5862fe9627b6","time":{"start":1722297679084,"stop":1722297730723,"duration":51639},"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6538daede0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f654c62c4d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/_strptime.py:554: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/_strptime.py:333: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6538daede0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f654c62c4d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/_strptime.py:554: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/_strptime.py:333: ValueError","steps":[{"name":"Given the council","time":{"start":1722297679084,"stop":1722297679085,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"When we scrape the data from the council","time":{"start":1722297679085,"stop":1722297730722,"duration":51637},"status":"failed","statusMessage":"time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"ValueError: time data 'Being collected today' does not match format '%A %d %B'\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"67bb741ba6a7adb2","name":"stdout","source":"67bb741ba6a7adb2.txt","type":"text/plain","size":126}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"host","value":"fv-az1040-162"},{"name":"thread","value":"2817-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":0,"skipped":0,"passed":53,"unknown":0,"total":82},"items":[{"uid":"c37484537fa24409","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1996//#testresult/c37484537fa24409","status":"passed","time":{"start":1722211278262,"stop":1722211311277,"duration":33015}},{"uid":"fbdab711dd4bde74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1995//#testresult/fbdab711dd4bde74","status":"passed","time":{"start":1722124871512,"stop":1722124927322,"duration":55810}},{"uid":"8fd868fed5a9ba43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1994//#testresult/8fd868fed5a9ba43","status":"passed","time":{"start":1722038472033,"stop":1722038593846,"duration":121813}},{"uid":"ea7504ac504cd0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1993//#testresult/ea7504ac504cd0","status":"passed","time":{"start":1721952076533,"stop":1721952121137,"duration":44604}},{"uid":"c04007d1f5819197","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1992//#testresult/c04007d1f5819197","status":"passed","time":{"start":1721865664838,"stop":1721865773908,"duration":109070}},{"uid":"26f8ce7ed786f69c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1991//#testresult/26f8ce7ed786f69c","status":"passed","time":{"start":1721779274499,"stop":1721779310014,"duration":35515}},{"uid":"9e7e8a6a1caeecf3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1990//#testresult/9e7e8a6a1caeecf3","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1721692874225,"stop":1721692923279,"duration":49054}},{"uid":"bdbb565ce29c1f34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1989//#testresult/bdbb565ce29c1f34","status":"passed","time":{"start":1721606489308,"stop":1721606536229,"duration":46921}},{"uid":"805ee210eee50f36","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1988//#testresult/805ee210eee50f36","status":"passed","time":{"start":1721520086650,"stop":1721520126967,"duration":40317}},{"uid":"42b710eeef3f7ea6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1987//#testresult/42b710eeef3f7ea6","status":"passed","time":{"start":1721433679343,"stop":1721433792133,"duration":112790}},{"uid":"37860bbc5ba483e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1986//#testresult/37860bbc5ba483e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x562f56afc69a <unknown>\n#1 0x562f567df0dc <unknown>\n#2 0x562f5682b931 <unknown>\n#3 0x562f5682ba21 <unknown>\n#4 0x562f56870234 <unknown>\n#5 0x562f5684e89d <unknown>\n#6 0x562f5686d5c3 <unknown>\n#7 0x562f5684e613 <unknown>\n#8 0x562f5681e4f7 <unknown>\n#9 0x562f5681ee4e <unknown>\n#10 0x562f56ac286b <unknown>\n#11 0x562f56ac6911 <unknown>\n#12 0x562f56aae35e <unknown>\n#13 0x562f56ac7472 <unknown>\n#14 0x562f56a92cbf <unknown>\n#15 0x562f56aec098 <unknown>\n#16 0x562f56aec270 <unknown>\n#17 0x562f56afb7cc <unknown>\n#18 0x7fde22dadac3 <unknown>","time":{"start":1721371789238,"stop":1721371891157,"duration":101919}},{"uid":"e75b873d5b3901f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1985//#testresult/e75b873d5b3901f5","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55e587cbd69a <unknown>\n#1 0x55e58799ff21 <unknown>\n#2 0x55e5879e66d8 <unknown>\n#3 0x55e5879e4abf <unknown>\n#4 0x55e587a0f872 <unknown>\n#5 0x55e5879e0d89 <unknown>\n#6 0x55e587a0fa3e <unknown>\n#7 0x55e587a2e5c3 <unknown>\n#8 0x55e587a0f613 <unknown>\n#9 0x55e5879df4f7 <unknown>\n#10 0x55e5879dfe4e <unknown>\n#11 0x55e587c8386b <unknown>\n#12 0x55e587c87911 <unknown>\n#13 0x55e587c6f35e <unknown>\n#14 0x55e587c88472 <unknown>\n#15 0x55e587c53cbf <unknown>\n#16 0x55e587cad098 <unknown>\n#17 0x55e587cad270 <unknown>\n#18 0x55e587cbc7cc <unknown>\n#19 0x7f7afc38cac3 <unknown>","time":{"start":1721262565983,"stop":1721262594143,"duration":28160}},{"uid":"e35a7b059e86a821","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1984//#testresult/e35a7b059e86a821","status":"passed","time":{"start":1721176184214,"stop":1721176216093,"duration":31879}},{"uid":"85bf003e4d0c40a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1983//#testresult/85bf003e4d0c40a5","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1721089777470,"stop":1721089817937,"duration":40467}},{"uid":"22e39d7fc2c0eb9c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1982//#testresult/22e39d7fc2c0eb9c","status":"passed","time":{"start":1721003471102,"stop":1721003505002,"duration":33900}},{"uid":"df884ffcedc22564","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1981//#testresult/df884ffcedc22564","status":"passed","time":{"start":1720917190561,"stop":1720917223369,"duration":32808}},{"uid":"594fc4bef21908b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1980//#testresult/594fc4bef21908b8","status":"passed","time":{"start":1720830563383,"stop":1720830608632,"duration":45249}},{"uid":"d41c06e8cc9f393c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1979//#testresult/d41c06e8cc9f393c","status":"passed","time":{"start":1720744140188,"stop":1720744174852,"duration":34664}},{"uid":"f1a9b0e48b48462e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1978//#testresult/f1a9b0e48b48462e","status":"passed","time":{"start":1720657793654,"stop":1720657836144,"duration":42490}},{"uid":"96a9ecb97081c154","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1977//#testresult/96a9ecb97081c154","status":"passed","time":{"start":1720571388966,"stop":1720571439432,"duration":50466}}]},"tags":[]},"source":"716513155410332d.json","parameterValues":["BexleyCouncil"]}