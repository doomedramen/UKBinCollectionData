{"uid":"83e9798319eb46f2","name":"Validate Council Output [BedfordBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4d48486dc2c0a9c252d5ac44f0d62a3d","time":{"start":1719966597836,"stop":1719966598412,"duration":576},"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7f05b26b2660>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f05b3687350>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7f05c64a9f10>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7f05b26b2660>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f05b3687350>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7f05c64a9f10>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","steps":[{"name":"Given the council","time":{"start":1719966597836,"stop":1719966597837,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1719966597837,"stop":1719966598412,"duration":575},"status":"failed","statusMessage":"Could not get latest data!","statusTrace":"ConnectionError: Could not get latest data!\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"67a634b280522edc","name":"stdout","source":"67a634b280522edc.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1536-472"},{"name":"thread","value":"2722-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BedfordBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":53,"unknown":0,"total":54},"items":[{"uid":"665ba3aa722c2208","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1966//#testresult/665ba3aa722c2208","status":"passed","time":{"start":1719880263476,"stop":1719880268251,"duration":4775}},{"uid":"b5c3824edc6305e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1965//#testresult/b5c3824edc6305e8","status":"passed","time":{"start":1719794093801,"stop":1719794097046,"duration":3245}},{"uid":"2336cba344e3cc7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1964//#testresult/2336cba344e3cc7e","status":"passed","time":{"start":1719707594255,"stop":1719707598969,"duration":4714}},{"uid":"ed2dc6e1486806ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1962//#testresult/ed2dc6e1486806ea","status":"passed","time":{"start":1719620953649,"stop":1719620956658,"duration":3009}},{"uid":"d016c98bfa569f02","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1958//#testresult/d016c98bfa569f02","status":"passed","time":{"start":1719534579752,"stop":1719534581938,"duration":2186}},{"uid":"17c591d92c8fadbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1954//#testresult/17c591d92c8fadbc","status":"passed","time":{"start":1719361782807,"stop":1719361785750,"duration":2943}},{"uid":"58f260a767e42488","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1953//#testresult/58f260a767e42488","status":"passed","time":{"start":1719275363183,"stop":1719275366321,"duration":3138}},{"uid":"bc01e19256772112","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1952//#testresult/bc01e19256772112","status":"passed","time":{"start":1719189134896,"stop":1719189137139,"duration":2243}},{"uid":"5a12daa3e9b4481b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1951//#testresult/5a12daa3e9b4481b","status":"passed","time":{"start":1719102780648,"stop":1719102782676,"duration":2028}},{"uid":"6ec5d278801c3efe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1950//#testresult/6ec5d278801c3efe","status":"passed","time":{"start":1719016167003,"stop":1719016175829,"duration":8826}},{"uid":"37b7317445391c5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1949//#testresult/37b7317445391c5b","status":"passed","time":{"start":1718929777814,"stop":1718929781413,"duration":3599}},{"uid":"bb1c8a8ecc6bd7f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1948//#testresult/bb1c8a8ecc6bd7f7","status":"passed","time":{"start":1718843349633,"stop":1718843352167,"duration":2534}},{"uid":"d6ed1513ba0077e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1947//#testresult/d6ed1513ba0077e6","status":"passed","time":{"start":1718757057819,"stop":1718757059628,"duration":1809}},{"uid":"2b026af2d9a986a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1946//#testresult/2b026af2d9a986a6","status":"passed","time":{"start":1718670598670,"stop":1718670601023,"duration":2353}},{"uid":"83b541c394bdca08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1945//#testresult/83b541c394bdca08","status":"passed","time":{"start":1718584291107,"stop":1718584293919,"duration":2812}},{"uid":"5a6ccbfcf739b94b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1944//#testresult/5a6ccbfcf739b94b","status":"passed","time":{"start":1718497962750,"stop":1718497965815,"duration":3065}},{"uid":"9a96d097515c8db7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1943//#testresult/9a96d097515c8db7","status":"passed","time":{"start":1718411422697,"stop":1718411426111,"duration":3414}},{"uid":"c14a252fd9fe41e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1942//#testresult/c14a252fd9fe41e6","status":"passed","time":{"start":1718324972422,"stop":1718324974529,"duration":2107}},{"uid":"de6fcfc263198634","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1939//#testresult/de6fcfc263198634","status":"passed","time":{"start":1718238637194,"stop":1718238641095,"duration":3901}},{"uid":"7cde5b8e36031a5f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1938//#testresult/7cde5b8e36031a5f","status":"passed","time":{"start":1718152196496,"stop":1718152198982,"duration":2486}}]},"tags":[]},"source":"83e9798319eb46f2.json","parameterValues":["BedfordBoroughCouncil"]}