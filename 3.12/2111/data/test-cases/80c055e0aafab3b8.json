{"uid":"80c055e0aafab3b8","name":"Validate Council Output [DerbyshireDalesDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9239389a2bc21b81d8e3ab51bc478351","time":{"start":1726013578049,"stop":1726013663453,"duration":85404},"status":"failed","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"ctl00_ContentPlaceHolder1_FF2924TB\"]\"}\n  (Session info: chrome=128.0.6613.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55b7cdc8e86a <unknown>\n#1 0x55b7cd95ce50 <unknown>\n#2 0x55b7cd9ac644 <unknown>\n#3 0x55b7cd9ac931 <unknown>\n#4 0x55b7cd9f2534 <unknown>\n#5 0x55b7cd9d14bd <unknown>\n#6 0x55b7cd9ef9c6 <unknown>\n#7 0x55b7cd9d1233 <unknown>\n#8 0x55b7cd99f093 <unknown>\n#9 0x55b7cd9a009e <unknown>\n#10 0x55b7cdc55acb <unknown>\n#11 0x55b7cdc59a81 <unknown>\n#12 0x55b7cdc41695 <unknown>\n#13 0x55b7cdc5a5f2 <unknown>\n#14 0x55b7cdc2686f <unknown>\n#15 0x55b7cdc7d668 <unknown>\n#16 0x55b7cdc7d832 <unknown>\n#17 0x55b7cdc8d65c <unknown>\n#18 0x7fbb725c9a94 <unknown>\n#19 0x7fbb72656a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f5f7b623240>\nrequest = <FixtureRequest for <Function test_scenario_outline[DerbyshireDalesDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f5f8e13eed0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/DerbyshireDalesDistrictCouncil.py:38: in parse_data\n    inputElement_postcode = driver.find_element(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5f8dbd8590>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...unknown>\\\\n#17 0x55b7cdc8d65c \\\\u003Cunknown>\\\\n#18 0x7fbb725c9a94 \\\\u003Cunknown>\\\\n#19 0x7fbb72656a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"ctl00_ContentPlaceHolder1_FF2924TB\"]\"}\nE         (Session info: chrome=128.0.6613.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55b7cdc8e86a <unknown>\nE       #1 0x55b7cd95ce50 <unknown>\nE       #2 0x55b7cd9ac644 <unknown>\nE       #3 0x55b7cd9ac931 <unknown>\nE       #4 0x55b7cd9f2534 <unknown>\nE       #5 0x55b7cd9d14bd <unknown>\nE       #6 0x55b7cd9ef9c6 <unknown>\nE       #7 0x55b7cd9d1233 <unknown>\nE       #8 0x55b7cd99f093 <unknown>\nE       #9 0x55b7cd9a009e <unknown>\nE       #10 0x55b7cdc55acb <unknown>\nE       #11 0x55b7cdc59a81 <unknown>\nE       #12 0x55b7cdc41695 <unknown>\nE       #13 0x55b7cdc5a5f2 <unknown>\nE       #14 0x55b7cdc2686f <unknown>\nE       #15 0x55b7cdc7d668 <unknown>\nE       #16 0x55b7cdc7d832 <unknown>\nE       #17 0x55b7cdc8d65c <unknown>\nE       #18 0x7fbb725c9a94 <unknown>\nE       #19 0x7fbb72656a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"ctl00_ContentPlaceHolder1_FF2924TB\"]\"}\n  (Session info: chrome=128.0.6613.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55b7cdc8e86a <unknown>\n#1 0x55b7cd95ce50 <unknown>\n#2 0x55b7cd9ac644 <unknown>\n#3 0x55b7cd9ac931 <unknown>\n#4 0x55b7cd9f2534 <unknown>\n#5 0x55b7cd9d14bd <unknown>\n#6 0x55b7cd9ef9c6 <unknown>\n#7 0x55b7cd9d1233 <unknown>\n#8 0x55b7cd99f093 <unknown>\n#9 0x55b7cd9a009e <unknown>\n#10 0x55b7cdc55acb <unknown>\n#11 0x55b7cdc59a81 <unknown>\n#12 0x55b7cdc41695 <unknown>\n#13 0x55b7cdc5a5f2 <unknown>\n#14 0x55b7cdc2686f <unknown>\n#15 0x55b7cdc7d668 <unknown>\n#16 0x55b7cdc7d832 <unknown>\n#17 0x55b7cdc8d65c <unknown>\n#18 0x7fbb725c9a94 <unknown>\n#19 0x7fbb72656a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f5f7b623240>\nrequest = <FixtureRequest for <Function test_scenario_outline[DerbyshireDalesDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f5f8e13eed0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/DerbyshireDalesDistrictCouncil.py:38: in parse_data\n    inputElement_postcode = driver.find_element(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5f8dbd8590>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...unknown>\\\\n#17 0x55b7cdc8d65c \\\\u003Cunknown>\\\\n#18 0x7fbb725c9a94 \\\\u003Cunknown>\\\\n#19 0x7fbb72656a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"ctl00_ContentPlaceHolder1_FF2924TB\"]\"}\nE         (Session info: chrome=128.0.6613.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55b7cdc8e86a <unknown>\nE       #1 0x55b7cd95ce50 <unknown>\nE       #2 0x55b7cd9ac644 <unknown>\nE       #3 0x55b7cd9ac931 <unknown>\nE       #4 0x55b7cd9f2534 <unknown>\nE       #5 0x55b7cd9d14bd <unknown>\nE       #6 0x55b7cd9ef9c6 <unknown>\nE       #7 0x55b7cd9d1233 <unknown>\nE       #8 0x55b7cd99f093 <unknown>\nE       #9 0x55b7cd9a009e <unknown>\nE       #10 0x55b7cdc55acb <unknown>\nE       #11 0x55b7cdc59a81 <unknown>\nE       #12 0x55b7cdc41695 <unknown>\nE       #13 0x55b7cdc5a5f2 <unknown>\nE       #14 0x55b7cdc2686f <unknown>\nE       #15 0x55b7cdc7d668 <unknown>\nE       #16 0x55b7cdc7d832 <unknown>\nE       #17 0x55b7cdc8d65c <unknown>\nE       #18 0x7fbb725c9a94 <unknown>\nE       #19 0x7fbb72656a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","steps":[{"name":"Given the council","time":{"start":1726013578049,"stop":1726013578049,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1726013578050,"stop":1726013663453,"duration":85403},"status":"failed","statusMessage":"Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"ctl00_ContentPlaceHolder1_FF2924TB\"]\"}\n  (Session info: chrome=128.0.6613.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55b7cdc8e86a <unknown>\n#1 0x55b7cd95ce50 <unknown>\n#2 0x55b7cd9ac644 <unknown>\n#3 0x55b7cd9ac931 <unknown>\n#4 0x55b7cd9f2534 <unknown>\n#5 0x55b7cd9d14bd <unknown>\n#6 0x55b7cd9ef9c6 <unknown>\n#7 0x55b7cd9d1233 <unknown>\n#8 0x55b7cd99f093 <unknown>\n#9 0x55b7cd9a009e <unknown>\n#10 0x55b7cdc55acb <unknown>\n#11 0x55b7cdc59a81 <unknown>\n#12 0x55b7cdc41695 <unknown>\n#13 0x55b7cdc5a5f2 <unknown>\n#14 0x55b7cdc2686f <unknown>\n#15 0x55b7cdc7d668 <unknown>\n#16 0x55b7cdc7d832 <unknown>\n#17 0x55b7cdc8d65c <unknown>\n#18 0x7fbb725c9a94 <unknown>\n#19 0x7fbb72656a34 __clone\n","statusTrace":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"ctl00_ContentPlaceHolder1_FF2924TB\"]\"}\n  (Session info: chrome=128.0.6613.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55b7cdc8e86a <unknown>\n#1 0x55b7cd95ce50 <unknown>\n#2 0x55b7cd9ac644 <unknown>\n#3 0x55b7cd9ac931 <unknown>\n#4 0x55b7cd9f2534 <unknown>\n#5 0x55b7cd9d14bd <unknown>\n#6 0x55b7cd9ef9c6 <unknown>\n#7 0x55b7cd9d1233 <unknown>\n#8 0x55b7cd99f093 <unknown>\n#9 0x55b7cd9a009e <unknown>\n#10 0x55b7cdc55acb <unknown>\n#11 0x55b7cdc59a81 <unknown>\n#12 0x55b7cdc41695 <unknown>\n#13 0x55b7cdc5a5f2 <unknown>\n#14 0x55b7cdc2686f <unknown>\n#15 0x55b7cdc7d668 <unknown>\n#16 0x55b7cdc7d832 <unknown>\n#17 0x55b7cdc8d65c <unknown>\n#18 0x7fbb725c9a94 <unknown>\n#19 0x7fbb72656a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"2923841c3e27327d","name":"stdout","source":"2923841c3e27327d.txt","type":"text/plain","size":976}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1200-825"},{"name":"thread","value":"2762-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"DerbyshireDalesDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":135,"unknown":0,"total":136},"items":[{"uid":"c773736131ca8439","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2109//#testresult/c773736131ca8439","status":"passed","time":{"start":1725955543026,"stop":1725955571844,"duration":28818}},{"uid":"aa8918aaab71dd4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2107//#testresult/aa8918aaab71dd4d","status":"passed","time":{"start":1725927176830,"stop":1725927225015,"duration":48185}},{"uid":"cc1f967bb76e4fdd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2095//#testresult/cc1f967bb76e4fdd","status":"passed","time":{"start":1725841048578,"stop":1725841077598,"duration":29020}},{"uid":"15f7f0ef62a5cd4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2093//#testresult/15f7f0ef62a5cd4d","status":"passed","time":{"start":1725754416628,"stop":1725754504274,"duration":87646}},{"uid":"7d873321a3b620f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2092//#testresult/7d873321a3b620f2","status":"passed","time":{"start":1725667980659,"stop":1725668077523,"duration":96864}},{"uid":"bf22d9a69d932335","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2088//#testresult/bf22d9a69d932335","status":"passed","time":{"start":1725581617228,"stop":1725581638275,"duration":21047}},{"uid":"75a8c47642e612fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2086//#testresult/75a8c47642e612fa","status":"passed","time":{"start":1725569432881,"stop":1725569451689,"duration":18808}},{"uid":"bac20f6e324b6de6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2083//#testresult/bac20f6e324b6de6","status":"passed","time":{"start":1725495204790,"stop":1725495225579,"duration":20789}},{"uid":"9aefafc50038c4f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/9aefafc50038c4f6","status":"passed","time":{"start":1725430453023,"stop":1725430484534,"duration":31511}},{"uid":"ceee416023ddb6be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/ceee416023ddb6be","status":"passed","time":{"start":1725408867642,"stop":1725408887273,"duration":19631}},{"uid":"9f62d5fb9cd634b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2080//#testresult/9f62d5fb9cd634b9","status":"passed","time":{"start":1725403936151,"stop":1725403959515,"duration":23364}},{"uid":"3b7f56a7e12bf80c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2073//#testresult/3b7f56a7e12bf80c","status":"passed","time":{"start":1725384908042,"stop":1725384928779,"duration":20737}},{"uid":"9fa80258478e2ea4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2070//#testresult/9fa80258478e2ea4","status":"passed","time":{"start":1725347122506,"stop":1725347132419,"duration":9913}},{"uid":"60d657f4477ab05a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2069//#testresult/60d657f4477ab05a","status":"passed","time":{"start":1725322367200,"stop":1725322435108,"duration":67908}},{"uid":"1a8b7c26fae8e224","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2068//#testresult/1a8b7c26fae8e224","status":"passed","time":{"start":1725316281580,"stop":1725316300044,"duration":18464}},{"uid":"d4c6aad692c6bcaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2066//#testresult/d4c6aad692c6bcaf","status":"passed","time":{"start":1725313040203,"stop":1725313055270,"duration":15067}},{"uid":"b09662f8dbb47fd0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2064//#testresult/b09662f8dbb47fd0","status":"passed","time":{"start":1725310871114,"stop":1725310885524,"duration":14410}},{"uid":"c81ca3e92020a8a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2060//#testresult/c81ca3e92020a8a9","status":"passed","time":{"start":1725308127511,"stop":1725308148211,"duration":20700}},{"uid":"9e556319ec26867a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2059//#testresult/9e556319ec26867a","status":"passed","time":{"start":1725307955289,"stop":1725308056500,"duration":101211}},{"uid":"f1c2469f10da30ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2054//#testresult/f1c2469f10da30ae","status":"passed","time":{"start":1725235941453,"stop":1725235995700,"duration":54247}}]},"tags":[]},"source":"80c055e0aafab3b8.json","parameterValues":["DerbyshireDalesDistrictCouncil"]}