{"uid":"11d684bf8d4b4d8d","name":"Validate Council Output [NorthNorthamptonshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"92c0f84b87cb9703264ef6f7bea152ee","time":{"start":1725063638708,"stop":1725063669296,"duration":30588},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7fcdbca7fce0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fcdcb64c8c0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7fcdbbf80710>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', today = 1725063638000\ndateforurl = '2024-08-31', dateforurl2 = '2024-10-12'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7fcdbca7fce0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fcdcb64c8c0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7fcdbbf80710>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', today = 1725063638000\ndateforurl = '2024-08-31', dateforurl2 = '2024-10-12'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","steps":[{"name":"Given the council","time":{"start":1725063638708,"stop":1725063638708,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725063638709,"stop":1725063669296,"duration":30587},"status":"failed","statusMessage":"No bin data found for provided UPRN..","statusTrace":"ValueError: No bin data found for provided UPRN..\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"421f37929861fc3d","name":"stdout","source":"421f37929861fc3d.txt","type":"text/plain","size":55}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az985-830"},{"name":"thread","value":"2881-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":105,"unknown":0,"total":113},"items":[{"uid":"1feaa105b100fb43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2051//#testresult/1feaa105b100fb43","status":"passed","time":{"start":1724977119269,"stop":1724977124410,"duration":5141}},{"uid":"c28903f0f500b282","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2049//#testresult/c28903f0f500b282","status":"passed","time":{"start":1724890649443,"stop":1724890652771,"duration":3328}},{"uid":"9ffe4ad825f517c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2048//#testresult/9ffe4ad825f517c8","status":"passed","time":{"start":1724804324362,"stop":1724804324967,"duration":605}},{"uid":"36bf799641a0fbe5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2043//#testresult/36bf799641a0fbe5","status":"passed","time":{"start":1724717872434,"stop":1724717873479,"duration":1045}},{"uid":"40335ce52e30aa6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2039//#testresult/40335ce52e30aa6","status":"passed","time":{"start":1724631435768,"stop":1724631437940,"duration":2172}},{"uid":"f40dda5a8507ee10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2038//#testresult/f40dda5a8507ee10","status":"passed","time":{"start":1724545015025,"stop":1724545017261,"duration":2236}},{"uid":"ba9a917bcd62286d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2037//#testresult/ba9a917bcd62286d","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN..","time":{"start":1724458637470,"stop":1724458668158,"duration":30688}},{"uid":"6ac6c554a7eb9c6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2036//#testresult/6ac6c554a7eb9c6c","status":"passed","time":{"start":1724372254352,"stop":1724372258755,"duration":4403}},{"uid":"e8958b4d960f7a5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2034//#testresult/e8958b4d960f7a5c","status":"passed","time":{"start":1724285794291,"stop":1724285799006,"duration":4715}},{"uid":"fcda72844b0b8339","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2033//#testresult/fcda72844b0b8339","status":"passed","time":{"start":1724199391428,"stop":1724199394684,"duration":3256}},{"uid":"e483c908236f808e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2032//#testresult/e483c908236f808e","status":"passed","time":{"start":1724113063590,"stop":1724113067175,"duration":3585}},{"uid":"61b78a4ea8bdd086","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2031//#testresult/61b78a4ea8bdd086","status":"passed","time":{"start":1724026637082,"stop":1724026646264,"duration":9182}},{"uid":"12d3fe3191a4dc87","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2030//#testresult/12d3fe3191a4dc87","status":"passed","time":{"start":1723940210190,"stop":1723940214744,"duration":4554}},{"uid":"9d642c9326f0c244","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2029//#testresult/9d642c9326f0c244","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN..","time":{"start":1723853826839,"stop":1723853857444,"duration":30605}},{"uid":"12d69b8bff12bcc7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2028//#testresult/12d69b8bff12bcc7","status":"passed","time":{"start":1723767431504,"stop":1723767438178,"duration":6674}},{"uid":"ac74faf82590f665","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2027//#testresult/ac74faf82590f665","status":"passed","time":{"start":1723680608987,"stop":1723680609862,"duration":875}},{"uid":"c4f5d8d0fbab46e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2026//#testresult/c4f5d8d0fbab46e1","status":"passed","time":{"start":1723594667453,"stop":1723594676268,"duration":8815}},{"uid":"2a41b7053e4b849","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2025//#testresult/2a41b7053e4b849","status":"passed","time":{"start":1723508433984,"stop":1723508443288,"duration":9304}},{"uid":"9080a722c8443ad5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2024//#testresult/9080a722c8443ad5","status":"passed","time":{"start":1723422023048,"stop":1723422028380,"duration":5332}},{"uid":"ddd808eeeed30303","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2022//#testresult/ddd808eeeed30303","status":"passed","time":{"start":1723335665465,"stop":1723335666291,"duration":826}}]},"tags":[]},"source":"11d684bf8d4b4d8d.json","parameterValues":["NorthNorthamptonshireCouncil"]}