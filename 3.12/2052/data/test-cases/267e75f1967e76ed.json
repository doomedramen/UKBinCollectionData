{"uid":"267e75f1967e76ed","name":"Validate Council Output [BedfordBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4d48486dc2c0a9c252d5ac44f0d62a3d","time":{"start":1725062879067,"stop":1725062939903,"duration":60836},"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7fcdbca7fce0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fcdcb64c8c0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7fcdbdc620c0>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7fcdbca7fce0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fcdcb64c8c0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7fcdbdc620c0>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","steps":[{"name":"Given the council","time":{"start":1725062879067,"stop":1725062879067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725062879067,"stop":1725062939903,"duration":60836},"status":"failed","statusMessage":"Could not get latest data!","statusTrace":"ConnectionError: Could not get latest data!\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"390b269751ff4762","name":"stdout","source":"390b269751ff4762.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az985-830"},{"name":"thread","value":"2881-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BedfordBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":109,"unknown":0,"total":113},"items":[{"uid":"16d213143682aa11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2051//#testresult/16d213143682aa11","status":"passed","time":{"start":1724976429699,"stop":1724976440638,"duration":10939}},{"uid":"2a097127866c2b81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2049//#testresult/2a097127866c2b81","status":"passed","time":{"start":1724890142193,"stop":1724890145805,"duration":3612}},{"uid":"41cdf46ad4b15eaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2048//#testresult/41cdf46ad4b15eaf","status":"passed","time":{"start":1724803633028,"stop":1724803640591,"duration":7563}},{"uid":"7105fb8216e5bb85","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2043//#testresult/7105fb8216e5bb85","status":"passed","time":{"start":1724717259266,"stop":1724717268385,"duration":9119}},{"uid":"4a5f2ba537ef3b62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2039//#testresult/4a5f2ba537ef3b62","status":"passed","time":{"start":1724630840707,"stop":1724630845983,"duration":5276}},{"uid":"1f13459be502cc02","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2038//#testresult/1f13459be502cc02","status":"passed","time":{"start":1724544431429,"stop":1724544437728,"duration":6299}},{"uid":"8a384a992db74969","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2037//#testresult/8a384a992db74969","status":"passed","time":{"start":1724458033665,"stop":1724458041909,"duration":8244}},{"uid":"217ec488ab4edc31","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2036//#testresult/217ec488ab4edc31","status":"passed","time":{"start":1724371636683,"stop":1724371649509,"duration":12826}},{"uid":"a42fc6cf4caba58","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2034//#testresult/a42fc6cf4caba58","status":"passed","time":{"start":1724285234467,"stop":1724285237307,"duration":2840}},{"uid":"7ad7676ee9ad2cf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2033//#testresult/7ad7676ee9ad2cf6","status":"passed","time":{"start":1724198833903,"stop":1724198842225,"duration":8322}},{"uid":"5c334391ccf70e01","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2032//#testresult/5c334391ccf70e01","status":"passed","time":{"start":1724112449273,"stop":1724112455764,"duration":6491}},{"uid":"ec1c6e9d201ac816","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2031//#testresult/ec1c6e9d201ac816","status":"passed","time":{"start":1724026015728,"stop":1724026024761,"duration":9033}},{"uid":"17c6a8c0f59ec720","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2030//#testresult/17c6a8c0f59ec720","status":"passed","time":{"start":1723939637945,"stop":1723939642396,"duration":4451}},{"uid":"bd3b10f776df139a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2029//#testresult/bd3b10f776df139a","status":"passed","time":{"start":1723853225278,"stop":1723853232794,"duration":7516}},{"uid":"70aaef685fa62702","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2028//#testresult/70aaef685fa62702","status":"passed","time":{"start":1723766838356,"stop":1723766851186,"duration":12830}},{"uid":"e97150787c2c554a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2027//#testresult/e97150787c2c554a","status":"passed","time":{"start":1723680178226,"stop":1723680181264,"duration":3038}},{"uid":"283b897af03fd6f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2026//#testresult/283b897af03fd6f7","status":"passed","time":{"start":1723594048952,"stop":1723594054593,"duration":5641}},{"uid":"f4080af5565482cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2025//#testresult/f4080af5565482cc","status":"passed","time":{"start":1723507846533,"stop":1723507851130,"duration":4597}},{"uid":"28f4c1f31d7ab752","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2024//#testresult/28f4c1f31d7ab752","status":"passed","time":{"start":1723421361881,"stop":1723421364942,"duration":3061}},{"uid":"590f29c4e0860b4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2022//#testresult/590f29c4e0860b4d","status":"passed","time":{"start":1723335095618,"stop":1723335099163,"duration":3545}}]},"tags":[]},"source":"267e75f1967e76ed.json","parameterValues":["BedfordBoroughCouncil"]}