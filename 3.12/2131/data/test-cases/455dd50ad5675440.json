{"uid":"455dd50ad5675440","name":"Validate Council Output [CheshireWestAndChesterCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"64af12fdfc56ab0224e14523e9cf88ad","time":{"start":1727421649902,"stop":1727421661266,"duration":11364},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x55a8c510313a <unknown>\n#1 0x55a8c4de95e0 <unknown>\n#2 0x55a8c4e3f866 <unknown>\n#3 0x55a8c4e3d78d <unknown>\n#4 0x55a8c4e3b237 <unknown>\n#5 0x55a8c4e3a646 <unknown>\n#6 0x55a8c4e2da98 <unknown>\n#7 0x55a8c4e5db22 <unknown>\n#8 0x55a8c4e2d478 <unknown>\n#9 0x55a8c4e5dcee <unknown>\n#10 0x55a8c4e7cd7d <unknown>\n#11 0x55a8c4e5d8c3 <unknown>\n#12 0x55a8c4e2b6b3 <unknown>\n#13 0x55a8c4e2c68e <unknown>\n#14 0x55a8c50cdb3b <unknown>\n#15 0x55a8c50d1ac1 <unknown>\n#16 0x55a8c50ba335 <unknown>\n#17 0x55a8c50d2642 <unknown>\n#18 0x55a8c509f49f <unknown>\n#19 0x55a8c50f2038 <unknown>\n#20 0x55a8c50f2203 <unknown>\n#21 0x55a8c5101f8c <unknown>\n#22 0x7fa8adeeba94 <unknown>\n#23 0x7fa8adf78a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f3aa29b3d80>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f3ab5522cf0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:52: in parse_data\n    click_element(By.LINK_TEXT, \"Find your collection day\")\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:46: in click_element\n    element.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3ab58d47d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x55a8c5101f8c \\\\u003Cunknown>\\\\n#22 0x7fa8adeeba94 \\\\u003Cunknown>\\\\n#23 0x7fa8adf78a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\nE         (Session info: chrome=129.0.6668.58)\nE       Stacktrace:\nE       #0 0x55a8c510313a <unknown>\nE       #1 0x55a8c4de95e0 <unknown>\nE       #2 0x55a8c4e3f866 <unknown>\nE       #3 0x55a8c4e3d78d <unknown>\nE       #4 0x55a8c4e3b237 <unknown>\nE       #5 0x55a8c4e3a646 <unknown>\nE       #6 0x55a8c4e2da98 <unknown>\nE       #7 0x55a8c4e5db22 <unknown>\nE       #8 0x55a8c4e2d478 <unknown>\nE       #9 0x55a8c4e5dcee <unknown>\nE       #10 0x55a8c4e7cd7d <unknown>\nE       #11 0x55a8c4e5d8c3 <unknown>\nE       #12 0x55a8c4e2b6b3 <unknown>\nE       #13 0x55a8c4e2c68e <unknown>\nE       #14 0x55a8c50cdb3b <unknown>\nE       #15 0x55a8c50d1ac1 <unknown>\nE       #16 0x55a8c50ba335 <unknown>\nE       #17 0x55a8c50d2642 <unknown>\nE       #18 0x55a8c509f49f <unknown>\nE       #19 0x55a8c50f2038 <unknown>\nE       #20 0x55a8c50f2203 <unknown>\nE       #21 0x55a8c5101f8c <unknown>\nE       #22 0x7fa8adeeba94 <unknown>\nE       #23 0x7fa8adf78a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x55a8c510313a <unknown>\n#1 0x55a8c4de95e0 <unknown>\n#2 0x55a8c4e3f866 <unknown>\n#3 0x55a8c4e3d78d <unknown>\n#4 0x55a8c4e3b237 <unknown>\n#5 0x55a8c4e3a646 <unknown>\n#6 0x55a8c4e2da98 <unknown>\n#7 0x55a8c4e5db22 <unknown>\n#8 0x55a8c4e2d478 <unknown>\n#9 0x55a8c4e5dcee <unknown>\n#10 0x55a8c4e7cd7d <unknown>\n#11 0x55a8c4e5d8c3 <unknown>\n#12 0x55a8c4e2b6b3 <unknown>\n#13 0x55a8c4e2c68e <unknown>\n#14 0x55a8c50cdb3b <unknown>\n#15 0x55a8c50d1ac1 <unknown>\n#16 0x55a8c50ba335 <unknown>\n#17 0x55a8c50d2642 <unknown>\n#18 0x55a8c509f49f <unknown>\n#19 0x55a8c50f2038 <unknown>\n#20 0x55a8c50f2203 <unknown>\n#21 0x55a8c5101f8c <unknown>\n#22 0x7fa8adeeba94 <unknown>\n#23 0x7fa8adf78a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f3aa29b3d80>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f3ab5522cf0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:52: in parse_data\n    click_element(By.LINK_TEXT, \"Find your collection day\")\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:46: in click_element\n    element.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3ab58d47d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x55a8c5101f8c \\\\u003Cunknown>\\\\n#22 0x7fa8adeeba94 \\\\u003Cunknown>\\\\n#23 0x7fa8adf78a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\nE         (Session info: chrome=129.0.6668.58)\nE       Stacktrace:\nE       #0 0x55a8c510313a <unknown>\nE       #1 0x55a8c4de95e0 <unknown>\nE       #2 0x55a8c4e3f866 <unknown>\nE       #3 0x55a8c4e3d78d <unknown>\nE       #4 0x55a8c4e3b237 <unknown>\nE       #5 0x55a8c4e3a646 <unknown>\nE       #6 0x55a8c4e2da98 <unknown>\nE       #7 0x55a8c4e5db22 <unknown>\nE       #8 0x55a8c4e2d478 <unknown>\nE       #9 0x55a8c4e5dcee <unknown>\nE       #10 0x55a8c4e7cd7d <unknown>\nE       #11 0x55a8c4e5d8c3 <unknown>\nE       #12 0x55a8c4e2b6b3 <unknown>\nE       #13 0x55a8c4e2c68e <unknown>\nE       #14 0x55a8c50cdb3b <unknown>\nE       #15 0x55a8c50d1ac1 <unknown>\nE       #16 0x55a8c50ba335 <unknown>\nE       #17 0x55a8c50d2642 <unknown>\nE       #18 0x55a8c509f49f <unknown>\nE       #19 0x55a8c50f2038 <unknown>\nE       #20 0x55a8c50f2203 <unknown>\nE       #21 0x55a8c5101f8c <unknown>\nE       #22 0x7fa8adeeba94 <unknown>\nE       #23 0x7fa8adf78a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1727421649902,"stop":1727421649906,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1727421649906,"stop":1727421661266,"duration":11360},"status":"failed","statusMessage":"Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x55a8c510313a <unknown>\n#1 0x55a8c4de95e0 <unknown>\n#2 0x55a8c4e3f866 <unknown>\n#3 0x55a8c4e3d78d <unknown>\n#4 0x55a8c4e3b237 <unknown>\n#5 0x55a8c4e3a646 <unknown>\n#6 0x55a8c4e2da98 <unknown>\n#7 0x55a8c4e5db22 <unknown>\n#8 0x55a8c4e2d478 <unknown>\n#9 0x55a8c4e5dcee <unknown>\n#10 0x55a8c4e7cd7d <unknown>\n#11 0x55a8c4e5d8c3 <unknown>\n#12 0x55a8c4e2b6b3 <unknown>\n#13 0x55a8c4e2c68e <unknown>\n#14 0x55a8c50cdb3b <unknown>\n#15 0x55a8c50d1ac1 <unknown>\n#16 0x55a8c50ba335 <unknown>\n#17 0x55a8c50d2642 <unknown>\n#18 0x55a8c509f49f <unknown>\n#19 0x55a8c50f2038 <unknown>\n#20 0x55a8c50f2203 <unknown>\n#21 0x55a8c5101f8c <unknown>\n#22 0x7fa8adeeba94 <unknown>\n#23 0x7fa8adf78a34 __clone\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x55a8c510313a <unknown>\n#1 0x55a8c4de95e0 <unknown>\n#2 0x55a8c4e3f866 <unknown>\n#3 0x55a8c4e3d78d <unknown>\n#4 0x55a8c4e3b237 <unknown>\n#5 0x55a8c4e3a646 <unknown>\n#6 0x55a8c4e2da98 <unknown>\n#7 0x55a8c4e5db22 <unknown>\n#8 0x55a8c4e2d478 <unknown>\n#9 0x55a8c4e5dcee <unknown>\n#10 0x55a8c4e7cd7d <unknown>\n#11 0x55a8c4e5d8c3 <unknown>\n#12 0x55a8c4e2b6b3 <unknown>\n#13 0x55a8c4e2c68e <unknown>\n#14 0x55a8c50cdb3b <unknown>\n#15 0x55a8c50d1ac1 <unknown>\n#16 0x55a8c50ba335 <unknown>\n#17 0x55a8c50d2642 <unknown>\n#18 0x55a8c509f49f <unknown>\n#19 0x55a8c50f2038 <unknown>\n#20 0x55a8c50f2203 <unknown>\n#21 0x55a8c5101f8c <unknown>\n#22 0x7fa8adeeba94 <unknown>\n#23 0x7fa8adf78a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6d5776d91b1aece1","name":"log","source":"6d5776d91b1aece1.txt","type":"text/plain","size":1356},{"uid":"cffec85471b08c61","name":"stdout","source":"cffec85471b08c61.txt","type":"text/plain","size":56}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az585-852"},{"name":"thread","value":"2671-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CheshireWestAndChesterCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":140,"unknown":0,"total":154},"items":[{"uid":"ca2167517bc8d075","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2130//#testresult/ca2167517bc8d075","status":"passed","time":{"start":1727395291759,"stop":1727395321211,"duration":29452}},{"uid":"4e2c7c6781527994","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2129//#testresult/4e2c7c6781527994","status":"passed","time":{"start":1727308874646,"stop":1727308908863,"duration":34217}},{"uid":"233e374140ff2578","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2128//#testresult/233e374140ff2578","status":"passed","time":{"start":1727222473409,"stop":1727222521232,"duration":47823}},{"uid":"dcaa420aecab25ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2127//#testresult/dcaa420aecab25ee","status":"passed","time":{"start":1727136085819,"stop":1727136126991,"duration":41172}},{"uid":"91f63367b870c93f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2126//#testresult/91f63367b870c93f","status":"passed","time":{"start":1727049675766,"stop":1727049701434,"duration":25668}},{"uid":"666febb4b91b339b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2125//#testresult/666febb4b91b339b","status":"passed","time":{"start":1726963278736,"stop":1726963317006,"duration":38270}},{"uid":"94c97ae8bc44f1ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2124//#testresult/94c97ae8bc44f1ff","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5558b141886a <unknown>\n#1 0x5558b10e6e50 <unknown>\n#2 0x5558b1136644 <unknown>\n#3 0x5558b1136931 <unknown>\n#4 0x5558b117c534 <unknown>\n#5 0x5558b115b4bd <unknown>\n#6 0x5558b11799c6 <unknown>\n#7 0x5558b115b233 <unknown>\n#8 0x5558b1129093 <unknown>\n#9 0x5558b112a09e <unknown>\n#10 0x5558b13dfacb <unknown>\n#11 0x5558b13e3a81 <unknown>\n#12 0x5558b13cb695 <unknown>\n#13 0x5558b13e45f2 <unknown>\n#14 0x5558b13b086f <unknown>\n#15 0x5558b1407668 <unknown>\n#16 0x5558b1407832 <unknown>\n#17 0x5558b141765c <unknown>\n#18 0x7fe2d5d0aa94 <unknown>\n#19 0x7fe2d5d97a34 __clone","time":{"start":1726876872216,"stop":1726876949192,"duration":76976}},{"uid":"58d2e6c9cd2bcc92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2123//#testresult/58d2e6c9cd2bcc92","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55cd7c4e586a <unknown>\n#1 0x55cd7c1b3e50 <unknown>\n#2 0x55cd7c203644 <unknown>\n#3 0x55cd7c203931 <unknown>\n#4 0x55cd7c249534 <unknown>\n#5 0x55cd7c2284bd <unknown>\n#6 0x55cd7c2469c6 <unknown>\n#7 0x55cd7c228233 <unknown>\n#8 0x55cd7c1f6093 <unknown>\n#9 0x55cd7c1f709e <unknown>\n#10 0x55cd7c4acacb <unknown>\n#11 0x55cd7c4b0a81 <unknown>\n#12 0x55cd7c498695 <unknown>\n#13 0x55cd7c4b15f2 <unknown>\n#14 0x55cd7c47d86f <unknown>\n#15 0x55cd7c4d4668 <unknown>\n#16 0x55cd7c4d4832 <unknown>\n#17 0x55cd7c4e465c <unknown>\n#18 0x7f767c419a94 <unknown>\n#19 0x7f767c4a6a34 __clone","time":{"start":1726790467763,"stop":1726790542287,"duration":74524}},{"uid":"a5f400523893a620","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2122//#testresult/a5f400523893a620","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5579b393586a <unknown>\n#1 0x5579b3603e50 <unknown>\n#2 0x5579b3653644 <unknown>\n#3 0x5579b3653931 <unknown>\n#4 0x5579b3699534 <unknown>\n#5 0x5579b36784bd <unknown>\n#6 0x5579b36969c6 <unknown>\n#7 0x5579b3678233 <unknown>\n#8 0x5579b3646093 <unknown>\n#9 0x5579b364709e <unknown>\n#10 0x5579b38fcacb <unknown>\n#11 0x5579b3900a81 <unknown>\n#12 0x5579b38e8695 <unknown>\n#13 0x5579b39015f2 <unknown>\n#14 0x5579b38cd86f <unknown>\n#15 0x5579b3924668 <unknown>\n#16 0x5579b3924832 <unknown>\n#17 0x5579b393465c <unknown>\n#18 0x7f1dacf32a94 <unknown>\n#19 0x7f1dacfbfa34 __clone","time":{"start":1726704114268,"stop":1726704251628,"duration":137360}},{"uid":"3952982559899bd3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2121//#testresult/3952982559899bd3","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561a1749886a <unknown>\n#1 0x561a17166e50 <unknown>\n#2 0x561a171b6644 <unknown>\n#3 0x561a171b6931 <unknown>\n#4 0x561a171fc534 <unknown>\n#5 0x561a171db4bd <unknown>\n#6 0x561a171f99c6 <unknown>\n#7 0x561a171db233 <unknown>\n#8 0x561a171a9093 <unknown>\n#9 0x561a171aa09e <unknown>\n#10 0x561a1745facb <unknown>\n#11 0x561a17463a81 <unknown>\n#12 0x561a1744b695 <unknown>\n#13 0x561a174645f2 <unknown>\n#14 0x561a1743086f <unknown>\n#15 0x561a17487668 <unknown>\n#16 0x561a17487832 <unknown>\n#17 0x561a1749765c <unknown>\n#18 0x7f241e4f3a94 <unknown>\n#19 0x7f241e580a34 __clone","time":{"start":1726617680331,"stop":1726617757974,"duration":77643}},{"uid":"f1129e47a4784d94","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2120//#testresult/f1129e47a4784d94","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55746f0c686a <unknown>\n#1 0x55746ed94e50 <unknown>\n#2 0x55746ede4644 <unknown>\n#3 0x55746ede4931 <unknown>\n#4 0x55746ee2a534 <unknown>\n#5 0x55746ee094bd <unknown>\n#6 0x55746ee279c6 <unknown>\n#7 0x55746ee09233 <unknown>\n#8 0x55746edd7093 <unknown>\n#9 0x55746edd809e <unknown>\n#10 0x55746f08dacb <unknown>\n#11 0x55746f091a81 <unknown>\n#12 0x55746f079695 <unknown>\n#13 0x55746f0925f2 <unknown>\n#14 0x55746f05e86f <unknown>\n#15 0x55746f0b5668 <unknown>\n#16 0x55746f0b5832 <unknown>\n#17 0x55746f0c565c <unknown>\n#18 0x7f22e89afa94 <unknown>\n#19 0x7f22e8a3ca34 __clone","time":{"start":1726531272650,"stop":1726531342346,"duration":69696}},{"uid":"ecec1b06eef19127","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2116//#testresult/ecec1b06eef19127","status":"passed","time":{"start":1726444887162,"stop":1726444934501,"duration":47339}},{"uid":"d557fc34b8822a6a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2115//#testresult/d557fc34b8822a6a","status":"passed","time":{"start":1726358468662,"stop":1726358505557,"duration":36895}},{"uid":"bddaeae57a09cecf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2114//#testresult/bddaeae57a09cecf","status":"passed","time":{"start":1726272083564,"stop":1726272127939,"duration":44375}},{"uid":"8a5f471d08e9f897","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2113//#testresult/8a5f471d08e9f897","status":"passed","time":{"start":1726185684677,"stop":1726185706414,"duration":21737}},{"uid":"650b1e1f4ce6868","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2112//#testresult/650b1e1f4ce6868","status":"passed","time":{"start":1726099334122,"stop":1726099355234,"duration":21112}},{"uid":"13db48abd7f200ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2111//#testresult/13db48abd7f200ed","status":"passed","time":{"start":1726012877244,"stop":1726012923665,"duration":46421}},{"uid":"6f2ccde431417dea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2109//#testresult/6f2ccde431417dea","status":"passed","time":{"start":1725954755431,"stop":1725954772492,"duration":17061}},{"uid":"6133feefe5210c5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2107//#testresult/6133feefe5210c5b","status":"passed","time":{"start":1725926486287,"stop":1725926519089,"duration":32802}},{"uid":"3e68e2abf6fc370e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2095//#testresult/3e68e2abf6fc370e","status":"passed","time":{"start":1725840089799,"stop":1725840131942,"duration":42143}}]},"tags":[]},"source":"455dd50ad5675440.json","parameterValues":["CheshireWestAndChesterCouncil"]}