{"uid":"8a3d6bd285a5e839","name":"Validate Council Output [SwaleBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"af246d65f1eea891cf11ee497308965a","time":{"start":1718585042385,"stop":1718585042981,"duration":596},"status":"failed","statusMessage":"ConnectionAbortedError: Could not parse council website.","statusTrace":"fixturefunc = <function scrape_step at 0x7fd7139c5da0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd72473e150>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7fd712710ec0>, page = ''\nkwargs = {'council_module_str': 'SwaleBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [403]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n>           raise ConnectionAbortedError(\"Could not parse council website.\")\nE           ConnectionAbortedError: Could not parse council website.\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:34: ConnectionAbortedError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Could not parse council website.","statusTrace":"fixturefunc = <function scrape_step at 0x7fd7139c5da0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd72473e150>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7fd712710ec0>, page = ''\nkwargs = {'council_module_str': 'SwaleBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [403]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n>           raise ConnectionAbortedError(\"Could not parse council website.\")\nE           ConnectionAbortedError: Could not parse council website.\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:34: ConnectionAbortedError","steps":[{"name":"Given the council","time":{"start":1718585042385,"stop":1718585042385,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1718585042385,"stop":1718585042981,"duration":596},"status":"failed","statusMessage":"Could not parse council website.","statusTrace":"ConnectionAbortedError: Could not parse council website.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f886fb1d879a75a7","name":"stdout","source":"f886fb1d879a75a7.txt","type":"text/plain","size":46}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az736-826"},{"name":"thread","value":"2685-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwaleBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":39,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":39},"items":[{"uid":"6fa50b5ca850dbd7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1944//#testresult/6fa50b5ca850dbd7","status":"failed","statusDetails":"ConnectionAbortedError: Could not parse council website.","time":{"start":1718498749563,"stop":1718498750372,"duration":809}},{"uid":"1f552ddbba22f785","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1943//#testresult/1f552ddbba22f785","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1718412211935,"stop":1718412214241,"duration":2306}},{"uid":"3ee71f1c32de14a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1942//#testresult/3ee71f1c32de14a6","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1718325897848,"stop":1718325900370,"duration":2522}},{"uid":"cee4b6cbe6cead56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1939//#testresult/cee4b6cbe6cead56","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1718239557704,"stop":1718239558961,"duration":1257}},{"uid":"127983166faef4f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1938//#testresult/127983166faef4f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1718153105960,"stop":1718153107559,"duration":1599}},{"uid":"9b0ba21e829332e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1937//#testresult/9b0ba21e829332e5","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1718066854844,"stop":1718066856504,"duration":1660}},{"uid":"6cc39c9c067d7419","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1936//#testresult/6cc39c9c067d7419","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717980194725,"stop":1717980196491,"duration":1766}},{"uid":"b51a42b86b9f954b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1934//#testresult/b51a42b86b9f954b","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717893771892,"stop":1717893773735,"duration":1843}},{"uid":"ff864f66c55d56ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1933//#testresult/ff864f66c55d56ff","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717807549358,"stop":1717807551839,"duration":2481}},{"uid":"5393bb4e41ceb24c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1932//#testresult/5393bb4e41ceb24c","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717720944066,"stop":1717720945910,"duration":1844}},{"uid":"333f6609db03b04c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1927//#testresult/333f6609db03b04c","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717634454051,"stop":1717634456344,"duration":2293}},{"uid":"9a620de2070b9883","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1924//#testresult/9a620de2070b9883","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717548256217,"stop":1717548258898,"duration":2681}},{"uid":"bd96e0649167fa0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1923//#testresult/bd96e0649167fa0d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717461838916,"stop":1717461840857,"duration":1941}},{"uid":"d270a5368b1d0b5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1921//#testresult/d270a5368b1d0b5c","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717375495789,"stop":1717375498366,"duration":2577}},{"uid":"ea8dd0f40048033a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1911//#testresult/ea8dd0f40048033a","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717317034434,"stop":1717317036460,"duration":2026}},{"uid":"c7fcb62ef4d6aaa6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1908//#testresult/c7fcb62ef4d6aaa6","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717289122202,"stop":1717289124584,"duration":2382}},{"uid":"78c4993ecdd0ebe2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1905//#testresult/78c4993ecdd0ebe2","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717202810306,"stop":1717202812066,"duration":1760}},{"uid":"40aebdd34b95ee4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1904//#testresult/40aebdd34b95ee4","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717116166273,"stop":1717116168049,"duration":1776}},{"uid":"5c0068e0842be7b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1903//#testresult/5c0068e0842be7b4","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1717029931363,"stop":1717029934010,"duration":2647}},{"uid":"74a1f0c1d61a2a9e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1898//#testresult/74a1f0c1d61a2a9e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716943622913,"stop":1716943624811,"duration":1898}}]},"tags":[]},"source":"8a3d6bd285a5e839.json","parameterValues":["SwaleBoroughCouncil"]}