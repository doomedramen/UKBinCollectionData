{"uid":"eabd9a38cab87678","name":"Validate Council Output [DorsetCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a29918af3a8369f89aef642df00be81d","time":{"start":1717979465908,"stop":1717979467199,"duration":1291},"status":"failed","statusMessage":"UnboundLocalError: cannot access local variable 'ordered_data' where it is not associated with a value","statusTrace":"fixturefunc = <function scrape_step at 0x7f195fb27ec0>\nrequest = <FixtureRequest for <Function test_scenario_outline[DorsetCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f1960c337a0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:68: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <DorsetCouncil.CouncilClass object at 0x7f1960c36ea0>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': None, ...}\ndata = {'bins': []}, collections = []\nsoup = \n<!DOCTYPE html>\n\n<html class=\"ltr\" dir=\"ltr\" lang=\"en-GB\">\n<head>\n<title>My local information - Dorset Council</title...y.CustomDialogs = {enabled: false};\n\n</script><script>\n</script>\n<!-- inject:js -->\n<!-- endinject -->\n</body>\n</html>\n\nresults = []\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        collections = []\n    \n        # Parse the page and find all the result boxes\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n        results = soup.find_all(\"li\", {\"class\": \"resultListItem\"})\n    \n        # If the result box has a wanted string in, we can use it. Check the contents of each box and find the\n        # desired text and dates\n        for r in results:\n            if \"Your next\" in r.text:\n                if type(r.contents[10]) is element.NavigableString:\n                    bin_text = r.contents[10].text.split(\" \")[2].title() + \" bin\"\n                    bin_date = datetime.strptime(\n                        remove_ordinal_indicator_from_date_string(\n                            r.contents[11].text.strip()\n                        ),\n                        \"%A %d %B %Y\",\n                    )\n                else:\n                    bin_text = r.contents[11].text.split(\" \")[2].title() + \" bin\"\n                    bin_date = datetime.strptime(\n                        remove_ordinal_indicator_from_date_string(\n                            r.contents[12].text.strip()\n                        ),\n                        \"%A %d %B %Y\",\n                    )\n    \n                if bin_date.date() >= datetime.now().date():\n                    collections.append((bin_text, bin_date))\n    \n                # Sort the text and date elements by date\n                ordered_data = sorted(collections, key=lambda x: x[1])\n    \n        # Put the elements into the dictionary\n>       for item in ordered_data:\nE       UnboundLocalError: cannot access local variable 'ordered_data' where it is not associated with a value\n\nuk_bin_collection/uk_bin_collection/councils/DorsetCouncil.py:51: UnboundLocalError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"UnboundLocalError: cannot access local variable 'ordered_data' where it is not associated with a value","statusTrace":"fixturefunc = <function scrape_step at 0x7f195fb27ec0>\nrequest = <FixtureRequest for <Function test_scenario_outline[DorsetCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f1960c337a0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:68: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <DorsetCouncil.CouncilClass object at 0x7f1960c36ea0>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': None, ...}\ndata = {'bins': []}, collections = []\nsoup = \n<!DOCTYPE html>\n\n<html class=\"ltr\" dir=\"ltr\" lang=\"en-GB\">\n<head>\n<title>My local information - Dorset Council</title...y.CustomDialogs = {enabled: false};\n\n</script><script>\n</script>\n<!-- inject:js -->\n<!-- endinject -->\n</body>\n</html>\n\nresults = []\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        collections = []\n    \n        # Parse the page and find all the result boxes\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n        results = soup.find_all(\"li\", {\"class\": \"resultListItem\"})\n    \n        # If the result box has a wanted string in, we can use it. Check the contents of each box and find the\n        # desired text and dates\n        for r in results:\n            if \"Your next\" in r.text:\n                if type(r.contents[10]) is element.NavigableString:\n                    bin_text = r.contents[10].text.split(\" \")[2].title() + \" bin\"\n                    bin_date = datetime.strptime(\n                        remove_ordinal_indicator_from_date_string(\n                            r.contents[11].text.strip()\n                        ),\n                        \"%A %d %B %Y\",\n                    )\n                else:\n                    bin_text = r.contents[11].text.split(\" \")[2].title() + \" bin\"\n                    bin_date = datetime.strptime(\n                        remove_ordinal_indicator_from_date_string(\n                            r.contents[12].text.strip()\n                        ),\n                        \"%A %d %B %Y\",\n                    )\n    \n                if bin_date.date() >= datetime.now().date():\n                    collections.append((bin_text, bin_date))\n    \n                # Sort the text and date elements by date\n                ordered_data = sorted(collections, key=lambda x: x[1])\n    \n        # Put the elements into the dictionary\n>       for item in ordered_data:\nE       UnboundLocalError: cannot access local variable 'ordered_data' where it is not associated with a value\n\nuk_bin_collection/uk_bin_collection/councils/DorsetCouncil.py:51: UnboundLocalError","steps":[{"name":"Given the council","time":{"start":1717979465908,"stop":1717979465908,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1717979465908,"stop":1717979467199,"duration":1291},"status":"failed","statusMessage":"cannot access local variable 'ordered_data' where it is not associated with a value","statusTrace":"UnboundLocalError: cannot access local variable 'ordered_data' where it is not associated with a value\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ff54b28d613e8160","name":"stdout","source":"ff54b28d613e8160.txt","type":"text/plain","size":40}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az564-656"},{"name":"thread","value":"2687-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"DorsetCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":27,"unknown":0,"total":32},"items":[{"uid":"e644064e44d6b6a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1934//#testresult/e644064e44d6b6a1","status":"failed","statusDetails":"UnboundLocalError: cannot access local variable 'ordered_data' where it is not associated with a value","time":{"start":1717893198797,"stop":1717893200209,"duration":1412}},{"uid":"89c292c499708a22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1933//#testresult/89c292c499708a22","status":"failed","statusDetails":"UnboundLocalError: cannot access local variable 'ordered_data' where it is not associated with a value","time":{"start":1717806683538,"stop":1717806685396,"duration":1858}},{"uid":"ebba2e9457ad665a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1932//#testresult/ebba2e9457ad665a","status":"failed","statusDetails":"UnboundLocalError: cannot access local variable 'ordered_data' where it is not associated with a value","time":{"start":1717720255280,"stop":1717720256424,"duration":1144}},{"uid":"26bd20c89a381287","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1927//#testresult/26bd20c89a381287","status":"failed","statusDetails":"UnboundLocalError: cannot access local variable 'ordered_data' where it is not associated with a value","time":{"start":1717633786050,"stop":1717633787203,"duration":1153}},{"uid":"9f5f1fa5b75dab1b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1924//#testresult/9f5f1fa5b75dab1b","status":"passed","time":{"start":1717547359590,"stop":1717547361215,"duration":1625}},{"uid":"49137638d5ac25c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1923//#testresult/49137638d5ac25c6","status":"passed","time":{"start":1717460962983,"stop":1717460964811,"duration":1828}},{"uid":"78a3960e30dd9655","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1921//#testresult/78a3960e30dd9655","status":"passed","time":{"start":1717374636373,"stop":1717374637721,"duration":1348}},{"uid":"e3b08cc06d054f0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1911//#testresult/e3b08cc06d054f0e","status":"passed","time":{"start":1717316348780,"stop":1717316349795,"duration":1015}},{"uid":"7ed387976402d9a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1908//#testresult/7ed387976402d9a6","status":"passed","time":{"start":1717288316252,"stop":1717288317787,"duration":1535}},{"uid":"7a39470662fe6f98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1905//#testresult/7a39470662fe6f98","status":"passed","time":{"start":1717201897136,"stop":1717201899022,"duration":1886}},{"uid":"2532a259e5005270","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1904//#testresult/2532a259e5005270","status":"passed","time":{"start":1717115313705,"stop":1717115315550,"duration":1845}},{"uid":"99e27b67f5dc598b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1903//#testresult/99e27b67f5dc598b","status":"passed","time":{"start":1717029033534,"stop":1717029039037,"duration":5503}},{"uid":"11a4491c3a3b600f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1898//#testresult/11a4491c3a3b600f","status":"passed","time":{"start":1716942679830,"stop":1716942705410,"duration":25580}},{"uid":"3ba7063b13959352","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1893//#testresult/3ba7063b13959352","status":"passed","time":{"start":1716856113615,"stop":1716856115534,"duration":1919}},{"uid":"7516d68ef5b94039","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1883//#testresult/7516d68ef5b94039","status":"passed","time":{"start":1716769767656,"stop":1716769769467,"duration":1811}},{"uid":"21eecc066434dffe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1881//#testresult/21eecc066434dffe","status":"passed","time":{"start":1716753147613,"stop":1716753150040,"duration":2427}},{"uid":"66e1ba3a578b769a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1877//#testresult/66e1ba3a578b769a","status":"passed","time":{"start":1716743283639,"stop":1716743285389,"duration":1750}},{"uid":"582bc7cc16b57fbe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1871//#testresult/582bc7cc16b57fbe","status":"passed","time":{"start":1716709888806,"stop":1716709890327,"duration":1521}},{"uid":"7abd0ec928bee60c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1866//#testresult/7abd0ec928bee60c","status":"passed","time":{"start":1716705214632,"stop":1716705215734,"duration":1102}},{"uid":"f003ef56ebcc358d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1865//#testresult/f003ef56ebcc358d","status":"passed","time":{"start":1716683566009,"stop":1716683566917,"duration":908}}]},"tags":[]},"source":"eabd9a38cab87678.json","parameterValues":["DorsetCouncil"]}