{"uid":"d3b19b6bd7fee79c","name":"Validate Council Output [MidSussexDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a89b66947aa74789814d9628a2d7e666","time":{"start":1717979854612,"stop":1717979855366,"duration":754},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7fd717b80040>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd72b0fd910>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7fd7172236e0>\npage = ''\nkwargs = {'headless': True, 'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:62: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7fd717b80040>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd72b0fd910>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7fd7172236e0>\npage = ''\nkwargs = {'headless': True, 'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:62: AttributeError","steps":[{"name":"Given the council","time":{"start":1717979854612,"stop":1717979854613,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1717979854614,"stop":1717979855366,"duration":752},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all_next'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all_next'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6128a415ab5c8551","name":"stdout","source":"6128a415ab5c8551.txt","type":"text/plain","size":51}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az564-656"},{"name":"thread","value":"2684-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MidSussexDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":32,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":32},"items":[{"uid":"16efa4f99c71d3b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1934//#testresult/16efa4f99c71d3b1","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717893361184,"stop":1717893361883,"duration":699}},{"uid":"5a77bd69050cd0df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1933//#testresult/5a77bd69050cd0df","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717807200368,"stop":1717807201055,"duration":687}},{"uid":"ec75e939643f6697","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1932//#testresult/ec75e939643f6697","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717720617994,"stop":1717720618734,"duration":740}},{"uid":"2104c43556b5bdee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1927//#testresult/2104c43556b5bdee","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717634133049,"stop":1717634133977,"duration":928}},{"uid":"3167e793143a3b48","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1924//#testresult/3167e793143a3b48","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717547830931,"stop":1717547831995,"duration":1064}},{"uid":"b3aa692576614318","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1923//#testresult/b3aa692576614318","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717461418361,"stop":1717461419017,"duration":656}},{"uid":"a356ede37a798f73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1921//#testresult/a356ede37a798f73","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717374970504,"stop":1717374971152,"duration":648}},{"uid":"64e48547042eb27d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1911//#testresult/64e48547042eb27d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717316483886,"stop":1717316484439,"duration":553}},{"uid":"89abbf0b9101783e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1908//#testresult/89abbf0b9101783e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717288712236,"stop":1717288713038,"duration":802}},{"uid":"d827b0e17397ed5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1905//#testresult/d827b0e17397ed5c","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717202431862,"stop":1717202432728,"duration":866}},{"uid":"2370928690bf1e11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1904//#testresult/2370928690bf1e11","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717115773589,"stop":1717115774344,"duration":755}},{"uid":"5e88a6bad5017b88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1903//#testresult/5e88a6bad5017b88","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1717029509658,"stop":1717029510463,"duration":805}},{"uid":"45d838cf5e068286","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1898//#testresult/45d838cf5e068286","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1716943188278,"stop":1716943188940,"duration":662}},{"uid":"d77afa0dd6612f8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1893//#testresult/d77afa0dd6612f8f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1716856580770,"stop":1716856581606,"duration":836}},{"uid":"4cbde4a7d14b8495","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1883//#testresult/4cbde4a7d14b8495","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1716770201567,"stop":1716770202301,"duration":734}},{"uid":"17627a6d6c5bf4b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1881//#testresult/17627a6d6c5bf4b3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1716753292673,"stop":1716753293381,"duration":708}},{"uid":"af087ec561e4b582","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1877//#testresult/af087ec561e4b582","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1716743480579,"stop":1716743481098,"duration":519}},{"uid":"2326f2e3362e8678","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1871//#testresult/2326f2e3362e8678","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1716709996695,"stop":1716709997181,"duration":486}},{"uid":"7b23f0a22b9b360","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1866//#testresult/7b23f0a22b9b360","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1716705361437,"stop":1716705362365,"duration":928}},{"uid":"d7ac6a09af7fbf2d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1865//#testresult/d7ac6a09af7fbf2d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1716683798072,"stop":1716683798675,"duration":603}}]},"tags":[]},"source":"d3b19b6bd7fee79c.json","parameterValues":["MidSussexDistrictCouncil"]}