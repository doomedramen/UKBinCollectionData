{"uid":"8e384fb15e8d29ae","name":"Validate Council Output [MaldonDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"53c5720a05c261e2bad5904bb33e19b7","time":{"start":1725841315634,"stop":1725841346345,"duration":30711},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f45dcd1b060>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f45eb8680e0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f45dc167350>, page = ''\nkwargs = {'council_module_str': 'MaldonDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f45dcd1b060>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f45eb8680e0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f45dc167350>, page = ''\nkwargs = {'council_module_str': 'MaldonDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council","time":{"start":1725841315634,"stop":1725841315637,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725841315638,"stop":1725841346345,"duration":30707},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"23b9b3039dd11459","name":"stdout","source":"23b9b3039dd11459.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az520-565"},{"name":"thread","value":"2822-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":125,"unknown":0,"total":132},"items":[{"uid":"e38a4a98b4ed8bdc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2093//#testresult/e38a4a98b4ed8bdc","status":"passed","time":{"start":1725754797141,"stop":1725754798226,"duration":1085}},{"uid":"b0b57a2d7e25db92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2092//#testresult/b0b57a2d7e25db92","status":"passed","time":{"start":1725668366299,"stop":1725668367332,"duration":1033}},{"uid":"551220e81e1d8bb0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2088//#testresult/551220e81e1d8bb0","status":"passed","time":{"start":1725581919142,"stop":1725581928356,"duration":9214}},{"uid":"8ea827ac0fe27e70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2086//#testresult/8ea827ac0fe27e70","status":"passed","time":{"start":1725569723809,"stop":1725569725092,"duration":1283}},{"uid":"b581f5b35e21504f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2083//#testresult/b581f5b35e21504f","status":"passed","time":{"start":1725495541252,"stop":1725495557066,"duration":15814}},{"uid":"a553eb2641db5f35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/a553eb2641db5f35","status":"passed","time":{"start":1725430704525,"stop":1725430705785,"duration":1260}},{"uid":"35201c310a3e101","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/35201c310a3e101","status":"passed","time":{"start":1725409209281,"stop":1725409220077,"duration":10796}},{"uid":"f752ec42ccb537f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2080//#testresult/f752ec42ccb537f2","status":"passed","time":{"start":1725404208335,"stop":1725404209367,"duration":1032}},{"uid":"a8c57ee61181b762","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2073//#testresult/a8c57ee61181b762","status":"passed","time":{"start":1725385184632,"stop":1725385185809,"duration":1177}},{"uid":"daba6ac0a9fbcc6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2070//#testresult/daba6ac0a9fbcc6","status":"passed","time":{"start":1725347326719,"stop":1725347328142,"duration":1423}},{"uid":"9fcd4b27796be1ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2069//#testresult/9fcd4b27796be1ec","status":"passed","time":{"start":1725322674733,"stop":1725322689173,"duration":14440}},{"uid":"3e0847b948469541","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2068//#testresult/3e0847b948469541","status":"passed","time":{"start":1725316540570,"stop":1725316541698,"duration":1128}},{"uid":"9f786c0c76069a9e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2066//#testresult/9f786c0c76069a9e","status":"passed","time":{"start":1725313322380,"stop":1725313323922,"duration":1542}},{"uid":"7606cce537dd7188","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2064//#testresult/7606cce537dd7188","status":"passed","time":{"start":1725311139516,"stop":1725311140558,"duration":1042}},{"uid":"a3018e3e1e6ddbd5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2060//#testresult/a3018e3e1e6ddbd5","status":"passed","time":{"start":1725308414442,"stop":1725308415657,"duration":1215}},{"uid":"3e4ba6c6c2aac8da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2059//#testresult/3e4ba6c6c2aac8da","status":"passed","time":{"start":1725308292172,"stop":1725308293137,"duration":965}},{"uid":"4f688966cd42d1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2054//#testresult/4f688966cd42d1f","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1725235999502,"stop":1725236030993,"duration":31491}},{"uid":"5c969ba6f61e0d79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2053//#testresult/5c969ba6f61e0d79","status":"passed","time":{"start":1725149626362,"stop":1725149635824,"duration":9462}},{"uid":"dc92ef7d2df189ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2052//#testresult/dc92ef7d2df189ff","status":"passed","time":{"start":1725063572228,"stop":1725063581279,"duration":9051}},{"uid":"7ccdfc9b501e6b3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2051//#testresult/7ccdfc9b501e6b3a","status":"passed","time":{"start":1724976781008,"stop":1724976812687,"duration":31679}}]},"tags":[]},"source":"8e384fb15e8d29ae.json","parameterValues":["MaldonDistrictCouncil"]}