{"uid":"6ec112c48beb77a3","name":"Validate Council Output [NottinghamCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d4f72ded7db85dcd7cecf3a5b5fd36e6","time":{"start":1722471484326,"stop":1722471551619,"duration":67293},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f25d6cb6e80>\nrequest = <FixtureRequest for <Function test_scenario_outline[NottinghamCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f25d814bf50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/NottinghamCityCouncil.py:21: in parse_data\n    json_data = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f25eaa17380>\ns = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\\r\\n<htm...source you are looking for, and it cannot be displayed.</h3>\\r\\n </fieldset></div>\\r\\n</div>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f25d6cb6e80>\nrequest = <FixtureRequest for <Function test_scenario_outline[NottinghamCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f25d814bf50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/NottinghamCityCouncil.py:21: in parse_data\n    json_data = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f25eaa17380>\ns = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\\r\\n<htm...source you are looking for, and it cannot be displayed.</h3>\\r\\n </fieldset></div>\\r\\n</div>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council","time":{"start":1722471484327,"stop":1722471484327,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1722471484327,"stop":1722471551619,"duration":67292},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"77c59ad8f13464be","name":"stdout","source":"77c59ad8f13464be.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1208-145"},{"name":"thread","value":"2829-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NottinghamCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":82,"unknown":0,"total":83},"items":[{"uid":"2ef8260e1cc99eab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1998//#testresult/2ef8260e1cc99eab","status":"passed","time":{"start":1722385203297,"stop":1722385207229,"duration":3932}},{"uid":"e38be3f53feb49ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1997//#testresult/e38be3f53feb49ed","status":"passed","time":{"start":1722298663342,"stop":1722298671613,"duration":8271}},{"uid":"3c58a13aded098af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1996//#testresult/3c58a13aded098af","status":"passed","time":{"start":1722212448034,"stop":1722212454761,"duration":6727}},{"uid":"41391c2e80617983","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1995//#testresult/41391c2e80617983","status":"passed","time":{"start":1722125876903,"stop":1722125880192,"duration":3289}},{"uid":"e9716a821b7759d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1994//#testresult/e9716a821b7759d4","status":"passed","time":{"start":1722039786128,"stop":1722039791327,"duration":5199}},{"uid":"2d6412d441595182","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1993//#testresult/2d6412d441595182","status":"passed","time":{"start":1721953153363,"stop":1721953157513,"duration":4150}},{"uid":"f2de66c5a7aaea6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1992//#testresult/f2de66c5a7aaea6","status":"passed","time":{"start":1721866767772,"stop":1721866771417,"duration":3645}},{"uid":"84759ba88004f89b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1991//#testresult/84759ba88004f89b","status":"passed","time":{"start":1721780496522,"stop":1721780499314,"duration":2792}},{"uid":"4f0a58161339480e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1990//#testresult/4f0a58161339480e","status":"passed","time":{"start":1721693848190,"stop":1721693850382,"duration":2192}},{"uid":"a083b0a95edeb709","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1989//#testresult/a083b0a95edeb709","status":"passed","time":{"start":1721607475947,"stop":1721607480746,"duration":4799}},{"uid":"642e96ed027ffc36","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1988//#testresult/642e96ed027ffc36","status":"passed","time":{"start":1721521197629,"stop":1721521202459,"duration":4830}},{"uid":"3087ce4e1916a8be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1987//#testresult/3087ce4e1916a8be","status":"passed","time":{"start":1721434696590,"stop":1721434714632,"duration":18042}},{"uid":"ddca9ccf6f87bc55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1986//#testresult/ddca9ccf6f87bc55","status":"passed","time":{"start":1721372825253,"stop":1721372828167,"duration":2914}},{"uid":"1e47c1fcbc887758","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1985//#testresult/1e47c1fcbc887758","status":"passed","time":{"start":1721263857522,"stop":1721263859903,"duration":2381}},{"uid":"68cb669d5ff9f765","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1984//#testresult/68cb669d5ff9f765","status":"passed","time":{"start":1721177248644,"stop":1721177250360,"duration":1716}},{"uid":"78a6b282936c0766","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1983//#testresult/78a6b282936c0766","status":"passed","time":{"start":1721090746058,"stop":1721090747745,"duration":1687}},{"uid":"1b20d85815fc7827","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1982//#testresult/1b20d85815fc7827","status":"passed","time":{"start":1721004614467,"stop":1721004616213,"duration":1746}},{"uid":"44be3f9bc6d21001","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1981//#testresult/44be3f9bc6d21001","status":"passed","time":{"start":1720918133663,"stop":1720918135493,"duration":1830}},{"uid":"a49f75a40be53d89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1980//#testresult/a49f75a40be53d89","status":"passed","time":{"start":1720831678999,"stop":1720831681812,"duration":2813}},{"uid":"904543eca4ad0096","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1979//#testresult/904543eca4ad0096","status":"passed","time":{"start":1720745209261,"stop":1720745211499,"duration":2238}}]},"tags":[]},"source":"6ec112c48beb77a3.json","parameterValues":["NottinghamCityCouncil"]}