{"uid":"7bd2594f7313119a","name":"Validate Council Output [NorthNorthamptonshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"92c0f84b87cb9703264ef6f7bea152ee","time":{"start":1726273222899,"stop":1726273253376,"duration":30477},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7f763f821f80>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f76523370e0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7f763e9299d0>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', today = 1726273222000\ndateforurl = '2024-09-14', dateforurl2 = '2024-10-26'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7f763f821f80>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f76523370e0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7f763e9299d0>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', today = 1726273222000\ndateforurl = '2024-09-14', dateforurl2 = '2024-10-26'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","steps":[{"name":"Given the council","time":{"start":1726273222899,"stop":1726273222900,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1726273222900,"stop":1726273253376,"duration":30476},"status":"failed","statusMessage":"No bin data found for provided UPRN..","statusTrace":"ValueError: No bin data found for provided UPRN..\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"340afd641aaea730","name":"stdout","source":"340afd641aaea730.txt","type":"text/plain","size":55}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1113-992"},{"name":"thread","value":"2750-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":129,"unknown":0,"total":138},"items":[{"uid":"f431037e1beb360c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2113//#testresult/f431037e1beb360c","status":"passed","time":{"start":1726186798855,"stop":1726186805575,"duration":6720}},{"uid":"f1d234178504350d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2112//#testresult/f1d234178504350d","status":"passed","time":{"start":1726100442270,"stop":1726100443382,"duration":1112}},{"uid":"e90d2fe0a086e7fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2111//#testresult/e90d2fe0a086e7fe","status":"passed","time":{"start":1726014032725,"stop":1726014033532,"duration":807}},{"uid":"cebf74610be32215","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2109//#testresult/cebf74610be32215","status":"passed","time":{"start":1725955872932,"stop":1725955873739,"duration":807}},{"uid":"a931d430cff4d45c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2107//#testresult/a931d430cff4d45c","status":"passed","time":{"start":1725927518222,"stop":1725927518838,"duration":616}},{"uid":"6fc5029ef459f113","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2095//#testresult/6fc5029ef459f113","status":"passed","time":{"start":1725841332467,"stop":1725841333770,"duration":1303}},{"uid":"ad6729ac11fe60cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2093//#testresult/ad6729ac11fe60cc","status":"passed","time":{"start":1725754801604,"stop":1725754802449,"duration":845}},{"uid":"31adc1333e970b75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2092//#testresult/31adc1333e970b75","status":"passed","time":{"start":1725668356411,"stop":1725668371467,"duration":15056}},{"uid":"bd9a1b1b59714c53","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2088//#testresult/bd9a1b1b59714c53","status":"passed","time":{"start":1725581909788,"stop":1725581918059,"duration":8271}},{"uid":"632afde4136a5b03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2086//#testresult/632afde4136a5b03","status":"passed","time":{"start":1725569734291,"stop":1725569735493,"duration":1202}},{"uid":"871f7ff20e693e69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2083//#testresult/871f7ff20e693e69","status":"passed","time":{"start":1725495624982,"stop":1725495626012,"duration":1030}},{"uid":"8e2eda80d5fc6fed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/8e2eda80d5fc6fed","status":"passed","time":{"start":1725430719764,"stop":1725430720554,"duration":790}},{"uid":"351a2d9d7e7d8be1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/351a2d9d7e7d8be1","status":"passed","time":{"start":1725409231012,"stop":1725409237810,"duration":6798}},{"uid":"6faf2f65d7a8e110","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2080//#testresult/6faf2f65d7a8e110","status":"passed","time":{"start":1725404215265,"stop":1725404216077,"duration":812}},{"uid":"ae9942738e971ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2073//#testresult/ae9942738e971ad","status":"passed","time":{"start":1725385191436,"stop":1725385192536,"duration":1100}},{"uid":"cfabef6842ab744a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2070//#testresult/cfabef6842ab744a","status":"passed","time":{"start":1725347378667,"stop":1725347380128,"duration":1461}},{"uid":"bd4fe88ad5369444","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2069//#testresult/bd4fe88ad5369444","status":"passed","time":{"start":1725322779104,"stop":1725322787535,"duration":8431}},{"uid":"6d3de91abcb01e20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2068//#testresult/6d3de91abcb01e20","status":"passed","time":{"start":1725316583653,"stop":1725316584242,"duration":589}},{"uid":"91a9a9adeb415116","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2066//#testresult/91a9a9adeb415116","status":"passed","time":{"start":1725313352520,"stop":1725313353411,"duration":891}},{"uid":"1bb5e6dd60ac468b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2064//#testresult/1bb5e6dd60ac468b","status":"passed","time":{"start":1725311160503,"stop":1725311161100,"duration":597}}]},"tags":[]},"source":"7bd2594f7313119a.json","parameterValues":["NorthNorthamptonshireCouncil"]}