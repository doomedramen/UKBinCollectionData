{"uid":"65f538b2b1120674","name":"Validate Council Output [WestBerkshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"01e9aabe7c605fabcf00c630ea7946b4","time":{"start":1716625455608,"stop":1716625462433,"duration":6825},"status":"failed","statusMessage":"ValueError: time data '' does not match format '%d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6486b94c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestBerkshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6485bea6f0>, 'council': 'WestBerkshireCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestBerkshireCouncil.py:93: in parse_data\n    food_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/_strptime.py:554: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = '', format = '%d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data '' does not match format '%d %B'\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/_strptime.py:333: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data '' does not match format '%d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6486b94c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestBerkshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6485bea6f0>, 'council': 'WestBerkshireCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestBerkshireCouncil.py:93: in parse_data\n    food_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/_strptime.py:554: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = '', format = '%d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data '' does not match format '%d %B'\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/_strptime.py:333: ValueError","steps":[{"name":"Given the council: WestBerkshireCouncil","time":{"start":1716625455608,"stop":1716625455609,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestBerkshireCouncil","time":{"start":1716625455609,"stop":1716625462433,"duration":6824},"status":"failed","statusMessage":"time data '' does not match format '%d %B'","statusTrace":"ValueError: time data '' does not match format '%d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8d8dadac31359bdb","name":"stdout","source":"8d8dadac31359bdb.txt","type":"text/plain","size":62}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az730-86"},{"name":"thread","value":"2750-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestBerkshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":12},"items":[{"uid":"ea5b5f1982e7865","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1862//#testresult/ea5b5f1982e7865","status":"passed","time":{"start":1716597496123,"stop":1716597507671,"duration":11548}},{"uid":"d63fa30cb4522153","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1856//#testresult/d63fa30cb4522153","status":"passed","time":{"start":1716511235157,"stop":1716511245238,"duration":10081}},{"uid":"9a61bc8c96932c7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1855//#testresult/9a61bc8c96932c7b","status":"passed","time":{"start":1716424927225,"stop":1716424939419,"duration":12194}},{"uid":"ee98014807bec79b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1854//#testresult/ee98014807bec79b","status":"passed","time":{"start":1716338386181,"stop":1716338397114,"duration":10933}},{"uid":"637bffed88a7e779","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1853//#testresult/637bffed88a7e779","status":"passed","time":{"start":1716252057581,"stop":1716252073510,"duration":15929}},{"uid":"f91a975262ec7ebc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1852//#testresult/f91a975262ec7ebc","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55563ec0beca <unknown>\n#1 0x55563e8f545c <unknown>\n#2 0x55563e9415b5 <unknown>\n#3 0x55563e941671 <unknown>\n#4 0x55563e985f14 <unknown>\n#5 0x55563e9644dd <unknown>\n#6 0x55563e9832cc <unknown>\n#7 0x55563e964253 <unknown>\n#8 0x55563e9341c7 <unknown>\n#9 0x55563e934b3e <unknown>\n#10 0x55563ebd230b <unknown>\n#11 0x55563ebd63b7 <unknown>\n#12 0x55563ebbee3e <unknown>\n#13 0x55563ebd6e82 <unknown>\n#14 0x55563eba37df <unknown>\n#15 0x55563ebfb1b8 <unknown>\n#16 0x55563ebfb38b <unknown>\n#17 0x55563ec0affc <unknown>\n#18 0x7f5715f2fac3 <unknown>","time":{"start":1716165649828,"stop":1716165674418,"duration":24590}},{"uid":"fba2eeb4be17d8fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1851//#testresult/fba2eeb4be17d8fe","status":"failed","statusDetails":"ValueError: time data '' does not match format '%d %B'","time":{"start":1716155418803,"stop":1716155430284,"duration":11481}},{"uid":"e6c66d59f29f4922","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1849//#testresult/e6c66d59f29f4922","status":"failed","statusDetails":"ValueError: time data '' does not match format '%d %B'","time":{"start":1716152878185,"stop":1716152903239,"duration":25054}},{"uid":"a23aeb716436f4e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1846//#testresult/a23aeb716436f4e5","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x56391bccfeca <unknown>\n#1 0x56391b9b945c <unknown>\n#2 0x56391b9ee6f8 <unknown>\n#3 0x56391b9ea63b <unknown>\n#4 0x56391ba34b19 <unknown>\n#5 0x56391ba28253 <unknown>\n#6 0x56391b9f81c7 <unknown>\n#7 0x56391b9f8b3e <unknown>\n#8 0x56391bc9630b <unknown>\n#9 0x56391bc9a3b7 <unknown>\n#10 0x56391bc82e3e <unknown>\n#11 0x56391bc9ae82 <unknown>\n#12 0x56391bc677df <unknown>\n#13 0x56391bcbf1b8 <unknown>\n#14 0x56391bcbf38b <unknown>\n#15 0x56391bcceffc <unknown>\n#16 0x7fd47d094ac3 <unknown>","time":{"start":1716079410852,"stop":1716079420017,"duration":9165}},{"uid":"37607b22612a3d74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1842//#testresult/37607b22612a3d74","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x556330371eca <unknown>\n#1 0x55633005b45c <unknown>\n#2 0x5563300906f8 <unknown>\n#3 0x55633008c63b <unknown>\n#4 0x5563300d6b19 <unknown>\n#5 0x5563300ca253 <unknown>\n#6 0x55633009a1c7 <unknown>\n#7 0x55633009ab3e <unknown>\n#8 0x55633033830b <unknown>\n#9 0x55633033c3b7 <unknown>\n#10 0x556330324e3e <unknown>\n#11 0x55633033ce82 <unknown>\n#12 0x5563303097df <unknown>\n#13 0x5563303611b8 <unknown>\n#14 0x55633036138b <unknown>\n#15 0x556330370ffc <unknown>\n#16 0x7fa13f494ac3 <unknown>","time":{"start":1715992669781,"stop":1715992670858,"duration":1077}},{"uid":"c9a5606577990aa3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1839//#testresult/c9a5606577990aa3","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x560e50b14eca <unknown>\n#1 0x560e507fe45c <unknown>\n#2 0x560e508336f8 <unknown>\n#3 0x560e5082f63b <unknown>\n#4 0x560e50879b19 <unknown>\n#5 0x560e5086d253 <unknown>\n#6 0x560e5083d1c7 <unknown>\n#7 0x560e5083db3e <unknown>\n#8 0x560e50adb30b <unknown>\n#9 0x560e50adf3b7 <unknown>\n#10 0x560e50ac7e3e <unknown>\n#11 0x560e50adfe82 <unknown>\n#12 0x560e50aac7df <unknown>\n#13 0x560e50b041b8 <unknown>\n#14 0x560e50b0438b <unknown>\n#15 0x560e50b13ffc <unknown>\n#16 0x7f728b494ac3 <unknown>","time":{"start":1715983714177,"stop":1715983720336,"duration":6159}}]},"tags":[]},"source":"65f538b2b1120674.json","parameterValues":["WestBerkshireCouncil"]}