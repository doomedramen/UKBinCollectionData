{"uid":"b32cdc4559213f75","name":"Validate Council Output [SouthKestevenDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2a7001e5e46e0082211a729ea73e7cc2","time":{"start":1717202513653,"stop":1717202773843,"duration":260190},"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x5579655cae9a <unknown>\n#1 0x5579652b445c <unknown>\n#2 0x5579652abfd0 <unknown>\n#3 0x55796529bb32 <unknown>\n#4 0x55796529d162 <unknown>\n#5 0x55796529bded <unknown>\n#6 0x55796529b503 <unknown>\n#7 0x55796529b3f5 <unknown>\n#8 0x557965299336 <unknown>\n#9 0x55796529983a <unknown>\n#10 0x5579652b6ea7 <unknown>\n#11 0x557965342ed5 <unknown>\n#12 0x5579653234b2 <unknown>\n#13 0x5579653422cc <unknown>\n#14 0x557965323253 <unknown>\n#15 0x5579652f31c7 <unknown>\n#16 0x5579652f3b3e <unknown>\n#17 0x5579655912db <unknown>\n#18 0x557965595387 <unknown>\n#19 0x55796557de0e <unknown>\n#20 0x557965595e52 <unknown>\n#21 0x5579655627af <unknown>\n#22 0x5579655ba188 <unknown>\n#23 0x5579655ba35b <unknown>\n#24 0x5579655c9fcc <unknown>\n#25 0x7f3f64e08ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f713f37fec0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthKestevenDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f71403ddee0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/SouthKestevenDistrictCouncil.py:75: in parse_data\n    driver.get(page)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f713e6be480>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x5579655ba35b \\\\u003Cunknown>\\\\n#24 0x5579655c9fcc \\\\u003Cunknown>\\\\n#25 0x7f3f64e08ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x5579655cae9a <unknown>\nE       #1 0x5579652b445c <unknown>\nE       #2 0x5579652abfd0 <unknown>\nE       #3 0x55796529bb32 <unknown>\nE       #4 0x55796529d162 <unknown>\nE       #5 0x55796529bded <unknown>\nE       #6 0x55796529b503 <unknown>\nE       #7 0x55796529b3f5 <unknown>\nE       #8 0x557965299336 <unknown>\nE       #9 0x55796529983a <unknown>\nE       #10 0x5579652b6ea7 <unknown>\nE       #11 0x557965342ed5 <unknown>\nE       #12 0x5579653234b2 <unknown>\nE       #13 0x5579653422cc <unknown>\nE       #14 0x557965323253 <unknown>\nE       #15 0x5579652f31c7 <unknown>\nE       #16 0x5579652f3b3e <unknown>\nE       #17 0x5579655912db <unknown>\nE       #18 0x557965595387 <unknown>\nE       #19 0x55796557de0e <unknown>\nE       #20 0x557965595e52 <unknown>\nE       #21 0x5579655627af <unknown>\nE       #22 0x5579655ba188 <unknown>\nE       #23 0x5579655ba35b <unknown>\nE       #24 0x5579655c9fcc <unknown>\nE       #25 0x7f3f64e08ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x5579655cae9a <unknown>\n#1 0x5579652b445c <unknown>\n#2 0x5579652abfd0 <unknown>\n#3 0x55796529bb32 <unknown>\n#4 0x55796529d162 <unknown>\n#5 0x55796529bded <unknown>\n#6 0x55796529b503 <unknown>\n#7 0x55796529b3f5 <unknown>\n#8 0x557965299336 <unknown>\n#9 0x55796529983a <unknown>\n#10 0x5579652b6ea7 <unknown>\n#11 0x557965342ed5 <unknown>\n#12 0x5579653234b2 <unknown>\n#13 0x5579653422cc <unknown>\n#14 0x557965323253 <unknown>\n#15 0x5579652f31c7 <unknown>\n#16 0x5579652f3b3e <unknown>\n#17 0x5579655912db <unknown>\n#18 0x557965595387 <unknown>\n#19 0x55796557de0e <unknown>\n#20 0x557965595e52 <unknown>\n#21 0x5579655627af <unknown>\n#22 0x5579655ba188 <unknown>\n#23 0x5579655ba35b <unknown>\n#24 0x5579655c9fcc <unknown>\n#25 0x7f3f64e08ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f713f37fec0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthKestevenDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f71403ddee0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/SouthKestevenDistrictCouncil.py:75: in parse_data\n    driver.get(page)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f713e6be480>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x5579655ba35b \\\\u003Cunknown>\\\\n#24 0x5579655c9fcc \\\\u003Cunknown>\\\\n#25 0x7f3f64e08ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x5579655cae9a <unknown>\nE       #1 0x5579652b445c <unknown>\nE       #2 0x5579652abfd0 <unknown>\nE       #3 0x55796529bb32 <unknown>\nE       #4 0x55796529d162 <unknown>\nE       #5 0x55796529bded <unknown>\nE       #6 0x55796529b503 <unknown>\nE       #7 0x55796529b3f5 <unknown>\nE       #8 0x557965299336 <unknown>\nE       #9 0x55796529983a <unknown>\nE       #10 0x5579652b6ea7 <unknown>\nE       #11 0x557965342ed5 <unknown>\nE       #12 0x5579653234b2 <unknown>\nE       #13 0x5579653422cc <unknown>\nE       #14 0x557965323253 <unknown>\nE       #15 0x5579652f31c7 <unknown>\nE       #16 0x5579652f3b3e <unknown>\nE       #17 0x5579655912db <unknown>\nE       #18 0x557965595387 <unknown>\nE       #19 0x55796557de0e <unknown>\nE       #20 0x557965595e52 <unknown>\nE       #21 0x5579655627af <unknown>\nE       #22 0x5579655ba188 <unknown>\nE       #23 0x5579655ba35b <unknown>\nE       #24 0x5579655c9fcc <unknown>\nE       #25 0x7f3f64e08ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","steps":[{"name":"Given the council","time":{"start":1717202513653,"stop":1717202513654,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1717202513654,"stop":1717202773843,"duration":260189},"status":"failed","statusMessage":"Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x5579655cae9a <unknown>\n#1 0x5579652b445c <unknown>\n#2 0x5579652abfd0 <unknown>\n#3 0x55796529bb32 <unknown>\n#4 0x55796529d162 <unknown>\n#5 0x55796529bded <unknown>\n#6 0x55796529b503 <unknown>\n#7 0x55796529b3f5 <unknown>\n#8 0x557965299336 <unknown>\n#9 0x55796529983a <unknown>\n#10 0x5579652b6ea7 <unknown>\n#11 0x557965342ed5 <unknown>\n#12 0x5579653234b2 <unknown>\n#13 0x5579653422cc <unknown>\n#14 0x557965323253 <unknown>\n#15 0x5579652f31c7 <unknown>\n#16 0x5579652f3b3e <unknown>\n#17 0x5579655912db <unknown>\n#18 0x557965595387 <unknown>\n#19 0x55796557de0e <unknown>\n#20 0x557965595e52 <unknown>\n#21 0x5579655627af <unknown>\n#22 0x5579655ba188 <unknown>\n#23 0x5579655ba35b <unknown>\n#24 0x5579655c9fcc <unknown>\n#25 0x7f3f64e08ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x5579655cae9a <unknown>\n#1 0x5579652b445c <unknown>\n#2 0x5579652abfd0 <unknown>\n#3 0x55796529bb32 <unknown>\n#4 0x55796529d162 <unknown>\n#5 0x55796529bded <unknown>\n#6 0x55796529b503 <unknown>\n#7 0x55796529b3f5 <unknown>\n#8 0x557965299336 <unknown>\n#9 0x55796529983a <unknown>\n#10 0x5579652b6ea7 <unknown>\n#11 0x557965342ed5 <unknown>\n#12 0x5579653234b2 <unknown>\n#13 0x5579653422cc <unknown>\n#14 0x557965323253 <unknown>\n#15 0x5579652f31c7 <unknown>\n#16 0x5579652f3b3e <unknown>\n#17 0x5579655912db <unknown>\n#18 0x557965595387 <unknown>\n#19 0x55796557de0e <unknown>\n#20 0x557965595e52 <unknown>\n#21 0x5579655627af <unknown>\n#22 0x5579655ba188 <unknown>\n#23 0x5579655ba35b <unknown>\n#24 0x5579655c9fcc <unknown>\n#25 0x7f3f64e08ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"856c292500dc407c","name":"stdout","source":"856c292500dc407c.txt","type":"text/plain","size":939}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1501-651"},{"name":"thread","value":"2633-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthKestevenDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"9120d33a7f2f8775","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1904//#testresult/9120d33a7f2f8775","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x559e95714e9a <unknown>\n#1 0x559e953fe45c <unknown>\n#2 0x559e953f5fd0 <unknown>\n#3 0x559e953e5b32 <unknown>\n#4 0x559e953e7162 <unknown>\n#5 0x559e953e5ded <unknown>\n#6 0x559e953e5503 <unknown>\n#7 0x559e953e53f5 <unknown>\n#8 0x559e953e3336 <unknown>\n#9 0x559e953e383a <unknown>\n#10 0x559e95400ea7 <unknown>\n#11 0x559e9548ced5 <unknown>\n#12 0x559e9546d4b2 <unknown>\n#13 0x559e9548c2cc <unknown>\n#14 0x559e9546d253 <unknown>\n#15 0x559e9543d1c7 <unknown>\n#16 0x559e9543db3e <unknown>\n#17 0x559e956db2db <unknown>\n#18 0x559e956df387 <unknown>\n#19 0x559e956c7e0e <unknown>\n#20 0x559e956dfe52 <unknown>\n#21 0x559e956ac7af <unknown>\n#22 0x559e95704188 <unknown>\n#23 0x559e9570435b <unknown>\n#24 0x559e95713fcc <unknown>\n#25 0x7f4c5e6ecac3 <unknown>","time":{"start":1717116005981,"stop":1717116153119,"duration":147138}},{"uid":"264d6b8a9d0bea59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1903//#testresult/264d6b8a9d0bea59","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55c8c70f7e9a <unknown>\n#1 0x55c8c6de145c <unknown>\n#2 0x55c8c6dd8fd0 <unknown>\n#3 0x55c8c6dc8b32 <unknown>\n#4 0x55c8c6dca162 <unknown>\n#5 0x55c8c6dc8ded <unknown>\n#6 0x55c8c6dc8503 <unknown>\n#7 0x55c8c6dc83f5 <unknown>\n#8 0x55c8c6dc6336 <unknown>\n#9 0x55c8c6dc683a <unknown>\n#10 0x55c8c6de3ea7 <unknown>\n#11 0x55c8c6e6fed5 <unknown>\n#12 0x55c8c6e504b2 <unknown>\n#13 0x55c8c6e6f2cc <unknown>\n#14 0x55c8c6e50253 <unknown>\n#15 0x55c8c6e201c7 <unknown>\n#16 0x55c8c6e20b3e <unknown>\n#17 0x55c8c70be2db <unknown>\n#18 0x55c8c70c2387 <unknown>\n#19 0x55c8c70aae0e <unknown>\n#20 0x55c8c70c2e52 <unknown>\n#21 0x55c8c708f7af <unknown>\n#22 0x55c8c70e7188 <unknown>\n#23 0x55c8c70e735b <unknown>\n#24 0x55c8c70f6fcc <unknown>\n#25 0x7fcb0e1beac3 <unknown>","time":{"start":1717029624240,"stop":1717029889719,"duration":265479}},{"uid":"b8205138a518a359","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1898//#testresult/b8205138a518a359","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x558a1b5fbe9a <unknown>\n#1 0x558a1b2e545c <unknown>\n#2 0x558a1b2dcfd0 <unknown>\n#3 0x558a1b2ccb32 <unknown>\n#4 0x558a1b2ce162 <unknown>\n#5 0x558a1b2ccded <unknown>\n#6 0x558a1b2cc503 <unknown>\n#7 0x558a1b2cc3f5 <unknown>\n#8 0x558a1b2ca336 <unknown>\n#9 0x558a1b2ca83a <unknown>\n#10 0x558a1b2e7ea7 <unknown>\n#11 0x558a1b373ed5 <unknown>\n#12 0x558a1b3544b2 <unknown>\n#13 0x558a1b3732cc <unknown>\n#14 0x558a1b354253 <unknown>\n#15 0x558a1b3241c7 <unknown>\n#16 0x558a1b324b3e <unknown>\n#17 0x558a1b5c22db <unknown>\n#18 0x558a1b5c6387 <unknown>\n#19 0x558a1b5aee0e <unknown>\n#20 0x558a1b5c6e52 <unknown>\n#21 0x558a1b5937af <unknown>\n#22 0x558a1b5eb188 <unknown>\n#23 0x558a1b5eb35b <unknown>\n#24 0x558a1b5fafcc <unknown>\n#25 0x7f5fff0b8ac3 <unknown>","time":{"start":1716943464761,"stop":1716943616349,"duration":151588}},{"uid":"8c1f452564a31475","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1896//#testresult/8c1f452564a31475","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x562560d53e9a <unknown>\n#1 0x562560a3d45c <unknown>\n#2 0x562560a34fd0 <unknown>\n#3 0x562560a24b32 <unknown>\n#4 0x562560a26162 <unknown>\n#5 0x562560a24ded <unknown>\n#6 0x562560a24503 <unknown>\n#7 0x562560a243f5 <unknown>\n#8 0x562560a22336 <unknown>\n#9 0x562560a2283a <unknown>\n#10 0x562560a3fea7 <unknown>\n#11 0x562560acbed5 <unknown>\n#12 0x562560aac4b2 <unknown>\n#13 0x562560acb2cc <unknown>\n#14 0x562560aac253 <unknown>\n#15 0x562560a7c1c7 <unknown>\n#16 0x562560a7cb3e <unknown>\n#17 0x562560d1a2db <unknown>\n#18 0x562560d1e387 <unknown>\n#19 0x562560d06e0e <unknown>\n#20 0x562560d1ee52 <unknown>\n#21 0x562560ceb7af <unknown>\n#22 0x562560d43188 <unknown>\n#23 0x562560d4335b <unknown>\n#24 0x562560d52fcc <unknown>\n#25 0x7f7296bf9ac3 <unknown>","time":{"start":1716930948045,"stop":1716931118114,"duration":170069}}]},"tags":[]},"source":"b32cdc4559213f75.json","parameterValues":["SouthKestevenDistrictCouncil"]}