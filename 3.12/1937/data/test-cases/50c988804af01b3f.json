{"uid":"50c988804af01b3f","name":"Validate Council Output [SunderlandCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1a7ab024f39f9d5f723a6a4b1c23ccbf","time":{"start":1718066706673,"stop":1718066854758,"duration":148085},"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556af5fc4e9a <unknown>\n#1 0x556af5cae45c <unknown>\n#2 0x556af5ca5fd0 <unknown>\n#3 0x556af5c95b32 <unknown>\n#4 0x556af5c97162 <unknown>\n#5 0x556af5c95ded <unknown>\n#6 0x556af5c95503 <unknown>\n#7 0x556af5c953f5 <unknown>\n#8 0x556af5c93336 <unknown>\n#9 0x556af5c9383a <unknown>\n#10 0x556af5cb0ea7 <unknown>\n#11 0x556af5d3ced5 <unknown>\n#12 0x556af5d1d4b2 <unknown>\n#13 0x556af5d3c2cc <unknown>\n#14 0x556af5d1d253 <unknown>\n#15 0x556af5ced1c7 <unknown>\n#16 0x556af5cedb3e <unknown>\n#17 0x556af5f8b2db <unknown>\n#18 0x556af5f8f387 <unknown>\n#19 0x556af5f77e0e <unknown>\n#20 0x556af5f8fe52 <unknown>\n#21 0x556af5f5c7af <unknown>\n#22 0x556af5fb4188 <unknown>\n#23 0x556af5fb435b <unknown>\n#24 0x556af5fc3fcc <unknown>\n#25 0x7fbf36576ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f4f8a0844a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f4f8b019550>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:33: in parse_data\n    driver.get(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4f89423590>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x556af5fb435b \\\\u003Cunknown>\\\\n#24 0x556af5fc3fcc \\\\u003Cunknown>\\\\n#25 0x7fbf36576ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x556af5fc4e9a <unknown>\nE       #1 0x556af5cae45c <unknown>\nE       #2 0x556af5ca5fd0 <unknown>\nE       #3 0x556af5c95b32 <unknown>\nE       #4 0x556af5c97162 <unknown>\nE       #5 0x556af5c95ded <unknown>\nE       #6 0x556af5c95503 <unknown>\nE       #7 0x556af5c953f5 <unknown>\nE       #8 0x556af5c93336 <unknown>\nE       #9 0x556af5c9383a <unknown>\nE       #10 0x556af5cb0ea7 <unknown>\nE       #11 0x556af5d3ced5 <unknown>\nE       #12 0x556af5d1d4b2 <unknown>\nE       #13 0x556af5d3c2cc <unknown>\nE       #14 0x556af5d1d253 <unknown>\nE       #15 0x556af5ced1c7 <unknown>\nE       #16 0x556af5cedb3e <unknown>\nE       #17 0x556af5f8b2db <unknown>\nE       #18 0x556af5f8f387 <unknown>\nE       #19 0x556af5f77e0e <unknown>\nE       #20 0x556af5f8fe52 <unknown>\nE       #21 0x556af5f5c7af <unknown>\nE       #22 0x556af5fb4188 <unknown>\nE       #23 0x556af5fb435b <unknown>\nE       #24 0x556af5fc3fcc <unknown>\nE       #25 0x7fbf36576ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556af5fc4e9a <unknown>\n#1 0x556af5cae45c <unknown>\n#2 0x556af5ca5fd0 <unknown>\n#3 0x556af5c95b32 <unknown>\n#4 0x556af5c97162 <unknown>\n#5 0x556af5c95ded <unknown>\n#6 0x556af5c95503 <unknown>\n#7 0x556af5c953f5 <unknown>\n#8 0x556af5c93336 <unknown>\n#9 0x556af5c9383a <unknown>\n#10 0x556af5cb0ea7 <unknown>\n#11 0x556af5d3ced5 <unknown>\n#12 0x556af5d1d4b2 <unknown>\n#13 0x556af5d3c2cc <unknown>\n#14 0x556af5d1d253 <unknown>\n#15 0x556af5ced1c7 <unknown>\n#16 0x556af5cedb3e <unknown>\n#17 0x556af5f8b2db <unknown>\n#18 0x556af5f8f387 <unknown>\n#19 0x556af5f77e0e <unknown>\n#20 0x556af5f8fe52 <unknown>\n#21 0x556af5f5c7af <unknown>\n#22 0x556af5fb4188 <unknown>\n#23 0x556af5fb435b <unknown>\n#24 0x556af5fc3fcc <unknown>\n#25 0x7fbf36576ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f4f8a0844a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f4f8b019550>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:33: in parse_data\n    driver.get(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4f89423590>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x556af5fb435b \\\\u003Cunknown>\\\\n#24 0x556af5fc3fcc \\\\u003Cunknown>\\\\n#25 0x7fbf36576ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x556af5fc4e9a <unknown>\nE       #1 0x556af5cae45c <unknown>\nE       #2 0x556af5ca5fd0 <unknown>\nE       #3 0x556af5c95b32 <unknown>\nE       #4 0x556af5c97162 <unknown>\nE       #5 0x556af5c95ded <unknown>\nE       #6 0x556af5c95503 <unknown>\nE       #7 0x556af5c953f5 <unknown>\nE       #8 0x556af5c93336 <unknown>\nE       #9 0x556af5c9383a <unknown>\nE       #10 0x556af5cb0ea7 <unknown>\nE       #11 0x556af5d3ced5 <unknown>\nE       #12 0x556af5d1d4b2 <unknown>\nE       #13 0x556af5d3c2cc <unknown>\nE       #14 0x556af5d1d253 <unknown>\nE       #15 0x556af5ced1c7 <unknown>\nE       #16 0x556af5cedb3e <unknown>\nE       #17 0x556af5f8b2db <unknown>\nE       #18 0x556af5f8f387 <unknown>\nE       #19 0x556af5f77e0e <unknown>\nE       #20 0x556af5f8fe52 <unknown>\nE       #21 0x556af5f5c7af <unknown>\nE       #22 0x556af5fb4188 <unknown>\nE       #23 0x556af5fb435b <unknown>\nE       #24 0x556af5fc3fcc <unknown>\nE       #25 0x7fbf36576ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","steps":[{"name":"Given the council","time":{"start":1718066706673,"stop":1718066706674,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1718066706674,"stop":1718066854758,"duration":148084},"status":"failed","statusMessage":"Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556af5fc4e9a <unknown>\n#1 0x556af5cae45c <unknown>\n#2 0x556af5ca5fd0 <unknown>\n#3 0x556af5c95b32 <unknown>\n#4 0x556af5c97162 <unknown>\n#5 0x556af5c95ded <unknown>\n#6 0x556af5c95503 <unknown>\n#7 0x556af5c953f5 <unknown>\n#8 0x556af5c93336 <unknown>\n#9 0x556af5c9383a <unknown>\n#10 0x556af5cb0ea7 <unknown>\n#11 0x556af5d3ced5 <unknown>\n#12 0x556af5d1d4b2 <unknown>\n#13 0x556af5d3c2cc <unknown>\n#14 0x556af5d1d253 <unknown>\n#15 0x556af5ced1c7 <unknown>\n#16 0x556af5cedb3e <unknown>\n#17 0x556af5f8b2db <unknown>\n#18 0x556af5f8f387 <unknown>\n#19 0x556af5f77e0e <unknown>\n#20 0x556af5f8fe52 <unknown>\n#21 0x556af5f5c7af <unknown>\n#22 0x556af5fb4188 <unknown>\n#23 0x556af5fb435b <unknown>\n#24 0x556af5fc3fcc <unknown>\n#25 0x7fbf36576ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556af5fc4e9a <unknown>\n#1 0x556af5cae45c <unknown>\n#2 0x556af5ca5fd0 <unknown>\n#3 0x556af5c95b32 <unknown>\n#4 0x556af5c97162 <unknown>\n#5 0x556af5c95ded <unknown>\n#6 0x556af5c95503 <unknown>\n#7 0x556af5c953f5 <unknown>\n#8 0x556af5c93336 <unknown>\n#9 0x556af5c9383a <unknown>\n#10 0x556af5cb0ea7 <unknown>\n#11 0x556af5d3ced5 <unknown>\n#12 0x556af5d1d4b2 <unknown>\n#13 0x556af5d3c2cc <unknown>\n#14 0x556af5d1d253 <unknown>\n#15 0x556af5ced1c7 <unknown>\n#16 0x556af5cedb3e <unknown>\n#17 0x556af5f8b2db <unknown>\n#18 0x556af5f8f387 <unknown>\n#19 0x556af5f77e0e <unknown>\n#20 0x556af5f8fe52 <unknown>\n#21 0x556af5f5c7af <unknown>\n#22 0x556af5fb4188 <unknown>\n#23 0x556af5fb435b <unknown>\n#24 0x556af5fc3fcc <unknown>\n#25 0x7fbf36576ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"36f586f056c2dcdd","name":"stdout","source":"36f586f056c2dcdd.txt","type":"text/plain","size":932}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1490-828"},{"name":"thread","value":"2675-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SunderlandCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":33,"unknown":0,"total":34},"items":[{"uid":"53d244013c8610e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1936//#testresult/53d244013c8610e4","status":"passed","time":{"start":1717980200315,"stop":1717980220529,"duration":20214}},{"uid":"3d4ae498f6983a6d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1934//#testresult/3d4ae498f6983a6d","status":"passed","time":{"start":1717893641164,"stop":1717893771890,"duration":130726}},{"uid":"69b6e5a111eee763","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1933//#testresult/69b6e5a111eee763","status":"passed","time":{"start":1717807369689,"stop":1717807549356,"duration":179667}},{"uid":"620df18591ada466","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1932//#testresult/620df18591ada466","status":"passed","time":{"start":1717720920160,"stop":1717720944063,"duration":23903}},{"uid":"8624b54f11cda3e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1927//#testresult/8624b54f11cda3e","status":"passed","time":{"start":1717634309639,"stop":1717634454047,"duration":144408}},{"uid":"c705bbbd4f477cf9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1924//#testresult/c705bbbd4f477cf9","status":"passed","time":{"start":1717548131323,"stop":1717548256215,"duration":124892}},{"uid":"f679b333a01809f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1923//#testresult/f679b333a01809f9","status":"passed","time":{"start":1717461687616,"stop":1717461838912,"duration":151296}},{"uid":"56c5bae7be7d4429","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1921//#testresult/56c5bae7be7d4429","status":"passed","time":{"start":1717375471396,"stop":1717375495786,"duration":24390}},{"uid":"26e456167d4b84c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1911//#testresult/26e456167d4b84c4","status":"passed","time":{"start":1717316761070,"stop":1717317034431,"duration":273361}},{"uid":"8f4b5c89c5020d3d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1908//#testresult/8f4b5c89c5020d3d","status":"passed","time":{"start":1717288982074,"stop":1717289122199,"duration":140125}},{"uid":"1b0324958e6b4fdc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1905//#testresult/1b0324958e6b4fdc","status":"passed","time":{"start":1717202779615,"stop":1717202810302,"duration":30687}},{"uid":"44984c07f6ac37b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1904//#testresult/44984c07f6ac37b1","status":"passed","time":{"start":1717116024995,"stop":1717116166270,"duration":141275}},{"uid":"c9904d2770fdfac7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1903//#testresult/c9904d2770fdfac7","status":"passed","time":{"start":1717029762625,"stop":1717029931360,"duration":168735}},{"uid":"179c9d2859c7e9ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1898//#testresult/179c9d2859c7e9ec","status":"passed","time":{"start":1716943466358,"stop":1716943622911,"duration":156553}},{"uid":"792885a27be5ef15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1893//#testresult/792885a27be5ef15","status":"passed","time":{"start":1716856825721,"stop":1716856860810,"duration":35089}},{"uid":"78c922b8c412f9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1883//#testresult/78c922b8c412f9d","status":"passed","time":{"start":1716770410191,"stop":1716770437854,"duration":27663}},{"uid":"891507ce25c13dc4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1881//#testresult/891507ce25c13dc4","status":"passed","time":{"start":1716753596229,"stop":1716753615209,"duration":18980}},{"uid":"ba501ce522eeefc4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1877//#testresult/ba501ce522eeefc4","status":"passed","time":{"start":1716743764234,"stop":1716743774286,"duration":10052}},{"uid":"443c7b521af0a14c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1871//#testresult/443c7b521af0a14c","status":"passed","time":{"start":1716710155116,"stop":1716710284229,"duration":129113}},{"uid":"e2dd7313e6032eab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1866//#testresult/e2dd7313e6032eab","status":"passed","time":{"start":1716705632790,"stop":1716705651244,"duration":18454}}]},"tags":[]},"source":"50c988804af01b3f.json","parameterValues":["SunderlandCityCouncil"]}