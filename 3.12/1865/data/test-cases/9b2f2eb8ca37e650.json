{"uid":"9b2f2eb8ca37e650","name":"Validate Council Output [MiltonKeynesCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a25fa98d985c8b6a2dc69b98eb9662d1","time":{"start":1716683798719,"stop":1716683799078,"duration":359},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6f2a67c900>\nrequest = <FixtureRequest for <Function test_scenario_outline[MiltonKeynesCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6f2a6263f0>, 'council': 'MiltonKeynesCityCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:68: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MiltonKeynesCityCouncil.CouncilClass object at 0x7f6f297334a0>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': 'Fullers Slade', ...}\ndata = {'bins': []}, estate = 'Fullers Slade'\nsoup = <!DOCTYPE html>\n\n<html dir=\"ltr\" lang=\"en\">\n<head>\n<meta charset=\"utf-8\"/>\n<script async=\"\" src=\"https://www.googletag...0BG0dNTlK_ofnJcPosnSkjCAzC7KXiLa2MGGE90nvkFG20sn_BMHQUhRRg3zBRXbsBVKm_z1DKDYn3k-EwegXw50wQk\"></script>\n</body>\n</html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n    \n        # Get the estate from the UPRN field\n        estate = kwargs.get(\"uprn\")\n    \n        # Parse the council's website\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Get a list of lists of estates and their collection days, then check for a match on estate name\n        collection_days = [\n            item.text.strip().replace(\"\\xa0\", \" \").split(\" - \")\n            for item in soup.find(\n                \"div\",\n                {\n                    \"class\": \"field field--name-localgov-paragraphs field--type-entity-reference-revisions field--label-hidden field__items\"\n                },\n>           ).find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/MiltonKeynesCityCouncil.py:32: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6f2a67c900>\nrequest = <FixtureRequest for <Function test_scenario_outline[MiltonKeynesCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6f2a6263f0>, 'council': 'MiltonKeynesCityCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:68: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MiltonKeynesCityCouncil.CouncilClass object at 0x7f6f297334a0>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': 'Fullers Slade', ...}\ndata = {'bins': []}, estate = 'Fullers Slade'\nsoup = <!DOCTYPE html>\n\n<html dir=\"ltr\" lang=\"en\">\n<head>\n<meta charset=\"utf-8\"/>\n<script async=\"\" src=\"https://www.googletag...0BG0dNTlK_ofnJcPosnSkjCAzC7KXiLa2MGGE90nvkFG20sn_BMHQUhRRg3zBRXbsBVKm_z1DKDYn3k-EwegXw50wQk\"></script>\n</body>\n</html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n    \n        # Get the estate from the UPRN field\n        estate = kwargs.get(\"uprn\")\n    \n        # Parse the council's website\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Get a list of lists of estates and their collection days, then check for a match on estate name\n        collection_days = [\n            item.text.strip().replace(\"\\xa0\", \" \").split(\" - \")\n            for item in soup.find(\n                \"div\",\n                {\n                    \"class\": \"field field--name-localgov-paragraphs field--type-entity-reference-revisions field--label-hidden field__items\"\n                },\n>           ).find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/MiltonKeynesCityCouncil.py:32: AttributeError","steps":[{"name":"Given the council: MiltonKeynesCityCouncil","time":{"start":1716683798720,"stop":1716683798720,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MiltonKeynesCityCouncil","time":{"start":1716683798720,"stop":1716683799078,"duration":358},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1024-967"},{"name":"thread","value":"2797-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MiltonKeynesCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":12},"items":[{"uid":"2b74b3bd478c16c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1863//#testresult/2b74b3bd478c16c7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716625073749,"stop":1716625074127,"duration":378}},{"uid":"4216ff105c2c7739","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1862//#testresult/4216ff105c2c7739","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716597335769,"stop":1716597336701,"duration":932}},{"uid":"df421f74e338f23e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1856//#testresult/df421f74e338f23e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716510663932,"stop":1716510667554,"duration":3622}},{"uid":"3993ddd32b803200","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1855//#testresult/3993ddd32b803200","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716424304634,"stop":1716424306934,"duration":2300}},{"uid":"d9397632b76333de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1854//#testresult/d9397632b76333de","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716338104797,"stop":1716338105004,"duration":207}},{"uid":"fd27c0dc141d0fb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1853//#testresult/fd27c0dc141d0fb3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716251446402,"stop":1716251448276,"duration":1874}},{"uid":"ef2df020644e7ad4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1852//#testresult/ef2df020644e7ad4","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716165366008,"stop":1716165366356,"duration":348}},{"uid":"fc57bb7b6d696a40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1851//#testresult/fc57bb7b6d696a40","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716155112891,"stop":1716155113665,"duration":774}},{"uid":"a35bb6eb160ca7a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1846//#testresult/a35bb6eb160ca7a5","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716078837093,"stop":1716078838976,"duration":1883}},{"uid":"6c14d15a588c72b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1842//#testresult/6c14d15a588c72b5","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1715992524361,"stop":1715992524912,"duration":551}},{"uid":"1d82f9963575fcd4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1839//#testresult/1d82f9963575fcd4","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1715983291338,"stop":1715983291737,"duration":399}}]},"tags":[]},"source":"9b2f2eb8ca37e650.json","parameterValues":["MiltonKeynesCityCouncil"]}