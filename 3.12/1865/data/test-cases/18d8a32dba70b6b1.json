{"uid":"18d8a32dba70b6b1","name":"Validate Council Output [ValeofGlamorganCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1e5a723ab9bb5ec179bcd63e0a46576d","time":{"start":1716684060007,"stop":1716684061235,"duration":1228},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f6f2a67c900>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6f29306d50>, 'council': 'ValeofGlamorganCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f6f3e13ff80>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f6f2a67c900>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6f29306d50>, 'council': 'ValeofGlamorganCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f6f3e13ff80>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: ValeofGlamorganCouncil","time":{"start":1716684060007,"stop":1716684060008,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from ValeofGlamorganCouncil","time":{"start":1716684060008,"stop":1716684061235,"duration":1227},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1024-967"},{"name":"thread","value":"2797-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ValeofGlamorganCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":12},"items":[{"uid":"8735ac6a1ff360f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1863//#testresult/8735ac6a1ff360f8","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fead3da0920>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1716625439853,"stop":1716625573628,"duration":133775}},{"uid":"25190195b234fdac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1862//#testresult/25190195b234fdac","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716597483533,"stop":1716597484769,"duration":1236}},{"uid":"99a2c1f5b749387e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1856//#testresult/99a2c1f5b749387e","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716511224381,"stop":1716511225623,"duration":1242}},{"uid":"428e3827d3667a3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1855//#testresult/428e3827d3667a3a","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716424918483,"stop":1716424919820,"duration":1337}},{"uid":"daf7f57f0f5120d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1854//#testresult/daf7f57f0f5120d9","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716338385217,"stop":1716338386091,"duration":874}},{"uid":"828ca67bbd5a3c0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1853//#testresult/828ca67bbd5a3c0d","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716252043692,"stop":1716252044834,"duration":1142}},{"uid":"17b68f7636f02c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1852//#testresult/17b68f7636f02c0","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716165634714,"stop":1716165635729,"duration":1015}},{"uid":"610801ae0d75a51e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1851//#testresult/610801ae0d75a51e","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716155406337,"stop":1716155407326,"duration":989}},{"uid":"5875810993f22cb7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1846//#testresult/5875810993f22cb7","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7efc055f6f60>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1716079398821,"stop":1716079532303,"duration":133482}},{"uid":"f166a9d6ac875f4e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1842//#testresult/f166a9d6ac875f4e","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f34e8efb770>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1715992654861,"stop":1715992789577,"duration":134716}},{"uid":"8e9d1ce8bb1cebfb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1839//#testresult/8e9d1ce8bb1cebfb","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1715983706063,"stop":1715983707391,"duration":1328}}]},"tags":[]},"source":"18d8a32dba70b6b1.json","parameterValues":["ValeofGlamorganCouncil"]}