{"uid":"5e2604059e941ba2","name":"Validate Council Output [CheshireWestAndChesterCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"64af12fdfc56ab0224e14523e9cf88ad","time":{"start":1725408095977,"stop":1725408102058,"duration":6081},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=128.0.6613.113)\nStacktrace:\n#0 0x558d8e0eb8da <unknown>\n#1 0x558d8ddb9e50 <unknown>\n#2 0x558d8de10346 <unknown>\n#3 0x558d8de0e25d <unknown>\n#4 0x558d8de0bcf7 <unknown>\n#5 0x558d8de0ab9c <unknown>\n#6 0x558d8ddfe4d6 <unknown>\n#7 0x558d8de2e492 <unknown>\n#8 0x558d8ddfde89 <unknown>\n#9 0x558d8de2e65e <unknown>\n#10 0x558d8de4c9c6 <unknown>\n#11 0x558d8de2e233 <unknown>\n#12 0x558d8ddfc093 <unknown>\n#13 0x558d8ddfd09e <unknown>\n#14 0x558d8e0b2b3b <unknown>\n#15 0x558d8e0b6af1 <unknown>\n#16 0x558d8e09e705 <unknown>\n#17 0x558d8e0b7662 <unknown>\n#18 0x558d8e0838df <unknown>\n#19 0x558d8e0da6d8 <unknown>\n#20 0x558d8e0da8a2 <unknown>\n#21 0x558d8e0ea6cc <unknown>\n#22 0x7f888cb20a94 <unknown>\n#23 0x7f888cbada34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f61dee77600>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f61f037a9f0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:52: in parse_data\n    click_element(By.LINK_TEXT, \"Find your collection day\")\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:46: in click_element\n    element.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f61e0052000>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x558d8e0ea6cc \\\\u003Cunknown>\\\\n#22 0x7f888cb20a94 \\\\u003Cunknown>\\\\n#23 0x7f888cbada34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\nE         (Session info: chrome=128.0.6613.113)\nE       Stacktrace:\nE       #0 0x558d8e0eb8da <unknown>\nE       #1 0x558d8ddb9e50 <unknown>\nE       #2 0x558d8de10346 <unknown>\nE       #3 0x558d8de0e25d <unknown>\nE       #4 0x558d8de0bcf7 <unknown>\nE       #5 0x558d8de0ab9c <unknown>\nE       #6 0x558d8ddfe4d6 <unknown>\nE       #7 0x558d8de2e492 <unknown>\nE       #8 0x558d8ddfde89 <unknown>\nE       #9 0x558d8de2e65e <unknown>\nE       #10 0x558d8de4c9c6 <unknown>\nE       #11 0x558d8de2e233 <unknown>\nE       #12 0x558d8ddfc093 <unknown>\nE       #13 0x558d8ddfd09e <unknown>\nE       #14 0x558d8e0b2b3b <unknown>\nE       #15 0x558d8e0b6af1 <unknown>\nE       #16 0x558d8e09e705 <unknown>\nE       #17 0x558d8e0b7662 <unknown>\nE       #18 0x558d8e0838df <unknown>\nE       #19 0x558d8e0da6d8 <unknown>\nE       #20 0x558d8e0da8a2 <unknown>\nE       #21 0x558d8e0ea6cc <unknown>\nE       #22 0x7f888cb20a94 <unknown>\nE       #23 0x7f888cbada34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=128.0.6613.113)\nStacktrace:\n#0 0x558d8e0eb8da <unknown>\n#1 0x558d8ddb9e50 <unknown>\n#2 0x558d8de10346 <unknown>\n#3 0x558d8de0e25d <unknown>\n#4 0x558d8de0bcf7 <unknown>\n#5 0x558d8de0ab9c <unknown>\n#6 0x558d8ddfe4d6 <unknown>\n#7 0x558d8de2e492 <unknown>\n#8 0x558d8ddfde89 <unknown>\n#9 0x558d8de2e65e <unknown>\n#10 0x558d8de4c9c6 <unknown>\n#11 0x558d8de2e233 <unknown>\n#12 0x558d8ddfc093 <unknown>\n#13 0x558d8ddfd09e <unknown>\n#14 0x558d8e0b2b3b <unknown>\n#15 0x558d8e0b6af1 <unknown>\n#16 0x558d8e09e705 <unknown>\n#17 0x558d8e0b7662 <unknown>\n#18 0x558d8e0838df <unknown>\n#19 0x558d8e0da6d8 <unknown>\n#20 0x558d8e0da8a2 <unknown>\n#21 0x558d8e0ea6cc <unknown>\n#22 0x7f888cb20a94 <unknown>\n#23 0x7f888cbada34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f61dee77600>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f61f037a9f0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:52: in parse_data\n    click_element(By.LINK_TEXT, \"Find your collection day\")\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:46: in click_element\n    element.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f61e0052000>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x558d8e0ea6cc \\\\u003Cunknown>\\\\n#22 0x7f888cb20a94 \\\\u003Cunknown>\\\\n#23 0x7f888cbada34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\nE         (Session info: chrome=128.0.6613.113)\nE       Stacktrace:\nE       #0 0x558d8e0eb8da <unknown>\nE       #1 0x558d8ddb9e50 <unknown>\nE       #2 0x558d8de10346 <unknown>\nE       #3 0x558d8de0e25d <unknown>\nE       #4 0x558d8de0bcf7 <unknown>\nE       #5 0x558d8de0ab9c <unknown>\nE       #6 0x558d8ddfe4d6 <unknown>\nE       #7 0x558d8de2e492 <unknown>\nE       #8 0x558d8ddfde89 <unknown>\nE       #9 0x558d8de2e65e <unknown>\nE       #10 0x558d8de4c9c6 <unknown>\nE       #11 0x558d8de2e233 <unknown>\nE       #12 0x558d8ddfc093 <unknown>\nE       #13 0x558d8ddfd09e <unknown>\nE       #14 0x558d8e0b2b3b <unknown>\nE       #15 0x558d8e0b6af1 <unknown>\nE       #16 0x558d8e09e705 <unknown>\nE       #17 0x558d8e0b7662 <unknown>\nE       #18 0x558d8e0838df <unknown>\nE       #19 0x558d8e0da6d8 <unknown>\nE       #20 0x558d8e0da8a2 <unknown>\nE       #21 0x558d8e0ea6cc <unknown>\nE       #22 0x7f888cb20a94 <unknown>\nE       #23 0x7f888cbada34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1725408095977,"stop":1725408095978,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725408095979,"stop":1725408102058,"duration":6079},"status":"failed","statusMessage":"Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=128.0.6613.113)\nStacktrace:\n#0 0x558d8e0eb8da <unknown>\n#1 0x558d8ddb9e50 <unknown>\n#2 0x558d8de10346 <unknown>\n#3 0x558d8de0e25d <unknown>\n#4 0x558d8de0bcf7 <unknown>\n#5 0x558d8de0ab9c <unknown>\n#6 0x558d8ddfe4d6 <unknown>\n#7 0x558d8de2e492 <unknown>\n#8 0x558d8ddfde89 <unknown>\n#9 0x558d8de2e65e <unknown>\n#10 0x558d8de4c9c6 <unknown>\n#11 0x558d8de2e233 <unknown>\n#12 0x558d8ddfc093 <unknown>\n#13 0x558d8ddfd09e <unknown>\n#14 0x558d8e0b2b3b <unknown>\n#15 0x558d8e0b6af1 <unknown>\n#16 0x558d8e09e705 <unknown>\n#17 0x558d8e0b7662 <unknown>\n#18 0x558d8e0838df <unknown>\n#19 0x558d8e0da6d8 <unknown>\n#20 0x558d8e0da8a2 <unknown>\n#21 0x558d8e0ea6cc <unknown>\n#22 0x7f888cb20a94 <unknown>\n#23 0x7f888cbada34 __clone\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=128.0.6613.113)\nStacktrace:\n#0 0x558d8e0eb8da <unknown>\n#1 0x558d8ddb9e50 <unknown>\n#2 0x558d8de10346 <unknown>\n#3 0x558d8de0e25d <unknown>\n#4 0x558d8de0bcf7 <unknown>\n#5 0x558d8de0ab9c <unknown>\n#6 0x558d8ddfe4d6 <unknown>\n#7 0x558d8de2e492 <unknown>\n#8 0x558d8ddfde89 <unknown>\n#9 0x558d8de2e65e <unknown>\n#10 0x558d8de4c9c6 <unknown>\n#11 0x558d8de2e233 <unknown>\n#12 0x558d8ddfc093 <unknown>\n#13 0x558d8ddfd09e <unknown>\n#14 0x558d8e0b2b3b <unknown>\n#15 0x558d8e0b6af1 <unknown>\n#16 0x558d8e09e705 <unknown>\n#17 0x558d8e0b7662 <unknown>\n#18 0x558d8e0838df <unknown>\n#19 0x558d8e0da6d8 <unknown>\n#20 0x558d8e0da8a2 <unknown>\n#21 0x558d8e0ea6cc <unknown>\n#22 0x7f888cb20a94 <unknown>\n#23 0x7f888cbada34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e001d36751224604","name":"log","source":"e001d36751224604.txt","type":"text/plain","size":1357},{"uid":"fb603d17f52c912d","name":"stdout","source":"fb603d17f52c912d.txt","type":"text/plain","size":56}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1272-597"},{"name":"thread","value":"2834-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CheshireWestAndChesterCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":119,"unknown":0,"total":127},"items":[{"uid":"b0b74b0cdb7a3d8c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2080//#testresult/b0b74b0cdb7a3d8c","status":"passed","time":{"start":1725403277603,"stop":1725403295197,"duration":17594}},{"uid":"ee255e960a7b2f25","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2073//#testresult/ee255e960a7b2f25","status":"passed","time":{"start":1725384219730,"stop":1725384237436,"duration":17706}},{"uid":"6017513da33b9b14","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2070//#testresult/6017513da33b9b14","status":"passed","time":{"start":1725346428267,"stop":1725346447082,"duration":18815}},{"uid":"7d910609ed456ec1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2069//#testresult/7d910609ed456ec1","status":"passed","time":{"start":1725321668678,"stop":1725321714116,"duration":45438}},{"uid":"e412526369354a2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2068//#testresult/e412526369354a2f","status":"passed","time":{"start":1725315622027,"stop":1725315637618,"duration":15591}},{"uid":"8fe7bd76cfe0e8fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2066//#testresult/8fe7bd76cfe0e8fc","status":"passed","time":{"start":1725312350273,"stop":1725312374592,"duration":24319}},{"uid":"331bf2d1eaad2e41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2064//#testresult/331bf2d1eaad2e41","status":"passed","time":{"start":1725310187763,"stop":1725310206129,"duration":18366}},{"uid":"1f1e53b7348be0df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2060//#testresult/1f1e53b7348be0df","status":"passed","time":{"start":1725307451159,"stop":1725307474799,"duration":23640}},{"uid":"1a35f01157f65090","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2059//#testresult/1a35f01157f65090","status":"passed","time":{"start":1725307303122,"stop":1725307315947,"duration":12825}},{"uid":"9fa0a2dbf6e0accc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2054//#testresult/9fa0a2dbf6e0accc","status":"passed","time":{"start":1725235700245,"stop":1725235984636,"duration":284391}},{"uid":"d5cea33b026af8e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2053//#testresult/d5cea33b026af8e","status":"passed","time":{"start":1725149314436,"stop":1725149612284,"duration":297848}},{"uid":"84702c41628de37b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2052//#testresult/84702c41628de37b","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: Could not start a new session. New session request timed out \nHost info: host: 'selenium', ip: '172.18.0.2'\nBuild info: version: '4.24.0', revision: '748ffc9bc3'\nSystem info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.5.0-1025-azure', java.version: '17.0.12'\nDriver info: driver.version: unknown\nStacktrace:\n    at org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue.addToQueue (LocalNewSessionQueue.java:221)\n    at org.openqa.selenium.grid.sessionqueue.NewSessionQueue.lambda$new$0 (NewSessionQueue.java:68)\n    at org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle (Route.java:192)\n    at org.openqa.selenium.remote.http.Route.execute (Route.java:69)\n    at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:360)\n    at org.openqa.selenium.remote.http.Route.execute (Route.java:69)\n    at org.openqa.selenium.grid.sessionqueue.NewSessionQueue.execute (NewSessionQueue.java:128)\n    at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute (SpanWrappedHttpHandler.java:87)\n    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:63)\n    at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:360)\n    at org.openqa.selenium.remote.http.Route.execute (Route.java:69)\n    at org.openqa.selenium.grid.router.Router.execute (Router.java:87)\n    at org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0 (EnsureSpecCompliantResponseHeaders.java:34)\n    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:63)\n    at org.openqa.selenium.remote.http.Route$CombinedRoute.handle (Route.java:360)\n    at org.openqa.selenium.remote.http.Route.execute (Route.java:69)\n    at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0 (AddWebDriverSpecHeaders.java:35)\n    at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0 (ErrorFilter.java:44)\n    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:63)\n    at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0 (ErrorFilter.java:44)\n    at org.openqa.selenium.remote.http.Filter$1.execute (Filter.java:63)\n    at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0 (SeleniumHandler.java:44)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:539)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1136)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:635)\n    at java.lang.Thread.run (Thread.java:840)","time":{"start":1725062909763,"stop":1725063209811,"duration":300048}},{"uid":"7f4f76f60f37aa39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2051//#testresult/7f4f76f60f37aa39","status":"passed","time":{"start":1724976476185,"stop":1724976735486,"duration":259301}},{"uid":"a1e7b3491f2d3df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2049//#testresult/a1e7b3491f2d3df","status":"passed","time":{"start":1724890076355,"stop":1724890342326,"duration":265971}},{"uid":"6e4bec51075d3c79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2048//#testresult/6e4bec51075d3c79","status":"passed","time":{"start":1724803643471,"stop":1724803897955,"duration":254484}},{"uid":"c7a31219afdb3d7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2043//#testresult/c7a31219afdb3d7b","status":"passed","time":{"start":1724717589589,"stop":1724717653676,"duration":64087}},{"uid":"4d03967003d31284","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2039//#testresult/4d03967003d31284","status":"passed","time":{"start":1724630907511,"stop":1724631205298,"duration":297787}},{"uid":"3e4ee9f72a8e1f07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2038//#testresult/3e4ee9f72a8e1f07","status":"passed","time":{"start":1724544438763,"stop":1724544704448,"duration":265685}},{"uid":"71905a604c89c70b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2037//#testresult/71905a604c89c70b","status":"passed","time":{"start":1724458042387,"stop":1724458301891,"duration":259504}},{"uid":"a902677ed442de02","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2036//#testresult/a902677ed442de02","status":"passed","time":{"start":1724371804878,"stop":1724371966433,"duration":161555}}]},"tags":[]},"source":"5e2604059e941ba2.json","parameterValues":["CheshireWestAndChesterCouncil"]}