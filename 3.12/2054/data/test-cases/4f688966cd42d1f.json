{"uid":"4f688966cd42d1f","name":"Validate Council Output [MaldonDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"53c5720a05c261e2bad5904bb33e19b7","time":{"start":1725235999502,"stop":1725236030993,"duration":31491},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f08c789eac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f08c8581a60>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f08c8a4b440>, page = ''\nkwargs = {'council_module_str': 'MaldonDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f08c789eac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f08c8581a60>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f08c8a4b440>, page = ''\nkwargs = {'council_module_str': 'MaldonDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council","time":{"start":1725235999503,"stop":1725235999503,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725235999503,"stop":1725236030993,"duration":31490},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d72df01639fb40be","name":"stdout","source":"d72df01639fb40be.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az770-909"},{"name":"thread","value":"2785-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":109,"unknown":0,"total":115},"items":[{"uid":"5c969ba6f61e0d79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2053//#testresult/5c969ba6f61e0d79","status":"passed","time":{"start":1725149626362,"stop":1725149635824,"duration":9462}},{"uid":"dc92ef7d2df189ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2052//#testresult/dc92ef7d2df189ff","status":"passed","time":{"start":1725063572228,"stop":1725063581279,"duration":9051}},{"uid":"7ccdfc9b501e6b3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2051//#testresult/7ccdfc9b501e6b3a","status":"passed","time":{"start":1724976781008,"stop":1724976812687,"duration":31679}},{"uid":"4b1fffa7deaaf805","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2049//#testresult/4b1fffa7deaaf805","status":"passed","time":{"start":1724890605219,"stop":1724890610306,"duration":5087}},{"uid":"dc71989b9ae7db5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2048//#testresult/dc71989b9ae7db5e","status":"passed","time":{"start":1724804230511,"stop":1724804234239,"duration":3728}},{"uid":"8a3749ca0f820456","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2043//#testresult/8a3749ca0f820456","status":"passed","time":{"start":1724717901280,"stop":1724717902560,"duration":1280}},{"uid":"589ea2f16e96b448","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2039//#testresult/589ea2f16e96b448","status":"passed","time":{"start":1724631509175,"stop":1724631526356,"duration":17181}},{"uid":"e278ab983dedc4d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2038//#testresult/e278ab983dedc4d0","status":"passed","time":{"start":1724544955110,"stop":1724544983235,"duration":28125}},{"uid":"238d49109e99534d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2037//#testresult/238d49109e99534d","status":"passed","time":{"start":1724458635233,"stop":1724458636351,"duration":1118}},{"uid":"33bc32a98a85e698","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2036//#testresult/33bc32a98a85e698","status":"passed","time":{"start":1724372304100,"stop":1724372306068,"duration":1968}},{"uid":"d82cd1a7418ca691","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2034//#testresult/d82cd1a7418ca691","status":"passed","time":{"start":1724285813730,"stop":1724285819509,"duration":5779}},{"uid":"371dfe30a18efdd4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2033//#testresult/371dfe30a18efdd4","status":"passed","time":{"start":1724199445699,"stop":1724199446743,"duration":1044}},{"uid":"7dc5e3b0fd2f83b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2032//#testresult/7dc5e3b0fd2f83b5","status":"passed","time":{"start":1724112992375,"stop":1724113003762,"duration":11387}},{"uid":"f058ddbc7ef212dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2031//#testresult/f058ddbc7ef212dc","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1724026586164,"stop":1724026617643,"duration":31479}},{"uid":"a202fa30d2fd667b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2030//#testresult/a202fa30d2fd667b","status":"passed","time":{"start":1723940259114,"stop":1723940260195,"duration":1081}},{"uid":"75b037cb09215c7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2029//#testresult/75b037cb09215c7c","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1723853634932,"stop":1723853665828,"duration":30896}},{"uid":"4656d795f44a5982","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2028//#testresult/4656d795f44a5982","status":"passed","time":{"start":1723767418575,"stop":1723767422528,"duration":3953}},{"uid":"6389646792190e6e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2027//#testresult/6389646792190e6e","status":"passed","time":{"start":1723680556788,"stop":1723680558283,"duration":1495}},{"uid":"e62c84d67013fb8d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2026//#testresult/e62c84d67013fb8d","status":"passed","time":{"start":1723594675545,"stop":1723594676828,"duration":1283}},{"uid":"fc91b35e345de3d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2025//#testresult/fc91b35e345de3d2","status":"passed","time":{"start":1723508440227,"stop":1723508441390,"duration":1163}}]},"tags":[]},"source":"4f688966cd42d1f.json","parameterValues":["MaldonDistrictCouncil"]}