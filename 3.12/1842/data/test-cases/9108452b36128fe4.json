{"uid":"9108452b36128fe4","name":"Validate Council Output [ForestOfDeanDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1863302d994cdc4d95cec317d29473ee","time":{"start":1715992218979,"stop":1715992284947,"duration":65968},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x555a7e435eca <unknown>\n#1 0x555a7e11f45c <unknown>\n#2 0x555a7e16b5b5 <unknown>\n#3 0x555a7e16b671 <unknown>\n#4 0x555a7e1aff14 <unknown>\n#5 0x555a7e18e4dd <unknown>\n#6 0x555a7e1ad2cc <unknown>\n#7 0x555a7e18e253 <unknown>\n#8 0x555a7e15e1c7 <unknown>\n#9 0x555a7e15eb3e <unknown>\n#10 0x555a7e3fc30b <unknown>\n#11 0x555a7e4003b7 <unknown>\n#12 0x555a7e3e8e3e <unknown>\n#13 0x555a7e400e82 <unknown>\n#14 0x555a7e3cd7df <unknown>\n#15 0x555a7e4251b8 <unknown>\n#16 0x555a7e42538b <unknown>\n#17 0x555a7e434ffc <unknown>\n#18 0x7fdabd9a2ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f71b42a3a60>\nrequest = <FixtureRequest for <Function test_scenario_outline[ForestOfDeanDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f71b375b080>, 'council': 'ForestOfDeanDistrictCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ForestOfDeanDistrictCouncil.py:58: in parse_data\n    first_found_address = wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d6f5eb8df59065b7e980f88f403fd53d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f71b40644a0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x555a7e435eca <unknown>\nE       #1 0x555a7e11f45c <unknown>\nE       #2 0x555a7e16b5b5 <unknown>\nE       #3 0x555a7e16b671 <unknown>\nE       #4 0x555a7e1aff14 <unknown>\nE       #5 0x555a7e18e4dd <unknown>\nE       #6 0x555a7e1ad2cc <unknown>\nE       #7 0x555a7e18e253 <unknown>\nE       #8 0x555a7e15e1c7 <unknown>\nE       #9 0x555a7e15eb3e <unknown>\nE       #10 0x555a7e3fc30b <unknown>\nE       #11 0x555a7e4003b7 <unknown>\nE       #12 0x555a7e3e8e3e <unknown>\nE       #13 0x555a7e400e82 <unknown>\nE       #14 0x555a7e3cd7df <unknown>\nE       #15 0x555a7e4251b8 <unknown>\nE       #16 0x555a7e42538b <unknown>\nE       #17 0x555a7e434ffc <unknown>\nE       #18 0x7fdabd9a2ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x555a7e435eca <unknown>\n#1 0x555a7e11f45c <unknown>\n#2 0x555a7e16b5b5 <unknown>\n#3 0x555a7e16b671 <unknown>\n#4 0x555a7e1aff14 <unknown>\n#5 0x555a7e18e4dd <unknown>\n#6 0x555a7e1ad2cc <unknown>\n#7 0x555a7e18e253 <unknown>\n#8 0x555a7e15e1c7 <unknown>\n#9 0x555a7e15eb3e <unknown>\n#10 0x555a7e3fc30b <unknown>\n#11 0x555a7e4003b7 <unknown>\n#12 0x555a7e3e8e3e <unknown>\n#13 0x555a7e400e82 <unknown>\n#14 0x555a7e3cd7df <unknown>\n#15 0x555a7e4251b8 <unknown>\n#16 0x555a7e42538b <unknown>\n#17 0x555a7e434ffc <unknown>\n#18 0x7fdabd9a2ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f71b42a3a60>\nrequest = <FixtureRequest for <Function test_scenario_outline[ForestOfDeanDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f71b375b080>, 'council': 'ForestOfDeanDistrictCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ForestOfDeanDistrictCouncil.py:58: in parse_data\n    first_found_address = wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d6f5eb8df59065b7e980f88f403fd53d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f71b40644a0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x555a7e435eca <unknown>\nE       #1 0x555a7e11f45c <unknown>\nE       #2 0x555a7e16b5b5 <unknown>\nE       #3 0x555a7e16b671 <unknown>\nE       #4 0x555a7e1aff14 <unknown>\nE       #5 0x555a7e18e4dd <unknown>\nE       #6 0x555a7e1ad2cc <unknown>\nE       #7 0x555a7e18e253 <unknown>\nE       #8 0x555a7e15e1c7 <unknown>\nE       #9 0x555a7e15eb3e <unknown>\nE       #10 0x555a7e3fc30b <unknown>\nE       #11 0x555a7e4003b7 <unknown>\nE       #12 0x555a7e3e8e3e <unknown>\nE       #13 0x555a7e400e82 <unknown>\nE       #14 0x555a7e3cd7df <unknown>\nE       #15 0x555a7e4251b8 <unknown>\nE       #16 0x555a7e42538b <unknown>\nE       #17 0x555a7e434ffc <unknown>\nE       #18 0x7fdabd9a2ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Given the council: ForestOfDeanDistrictCouncil","time":{"start":1715992218979,"stop":1715992218980,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from ForestOfDeanDistrictCouncil","time":{"start":1715992218980,"stop":1715992284947,"duration":65967},"status":"failed","statusMessage":"Message: \nStacktrace:\n#0 0x555a7e435eca <unknown>\n#1 0x555a7e11f45c <unknown>\n#2 0x555a7e16b5b5 <unknown>\n#3 0x555a7e16b671 <unknown>\n#4 0x555a7e1aff14 <unknown>\n#5 0x555a7e18e4dd <unknown>\n#6 0x555a7e1ad2cc <unknown>\n#7 0x555a7e18e253 <unknown>\n#8 0x555a7e15e1c7 <unknown>\n#9 0x555a7e15eb3e <unknown>\n#10 0x555a7e3fc30b <unknown>\n#11 0x555a7e4003b7 <unknown>\n#12 0x555a7e3e8e3e <unknown>\n#13 0x555a7e400e82 <unknown>\n#14 0x555a7e3cd7df <unknown>\n#15 0x555a7e4251b8 <unknown>\n#16 0x555a7e42538b <unknown>\n#17 0x555a7e434ffc <unknown>\n#18 0x7fdabd9a2ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x555a7e435eca <unknown>\n#1 0x555a7e11f45c <unknown>\n#2 0x555a7e16b5b5 <unknown>\n#3 0x555a7e16b671 <unknown>\n#4 0x555a7e1aff14 <unknown>\n#5 0x555a7e18e4dd <unknown>\n#6 0x555a7e1ad2cc <unknown>\n#7 0x555a7e18e253 <unknown>\n#8 0x555a7e15e1c7 <unknown>\n#9 0x555a7e15eb3e <unknown>\n#10 0x555a7e3fc30b <unknown>\n#11 0x555a7e4003b7 <unknown>\n#12 0x555a7e3e8e3e <unknown>\n#13 0x555a7e400e82 <unknown>\n#14 0x555a7e3cd7df <unknown>\n#15 0x555a7e4251b8 <unknown>\n#16 0x555a7e42538b <unknown>\n#17 0x555a7e434ffc <unknown>\n#18 0x7fdabd9a2ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"19ed9e5f26d0789","name":"stdout","source":"19ed9e5f26d0789.txt","type":"text/plain","size":583}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1114-972"},{"name":"thread","value":"2654-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ForestOfDeanDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"c9af79c13fc1fd43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1839//#testresult/c9af79c13fc1fd43","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55b3e2a4eeca <unknown>\n#1 0x55b3e273845c <unknown>\n#2 0x55b3e27845b5 <unknown>\n#3 0x55b3e2784671 <unknown>\n#4 0x55b3e27c8f14 <unknown>\n#5 0x55b3e27a74dd <unknown>\n#6 0x55b3e27c62cc <unknown>\n#7 0x55b3e27a7253 <unknown>\n#8 0x55b3e27771c7 <unknown>\n#9 0x55b3e2777b3e <unknown>\n#10 0x55b3e2a1530b <unknown>\n#11 0x55b3e2a193b7 <unknown>\n#12 0x55b3e2a01e3e <unknown>\n#13 0x55b3e2a19e82 <unknown>\n#14 0x55b3e29e67df <unknown>\n#15 0x55b3e2a3e1b8 <unknown>\n#16 0x55b3e2a3e38b <unknown>\n#17 0x55b3e2a4dffc <unknown>\n#18 0x7fc43cf61ac3 <unknown>","time":{"start":1715983386852,"stop":1715983481395,"duration":94543}}]},"tags":[]},"source":"9108452b36128fe4.json","parameterValues":["ForestOfDeanDistrictCouncil"]}