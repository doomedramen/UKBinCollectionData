{"uid":"65f524fb9aa4e4ed","name":"Validate Council Output [ThreeRiversDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e3654e30da7afdc28f7fe7f42f4ffd96","time":{"start":1719708553568,"stop":1719708581164,"duration":27596},"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.114); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55f29870069a <unknown>\n#1 0x55f2983e30dc <unknown>\n#2 0x55f2983e87e9 <unknown>\n#3 0x55f2983ea85c <unknown>\n#4 0x55f2984725a9 <unknown>\n#5 0x55f298452872 <unknown>\n#6 0x55f2984715c3 <unknown>\n#7 0x55f298452613 <unknown>\n#8 0x55f2984224f7 <unknown>\n#9 0x55f298422e4e <unknown>\n#10 0x55f2986c686b <unknown>\n#11 0x55f2986ca911 <unknown>\n#12 0x55f2986b235e <unknown>\n#13 0x55f2986cb472 <unknown>\n#14 0x55f298696cbf <unknown>\n#15 0x55f2986f0098 <unknown>\n#16 0x55f2986f0270 <unknown>\n#17 0x55f2986ff7cc <unknown>\n#18 0x7fe607729ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f604b1b51c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[ThreeRiversDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f604bfb3a70>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/ThreeRiversDistrictCouncil.py:74: in parse_data\n    driver.execute_script(\"arguments[0].scrollIntoView();\", option_element)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:414: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6049e666f0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x55f2986f0270 \\\\u003Cunknown>\\\\n#17 0x55f2986ff7cc \\\\u003Cunknown>\\\\n#18 0x7fe607729ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.114); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55f29870069a <unknown>\nE       #1 0x55f2983e30dc <unknown>\nE       #2 0x55f2983e87e9 <unknown>\nE       #3 0x55f2983ea85c <unknown>\nE       #4 0x55f2984725a9 <unknown>\nE       #5 0x55f298452872 <unknown>\nE       #6 0x55f2984715c3 <unknown>\nE       #7 0x55f298452613 <unknown>\nE       #8 0x55f2984224f7 <unknown>\nE       #9 0x55f298422e4e <unknown>\nE       #10 0x55f2986c686b <unknown>\nE       #11 0x55f2986ca911 <unknown>\nE       #12 0x55f2986b235e <unknown>\nE       #13 0x55f2986cb472 <unknown>\nE       #14 0x55f298696cbf <unknown>\nE       #15 0x55f2986f0098 <unknown>\nE       #16 0x55f2986f0270 <unknown>\nE       #17 0x55f2986ff7cc <unknown>\nE       #18 0x7fe607729ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.114); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55f29870069a <unknown>\n#1 0x55f2983e30dc <unknown>\n#2 0x55f2983e87e9 <unknown>\n#3 0x55f2983ea85c <unknown>\n#4 0x55f2984725a9 <unknown>\n#5 0x55f298452872 <unknown>\n#6 0x55f2984715c3 <unknown>\n#7 0x55f298452613 <unknown>\n#8 0x55f2984224f7 <unknown>\n#9 0x55f298422e4e <unknown>\n#10 0x55f2986c686b <unknown>\n#11 0x55f2986ca911 <unknown>\n#12 0x55f2986b235e <unknown>\n#13 0x55f2986cb472 <unknown>\n#14 0x55f298696cbf <unknown>\n#15 0x55f2986f0098 <unknown>\n#16 0x55f2986f0270 <unknown>\n#17 0x55f2986ff7cc <unknown>\n#18 0x7fe607729ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f604b1b51c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[ThreeRiversDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f604bfb3a70>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/ThreeRiversDistrictCouncil.py:74: in parse_data\n    driver.execute_script(\"arguments[0].scrollIntoView();\", option_element)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:414: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6049e666f0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x55f2986f0270 \\\\u003Cunknown>\\\\n#17 0x55f2986ff7cc \\\\u003Cunknown>\\\\n#18 0x7fe607729ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.114); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55f29870069a <unknown>\nE       #1 0x55f2983e30dc <unknown>\nE       #2 0x55f2983e87e9 <unknown>\nE       #3 0x55f2983ea85c <unknown>\nE       #4 0x55f2984725a9 <unknown>\nE       #5 0x55f298452872 <unknown>\nE       #6 0x55f2984715c3 <unknown>\nE       #7 0x55f298452613 <unknown>\nE       #8 0x55f2984224f7 <unknown>\nE       #9 0x55f298422e4e <unknown>\nE       #10 0x55f2986c686b <unknown>\nE       #11 0x55f2986ca911 <unknown>\nE       #12 0x55f2986b235e <unknown>\nE       #13 0x55f2986cb472 <unknown>\nE       #14 0x55f298696cbf <unknown>\nE       #15 0x55f2986f0098 <unknown>\nE       #16 0x55f2986f0270 <unknown>\nE       #17 0x55f2986ff7cc <unknown>\nE       #18 0x7fe607729ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Given the council","time":{"start":1719708553568,"stop":1719708553568,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1719708553568,"stop":1719708581164,"duration":27596},"status":"failed","statusMessage":"Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.114); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55f29870069a <unknown>\n#1 0x55f2983e30dc <unknown>\n#2 0x55f2983e87e9 <unknown>\n#3 0x55f2983ea85c <unknown>\n#4 0x55f2984725a9 <unknown>\n#5 0x55f298452872 <unknown>\n#6 0x55f2984715c3 <unknown>\n#7 0x55f298452613 <unknown>\n#8 0x55f2984224f7 <unknown>\n#9 0x55f298422e4e <unknown>\n#10 0x55f2986c686b <unknown>\n#11 0x55f2986ca911 <unknown>\n#12 0x55f2986b235e <unknown>\n#13 0x55f2986cb472 <unknown>\n#14 0x55f298696cbf <unknown>\n#15 0x55f2986f0098 <unknown>\n#16 0x55f2986f0270 <unknown>\n#17 0x55f2986ff7cc <unknown>\n#18 0x7fe607729ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.114); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55f29870069a <unknown>\n#1 0x55f2983e30dc <unknown>\n#2 0x55f2983e87e9 <unknown>\n#3 0x55f2983ea85c <unknown>\n#4 0x55f2984725a9 <unknown>\n#5 0x55f298452872 <unknown>\n#6 0x55f2984715c3 <unknown>\n#7 0x55f298452613 <unknown>\n#8 0x55f2984224f7 <unknown>\n#9 0x55f298422e4e <unknown>\n#10 0x55f2986c686b <unknown>\n#11 0x55f2986ca911 <unknown>\n#12 0x55f2986b235e <unknown>\n#13 0x55f2986cb472 <unknown>\n#14 0x55f298696cbf <unknown>\n#15 0x55f2986f0098 <unknown>\n#16 0x55f2986f0270 <unknown>\n#17 0x55f2986ff7cc <unknown>\n#18 0x7fe607729ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9b2de87ced395b36","name":"log","source":"9b2de87ced395b36.txt","type":"text/plain","size":907},{"uid":"51d6d897d93c1f58","name":"stdout","source":"51d6d897d93c1f58.txt","type":"text/plain","size":53}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1535-992"},{"name":"thread","value":"2721-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ThreeRiversDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":28,"unknown":0,"total":29},"items":[{"uid":"e48dd172f8796cdd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1962//#testresult/e48dd172f8796cdd","status":"passed","time":{"start":1719621627472,"stop":1719621778503,"duration":151031}},{"uid":"53d41e12d73dbb67","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1958//#testresult/53d41e12d73dbb67","status":"passed","time":{"start":1719535205957,"stop":1719535350070,"duration":144113}},{"uid":"4dee0163dc93586b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1954//#testresult/4dee0163dc93586b","status":"passed","time":{"start":1719362741348,"stop":1719362769367,"duration":28019}},{"uid":"7dfc13063d4e0e0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1953//#testresult/7dfc13063d4e0e0a","status":"passed","time":{"start":1719276272606,"stop":1719276289424,"duration":16818}},{"uid":"c9d6bc12d85e28f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1952//#testresult/c9d6bc12d85e28f7","status":"passed","time":{"start":1719190064033,"stop":1719190082298,"duration":18265}},{"uid":"d5073189effafaa6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1951//#testresult/d5073189effafaa6","status":"passed","time":{"start":1719103708561,"stop":1719103721226,"duration":12665}},{"uid":"2fedb49951ee1824","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1950//#testresult/2fedb49951ee1824","status":"passed","time":{"start":1719017139640,"stop":1719017185356,"duration":45716}},{"uid":"acbe63d475dbe302","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1949//#testresult/acbe63d475dbe302","status":"passed","time":{"start":1718930636314,"stop":1718930795638,"duration":159324}},{"uid":"d2c484c21d902912","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1948//#testresult/d2c484c21d902912","status":"passed","time":{"start":1718844145132,"stop":1718844191321,"duration":46189}},{"uid":"532f45b453f3bac0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1947//#testresult/532f45b453f3bac0","status":"passed","time":{"start":1718757952998,"stop":1718757985897,"duration":32899}},{"uid":"9bf1757b29eebe0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1946//#testresult/9bf1757b29eebe0a","status":"passed","time":{"start":1718671517726,"stop":1718671557189,"duration":39463}},{"uid":"5159ce0d10060ab1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1945//#testresult/5159ce0d10060ab1","status":"passed","time":{"start":1718585178417,"stop":1718585247672,"duration":69255}},{"uid":"ac2b7d047d19c14d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1944//#testresult/ac2b7d047d19c14d","status":"passed","time":{"start":1718498742430,"stop":1718498771762,"duration":29332}},{"uid":"9b6ea7fa9fd86ecf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1943//#testresult/9b6ea7fa9fd86ecf","status":"passed","time":{"start":1718412350874,"stop":1718412424009,"duration":73135}},{"uid":"1eea12fcc922ec13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1942//#testresult/1eea12fcc922ec13","status":"passed","time":{"start":1718325921971,"stop":1718325965750,"duration":43779}},{"uid":"3f5d4567dceaf578","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1940//#testresult/3f5d4567dceaf578","status":"passed","time":{"start":1718268649839,"stop":1718268675335,"duration":25496}},{"uid":"6dd99da3660f00db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1939//#testresult/6dd99da3660f00db","status":"passed","time":{"start":1718239577757,"stop":1718239615989,"duration":38232}},{"uid":"95e63b99c1e4cb4e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1938//#testresult/95e63b99c1e4cb4e","status":"passed","time":{"start":1718153096705,"stop":1718153146345,"duration":49640}},{"uid":"d2d101a9cd515f41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1937//#testresult/d2d101a9cd515f41","status":"passed","time":{"start":1718066875351,"stop":1718066905993,"duration":30642}},{"uid":"b67f609736b44a41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1936//#testresult/b67f609736b44a41","status":"passed","time":{"start":1717980356033,"stop":1717980391213,"duration":35180}}]},"tags":[]},"source":"65f524fb9aa4e4ed.json","parameterValues":["ThreeRiversDistrictCouncil"]}