{"uid":"7a7d1bd2466eeb59","name":"Validate Council Output [BedfordBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4d48486dc2c0a9c252d5ac44f0d62a3d","time":{"start":1726877063656,"stop":1726877124680,"duration":61024},"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7fbb63727d80>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fbb6bd2bad0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7fbb6e130470>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7fbb63727d80>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fbb6bd2bad0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7fbb6e130470>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","steps":[{"name":"Given the council","time":{"start":1726877063656,"stop":1726877063656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1726877063657,"stop":1726877124680,"duration":61023},"status":"failed","statusMessage":"Could not get latest data!","statusTrace":"ConnectionError: Could not get latest data!\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e8d79bcbc716b331","name":"stdout","source":"e8d79bcbc716b331.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az773-432"},{"name":"thread","value":"2746-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BedfordBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":140,"unknown":0,"total":145},"items":[{"uid":"8143958bda482166","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2123//#testresult/8143958bda482166","status":"passed","time":{"start":1726790658456,"stop":1726790664090,"duration":5634}},{"uid":"93e02a243f58ae49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2122//#testresult/93e02a243f58ae49","status":"passed","time":{"start":1726704344650,"stop":1726704348532,"duration":3882}},{"uid":"7462b7f74ae3c6cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2121//#testresult/7462b7f74ae3c6cc","status":"passed","time":{"start":1726617851174,"stop":1726617854939,"duration":3765}},{"uid":"1b88593b38427144","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2120//#testresult/1b88593b38427144","status":"passed","time":{"start":1726531489704,"stop":1726531495722,"duration":6018}},{"uid":"1545322d6ab15b51","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2116//#testresult/1545322d6ab15b51","status":"passed","time":{"start":1726445039503,"stop":1726445042777,"duration":3274}},{"uid":"cde37fcd7f7844e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2115//#testresult/cde37fcd7f7844e0","status":"passed","time":{"start":1726358660239,"stop":1726358662273,"duration":2034}},{"uid":"190ec904c9bf402d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2114//#testresult/190ec904c9bf402d","status":"passed","time":{"start":1726272222904,"stop":1726272229695,"duration":6791}},{"uid":"1daa25cccea83bf0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2113//#testresult/1daa25cccea83bf0","status":"passed","time":{"start":1726185820409,"stop":1726185830814,"duration":10405}},{"uid":"e4ec32b9059dccce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2112//#testresult/e4ec32b9059dccce","status":"passed","time":{"start":1726099454083,"stop":1726099456146,"duration":2063}},{"uid":"88522d4d001f35ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2111//#testresult/88522d4d001f35ea","status":"passed","time":{"start":1726013022379,"stop":1726013033129,"duration":10750}},{"uid":"fb9a068ed3e8ecdb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2109//#testresult/fb9a068ed3e8ecdb","status":"passed","time":{"start":1725954869092,"stop":1725954872439,"duration":3347}},{"uid":"6bc8565bd7e5bc1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2107//#testresult/6bc8565bd7e5bc1f","status":"passed","time":{"start":1725926614763,"stop":1725926620630,"duration":5867}},{"uid":"89a38ebf10720d64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2095//#testresult/89a38ebf10720d64","status":"passed","time":{"start":1725840287101,"stop":1725840288939,"duration":1838}},{"uid":"964fb02fbe7e30b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2093//#testresult/964fb02fbe7e30b1","status":"passed","time":{"start":1725753872177,"stop":1725753874187,"duration":2010}},{"uid":"83239e7803cb7cf8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2092//#testresult/83239e7803cb7cf8","status":"passed","time":{"start":1725667432536,"stop":1725667438265,"duration":5729}},{"uid":"618c778517f3d422","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2088//#testresult/618c778517f3d422","status":"passed","time":{"start":1725581019998,"stop":1725581023233,"duration":3235}},{"uid":"49992b5bd005b817","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2086//#testresult/49992b5bd005b817","status":"passed","time":{"start":1725568883282,"stop":1725568886412,"duration":3130}},{"uid":"2d748adbe9b3b43c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2083//#testresult/2d748adbe9b3b43c","status":"passed","time":{"start":1725494609842,"stop":1725494614219,"duration":4377}},{"uid":"df4e7fdee1d42a65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/df4e7fdee1d42a65","status":"passed","time":{"start":1725429770217,"stop":1725429773020,"duration":2803}},{"uid":"6cebaf2602e88f81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/6cebaf2602e88f81","status":"passed","time":{"start":1725408270144,"stop":1725408276725,"duration":6581}}]},"tags":[]},"source":"7a7d1bd2466eeb59.json","parameterValues":["BedfordBoroughCouncil"]}