{"uid":"fdc870113ba767b2","name":"Validate Council Output [RenfrewshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"21c77c05ec171f4a60a68c21bf3d0b55","time":{"start":1724286061132,"stop":1724286210848,"duration":149716},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55b3758bd6ca <unknown>\n#1 0x55b37558e600 <unknown>\n#2 0x55b3755e48e6 <unknown>\n#3 0x55b3755e27f6 <unknown>\n#4 0x55b3755e0277 <unknown>\n#5 0x55b3755df11c <unknown>\n#6 0x55b3755d2be6 <unknown>\n#7 0x55b3756008a2 <unknown>\n#8 0x55b3755d2599 <unknown>\n#9 0x55b375600a6e <unknown>\n#10 0x55b37561f04a <unknown>\n#11 0x55b375600643 <unknown>\n#12 0x55b3755d0d31 <unknown>\n#13 0x55b3755d179e <unknown>\n#14 0x55b37588525b <unknown>\n#15 0x55b3758891f2 <unknown>\n#16 0x55b375872615 <unknown>\n#17 0x55b375889d82 <unknown>\n#18 0x55b37585725f <unknown>\n#19 0x55b3758ace68 <unknown>\n#20 0x55b3758ad040 <unknown>\n#21 0x55b3758bc49c <unknown>\n#22 0x7f26275baa94 <unknown>\n#23 0x7f2627647a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb16847fba0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb17b200fe0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb16741c2f0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x55b3758bc49c \\\\u003Cunknown>\\\\n#22 0x7f26275baa94 \\\\u003Cunknown>\\\\n#23 0x7f2627647a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\nE         (Session info: chrome-headless-shell=127.0.6533.119)\nE       Stacktrace:\nE       #0 0x55b3758bd6ca <unknown>\nE       #1 0x55b37558e600 <unknown>\nE       #2 0x55b3755e48e6 <unknown>\nE       #3 0x55b3755e27f6 <unknown>\nE       #4 0x55b3755e0277 <unknown>\nE       #5 0x55b3755df11c <unknown>\nE       #6 0x55b3755d2be6 <unknown>\nE       #7 0x55b3756008a2 <unknown>\nE       #8 0x55b3755d2599 <unknown>\nE       #9 0x55b375600a6e <unknown>\nE       #10 0x55b37561f04a <unknown>\nE       #11 0x55b375600643 <unknown>\nE       #12 0x55b3755d0d31 <unknown>\nE       #13 0x55b3755d179e <unknown>\nE       #14 0x55b37588525b <unknown>\nE       #15 0x55b3758891f2 <unknown>\nE       #16 0x55b375872615 <unknown>\nE       #17 0x55b375889d82 <unknown>\nE       #18 0x55b37585725f <unknown>\nE       #19 0x55b3758ace68 <unknown>\nE       #20 0x55b3758ad040 <unknown>\nE       #21 0x55b3758bc49c <unknown>\nE       #22 0x7f26275baa94 <unknown>\nE       #23 0x7f2627647a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55b3758bd6ca <unknown>\n#1 0x55b37558e600 <unknown>\n#2 0x55b3755e48e6 <unknown>\n#3 0x55b3755e27f6 <unknown>\n#4 0x55b3755e0277 <unknown>\n#5 0x55b3755df11c <unknown>\n#6 0x55b3755d2be6 <unknown>\n#7 0x55b3756008a2 <unknown>\n#8 0x55b3755d2599 <unknown>\n#9 0x55b375600a6e <unknown>\n#10 0x55b37561f04a <unknown>\n#11 0x55b375600643 <unknown>\n#12 0x55b3755d0d31 <unknown>\n#13 0x55b3755d179e <unknown>\n#14 0x55b37588525b <unknown>\n#15 0x55b3758891f2 <unknown>\n#16 0x55b375872615 <unknown>\n#17 0x55b375889d82 <unknown>\n#18 0x55b37585725f <unknown>\n#19 0x55b3758ace68 <unknown>\n#20 0x55b3758ad040 <unknown>\n#21 0x55b3758bc49c <unknown>\n#22 0x7f26275baa94 <unknown>\n#23 0x7f2627647a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb16847fba0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb17b200fe0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb16741c2f0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x55b3758bc49c \\\\u003Cunknown>\\\\n#22 0x7f26275baa94 \\\\u003Cunknown>\\\\n#23 0x7f2627647a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\nE         (Session info: chrome-headless-shell=127.0.6533.119)\nE       Stacktrace:\nE       #0 0x55b3758bd6ca <unknown>\nE       #1 0x55b37558e600 <unknown>\nE       #2 0x55b3755e48e6 <unknown>\nE       #3 0x55b3755e27f6 <unknown>\nE       #4 0x55b3755e0277 <unknown>\nE       #5 0x55b3755df11c <unknown>\nE       #6 0x55b3755d2be6 <unknown>\nE       #7 0x55b3756008a2 <unknown>\nE       #8 0x55b3755d2599 <unknown>\nE       #9 0x55b375600a6e <unknown>\nE       #10 0x55b37561f04a <unknown>\nE       #11 0x55b375600643 <unknown>\nE       #12 0x55b3755d0d31 <unknown>\nE       #13 0x55b3755d179e <unknown>\nE       #14 0x55b37588525b <unknown>\nE       #15 0x55b3758891f2 <unknown>\nE       #16 0x55b375872615 <unknown>\nE       #17 0x55b375889d82 <unknown>\nE       #18 0x55b37585725f <unknown>\nE       #19 0x55b3758ace68 <unknown>\nE       #20 0x55b3758ad040 <unknown>\nE       #21 0x55b3758bc49c <unknown>\nE       #22 0x7f26275baa94 <unknown>\nE       #23 0x7f2627647a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1724286061132,"stop":1724286061133,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1724286061133,"stop":1724286210848,"duration":149715},"status":"failed","statusMessage":"Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55b3758bd6ca <unknown>\n#1 0x55b37558e600 <unknown>\n#2 0x55b3755e48e6 <unknown>\n#3 0x55b3755e27f6 <unknown>\n#4 0x55b3755e0277 <unknown>\n#5 0x55b3755df11c <unknown>\n#6 0x55b3755d2be6 <unknown>\n#7 0x55b3756008a2 <unknown>\n#8 0x55b3755d2599 <unknown>\n#9 0x55b375600a6e <unknown>\n#10 0x55b37561f04a <unknown>\n#11 0x55b375600643 <unknown>\n#12 0x55b3755d0d31 <unknown>\n#13 0x55b3755d179e <unknown>\n#14 0x55b37588525b <unknown>\n#15 0x55b3758891f2 <unknown>\n#16 0x55b375872615 <unknown>\n#17 0x55b375889d82 <unknown>\n#18 0x55b37585725f <unknown>\n#19 0x55b3758ace68 <unknown>\n#20 0x55b3758ad040 <unknown>\n#21 0x55b3758bc49c <unknown>\n#22 0x7f26275baa94 <unknown>\n#23 0x7f2627647a34 __clone\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55b3758bd6ca <unknown>\n#1 0x55b37558e600 <unknown>\n#2 0x55b3755e48e6 <unknown>\n#3 0x55b3755e27f6 <unknown>\n#4 0x55b3755e0277 <unknown>\n#5 0x55b3755df11c <unknown>\n#6 0x55b3755d2be6 <unknown>\n#7 0x55b3756008a2 <unknown>\n#8 0x55b3755d2599 <unknown>\n#9 0x55b375600a6e <unknown>\n#10 0x55b37561f04a <unknown>\n#11 0x55b375600643 <unknown>\n#12 0x55b3755d0d31 <unknown>\n#13 0x55b3755d179e <unknown>\n#14 0x55b37588525b <unknown>\n#15 0x55b3758891f2 <unknown>\n#16 0x55b375872615 <unknown>\n#17 0x55b375889d82 <unknown>\n#18 0x55b37585725f <unknown>\n#19 0x55b3758ace68 <unknown>\n#20 0x55b3758ad040 <unknown>\n#21 0x55b3758bc49c <unknown>\n#22 0x7f26275baa94 <unknown>\n#23 0x7f2627647a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b223df834179ceea","name":"stdout","source":"b223df834179ceea.txt","type":"text/plain","size":898}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az695-3"},{"name":"thread","value":"2714-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RenfrewshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":31,"broken":0,"skipped":0,"passed":74,"unknown":0,"total":105},"items":[{"uid":"d3a0fdc17fad9151","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2033//#testresult/d3a0fdc17fad9151","status":"passed","time":{"start":1724199656683,"stop":1724199806171,"duration":149488}},{"uid":"3f285a0951d0fc2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2032//#testresult/3f285a0951d0fc2c","status":"passed","time":{"start":1724113259569,"stop":1724113279308,"duration":19739}},{"uid":"3714696df589a7e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2031//#testresult/3714696df589a7e7","status":"passed","time":{"start":1724026844422,"stop":1724026994014,"duration":149592}},{"uid":"28fc4d8e6ae00a1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2030//#testresult/28fc4d8e6ae00a1f","status":"passed","time":{"start":1723940498861,"stop":1723940649653,"duration":150792}},{"uid":"4b3012ec04ca3ace","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2029//#testresult/4b3012ec04ca3ace","status":"passed","time":{"start":1723853886909,"stop":1723853899817,"duration":12908}},{"uid":"da6a0961a4ace7d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2028//#testresult/da6a0961a4ace7d5","status":"passed","time":{"start":1723767661455,"stop":1723767804503,"duration":143048}},{"uid":"d5a987b7ef4b844","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2027//#testresult/d5a987b7ef4b844","status":"passed","time":{"start":1723680950106,"stop":1723680969161,"duration":19055}},{"uid":"e307540b51787f05","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2026//#testresult/e307540b51787f05","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=127.0.6533.99)\nStacktrace:\n#0 0x55fafc2f26aa <unknown>\n#1 0x55fafbfc3600 <unknown>\n#2 0x55fafc0198e6 <unknown>\n#3 0x55fafc0177f6 <unknown>\n#4 0x55fafc015277 <unknown>\n#5 0x55fafc01411c <unknown>\n#6 0x55fafc007be6 <unknown>\n#7 0x55fafc0358a2 <unknown>\n#8 0x55fafc007599 <unknown>\n#9 0x55fafc035a6e <unknown>\n#10 0x55fafc05404a <unknown>\n#11 0x55fafc035643 <unknown>\n#12 0x55fafc005d31 <unknown>\n#13 0x55fafc00679e <unknown>\n#14 0x55fafc2ba23b <unknown>\n#15 0x55fafc2be1d2 <unknown>\n#16 0x55fafc2a75f5 <unknown>\n#17 0x55fafc2bed62 <unknown>\n#18 0x55fafc28c23f <unknown>\n#19 0x55fafc2e1e48 <unknown>\n#20 0x55fafc2e2020 <unknown>\n#21 0x55fafc2f147c <unknown>\n#22 0x7fd0bbebea94 <unknown>\n#23 0x7fd0bbf4ba34 __clone","time":{"start":1723594893408,"stop":1723595032884,"duration":139476}},{"uid":"f54ed5a9afa0c9c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2025//#testresult/f54ed5a9afa0c9c0","status":"passed","time":{"start":1723508632462,"stop":1723508776435,"duration":143973}},{"uid":"da5eafdb365c5b4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2024//#testresult/da5eafdb365c5b4b","status":"passed","time":{"start":1723422395230,"stop":1723422431435,"duration":36205}},{"uid":"3245a5f61e7e95dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2022//#testresult/3245a5f61e7e95dc","status":"passed","time":{"start":1723335723096,"stop":1723335888422,"duration":165326}},{"uid":"77445a0af948e87e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2020//#testresult/77445a0af948e87e","status":"passed","time":{"start":1723249415979,"stop":1723249437823,"duration":21844}},{"uid":"a57a0e76a485ff22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2019//#testresult/a57a0e76a485ff22","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55f9a15f36ba <unknown>\n#1 0x55f9a12c3730 <unknown>\n#2 0x55f9a1319a96 <unknown>\n#3 0x55f9a13179ad <unknown>\n#4 0x55f9a1315447 <unknown>\n#5 0x55f9a131430e <unknown>\n#6 0x55f9a1307d66 <unknown>\n#7 0x55f9a1335a52 <unknown>\n#8 0x55f9a1307719 <unknown>\n#9 0x55f9a1335c1e <unknown>\n#10 0x55f9a13541ca <unknown>\n#11 0x55f9a13357f3 <unknown>\n#12 0x55f9a1305ec9 <unknown>\n#13 0x55f9a130691e <unknown>\n#14 0x55f9a15b99eb <unknown>\n#15 0x55f9a15bd972 <unknown>\n#16 0x55f9a15a6e15 <unknown>\n#17 0x55f9a15be502 <unknown>\n#18 0x55f9a158bd2f <unknown>\n#19 0x55f9a15e2578 <unknown>\n#20 0x55f9a15e2750 <unknown>\n#21 0x55f9a15f248c <unknown>\n#22 0x7f43843f8a94 <unknown>\n#23 0x7f4384485a34 __clone","time":{"start":1723163012407,"stop":1723163166455,"duration":154048}},{"uid":"349553067eab6467","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2014//#testresult/349553067eab6467","status":"passed","time":{"start":1723076550658,"stop":1723076565164,"duration":14506}},{"uid":"2c15ab2236c0da17","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2012//#testresult/2c15ab2236c0da17","status":"passed","time":{"start":1722990128345,"stop":1722990143266,"duration":14921}},{"uid":"b6187f0f0a524135","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2007//#testresult/b6187f0f0a524135","status":"passed","time":{"start":1722903893834,"stop":1722903925367,"duration":31533}},{"uid":"35310f7ca67b7040","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2006//#testresult/35310f7ca67b7040","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 625)\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x564b07ddf6ba <unknown>\n#1 0x564b07aaf730 <unknown>\n#2 0x564b07b05a96 <unknown>\n#3 0x564b07b039ad <unknown>\n#4 0x564b07b01447 <unknown>\n#5 0x564b07b0030e <unknown>\n#6 0x564b07af3d66 <unknown>\n#7 0x564b07b21a52 <unknown>\n#8 0x564b07af3719 <unknown>\n#9 0x564b07b21c1e <unknown>\n#10 0x564b07b401ca <unknown>\n#11 0x564b07b217f3 <unknown>\n#12 0x564b07af1ec9 <unknown>\n#13 0x564b07af291e <unknown>\n#14 0x564b07da59eb <unknown>\n#15 0x564b07da9972 <unknown>\n#16 0x564b07d92e15 <unknown>\n#17 0x564b07daa502 <unknown>\n#18 0x564b07d77d2f <unknown>\n#19 0x564b07dce578 <unknown>\n#20 0x564b07dce750 <unknown>\n#21 0x564b07dde48c <unknown>\n#22 0x7f8dbd623a94 <unknown>\n#23 0x7f8dbd6b0a34 __clone","time":{"start":1722817707231,"stop":1722817733249,"duration":26018}},{"uid":"b1bf3afdbe0ef928","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2005//#testresult/b1bf3afdbe0ef928","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55f400a4b6ba <unknown>\n#1 0x55f40071b730 <unknown>\n#2 0x55f400771a96 <unknown>\n#3 0x55f40076f9ad <unknown>\n#4 0x55f40076d447 <unknown>\n#5 0x55f40076c30e <unknown>\n#6 0x55f40075fd66 <unknown>\n#7 0x55f40078da52 <unknown>\n#8 0x55f40075f719 <unknown>\n#9 0x55f40078dc1e <unknown>\n#10 0x55f4007ac1ca <unknown>\n#11 0x55f40078d7f3 <unknown>\n#12 0x55f40075dec9 <unknown>\n#13 0x55f40075e91e <unknown>\n#14 0x55f400a119eb <unknown>\n#15 0x55f400a15972 <unknown>\n#16 0x55f4009fee15 <unknown>\n#17 0x55f400a16502 <unknown>\n#18 0x55f4009e3d2f <unknown>\n#19 0x55f400a3a578 <unknown>\n#20 0x55f400a3a750 <unknown>\n#21 0x55f400a4a48c <unknown>\n#22 0x7f0b81eeaa94 <unknown>\n#23 0x7f0b81f77a34 __clone","time":{"start":1722731210158,"stop":1722731224225,"duration":14067}},{"uid":"81abcd6ad7ec9d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2004//#testresult/81abcd6ad7ec9d5","status":"passed","time":{"start":1722644577100,"stop":1722644585523,"duration":8423}},{"uid":"1bf8abfca260c568","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2003//#testresult/1bf8abfca260c568","status":"passed","time":{"start":1722558362758,"stop":1722558379361,"duration":16603}}]},"tags":[]},"source":"fdc870113ba767b2.json","parameterValues":["RenfrewshireCouncil"]}