{"uid":"cac2837d4b197116","name":"Validate Council Output [HullCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f7fe732cd6f47a5e140f51b40eb18e5d","time":{"start":1726618455131,"stop":1726618460621,"duration":5490},"status":"failed","statusMessage":"ConnectionRefusedError: Cannot connect to API!","statusTrace":"fixturefunc = <function scrape_step at 0x7f8cec70b100>\nrequest = <FixtureRequest for <Function test_scenario_outline[HullCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f8cff317560>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <HullCityCouncil.CouncilClass object at 0x7f8cec49ee70>, page = ''\nkwargs = {'council_module_str': 'HullCityCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '21033995', data = {'bins': []}\nheaders = {'accept': '*/*', 'accept-language': 'en-GB,en;q=0.9', 'authority': 'www.hull.gov.uk', 'cache-control': 'no-cache', ...}\napi_url = 'https://www.hull.gov.uk/ajax/bin-collection?bindate=21033995'\nres = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n    \n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n        data = {\"bins\": []}\n    \n        headers = {\n            \"authority\": \"www.hull.gov.uk\",\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en-GB,en;q=0.9\",\n            \"cache-control\": \"no-cache\",\n            \"pragma\": \"no-cache\",\n            \"referer\": \"https://www.hull.gov.uk/bins-and-recycling/bin-collections/bin-collection-day-checker\",\n            \"sec-fetch-dest\": \"empty\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.6167.186 Safari/537.36\",\n        }\n        api_url = f\"https://www.hull.gov.uk/ajax/bin-collection?bindate={user_uprn}\"\n    \n        res = requests.get(api_url, headers=headers)\n        if res.status_code != 200:\n>           raise ConnectionRefusedError(\"Cannot connect to API!\")\nE           ConnectionRefusedError: Cannot connect to API!\n\nuk_bin_collection/uk_bin_collection/councils/HullCityCouncil.py:36: ConnectionRefusedError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionRefusedError: Cannot connect to API!","statusTrace":"fixturefunc = <function scrape_step at 0x7f8cec70b100>\nrequest = <FixtureRequest for <Function test_scenario_outline[HullCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f8cff317560>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <HullCityCouncil.CouncilClass object at 0x7f8cec49ee70>, page = ''\nkwargs = {'council_module_str': 'HullCityCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '21033995', data = {'bins': []}\nheaders = {'accept': '*/*', 'accept-language': 'en-GB,en;q=0.9', 'authority': 'www.hull.gov.uk', 'cache-control': 'no-cache', ...}\napi_url = 'https://www.hull.gov.uk/ajax/bin-collection?bindate=21033995'\nres = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n    \n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n        data = {\"bins\": []}\n    \n        headers = {\n            \"authority\": \"www.hull.gov.uk\",\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en-GB,en;q=0.9\",\n            \"cache-control\": \"no-cache\",\n            \"pragma\": \"no-cache\",\n            \"referer\": \"https://www.hull.gov.uk/bins-and-recycling/bin-collections/bin-collection-day-checker\",\n            \"sec-fetch-dest\": \"empty\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.6167.186 Safari/537.36\",\n        }\n        api_url = f\"https://www.hull.gov.uk/ajax/bin-collection?bindate={user_uprn}\"\n    \n        res = requests.get(api_url, headers=headers)\n        if res.status_code != 200:\n>           raise ConnectionRefusedError(\"Cannot connect to API!\")\nE           ConnectionRefusedError: Cannot connect to API!\n\nuk_bin_collection/uk_bin_collection/councils/HullCityCouncil.py:36: ConnectionRefusedError","steps":[{"name":"Given the council","time":{"start":1726618455131,"stop":1726618455131,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"When we scrape the data from the council","time":{"start":1726618455132,"stop":1726618460621,"duration":5489},"status":"failed","statusMessage":"Cannot connect to API!","statusTrace":"ConnectionRefusedError: Cannot connect to API!\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"5b19770267d76e6e","name":"stdout","source":"5b19770267d76e6e.txt","type":"text/plain","size":42}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"host","value":"fv-az738-15"},{"name":"thread","value":"2786-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"HullCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":0,"skipped":0,"passed":120,"unknown":0,"total":142},"items":[{"uid":"b244ff8deda1ec9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2120//#testresult/b244ff8deda1ec9","status":"failed","statusDetails":"ConnectionRefusedError: Cannot connect to API!","time":{"start":1726532076638,"stop":1726532082239,"duration":5601}},{"uid":"29728a4403206279","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2116//#testresult/29728a4403206279","status":"passed","time":{"start":1726445680431,"stop":1726445682286,"duration":1855}},{"uid":"8e333b6ec1c3c4a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2115//#testresult/8e333b6ec1c3c4a2","status":"passed","time":{"start":1726359262104,"stop":1726359263574,"duration":1470}},{"uid":"2283531bad7cdc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2114//#testresult/2283531bad7cdc","status":"passed","time":{"start":1726272857079,"stop":1726272858330,"duration":1251}},{"uid":"1e0a3c3f22adb00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2113//#testresult/1e0a3c3f22adb00","status":"passed","time":{"start":1726186478638,"stop":1726186480084,"duration":1446}},{"uid":"bfa60b25dc5eac18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2112//#testresult/bfa60b25dc5eac18","status":"passed","time":{"start":1726100169089,"stop":1726100170883,"duration":1794}},{"uid":"de7b9576230fc87c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2111//#testresult/de7b9576230fc87c","status":"failed","statusDetails":"ConnectionRefusedError: Cannot connect to API!","time":{"start":1726013745609,"stop":1726013751118,"duration":5509}},{"uid":"581835292325de12","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2109//#testresult/581835292325de12","status":"passed","time":{"start":1725955548252,"stop":1725955549829,"duration":1577}},{"uid":"4a0eff1be85986c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2107//#testresult/4a0eff1be85986c1","status":"passed","time":{"start":1725927202184,"stop":1725927203934,"duration":1750}},{"uid":"fb1002aa69b8ff07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2095//#testresult/fb1002aa69b8ff07","status":"passed","time":{"start":1725840656096,"stop":1725840657314,"duration":1218}},{"uid":"fea3c766fc951e23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2093//#testresult/fea3c766fc951e23","status":"passed","time":{"start":1725754503909,"stop":1725754505523,"duration":1614}},{"uid":"e2ede995967d531f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2092//#testresult/e2ede995967d531f","status":"passed","time":{"start":1725668070114,"stop":1725668071546,"duration":1432}},{"uid":"e3e5cc960d5e2d55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2088//#testresult/e3e5cc960d5e2d55","status":"passed","time":{"start":1725581333375,"stop":1725581335361,"duration":1986}},{"uid":"8434a0a241b72588","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2086//#testresult/8434a0a241b72588","status":"passed","time":{"start":1725569190224,"stop":1725569191642,"duration":1418}},{"uid":"a8d505244627dfd4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2083//#testresult/a8d505244627dfd4","status":"failed","statusDetails":"ConnectionRefusedError: Cannot connect to API!","time":{"start":1725495176223,"stop":1725495181933,"duration":5710}},{"uid":"5888ae8b2537c47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/5888ae8b2537c47","status":"passed","time":{"start":1725430337012,"stop":1725430338832,"duration":1820}},{"uid":"df8fd319351214a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2082//#testresult/df8fd319351214a9","status":"passed","time":{"start":1725408835488,"stop":1725408836975,"duration":1487}},{"uid":"d090b6b9a44acf6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2080//#testresult/d090b6b9a44acf6c","status":"passed","time":{"start":1725403693564,"stop":1725403695096,"duration":1532}},{"uid":"97d508936a0413c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2073//#testresult/97d508936a0413c7","status":"passed","time":{"start":1725384637399,"stop":1725384638900,"duration":1501}},{"uid":"b07bad3f671fe5ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2070//#testresult/b07bad3f671fe5ce","status":"passed","time":{"start":1725346851016,"stop":1725346852331,"duration":1315}}]},"tags":[]},"source":"cac2837d4b197116.json","parameterValues":["HullCityCouncil"]}