{"uid":"de4dfb5023070f88","name":"Validate Council Output [EppingForestDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"065d8180037c8a6cf0d064fb7182049d","time":{"start":1724199241488,"stop":1724199270343,"duration":28855},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55e8301ab6ca <unknown>\n#1 0x55e82fe7c600 <unknown>\n#2 0x55e82fecbbcb <unknown>\n#3 0x55e82fecbeb1 <unknown>\n#4 0x55e82ff0fb24 <unknown>\n#5 0x55e82feee8cd <unknown>\n#6 0x55e82ff0d04a <unknown>\n#7 0x55e82feee643 <unknown>\n#8 0x55e82febed31 <unknown>\n#9 0x55e82febf79e <unknown>\n#10 0x55e83017325b <unknown>\n#11 0x55e8301771f2 <unknown>\n#12 0x55e830160615 <unknown>\n#13 0x55e830177d82 <unknown>\n#14 0x55e83014525f <unknown>\n#15 0x55e83019ae68 <unknown>\n#16 0x55e83019b040 <unknown>\n#17 0x55e8301aa49c <unknown>\n#18 0x7f2e79236a94 <unknown>\n#19 0x7f2e792c3a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f34886bc2c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EppingForestDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f349b205fd0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:82: in get_and_parse_data\n    bin_data_dict = self.parse_data(page, url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/EppingForestDistrictCouncil.py:29: in parse_data\n    WebDriverWait(driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"56eed10fa326adf8affbfa666c803fdc\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f3487896660>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55e8301ab6ca <unknown>\nE       #1 0x55e82fe7c600 <unknown>\nE       #2 0x55e82fecbbcb <unknown>\nE       #3 0x55e82fecbeb1 <unknown>\nE       #4 0x55e82ff0fb24 <unknown>\nE       #5 0x55e82feee8cd <unknown>\nE       #6 0x55e82ff0d04a <unknown>\nE       #7 0x55e82feee643 <unknown>\nE       #8 0x55e82febed31 <unknown>\nE       #9 0x55e82febf79e <unknown>\nE       #10 0x55e83017325b <unknown>\nE       #11 0x55e8301771f2 <unknown>\nE       #12 0x55e830160615 <unknown>\nE       #13 0x55e830177d82 <unknown>\nE       #14 0x55e83014525f <unknown>\nE       #15 0x55e83019ae68 <unknown>\nE       #16 0x55e83019b040 <unknown>\nE       #17 0x55e8301aa49c <unknown>\nE       #18 0x7f2e79236a94 <unknown>\nE       #19 0x7f2e792c3a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55e8301ab6ca <unknown>\n#1 0x55e82fe7c600 <unknown>\n#2 0x55e82fecbbcb <unknown>\n#3 0x55e82fecbeb1 <unknown>\n#4 0x55e82ff0fb24 <unknown>\n#5 0x55e82feee8cd <unknown>\n#6 0x55e82ff0d04a <unknown>\n#7 0x55e82feee643 <unknown>\n#8 0x55e82febed31 <unknown>\n#9 0x55e82febf79e <unknown>\n#10 0x55e83017325b <unknown>\n#11 0x55e8301771f2 <unknown>\n#12 0x55e830160615 <unknown>\n#13 0x55e830177d82 <unknown>\n#14 0x55e83014525f <unknown>\n#15 0x55e83019ae68 <unknown>\n#16 0x55e83019b040 <unknown>\n#17 0x55e8301aa49c <unknown>\n#18 0x7f2e79236a94 <unknown>\n#19 0x7f2e792c3a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f34886bc2c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EppingForestDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f349b205fd0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:82: in get_and_parse_data\n    bin_data_dict = self.parse_data(page, url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/EppingForestDistrictCouncil.py:29: in parse_data\n    WebDriverWait(driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"56eed10fa326adf8affbfa666c803fdc\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f3487896660>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55e8301ab6ca <unknown>\nE       #1 0x55e82fe7c600 <unknown>\nE       #2 0x55e82fecbbcb <unknown>\nE       #3 0x55e82fecbeb1 <unknown>\nE       #4 0x55e82ff0fb24 <unknown>\nE       #5 0x55e82feee8cd <unknown>\nE       #6 0x55e82ff0d04a <unknown>\nE       #7 0x55e82feee643 <unknown>\nE       #8 0x55e82febed31 <unknown>\nE       #9 0x55e82febf79e <unknown>\nE       #10 0x55e83017325b <unknown>\nE       #11 0x55e8301771f2 <unknown>\nE       #12 0x55e830160615 <unknown>\nE       #13 0x55e830177d82 <unknown>\nE       #14 0x55e83014525f <unknown>\nE       #15 0x55e83019ae68 <unknown>\nE       #16 0x55e83019b040 <unknown>\nE       #17 0x55e8301aa49c <unknown>\nE       #18 0x7f2e79236a94 <unknown>\nE       #19 0x7f2e792c3a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Given the council","time":{"start":1724199241488,"stop":1724199241488,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1724199241488,"stop":1724199270343,"duration":28855},"status":"failed","statusMessage":"Message: \nStacktrace:\n#0 0x55e8301ab6ca <unknown>\n#1 0x55e82fe7c600 <unknown>\n#2 0x55e82fecbbcb <unknown>\n#3 0x55e82fecbeb1 <unknown>\n#4 0x55e82ff0fb24 <unknown>\n#5 0x55e82feee8cd <unknown>\n#6 0x55e82ff0d04a <unknown>\n#7 0x55e82feee643 <unknown>\n#8 0x55e82febed31 <unknown>\n#9 0x55e82febf79e <unknown>\n#10 0x55e83017325b <unknown>\n#11 0x55e8301771f2 <unknown>\n#12 0x55e830160615 <unknown>\n#13 0x55e830177d82 <unknown>\n#14 0x55e83014525f <unknown>\n#15 0x55e83019ae68 <unknown>\n#16 0x55e83019b040 <unknown>\n#17 0x55e8301aa49c <unknown>\n#18 0x7f2e79236a94 <unknown>\n#19 0x7f2e792c3a34 __clone\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55e8301ab6ca <unknown>\n#1 0x55e82fe7c600 <unknown>\n#2 0x55e82fecbbcb <unknown>\n#3 0x55e82fecbeb1 <unknown>\n#4 0x55e82ff0fb24 <unknown>\n#5 0x55e82feee8cd <unknown>\n#6 0x55e82ff0d04a <unknown>\n#7 0x55e82feee643 <unknown>\n#8 0x55e82febed31 <unknown>\n#9 0x55e82febf79e <unknown>\n#10 0x55e83017325b <unknown>\n#11 0x55e8301771f2 <unknown>\n#12 0x55e830160615 <unknown>\n#13 0x55e830177d82 <unknown>\n#14 0x55e83014525f <unknown>\n#15 0x55e83019ae68 <unknown>\n#16 0x55e83019b040 <unknown>\n#17 0x55e8301aa49c <unknown>\n#18 0x7f2e79236a94 <unknown>\n#19 0x7f2e792c3a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9dc3d8a228f58e39","name":"stdout","source":"9dc3d8a228f58e39.txt","type":"text/plain","size":54}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1759-612"},{"name":"thread","value":"2773-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EppingForestDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":77,"unknown":0,"total":86},"items":[{"uid":"b8fe06563b52f900","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2032//#testresult/b8fe06563b52f900","status":"passed","time":{"start":1724112826256,"stop":1724112881583,"duration":55327}},{"uid":"2a557e1a7961653f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2031//#testresult/2a557e1a7961653f","status":"passed","time":{"start":1724026428264,"stop":1724026465568,"duration":37304}},{"uid":"674da8973cfb4a79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2030//#testresult/674da8973cfb4a79","status":"passed","time":{"start":1723940033594,"stop":1723940059551,"duration":25957}},{"uid":"b30e3d002bda1009","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2029//#testresult/b30e3d002bda1009","status":"passed","time":{"start":1723853591540,"stop":1723853626869,"duration":35329}},{"uid":"a6309e0e754cf5bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2028//#testresult/a6309e0e754cf5bb","status":"passed","time":{"start":1723767231845,"stop":1723767261341,"duration":29496}},{"uid":"a4aa1b51ddcd1ddf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2027//#testresult/a4aa1b51ddcd1ddf","status":"passed","time":{"start":1723680580346,"stop":1723680613367,"duration":33021}},{"uid":"f836d71cefc10e38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2026//#testresult/f836d71cefc10e38","status":"passed","time":{"start":1723594432091,"stop":1723594472250,"duration":40159}},{"uid":"bebca12cba49806a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2025//#testresult/bebca12cba49806a","status":"passed","time":{"start":1723508405796,"stop":1723508445478,"duration":39682}},{"uid":"adc93bbf4525afbd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2024//#testresult/adc93bbf4525afbd","status":"passed","time":{"start":1723421774955,"stop":1723421850692,"duration":75737}},{"uid":"6f9de3a9f2268a37","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2022//#testresult/6f9de3a9f2268a37","status":"passed","time":{"start":1723335477006,"stop":1723335503365,"duration":26359}},{"uid":"e27edd679f27f70b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2020//#testresult/e27edd679f27f70b","status":"passed","time":{"start":1723248971432,"stop":1723249011919,"duration":40487}},{"uid":"986b9cdd2ad37223","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2019//#testresult/986b9cdd2ad37223","status":"passed","time":{"start":1723162576489,"stop":1723162604751,"duration":28262}},{"uid":"fad2501dbad3fe52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2014//#testresult/fad2501dbad3fe52","status":"passed","time":{"start":1723076140051,"stop":1723076174306,"duration":34255}},{"uid":"6ff69a22588be82f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2012//#testresult/6ff69a22588be82f","status":"passed","time":{"start":1722989734493,"stop":1722989769352,"duration":34859}},{"uid":"9667d559372af2a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2007//#testresult/9667d559372af2a9","status":"passed","time":{"start":1722903407294,"stop":1722903435289,"duration":27995}},{"uid":"30b325d4a13627a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2006//#testresult/30b325d4a13627a7","status":"passed","time":{"start":1722817004190,"stop":1722817029745,"duration":25555}},{"uid":"4a9a234e65a3031","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2005//#testresult/4a9a234e65a3031","status":"passed","time":{"start":1722730673633,"stop":1722730705053,"duration":31420}},{"uid":"feaf59468edfe1aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2004//#testresult/feaf59468edfe1aa","status":"passed","time":{"start":1722644363163,"stop":1722644379379,"duration":16216}},{"uid":"673cf34870cd18c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2003//#testresult/673cf34870cd18c","status":"passed","time":{"start":1722557767838,"stop":1722557791066,"duration":23228}},{"uid":"5026f64431620d82","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2002//#testresult/5026f64431620d82","status":"passed","time":{"start":1722471386140,"stop":1722471456731,"duration":70591}}]},"tags":[]},"source":"de4dfb5023070f88.json","parameterValues":["EppingForestDistrictCouncil"]}