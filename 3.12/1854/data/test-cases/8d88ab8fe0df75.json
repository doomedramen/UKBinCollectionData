{"uid":"8d88ab8fe0df75","name":"Validate Council Output [BarnetCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cae1315fb7beebce62becdf5abb57d74","time":{"start":1716337641065,"stop":1716337679222,"duration":38157},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 1536)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55a10e1b4e9a <unknown>\n#1 0x55a10de9e45c <unknown>\n#2 0x55a10def1336 <unknown>\n#3 0x55a10deef176 <unknown>\n#4 0x55a10deecb57 <unknown>\n#5 0x55a10deeb97c <unknown>\n#6 0x55a10dedf0ff <unknown>\n#7 0x55a10df0d4b2 <unknown>\n#8 0x55a10dedea79 <unknown>\n#9 0x55a10df0d67e <unknown>\n#10 0x55a10df2c2cc <unknown>\n#11 0x55a10df0d253 <unknown>\n#12 0x55a10dedd1c7 <unknown>\n#13 0x55a10deddb3e <unknown>\n#14 0x55a10e17b2db <unknown>\n#15 0x55a10e17f387 <unknown>\n#16 0x55a10e167e0e <unknown>\n#17 0x55a10e17fe52 <unknown>\n#18 0x55a10e14c7af <unknown>\n#19 0x55a10e1a4188 <unknown>\n#20 0x55a10e1a435b <unknown>\n#21 0x55a10e1b3fcc <unknown>\n#22 0x7f2a0ab5cac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb6345749a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb633f923f0>, 'council': 'BarnetCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:91: in parse_data\n    find_address_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb63434f770>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55a10e1a435b \\\\u003Cunknown>\\\\n#21 0x55a10e1b3fcc \\\\u003Cunknown>\\\\n#22 0x7f2a0ab5cac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 1536)\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x55a10e1b4e9a <unknown>\nE       #1 0x55a10de9e45c <unknown>\nE       #2 0x55a10def1336 <unknown>\nE       #3 0x55a10deef176 <unknown>\nE       #4 0x55a10deecb57 <unknown>\nE       #5 0x55a10deeb97c <unknown>\nE       #6 0x55a10dedf0ff <unknown>\nE       #7 0x55a10df0d4b2 <unknown>\nE       #8 0x55a10dedea79 <unknown>\nE       #9 0x55a10df0d67e <unknown>\nE       #10 0x55a10df2c2cc <unknown>\nE       #11 0x55a10df0d253 <unknown>\nE       #12 0x55a10dedd1c7 <unknown>\nE       #13 0x55a10deddb3e <unknown>\nE       #14 0x55a10e17b2db <unknown>\nE       #15 0x55a10e17f387 <unknown>\nE       #16 0x55a10e167e0e <unknown>\nE       #17 0x55a10e17fe52 <unknown>\nE       #18 0x55a10e14c7af <unknown>\nE       #19 0x55a10e1a4188 <unknown>\nE       #20 0x55a10e1a435b <unknown>\nE       #21 0x55a10e1b3fcc <unknown>\nE       #22 0x7f2a0ab5cac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 1536)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55a10e1b4e9a <unknown>\n#1 0x55a10de9e45c <unknown>\n#2 0x55a10def1336 <unknown>\n#3 0x55a10deef176 <unknown>\n#4 0x55a10deecb57 <unknown>\n#5 0x55a10deeb97c <unknown>\n#6 0x55a10dedf0ff <unknown>\n#7 0x55a10df0d4b2 <unknown>\n#8 0x55a10dedea79 <unknown>\n#9 0x55a10df0d67e <unknown>\n#10 0x55a10df2c2cc <unknown>\n#11 0x55a10df0d253 <unknown>\n#12 0x55a10dedd1c7 <unknown>\n#13 0x55a10deddb3e <unknown>\n#14 0x55a10e17b2db <unknown>\n#15 0x55a10e17f387 <unknown>\n#16 0x55a10e167e0e <unknown>\n#17 0x55a10e17fe52 <unknown>\n#18 0x55a10e14c7af <unknown>\n#19 0x55a10e1a4188 <unknown>\n#20 0x55a10e1a435b <unknown>\n#21 0x55a10e1b3fcc <unknown>\n#22 0x7f2a0ab5cac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb6345749a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb633f923f0>, 'council': 'BarnetCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:91: in parse_data\n    find_address_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb63434f770>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55a10e1a435b \\\\u003Cunknown>\\\\n#21 0x55a10e1b3fcc \\\\u003Cunknown>\\\\n#22 0x7f2a0ab5cac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 1536)\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x55a10e1b4e9a <unknown>\nE       #1 0x55a10de9e45c <unknown>\nE       #2 0x55a10def1336 <unknown>\nE       #3 0x55a10deef176 <unknown>\nE       #4 0x55a10deecb57 <unknown>\nE       #5 0x55a10deeb97c <unknown>\nE       #6 0x55a10dedf0ff <unknown>\nE       #7 0x55a10df0d4b2 <unknown>\nE       #8 0x55a10dedea79 <unknown>\nE       #9 0x55a10df0d67e <unknown>\nE       #10 0x55a10df2c2cc <unknown>\nE       #11 0x55a10df0d253 <unknown>\nE       #12 0x55a10dedd1c7 <unknown>\nE       #13 0x55a10deddb3e <unknown>\nE       #14 0x55a10e17b2db <unknown>\nE       #15 0x55a10e17f387 <unknown>\nE       #16 0x55a10e167e0e <unknown>\nE       #17 0x55a10e17fe52 <unknown>\nE       #18 0x55a10e14c7af <unknown>\nE       #19 0x55a10e1a4188 <unknown>\nE       #20 0x55a10e1a435b <unknown>\nE       #21 0x55a10e1b3fcc <unknown>\nE       #22 0x7f2a0ab5cac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council: BarnetCouncil","time":{"start":1716337641065,"stop":1716337641065,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BarnetCouncil","time":{"start":1716337641066,"stop":1716337679222,"duration":38156},"status":"failed","statusMessage":"Message: element click intercepted: Element is not clickable at point (69, 1536)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55a10e1b4e9a <unknown>\n#1 0x55a10de9e45c <unknown>\n#2 0x55a10def1336 <unknown>\n#3 0x55a10deef176 <unknown>\n#4 0x55a10deecb57 <unknown>\n#5 0x55a10deeb97c <unknown>\n#6 0x55a10dedf0ff <unknown>\n#7 0x55a10df0d4b2 <unknown>\n#8 0x55a10dedea79 <unknown>\n#9 0x55a10df0d67e <unknown>\n#10 0x55a10df2c2cc <unknown>\n#11 0x55a10df0d253 <unknown>\n#12 0x55a10dedd1c7 <unknown>\n#13 0x55a10deddb3e <unknown>\n#14 0x55a10e17b2db <unknown>\n#15 0x55a10e17f387 <unknown>\n#16 0x55a10e167e0e <unknown>\n#17 0x55a10e17fe52 <unknown>\n#18 0x55a10e14c7af <unknown>\n#19 0x55a10e1a4188 <unknown>\n#20 0x55a10e1a435b <unknown>\n#21 0x55a10e1b3fcc <unknown>\n#22 0x7f2a0ab5cac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 1536)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55a10e1b4e9a <unknown>\n#1 0x55a10de9e45c <unknown>\n#2 0x55a10def1336 <unknown>\n#3 0x55a10deef176 <unknown>\n#4 0x55a10deecb57 <unknown>\n#5 0x55a10deeb97c <unknown>\n#6 0x55a10dedf0ff <unknown>\n#7 0x55a10df0d4b2 <unknown>\n#8 0x55a10dedea79 <unknown>\n#9 0x55a10df0d67e <unknown>\n#10 0x55a10df2c2cc <unknown>\n#11 0x55a10df0d253 <unknown>\n#12 0x55a10dedd1c7 <unknown>\n#13 0x55a10deddb3e <unknown>\n#14 0x55a10e17b2db <unknown>\n#15 0x55a10e17f387 <unknown>\n#16 0x55a10e167e0e <unknown>\n#17 0x55a10e17fe52 <unknown>\n#18 0x55a10e14c7af <unknown>\n#19 0x55a10e1a4188 <unknown>\n#20 0x55a10e1a435b <unknown>\n#21 0x55a10e1b3fcc <unknown>\n#22 0x7f2a0ab5cac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ebd1ef9c975c63d9","name":"stdout","source":"ebd1ef9c975c63d9.txt","type":"text/plain","size":824}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az665-194"},{"name":"thread","value":"2840-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BarnetCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"29f67265761283b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1853//#testresult/29f67265761283b2","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 976)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55f72257deca <unknown>\n#1 0x55f72226745c <unknown>\n#2 0x55f7222ba336 <unknown>\n#3 0x55f7222b8176 <unknown>\n#4 0x55f7222b5b57 <unknown>\n#5 0x55f7222b497c <unknown>\n#6 0x55f7222a80ff <unknown>\n#7 0x55f7222d64b2 <unknown>\n#8 0x55f7222a7a79 <unknown>\n#9 0x55f7222d667e <unknown>\n#10 0x55f7222f52cc <unknown>\n#11 0x55f7222d6253 <unknown>\n#12 0x55f7222a61c7 <unknown>\n#13 0x55f7222a6b3e <unknown>\n#14 0x55f72254430b <unknown>\n#15 0x55f7225483b7 <unknown>\n#16 0x55f722530e3e <unknown>\n#17 0x55f722548e82 <unknown>\n#18 0x55f7225157df <unknown>\n#19 0x55f72256d1b8 <unknown>\n#20 0x55f72256d38b <unknown>\n#21 0x55f72257cffc <unknown>\n#22 0x7fb3a5bbbac3 <unknown>","time":{"start":1716251264982,"stop":1716251320435,"duration":55453}},{"uid":"110c7f791f72f905","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1852//#testresult/110c7f791f72f905","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 1536)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x563d6f89beca <unknown>\n#1 0x563d6f58545c <unknown>\n#2 0x563d6f5d8336 <unknown>\n#3 0x563d6f5d6176 <unknown>\n#4 0x563d6f5d3b57 <unknown>\n#5 0x563d6f5d297c <unknown>\n#6 0x563d6f5c60ff <unknown>\n#7 0x563d6f5f44b2 <unknown>\n#8 0x563d6f5c5a79 <unknown>\n#9 0x563d6f5f467e <unknown>\n#10 0x563d6f6132cc <unknown>\n#11 0x563d6f5f4253 <unknown>\n#12 0x563d6f5c41c7 <unknown>\n#13 0x563d6f5c4b3e <unknown>\n#14 0x563d6f86230b <unknown>\n#15 0x563d6f8663b7 <unknown>\n#16 0x563d6f84ee3e <unknown>\n#17 0x563d6f866e82 <unknown>\n#18 0x563d6f8337df <unknown>\n#19 0x563d6f88b1b8 <unknown>\n#20 0x563d6f88b38b <unknown>\n#21 0x563d6f89affc <unknown>\n#22 0x7f8f51de3ac3 <unknown>","time":{"start":1716164891564,"stop":1716164946542,"duration":54978}},{"uid":"3319c34fb65d0fae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1851//#testresult/3319c34fb65d0fae","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 1536)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55f217501eca <unknown>\n#1 0x55f2171eb45c <unknown>\n#2 0x55f21723e336 <unknown>\n#3 0x55f21723c176 <unknown>\n#4 0x55f217239b57 <unknown>\n#5 0x55f21723897c <unknown>\n#6 0x55f21722c0ff <unknown>\n#7 0x55f21725a4b2 <unknown>\n#8 0x55f21722ba79 <unknown>\n#9 0x55f21725a67e <unknown>\n#10 0x55f2172792cc <unknown>\n#11 0x55f21725a253 <unknown>\n#12 0x55f21722a1c7 <unknown>\n#13 0x55f21722ab3e <unknown>\n#14 0x55f2174c830b <unknown>\n#15 0x55f2174cc3b7 <unknown>\n#16 0x55f2174b4e3e <unknown>\n#17 0x55f2174cce82 <unknown>\n#18 0x55f2174997df <unknown>\n#19 0x55f2174f11b8 <unknown>\n#20 0x55f2174f138b <unknown>\n#21 0x55f217500ffc <unknown>\n#22 0x7f573fe62ac3 <unknown>","time":{"start":1716154926252,"stop":1716154943409,"duration":17157}},{"uid":"4cd0563ad157a6d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1849//#testresult/4cd0563ad157a6d2","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 976)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x561fa4040eca <unknown>\n#1 0x561fa3d2a45c <unknown>\n#2 0x561fa3d7d336 <unknown>\n#3 0x561fa3d7b176 <unknown>\n#4 0x561fa3d78b57 <unknown>\n#5 0x561fa3d7797c <unknown>\n#6 0x561fa3d6b0ff <unknown>\n#7 0x561fa3d994b2 <unknown>\n#8 0x561fa3d6aa79 <unknown>\n#9 0x561fa3d9967e <unknown>\n#10 0x561fa3db82cc <unknown>\n#11 0x561fa3d99253 <unknown>\n#12 0x561fa3d691c7 <unknown>\n#13 0x561fa3d69b3e <unknown>\n#14 0x561fa400730b <unknown>\n#15 0x561fa400b3b7 <unknown>\n#16 0x561fa3ff3e3e <unknown>\n#17 0x561fa400be82 <unknown>\n#18 0x561fa3fd87df <unknown>\n#19 0x561fa40301b8 <unknown>\n#20 0x561fa403038b <unknown>\n#21 0x561fa403fffc <unknown>\n#22 0x7f7384366ac3 <unknown>","time":{"start":1716152337347,"stop":1716152372368,"duration":35021}},{"uid":"201036bb6627ed3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1846//#testresult/201036bb6627ed3f","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 975)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x563a9b587eca <unknown>\n#1 0x563a9b27145c <unknown>\n#2 0x563a9b2c4336 <unknown>\n#3 0x563a9b2c2176 <unknown>\n#4 0x563a9b2bfb57 <unknown>\n#5 0x563a9b2be97c <unknown>\n#6 0x563a9b2b20ff <unknown>\n#7 0x563a9b2e04b2 <unknown>\n#8 0x563a9b2b1a79 <unknown>\n#9 0x563a9b2e067e <unknown>\n#10 0x563a9b2ff2cc <unknown>\n#11 0x563a9b2e0253 <unknown>\n#12 0x563a9b2b01c7 <unknown>\n#13 0x563a9b2b0b3e <unknown>\n#14 0x563a9b54e30b <unknown>\n#15 0x563a9b5523b7 <unknown>\n#16 0x563a9b53ae3e <unknown>\n#17 0x563a9b552e82 <unknown>\n#18 0x563a9b51f7df <unknown>\n#19 0x563a9b5771b8 <unknown>\n#20 0x563a9b57738b <unknown>\n#21 0x563a9b586ffc <unknown>\n#22 0x7f989a2fbac3 <unknown>","time":{"start":1716078621578,"stop":1716078691605,"duration":70027}},{"uid":"3b9abadea4298623","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1842//#testresult/3b9abadea4298623","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 975)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x557b3133aeca <unknown>\n#1 0x557b3102445c <unknown>\n#2 0x557b31077336 <unknown>\n#3 0x557b31075176 <unknown>\n#4 0x557b31072b57 <unknown>\n#5 0x557b3107197c <unknown>\n#6 0x557b310650ff <unknown>\n#7 0x557b310934b2 <unknown>\n#8 0x557b31064a79 <unknown>\n#9 0x557b3109367e <unknown>\n#10 0x557b310b22cc <unknown>\n#11 0x557b31093253 <unknown>\n#12 0x557b310631c7 <unknown>\n#13 0x557b31063b3e <unknown>\n#14 0x557b3130130b <unknown>\n#15 0x557b313053b7 <unknown>\n#16 0x557b312ede3e <unknown>\n#17 0x557b31305e82 <unknown>\n#18 0x557b312d27df <unknown>\n#19 0x557b3132a1b8 <unknown>\n#20 0x557b3132a38b <unknown>\n#21 0x557b31339ffc <unknown>\n#22 0x7fdd587baac3 <unknown>","time":{"start":1715992047648,"stop":1715992095079,"duration":47431}},{"uid":"2081813490a6a698","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1839//#testresult/2081813490a6a698","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 975)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x559494e6feca <unknown>\n#1 0x559494b5945c <unknown>\n#2 0x559494bac336 <unknown>\n#3 0x559494baa176 <unknown>\n#4 0x559494ba7b57 <unknown>\n#5 0x559494ba697c <unknown>\n#6 0x559494b9a0ff <unknown>\n#7 0x559494bc84b2 <unknown>\n#8 0x559494b99a79 <unknown>\n#9 0x559494bc867e <unknown>\n#10 0x559494be72cc <unknown>\n#11 0x559494bc8253 <unknown>\n#12 0x559494b981c7 <unknown>\n#13 0x559494b98b3e <unknown>\n#14 0x559494e3630b <unknown>\n#15 0x559494e3a3b7 <unknown>\n#16 0x559494e22e3e <unknown>\n#17 0x559494e3ae82 <unknown>\n#18 0x559494e077df <unknown>\n#19 0x559494e5f1b8 <unknown>\n#20 0x559494e5f38b <unknown>\n#21 0x559494e6effc <unknown>\n#22 0x7f2ecb453ac3 <unknown>","time":{"start":1715983171614,"stop":1715983222324,"duration":50710}}]},"tags":[]},"source":"8d88ab8fe0df75.json","parameterValues":["BarnetCouncil"]}