{"uid":"331d4d178f79ab82","name":"Validate Council Output [BexleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b14d94c00a7a02b15ede5862fe9627b6","time":{"start":1718324897621,"stop":1718324934195,"duration":36574},"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x559daf282e9a <unknown>\n#1 0x559daef6c2a1 <unknown>\n#2 0x559daefb23e8 <unknown>\n#3 0x559daefb07cf <unknown>\n#4 0x559daefdb4b2 <unknown>\n#5 0x559daefaca79 <unknown>\n#6 0x559daefdb67e <unknown>\n#7 0x559daeffa2cc <unknown>\n#8 0x559daefdb253 <unknown>\n#9 0x559daefab1c7 <unknown>\n#10 0x559daefabb3e <unknown>\n#11 0x559daf2492db <unknown>\n#12 0x559daf24d387 <unknown>\n#13 0x559daf235e0e <unknown>\n#14 0x559daf24de52 <unknown>\n#15 0x559daf21a7af <unknown>\n#16 0x559daf272188 <unknown>\n#17 0x559daf27235b <unknown>\n#18 0x559daf281fcc <unknown>\n#19 0x7f7ad57fbac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f8fa5478cc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f8fa68cb5f0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f8fa6891a60>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x559daf27235b \\\\u003Cunknown>\\\\n#18 0x559daf281fcc \\\\u003Cunknown>\\\\n#19 0x7f7ad57fbac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x559daf282e9a <unknown>\nE       #1 0x559daef6c2a1 <unknown>\nE       #2 0x559daefb23e8 <unknown>\nE       #3 0x559daefb07cf <unknown>\nE       #4 0x559daefdb4b2 <unknown>\nE       #5 0x559daefaca79 <unknown>\nE       #6 0x559daefdb67e <unknown>\nE       #7 0x559daeffa2cc <unknown>\nE       #8 0x559daefdb253 <unknown>\nE       #9 0x559daefab1c7 <unknown>\nE       #10 0x559daefabb3e <unknown>\nE       #11 0x559daf2492db <unknown>\nE       #12 0x559daf24d387 <unknown>\nE       #13 0x559daf235e0e <unknown>\nE       #14 0x559daf24de52 <unknown>\nE       #15 0x559daf21a7af <unknown>\nE       #16 0x559daf272188 <unknown>\nE       #17 0x559daf27235b <unknown>\nE       #18 0x559daf281fcc <unknown>\nE       #19 0x7f7ad57fbac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x559daf282e9a <unknown>\n#1 0x559daef6c2a1 <unknown>\n#2 0x559daefb23e8 <unknown>\n#3 0x559daefb07cf <unknown>\n#4 0x559daefdb4b2 <unknown>\n#5 0x559daefaca79 <unknown>\n#6 0x559daefdb67e <unknown>\n#7 0x559daeffa2cc <unknown>\n#8 0x559daefdb253 <unknown>\n#9 0x559daefab1c7 <unknown>\n#10 0x559daefabb3e <unknown>\n#11 0x559daf2492db <unknown>\n#12 0x559daf24d387 <unknown>\n#13 0x559daf235e0e <unknown>\n#14 0x559daf24de52 <unknown>\n#15 0x559daf21a7af <unknown>\n#16 0x559daf272188 <unknown>\n#17 0x559daf27235b <unknown>\n#18 0x559daf281fcc <unknown>\n#19 0x7f7ad57fbac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f8fa5478cc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f8fa68cb5f0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f8fa6891a60>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x559daf27235b \\\\u003Cunknown>\\\\n#18 0x559daf281fcc \\\\u003Cunknown>\\\\n#19 0x7f7ad57fbac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x559daf282e9a <unknown>\nE       #1 0x559daef6c2a1 <unknown>\nE       #2 0x559daefb23e8 <unknown>\nE       #3 0x559daefb07cf <unknown>\nE       #4 0x559daefdb4b2 <unknown>\nE       #5 0x559daefaca79 <unknown>\nE       #6 0x559daefdb67e <unknown>\nE       #7 0x559daeffa2cc <unknown>\nE       #8 0x559daefdb253 <unknown>\nE       #9 0x559daefab1c7 <unknown>\nE       #10 0x559daefabb3e <unknown>\nE       #11 0x559daf2492db <unknown>\nE       #12 0x559daf24d387 <unknown>\nE       #13 0x559daf235e0e <unknown>\nE       #14 0x559daf24de52 <unknown>\nE       #15 0x559daf21a7af <unknown>\nE       #16 0x559daf272188 <unknown>\nE       #17 0x559daf27235b <unknown>\nE       #18 0x559daf281fcc <unknown>\nE       #19 0x7f7ad57fbac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Given the council","time":{"start":1718324897622,"stop":1718324897623,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1718324897623,"stop":1718324934195,"duration":36572},"status":"failed","statusMessage":"Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x559daf282e9a <unknown>\n#1 0x559daef6c2a1 <unknown>\n#2 0x559daefb23e8 <unknown>\n#3 0x559daefb07cf <unknown>\n#4 0x559daefdb4b2 <unknown>\n#5 0x559daefaca79 <unknown>\n#6 0x559daefdb67e <unknown>\n#7 0x559daeffa2cc <unknown>\n#8 0x559daefdb253 <unknown>\n#9 0x559daefab1c7 <unknown>\n#10 0x559daefabb3e <unknown>\n#11 0x559daf2492db <unknown>\n#12 0x559daf24d387 <unknown>\n#13 0x559daf235e0e <unknown>\n#14 0x559daf24de52 <unknown>\n#15 0x559daf21a7af <unknown>\n#16 0x559daf272188 <unknown>\n#17 0x559daf27235b <unknown>\n#18 0x559daf281fcc <unknown>\n#19 0x7f7ad57fbac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x559daf282e9a <unknown>\n#1 0x559daef6c2a1 <unknown>\n#2 0x559daefb23e8 <unknown>\n#3 0x559daefb07cf <unknown>\n#4 0x559daefdb4b2 <unknown>\n#5 0x559daefaca79 <unknown>\n#6 0x559daefdb67e <unknown>\n#7 0x559daeffa2cc <unknown>\n#8 0x559daefdb253 <unknown>\n#9 0x559daefab1c7 <unknown>\n#10 0x559daefabb3e <unknown>\n#11 0x559daf2492db <unknown>\n#12 0x559daf24d387 <unknown>\n#13 0x559daf235e0e <unknown>\n#14 0x559daf24de52 <unknown>\n#15 0x559daf21a7af <unknown>\n#16 0x559daf272188 <unknown>\n#17 0x559daf27235b <unknown>\n#18 0x559daf281fcc <unknown>\n#19 0x7f7ad57fbac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ebfbc58739090be2","name":"stdout","source":"ebfbc58739090be2.txt","type":"text/plain","size":730}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az979-711"},{"name":"thread","value":"2752-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":23,"unknown":0,"total":37},"items":[{"uid":"dd23e20ed37ce3ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1939//#testresult/dd23e20ed37ce3ab","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5612fe38ae9a <unknown>\n#1 0x5612fe07445c <unknown>\n#2 0x5612fe0c05b5 <unknown>\n#3 0x5612fe0c0671 <unknown>\n#4 0x5612fe104f14 <unknown>\n#5 0x5612fe0e34dd <unknown>\n#6 0x5612fe1022cc <unknown>\n#7 0x5612fe0e3253 <unknown>\n#8 0x5612fe0b31c7 <unknown>\n#9 0x5612fe0b3b3e <unknown>\n#10 0x5612fe3512db <unknown>\n#11 0x5612fe355387 <unknown>\n#12 0x5612fe33de0e <unknown>\n#13 0x5612fe355e52 <unknown>\n#14 0x5612fe3227af <unknown>\n#15 0x5612fe37a188 <unknown>\n#16 0x5612fe37a35b <unknown>\n#17 0x5612fe389fcc <unknown>\n#18 0x7f049d41bac3 <unknown>","time":{"start":1718238503158,"stop":1718238600141,"duration":96983}},{"uid":"4e3f448655bd6f1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1938//#testresult/4e3f448655bd6f1c","status":"passed","time":{"start":1718152109966,"stop":1718152160483,"duration":50517}},{"uid":"55437d8ce9438a8c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1937//#testresult/55437d8ce9438a8c","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1718065698673,"stop":1718065754202,"duration":55529}},{"uid":"712514e71ce0434f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1936//#testresult/712514e71ce0434f","status":"passed","time":{"start":1717979384263,"stop":1717979421119,"duration":36856}},{"uid":"4dfa91f6a3db0f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1934//#testresult/4dfa91f6a3db0f3","status":"passed","time":{"start":1717893116907,"stop":1717893156046,"duration":39139}},{"uid":"e97c7316271e5685","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1933//#testresult/e97c7316271e5685","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558189710e9a <unknown>\n#1 0x5581893fa45c <unknown>\n#2 0x5581894465b5 <unknown>\n#3 0x558189446671 <unknown>\n#4 0x55818948af14 <unknown>\n#5 0x5581894694dd <unknown>\n#6 0x5581894882cc <unknown>\n#7 0x558189469253 <unknown>\n#8 0x5581894391c7 <unknown>\n#9 0x558189439b3e <unknown>\n#10 0x5581896d72db <unknown>\n#11 0x5581896db387 <unknown>\n#12 0x5581896c3e0e <unknown>\n#13 0x5581896dbe52 <unknown>\n#14 0x5581896a87af <unknown>\n#15 0x558189700188 <unknown>\n#16 0x55818970035b <unknown>\n#17 0x55818970ffcc <unknown>\n#18 0x7eff105fcac3 <unknown>","time":{"start":1717806512355,"stop":1717806604477,"duration":92122}},{"uid":"b0540687d3890f50","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1932//#testresult/b0540687d3890f50","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x555719c8de9a <unknown>\n#1 0x55571997745c <unknown>\n#2 0x5557199c35b5 <unknown>\n#3 0x5557199c3671 <unknown>\n#4 0x555719a07f14 <unknown>\n#5 0x5557199e64dd <unknown>\n#6 0x555719a052cc <unknown>\n#7 0x5557199e6253 <unknown>\n#8 0x5557199b61c7 <unknown>\n#9 0x5557199b6b3e <unknown>\n#10 0x555719c542db <unknown>\n#11 0x555719c58387 <unknown>\n#12 0x555719c40e0e <unknown>\n#13 0x555719c58e52 <unknown>\n#14 0x555719c257af <unknown>\n#15 0x555719c7d188 <unknown>\n#16 0x555719c7d35b <unknown>\n#17 0x555719c8cfcc <unknown>\n#18 0x7f3a2d41aac3 <unknown>","time":{"start":1717720118721,"stop":1717720207943,"duration":89222}},{"uid":"929510c4db5564e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1927//#testresult/929510c4db5564e7","status":"passed","time":{"start":1717633675635,"stop":1717633720571,"duration":44936}},{"uid":"14e2d7ccbcb12502","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1924//#testresult/14e2d7ccbcb12502","status":"passed","time":{"start":1717547264408,"stop":1717547310516,"duration":46108}},{"uid":"daf2b087720da1cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1923//#testresult/daf2b087720da1cc","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1717460873011,"stop":1717460918019,"duration":45008}},{"uid":"f72cc0a3ce60bd05","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1921//#testresult/f72cc0a3ce60bd05","status":"passed","time":{"start":1717374553529,"stop":1717374589449,"duration":35920}},{"uid":"589ca53ef6787de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1911//#testresult/589ca53ef6787de","status":"passed","time":{"start":1717316265182,"stop":1717316304951,"duration":39769}},{"uid":"fe898c4dc6dac9e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1908//#testresult/fe898c4dc6dac9e5","status":"passed","time":{"start":1717288229820,"stop":1717288270295,"duration":40475}},{"uid":"293417ddb0463862","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1905//#testresult/293417ddb0463862","status":"passed","time":{"start":1717201808886,"stop":1717201848298,"duration":39412}},{"uid":"1d7691f871d493d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1904//#testresult/1d7691f871d493d9","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x555dc795de9a <unknown>\n#1 0x555dc76472a1 <unknown>\n#2 0x555dc768d3e8 <unknown>\n#3 0x555dc768b7cf <unknown>\n#4 0x555dc76b64b2 <unknown>\n#5 0x555dc7687a79 <unknown>\n#6 0x555dc76b667e <unknown>\n#7 0x555dc76d52cc <unknown>\n#8 0x555dc76b6253 <unknown>\n#9 0x555dc76861c7 <unknown>\n#10 0x555dc7686b3e <unknown>\n#11 0x555dc79242db <unknown>\n#12 0x555dc7928387 <unknown>\n#13 0x555dc7910e0e <unknown>\n#14 0x555dc7928e52 <unknown>\n#15 0x555dc78f57af <unknown>\n#16 0x555dc794d188 <unknown>\n#17 0x555dc794d35b <unknown>\n#18 0x555dc795cfcc <unknown>\n#19 0x7f8b5331cac3 <unknown>","time":{"start":1717115240439,"stop":1717115275169,"duration":34730}},{"uid":"f1907e8197c75c62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1903//#testresult/f1907e8197c75c62","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55806835ae9a <unknown>\n#1 0x55806804445c <unknown>\n#2 0x5580680905b5 <unknown>\n#3 0x558068090671 <unknown>\n#4 0x5580680d4f14 <unknown>\n#5 0x5580680b34dd <unknown>\n#6 0x5580680d22cc <unknown>\n#7 0x5580680b3253 <unknown>\n#8 0x5580680831c7 <unknown>\n#9 0x558068083b3e <unknown>\n#10 0x5580683212db <unknown>\n#11 0x558068325387 <unknown>\n#12 0x55806830de0e <unknown>\n#13 0x558068325e52 <unknown>\n#14 0x5580682f27af <unknown>\n#15 0x55806834a188 <unknown>\n#16 0x55806834a35b <unknown>\n#17 0x558068359fcc <unknown>\n#18 0x7fe0cbab1ac3 <unknown>","time":{"start":1717028878484,"stop":1717028973111,"duration":94627}},{"uid":"8dcdc95684e53afc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1898//#testresult/8dcdc95684e53afc","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1716942519507,"stop":1716942560595,"duration":41088}},{"uid":"fdef5158f88320a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1893//#testresult/fdef5158f88320a3","status":"passed","time":{"start":1716856057459,"stop":1716856093769,"duration":36310}},{"uid":"cf1bb785c2a06feb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1883//#testresult/cf1bb785c2a06feb","status":"passed","time":{"start":1716769721422,"stop":1716769738476,"duration":17054}},{"uid":"41c83390e19b0fd0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/1881//#testresult/41c83390e19b0fd0","status":"passed","time":{"start":1716753032642,"stop":1716753123674,"duration":91032}}]},"tags":[]},"source":"331d4d178f79ab82.json","parameterValues":["BexleyCouncil"]}