{"uid":"2e6d283131713cab","name":"Validate Council Output [EastLindseyDistrictCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"eb374edb17b4c377c221232fbb03cdfe","time":{"start":1701739142262,"stop":1701739148571,"duration":6309},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f9e2e465080>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9e1a922a90>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7f9e1aa8e010>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': [{'collectionDate': '15/12/2023', 'type': 'Domestic Waste (Black Bin)'}]}\nuser_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY', web_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"979b9609f65e55fec1075bddd68a5ecd\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"979b9609f65e55fec1075bddd68a5ecd\", element=\"26F724E22ED937F4F14A848071B7B612_element_7\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"979b9609f65e55fec1075bddd68a5ecd\", element=\"26F724E22ED937F4F14A848071B7B612_element_9\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f9e2e465080>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9e1a922a90>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7f9e1aa8e010>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': [{'collectionDate': '15/12/2023', 'type': 'Domestic Waste (Black Bin)'}]}\nuser_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY', web_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"979b9609f65e55fec1075bddd68a5ecd\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"979b9609f65e55fec1075bddd68a5ecd\", element=\"26F724E22ED937F4F14A848071B7B612_element_7\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"979b9609f65e55fec1075bddd68a5ecd\", element=\"26F724E22ED937F4F14A848071B7B612_element_9\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","steps":[{"name":"Given the council: EastLindseyDistrictCouncil","time":{"start":1701739142262,"stop":1701739142263,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from EastLindseyDistrictCouncil using local and the http://selenium:4444 is set","time":{"start":1701739142263,"stop":1701739148571,"duration":6308},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1016-860"},{"name":"thread","value":"2824-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastLindseyDistrictCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":0,"skipped":0,"passed":27,"unknown":0,"total":49},"items":[{"uid":"f565c8ec8637fa75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1187//#testresult/f565c8ec8637fa75","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701714320548,"stop":1701714327124,"duration":6576}},{"uid":"f99add3e034ec8de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1184//#testresult/f99add3e034ec8de","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701652721525,"stop":1701652729286,"duration":7761}},{"uid":"f04454de46acbc43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1183//#testresult/f04454de46acbc43","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701566517143,"stop":1701566526914,"duration":9771}},{"uid":"953e8ae4863e41af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1182//#testresult/953e8ae4863e41af","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701479727127,"stop":1701479733433,"duration":6306}},{"uid":"7d08f51acc601f1b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1179//#testresult/7d08f51acc601f1b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701420042828,"stop":1701420048934,"duration":6106}},{"uid":"269ff2bc43aa82f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1181//#testresult/269ff2bc43aa82f4","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701419065640,"stop":1701419071996,"duration":6356}},{"uid":"e4c2137340b3f81d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1180//#testresult/e4c2137340b3f81d","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701419036460,"stop":1701419042194,"duration":5734}},{"uid":"36fabcf295007864","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1176//#testresult/36fabcf295007864","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701418876843,"stop":1701418882575,"duration":5732}},{"uid":"72d979af6ed65e59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1177//#testresult/72d979af6ed65e59","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701418907280,"stop":1701418915419,"duration":8139}},{"uid":"2bebdcc76bdee683","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1175//#testresult/2bebdcc76bdee683","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701414329561,"stop":1701414335829,"duration":6268}},{"uid":"e542d3e7c7e2dd71","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1173//#testresult/e542d3e7c7e2dd71","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701393881851,"stop":1701393889103,"duration":7252}},{"uid":"e14be431aee805cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1169//#testresult/e14be431aee805cf","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701353320911,"stop":1701353329532,"duration":8621}},{"uid":"ad422e1f3909c6f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1170//#testresult/ad422e1f3909c6f7","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701353356262,"stop":1701353362496,"duration":6234}},{"uid":"223f160170177cf4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1163//#testresult/223f160170177cf4","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701307086043,"stop":1701307092068,"duration":6025}},{"uid":"52e3d234859df8e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1161//#testresult/52e3d234859df8e","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701279304442,"stop":1701279310998,"duration":6556}},{"uid":"836b5634d43465d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1156//#testresult/836b5634d43465d8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701220760402,"stop":1701220769209,"duration":8807}},{"uid":"2c1bca5c029c68b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1155//#testresult/2c1bca5c029c68b2","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701134341417,"stop":1701134347934,"duration":6517}},{"uid":"a8b409a5ae82368b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1152//#testresult/a8b409a5ae82368b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701047891376,"stop":1701047901313,"duration":9937}},{"uid":"c88247276dbeb9b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1151//#testresult/c88247276dbeb9b5","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701036139294,"stop":1701036154537,"duration":15243}},{"uid":"1d7dd3b165cb0e6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1150//#testresult/1d7dd3b165cb0e6b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701036097037,"stop":1701036134568,"duration":37531}}]},"tags":[]},"source":"2e6d283131713cab.json","parameterValues":["EastLindseyDistrictCouncil","local","http://selenium:4444"]}