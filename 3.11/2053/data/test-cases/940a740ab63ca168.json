{"uid":"940a740ab63ca168","name":"Validate Council Output [WestSuffolkCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f49da38cf3e195a06db2680429130b4a","time":{"start":1725150803551,"stop":1725150813542,"duration":9991},"status":"failed","statusMessage":"AttributeError: module 'itertools' has no attribute 'batched'","statusTrace":"fixturefunc = <function scrape_step at 0x7f536255d3a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f53623dd410>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WestSuffolkCouncil.CouncilClass object at 0x7f5361adbfd0>, page = ''\nkwargs = {'council_module_str': 'WestSuffolkCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, user_uprn = '10009739960'\napi_url = 'https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId=10009739960'\nresponse = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html>\n<head>\n<style>\r\n\t\ta {\r\n\t\t  color: #0000EE; /* Traditional hyperlink blue color */\r\n\t\t}\t\r\n\t</st...<div id=\"atFooter\"></div>-->\n<script src=\"custom/js/responsivemap.js\" type=\"text/javascript\"></script>\n</body>\n</html>\n\npanel_search = <function CouncilClass.parse_data.<locals>.panel_search at 0x7f53623e4ae0>\ncollection_tag = [<div class=\"atPanelData\"><strong>Black bin:</strong> Wednesday 4th September <br/><strong>Blue  bin:</strong> Wednesday 11th September <br/><strong>Brown   bin:</strong> Wednesday 11th September \r\n </div>]\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_uprn = kwargs.get(\"uprn\")\n    \n        api_url = f\"https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId={user_uprn}\"\n    \n        response = requests.get(api_url)\n    \n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        def panel_search(cur_tag: Tag):\n            \"\"\"\n            Helper function to find the correct tag\n            \"\"\"\n            if cur_tag.name != \"div\":\n                return False\n    \n            tag_class = cur_tag.attrs.get(\"class\", None)\n            if tag_class is None:\n                return False\n    \n            parent_has_header = cur_tag.parent.find_all(\n                \"h4\", string=\"Bin collection days\"\n            )\n            if len(parent_has_header) < 1:\n                return False\n    \n            return \"atPanelData\" in tag_class\n    \n        collection_tag = soup.body.find_all(panel_search)\n    \n        # Parse the resultant div\n        for tag in collection_tag:\n            text_list = list(tag.stripped_strings)\n            # Create and parse the list as tuples of name:date\n>           for bin_name, collection_date in itertools.batched(text_list, 2):\nE           AttributeError: module 'itertools' has no attribute 'batched'\n\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:48: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: module 'itertools' has no attribute 'batched'","statusTrace":"fixturefunc = <function scrape_step at 0x7f536255d3a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f53623dd410>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WestSuffolkCouncil.CouncilClass object at 0x7f5361adbfd0>, page = ''\nkwargs = {'council_module_str': 'WestSuffolkCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, user_uprn = '10009739960'\napi_url = 'https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId=10009739960'\nresponse = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html>\n<head>\n<style>\r\n\t\ta {\r\n\t\t  color: #0000EE; /* Traditional hyperlink blue color */\r\n\t\t}\t\r\n\t</st...<div id=\"atFooter\"></div>-->\n<script src=\"custom/js/responsivemap.js\" type=\"text/javascript\"></script>\n</body>\n</html>\n\npanel_search = <function CouncilClass.parse_data.<locals>.panel_search at 0x7f53623e4ae0>\ncollection_tag = [<div class=\"atPanelData\"><strong>Black bin:</strong> Wednesday 4th September <br/><strong>Blue  bin:</strong> Wednesday 11th September <br/><strong>Brown   bin:</strong> Wednesday 11th September \r\n </div>]\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_uprn = kwargs.get(\"uprn\")\n    \n        api_url = f\"https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId={user_uprn}\"\n    \n        response = requests.get(api_url)\n    \n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        def panel_search(cur_tag: Tag):\n            \"\"\"\n            Helper function to find the correct tag\n            \"\"\"\n            if cur_tag.name != \"div\":\n                return False\n    \n            tag_class = cur_tag.attrs.get(\"class\", None)\n            if tag_class is None:\n                return False\n    \n            parent_has_header = cur_tag.parent.find_all(\n                \"h4\", string=\"Bin collection days\"\n            )\n            if len(parent_has_header) < 1:\n                return False\n    \n            return \"atPanelData\" in tag_class\n    \n        collection_tag = soup.body.find_all(panel_search)\n    \n        # Parse the resultant div\n        for tag in collection_tag:\n            text_list = list(tag.stripped_strings)\n            # Create and parse the list as tuples of name:date\n>           for bin_name, collection_date in itertools.batched(text_list, 2):\nE           AttributeError: module 'itertools' has no attribute 'batched'\n\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:48: AttributeError","steps":[{"name":"Given the council","time":{"start":1725150803551,"stop":1725150803583,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725150803583,"stop":1725150813542,"duration":9959},"status":"failed","statusMessage":"module 'itertools' has no attribute 'batched'","statusTrace":"AttributeError: module 'itertools' has no attribute 'batched'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"dcb31035448af7dc","name":"stdout","source":"dcb31035448af7dc.txt","type":"text/plain","size":45}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az564-505"},{"name":"thread","value":"2750-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":117,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":117},"items":[{"uid":"a7874253ac8c91ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2052//#testresult/a7874253ac8c91ef","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725064086226,"stop":1725064097098,"duration":10872}},{"uid":"7878651505ea838f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2051//#testresult/7878651505ea838f","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724977885141,"stop":1724977895081,"duration":9940}},{"uid":"8c878137f0799148","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2049//#testresult/8c878137f0799148","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724891154090,"stop":1724891170413,"duration":16323}},{"uid":"5954c01da3de017d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2048//#testresult/5954c01da3de017d","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724804750869,"stop":1724804761207,"duration":10338}},{"uid":"ccec343a2a23b9e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2043//#testresult/ccec343a2a23b9e1","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724718279461,"stop":1724718289705,"duration":10244}},{"uid":"4ea3178450c16098","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2039//#testresult/4ea3178450c16098","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724631923286,"stop":1724631934293,"duration":11007}},{"uid":"c4fd97aa3b89c5b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2038//#testresult/c4fd97aa3b89c5b3","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724545477303,"stop":1724545487904,"duration":10601}},{"uid":"35ab936a452cc7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2037//#testresult/35ab936a452cc7e","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724459179428,"stop":1724459189807,"duration":10379}},{"uid":"ac0a9a7d8d18bce1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2036//#testresult/ac0a9a7d8d18bce1","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724372710100,"stop":1724372725740,"duration":15640}},{"uid":"9340a0040b7eeba4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2034//#testresult/9340a0040b7eeba4","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724286290874,"stop":1724286300842,"duration":9968}},{"uid":"f3e928d73d0af492","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2033//#testresult/f3e928d73d0af492","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724199888145,"stop":1724199898233,"duration":10088}},{"uid":"44013858530886bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2032//#testresult/44013858530886bc","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724113758797,"stop":1724113768519,"duration":9722}},{"uid":"bc7ab71b8537fe08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2031//#testresult/bc7ab71b8537fe08","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724027061795,"stop":1724027073058,"duration":11263}},{"uid":"b5dcbe50b3a4d590","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2030//#testresult/b5dcbe50b3a4d590","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723940717212,"stop":1723940727590,"duration":10378}},{"uid":"ea53b81836d078d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2029//#testresult/ea53b81836d078d3","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723854349325,"stop":1723854360108,"duration":10783}},{"uid":"67972d13f682875a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2028//#testresult/67972d13f682875a","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723767913181,"stop":1723767923471,"duration":10290}},{"uid":"b06efd98ddbe6f70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2027//#testresult/b06efd98ddbe6f70","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723681053501,"stop":1723681063615,"duration":10114}},{"uid":"b8f941f589435e65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2026//#testresult/b8f941f589435e65","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723595090114,"stop":1723595102923,"duration":12809}},{"uid":"cc44b6b3479b7e94","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2025//#testresult/cc44b6b3479b7e94","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723508862783,"stop":1723508874976,"duration":12193}},{"uid":"e8dce9418862d91d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2024//#testresult/e8dce9418862d91d","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723422464896,"stop":1723422475166,"duration":10270}}]},"tags":[]},"source":"940a740ab63ca168.json","parameterValues":["WestSuffolkCouncil"]}