{"uid":"d1c1b91c1a51f2c6","name":"Validate Council Output [BexleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b14d94c00a7a02b15ede5862fe9627b6","time":{"start":1720312315352,"stop":1720312343914,"duration":28562},"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x561ae326569a <unknown>\n#1 0x561ae2f47f21 <unknown>\n#2 0x561ae2f8e6d8 <unknown>\n#3 0x561ae2f8cabf <unknown>\n#4 0x561ae2fb7872 <unknown>\n#5 0x561ae2f88d89 <unknown>\n#6 0x561ae2fb7a3e <unknown>\n#7 0x561ae2fd65c3 <unknown>\n#8 0x561ae2fb7613 <unknown>\n#9 0x561ae2f874f7 <unknown>\n#10 0x561ae2f87e4e <unknown>\n#11 0x561ae322b86b <unknown>\n#12 0x561ae322f911 <unknown>\n#13 0x561ae321735e <unknown>\n#14 0x561ae3230472 <unknown>\n#15 0x561ae31fbcbf <unknown>\n#16 0x561ae3255098 <unknown>\n#17 0x561ae3255270 <unknown>\n#18 0x561ae32647cc <unknown>\n#19 0x7f3011e36ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fe8e9fe6160>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fe8eb6e42d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe8fc1fa4d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x561ae3255270 \\\\u003Cunknown>\\\\n#18 0x561ae32647cc \\\\u003Cunknown>\\\\n#19 0x7f3011e36ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=126.0.6478.114)\nE       Stacktrace:\nE       #0 0x561ae326569a <unknown>\nE       #1 0x561ae2f47f21 <unknown>\nE       #2 0x561ae2f8e6d8 <unknown>\nE       #3 0x561ae2f8cabf <unknown>\nE       #4 0x561ae2fb7872 <unknown>\nE       #5 0x561ae2f88d89 <unknown>\nE       #6 0x561ae2fb7a3e <unknown>\nE       #7 0x561ae2fd65c3 <unknown>\nE       #8 0x561ae2fb7613 <unknown>\nE       #9 0x561ae2f874f7 <unknown>\nE       #10 0x561ae2f87e4e <unknown>\nE       #11 0x561ae322b86b <unknown>\nE       #12 0x561ae322f911 <unknown>\nE       #13 0x561ae321735e <unknown>\nE       #14 0x561ae3230472 <unknown>\nE       #15 0x561ae31fbcbf <unknown>\nE       #16 0x561ae3255098 <unknown>\nE       #17 0x561ae3255270 <unknown>\nE       #18 0x561ae32647cc <unknown>\nE       #19 0x7f3011e36ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x561ae326569a <unknown>\n#1 0x561ae2f47f21 <unknown>\n#2 0x561ae2f8e6d8 <unknown>\n#3 0x561ae2f8cabf <unknown>\n#4 0x561ae2fb7872 <unknown>\n#5 0x561ae2f88d89 <unknown>\n#6 0x561ae2fb7a3e <unknown>\n#7 0x561ae2fd65c3 <unknown>\n#8 0x561ae2fb7613 <unknown>\n#9 0x561ae2f874f7 <unknown>\n#10 0x561ae2f87e4e <unknown>\n#11 0x561ae322b86b <unknown>\n#12 0x561ae322f911 <unknown>\n#13 0x561ae321735e <unknown>\n#14 0x561ae3230472 <unknown>\n#15 0x561ae31fbcbf <unknown>\n#16 0x561ae3255098 <unknown>\n#17 0x561ae3255270 <unknown>\n#18 0x561ae32647cc <unknown>\n#19 0x7f3011e36ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fe8e9fe6160>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fe8eb6e42d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe8fc1fa4d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x561ae3255270 \\\\u003Cunknown>\\\\n#18 0x561ae32647cc \\\\u003Cunknown>\\\\n#19 0x7f3011e36ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=126.0.6478.114)\nE       Stacktrace:\nE       #0 0x561ae326569a <unknown>\nE       #1 0x561ae2f47f21 <unknown>\nE       #2 0x561ae2f8e6d8 <unknown>\nE       #3 0x561ae2f8cabf <unknown>\nE       #4 0x561ae2fb7872 <unknown>\nE       #5 0x561ae2f88d89 <unknown>\nE       #6 0x561ae2fb7a3e <unknown>\nE       #7 0x561ae2fd65c3 <unknown>\nE       #8 0x561ae2fb7613 <unknown>\nE       #9 0x561ae2f874f7 <unknown>\nE       #10 0x561ae2f87e4e <unknown>\nE       #11 0x561ae322b86b <unknown>\nE       #12 0x561ae322f911 <unknown>\nE       #13 0x561ae321735e <unknown>\nE       #14 0x561ae3230472 <unknown>\nE       #15 0x561ae31fbcbf <unknown>\nE       #16 0x561ae3255098 <unknown>\nE       #17 0x561ae3255270 <unknown>\nE       #18 0x561ae32647cc <unknown>\nE       #19 0x7f3011e36ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Given the council","time":{"start":1720312315352,"stop":1720312315353,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1720312315353,"stop":1720312343914,"duration":28561},"status":"failed","statusMessage":"Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x561ae326569a <unknown>\n#1 0x561ae2f47f21 <unknown>\n#2 0x561ae2f8e6d8 <unknown>\n#3 0x561ae2f8cabf <unknown>\n#4 0x561ae2fb7872 <unknown>\n#5 0x561ae2f88d89 <unknown>\n#6 0x561ae2fb7a3e <unknown>\n#7 0x561ae2fd65c3 <unknown>\n#8 0x561ae2fb7613 <unknown>\n#9 0x561ae2f874f7 <unknown>\n#10 0x561ae2f87e4e <unknown>\n#11 0x561ae322b86b <unknown>\n#12 0x561ae322f911 <unknown>\n#13 0x561ae321735e <unknown>\n#14 0x561ae3230472 <unknown>\n#15 0x561ae31fbcbf <unknown>\n#16 0x561ae3255098 <unknown>\n#17 0x561ae3255270 <unknown>\n#18 0x561ae32647cc <unknown>\n#19 0x7f3011e36ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x561ae326569a <unknown>\n#1 0x561ae2f47f21 <unknown>\n#2 0x561ae2f8e6d8 <unknown>\n#3 0x561ae2f8cabf <unknown>\n#4 0x561ae2fb7872 <unknown>\n#5 0x561ae2f88d89 <unknown>\n#6 0x561ae2fb7a3e <unknown>\n#7 0x561ae2fd65c3 <unknown>\n#8 0x561ae2fb7613 <unknown>\n#9 0x561ae2f874f7 <unknown>\n#10 0x561ae2f87e4e <unknown>\n#11 0x561ae322b86b <unknown>\n#12 0x561ae322f911 <unknown>\n#13 0x561ae321735e <unknown>\n#14 0x561ae3230472 <unknown>\n#15 0x561ae31fbcbf <unknown>\n#16 0x561ae3255098 <unknown>\n#17 0x561ae3255270 <unknown>\n#18 0x561ae32647cc <unknown>\n#19 0x7f3011e36ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ab3741081bcbc4ad","name":"stdout","source":"ab3741081bcbc4ad.txt","type":"text/plain","size":731}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az849-470"},{"name":"thread","value":"2701-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":144,"broken":0,"skipped":0,"passed":95,"unknown":0,"total":239},"items":[{"uid":"2fc4e6fc9895c95a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1970//#testresult/2fc4e6fc9895c95a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x563e7cb4269a <unknown>\n#1 0x563e7c8250dc <unknown>\n#2 0x563e7c871931 <unknown>\n#3 0x563e7c871a21 <unknown>\n#4 0x563e7c8b6234 <unknown>\n#5 0x563e7c89489d <unknown>\n#6 0x563e7c8b35c3 <unknown>\n#7 0x563e7c894613 <unknown>\n#8 0x563e7c8644f7 <unknown>\n#9 0x563e7c864e4e <unknown>\n#10 0x563e7cb0886b <unknown>\n#11 0x563e7cb0c911 <unknown>\n#12 0x563e7caf435e <unknown>\n#13 0x563e7cb0d472 <unknown>\n#14 0x563e7cad8cbf <unknown>\n#15 0x563e7cb32098 <unknown>\n#16 0x563e7cb32270 <unknown>\n#17 0x563e7cb417cc <unknown>\n#18 0x7ffa72c1fac3 <unknown>","time":{"start":1720225676746,"stop":1720225780568,"duration":103822}},{"uid":"605830bd044e2907","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1969//#testresult/605830bd044e2907","status":"passed","time":{"start":1720139300341,"stop":1720139343981,"duration":43640}},{"uid":"971a3c132aa0029d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1968//#testresult/971a3c132aa0029d","status":"passed","time":{"start":1720052920959,"stop":1720052967540,"duration":46581}},{"uid":"3e43764b4af528f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1967//#testresult/3e43764b4af528f2","status":"passed","time":{"start":1719966529473,"stop":1719966573094,"duration":43621}},{"uid":"5635f31d8643855f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1966//#testresult/5635f31d8643855f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55810739569a <unknown>\n#1 0x5581070780dc <unknown>\n#2 0x5581070c4931 <unknown>\n#3 0x5581070c4a21 <unknown>\n#4 0x558107109234 <unknown>\n#5 0x5581070e789d <unknown>\n#6 0x5581071065c3 <unknown>\n#7 0x5581070e7613 <unknown>\n#8 0x5581070b74f7 <unknown>\n#9 0x5581070b7e4e <unknown>\n#10 0x55810735b86b <unknown>\n#11 0x55810735f911 <unknown>\n#12 0x55810734735e <unknown>\n#13 0x558107360472 <unknown>\n#14 0x55810732bcbf <unknown>\n#15 0x558107385098 <unknown>\n#16 0x558107385270 <unknown>\n#17 0x5581073947cc <unknown>\n#18 0x7f5251165ac3 <unknown>","time":{"start":1719880131824,"stop":1719880223712,"duration":91888}},{"uid":"a6469981c12da2b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1965//#testresult/a6469981c12da2b5","status":"passed","time":{"start":1719794024022,"stop":1719794054519,"duration":30497}},{"uid":"da9620beb6badbba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1964//#testresult/da9620beb6badbba","status":"passed","time":{"start":1719707508736,"stop":1719707549943,"duration":41207}},{"uid":"ea94202cf27d1779","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1962//#testresult/ea94202cf27d1779","status":"passed","time":{"start":1719620876294,"stop":1719620908140,"duration":31846}},{"uid":"f5516559e4ebf3ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1958//#testresult/f5516559e4ebf3ac","status":"passed","time":{"start":1719534499823,"stop":1719534531465,"duration":31642}},{"uid":"62be3924397fd63d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1954//#testresult/62be3924397fd63d","status":"passed","time":{"start":1719361699861,"stop":1719361731470,"duration":31609}},{"uid":"2741e67d4d24f78c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1953//#testresult/2741e67d4d24f78c","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1719275282887,"stop":1719275319555,"duration":36668}},{"uid":"89dc227efedd087b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1952//#testresult/89dc227efedd087b","status":"passed","time":{"start":1719189011707,"stop":1719189049163,"duration":37456}},{"uid":"6499d5c3a2db3736","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1951//#testresult/6499d5c3a2db3736","status":"passed","time":{"start":1719102687871,"stop":1719102725503,"duration":37632}},{"uid":"dac729961e3a62c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1950//#testresult/dac729961e3a62c8","status":"passed","time":{"start":1719016060634,"stop":1719016100829,"duration":40195}},{"uid":"eecc2757a12c67e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1949//#testresult/eecc2757a12c67e5","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55bb5613ce9a <unknown>\n#1 0x55bb55e2645c <unknown>\n#2 0x55bb55e725b5 <unknown>\n#3 0x55bb55e72671 <unknown>\n#4 0x55bb55eb6f14 <unknown>\n#5 0x55bb55e954dd <unknown>\n#6 0x55bb55eb42cc <unknown>\n#7 0x55bb55e95253 <unknown>\n#8 0x55bb55e651c7 <unknown>\n#9 0x55bb55e65b3e <unknown>\n#10 0x55bb561032db <unknown>\n#11 0x55bb56107387 <unknown>\n#12 0x55bb560efe0e <unknown>\n#13 0x55bb56107e52 <unknown>\n#14 0x55bb560d47af <unknown>\n#15 0x55bb5612c188 <unknown>\n#16 0x55bb5612c35b <unknown>\n#17 0x55bb5613bfcc <unknown>\n#18 0x7f6c36449ac3 <unknown>","time":{"start":1718929683227,"stop":1718929776633,"duration":93406}},{"uid":"2a4814e86aa0aa35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1948//#testresult/2a4814e86aa0aa35","status":"passed","time":{"start":1718843269228,"stop":1718843302544,"duration":33316}},{"uid":"d5a391d88b2d4a0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1947//#testresult/d5a391d88b2d4a0a","status":"passed","time":{"start":1718756930117,"stop":1718756976117,"duration":46000}},{"uid":"d0cf090a5d5980f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1946//#testresult/d0cf090a5d5980f5","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1718670530649,"stop":1718670570241,"duration":39592}},{"uid":"d165afe5a004a38d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1945//#testresult/d165afe5a004a38d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55eb2de33e9a <unknown>\n#1 0x55eb2db1d45c <unknown>\n#2 0x55eb2db695b5 <unknown>\n#3 0x55eb2db69671 <unknown>\n#4 0x55eb2dbadf14 <unknown>\n#5 0x55eb2db8c4dd <unknown>\n#6 0x55eb2dbab2cc <unknown>\n#7 0x55eb2db8c253 <unknown>\n#8 0x55eb2db5c1c7 <unknown>\n#9 0x55eb2db5cb3e <unknown>\n#10 0x55eb2ddfa2db <unknown>\n#11 0x55eb2ddfe387 <unknown>\n#12 0x55eb2dde6e0e <unknown>\n#13 0x55eb2ddfee52 <unknown>\n#14 0x55eb2ddcb7af <unknown>\n#15 0x55eb2de23188 <unknown>\n#16 0x55eb2de2335b <unknown>\n#17 0x55eb2de32fcc <unknown>\n#18 0x7fa38e7d6ac3 <unknown>","time":{"start":1718584234831,"stop":1718584340218,"duration":105387}},{"uid":"10435da350c3310f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1944//#testresult/10435da350c3310f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x563526cd5e9a <unknown>\n#1 0x5635269bf45c <unknown>\n#2 0x563526a0b5b5 <unknown>\n#3 0x563526a0b671 <unknown>\n#4 0x563526a4ff14 <unknown>\n#5 0x563526a2e4dd <unknown>\n#6 0x563526a4d2cc <unknown>\n#7 0x563526a2e253 <unknown>\n#8 0x5635269fe1c7 <unknown>\n#9 0x5635269feb3e <unknown>\n#10 0x563526c9c2db <unknown>\n#11 0x563526ca0387 <unknown>\n#12 0x563526c88e0e <unknown>\n#13 0x563526ca0e52 <unknown>\n#14 0x563526c6d7af <unknown>\n#15 0x563526cc5188 <unknown>\n#16 0x563526cc535b <unknown>\n#17 0x563526cd4fcc <unknown>\n#18 0x7f62c0101ac3 <unknown>","time":{"start":1718497884433,"stop":1718497989158,"duration":104725}}]},"tags":[]},"source":"d1c1b91c1a51f2c6.json","parameterValues":["BexleyCouncil"]}