{"uid":"b68a80cf11625273","name":"Validate Council Output [TorridgeDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"da903249529007ec357275ac5f075b6c","time":{"start":1704587756943,"stop":1704587759760,"duration":2817},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f74bd574b80>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f74bca86d90>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f74bca86d90>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f74bd574b80>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f74bca86d90>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f74bca86d90>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1704587756943,"stop":1704587756944,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from TorridgeDistrictCouncil using None and the None is set","time":{"start":1704587756944,"stop":1704587759758,"duration":2814},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704587759758,"stop":1704587759758,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704587759758,"stop":1704587759760,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1432-133"},{"name":"thread","value":"2851-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":38,"broken":0,"skipped":0,"passed":107,"unknown":0,"total":145},"items":[{"uid":"a0ee25d995646153","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1413//#testresult/a0ee25d995646153","status":"passed","time":{"start":1704542888530,"stop":1704542891426,"duration":2896}},{"uid":"fb65eb0978b52e24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1408//#testresult/fb65eb0978b52e24","status":"passed","time":{"start":1704496323211,"stop":1704496326062,"duration":2851}},{"uid":"28744be4159bb178","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1406//#testresult/28744be4159bb178","status":"passed","time":{"start":1704453597727,"stop":1704453600788,"duration":3061}},{"uid":"7abea7fd4dc99532","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1405//#testresult/7abea7fd4dc99532","status":"passed","time":{"start":1704452968294,"stop":1704452971272,"duration":2978}},{"uid":"f53fb089c35b1acc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1400//#testresult/f53fb089c35b1acc","status":"passed","time":{"start":1704443926230,"stop":1704443929046,"duration":2816}},{"uid":"f988c273b5019713","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1399//#testresult/f988c273b5019713","status":"passed","time":{"start":1704443466753,"stop":1704443470505,"duration":3752}},{"uid":"d155ba0fd7ec31f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1397//#testresult/d155ba0fd7ec31f","status":"passed","time":{"start":1704442650118,"stop":1704442653219,"duration":3101}},{"uid":"ff71173f5316938e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1396//#testresult/ff71173f5316938e","status":"passed","time":{"start":1704442743113,"stop":1704442746017,"duration":2904}},{"uid":"8bb136eade22c82e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1390//#testresult/8bb136eade22c82e","status":"passed","time":{"start":1704417654713,"stop":1704417658361,"duration":3648}},{"uid":"2b198fc5044f0d5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1379//#testresult/2b198fc5044f0d5e","status":"passed","time":{"start":1704406164893,"stop":1704406167710,"duration":2817}},{"uid":"12d678b136943037","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1378//#testresult/12d678b136943037","status":"passed","time":{"start":1704406105677,"stop":1704406108634,"duration":2957}},{"uid":"1744d3131f1b74a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1376//#testresult/1744d3131f1b74a1","status":"passed","time":{"start":1704398937091,"stop":1704398940228,"duration":3137}},{"uid":"6b52f8129da0f564","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1375//#testresult/6b52f8129da0f564","status":"passed","time":{"start":1704398884166,"stop":1704398887694,"duration":3528}},{"uid":"d4bed44b9c0888bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1373//#testresult/d4bed44b9c0888bb","status":"passed","time":{"start":1704388447148,"stop":1704388452342,"duration":5194}},{"uid":"7133a8ab2a9f9423","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1369//#testresult/7133a8ab2a9f9423","status":"passed","time":{"start":1704378470145,"stop":1704378472786,"duration":2641}},{"uid":"46e47c43932fbc79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1367//#testresult/46e47c43932fbc79","status":"passed","time":{"start":1704378150363,"stop":1704378153223,"duration":2860}},{"uid":"99203feea0aa37ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1366//#testresult/99203feea0aa37ee","status":"passed","time":{"start":1704376104045,"stop":1704376107030,"duration":2985}},{"uid":"bad1c786a4374dec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1363//#testresult/bad1c786a4374dec","status":"passed","time":{"start":1704356893913,"stop":1704356902158,"duration":8245}},{"uid":"d0822f1214383f9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1361//#testresult/d0822f1214383f9b","status":"passed","time":{"start":1704356059127,"stop":1704356061910,"duration":2783}},{"uid":"59b9bfa0519b6878","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1359//#testresult/59b9bfa0519b6878","status":"passed","time":{"start":1704331249959,"stop":1704331253046,"duration":3087}}]},"tags":[]},"source":"b68a80cf11625273.json","parameterValues":["TorridgeDistrictCouncil","None","None"]}