{"uid":"cfb5251edd36de89","name":"Validate Council Output [MaldonDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"53c5720a05c261e2bad5904bb33e19b7","time":{"start":1726791318606,"stop":1726791349798,"duration":31192},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f8d5e1e2660>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f8d5e068f50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f8d5decb290>, page = ''\nkwargs = {'council_module_str': 'MaldonDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f8d5e1e2660>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f8d5e068f50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f8d5decb290>, page = ''\nkwargs = {'council_module_str': 'MaldonDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council","time":{"start":1726791318606,"stop":1726791318606,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1726791318606,"stop":1726791349798,"duration":31192},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6ca9342e349a0191","name":"stdout","source":"6ca9342e349a0191.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az888-540"},{"name":"thread","value":"2757-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":308,"unknown":0,"total":324},"items":[{"uid":"e625630105246a99","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2122//#testresult/e625630105246a99","status":"passed","time":{"start":1726705059170,"stop":1726705060252,"duration":1082}},{"uid":"8b57e2019c082aff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2121//#testresult/8b57e2019c082aff","status":"passed","time":{"start":1726618543342,"stop":1726618558713,"duration":15371}},{"uid":"49bb72e270cd6135","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2120//#testresult/49bb72e270cd6135","status":"passed","time":{"start":1726532129423,"stop":1726532141512,"duration":12089}},{"uid":"2a79f2ea858b1679","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2116//#testresult/2a79f2ea858b1679","status":"passed","time":{"start":1726445873555,"stop":1726445898995,"duration":25440}},{"uid":"d92f856473498fd3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2115//#testresult/d92f856473498fd3","status":"passed","time":{"start":1726359305455,"stop":1726359335623,"duration":30168}},{"uid":"9a32028bd46b3647","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2114//#testresult/9a32028bd46b3647","status":"passed","time":{"start":1726273081152,"stop":1726273082271,"duration":1119}},{"uid":"86504a26be2e6b06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2113//#testresult/86504a26be2e6b06","status":"passed","time":{"start":1726186650367,"stop":1726186651509,"duration":1142}},{"uid":"d030cd33ed50cfbd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2112//#testresult/d030cd33ed50cfbd","status":"passed","time":{"start":1726100099718,"stop":1726100105037,"duration":5319}},{"uid":"3c677cce4e775226","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2111//#testresult/3c677cce4e775226","status":"passed","time":{"start":1726013754033,"stop":1726013782756,"duration":28723}},{"uid":"87d1b2f35385816b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2109//#testresult/87d1b2f35385816b","status":"passed","time":{"start":1725955551056,"stop":1725955552208,"duration":1152}},{"uid":"718d135a2624c592","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2107//#testresult/718d135a2624c592","status":"passed","time":{"start":1725927264442,"stop":1725927269664,"duration":5222}},{"uid":"1de991f1c76cb77e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2095//#testresult/1de991f1c76cb77e","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1725841153432,"stop":1725841184924,"duration":31492}},{"uid":"f5db69f1cb52afc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2093//#testresult/f5db69f1cb52afc","status":"passed","time":{"start":1725754674852,"stop":1725754688329,"duration":13477}},{"uid":"85c1a406dd03bbd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2092//#testresult/85c1a406dd03bbd8","status":"passed","time":{"start":1725668349426,"stop":1725668358959,"duration":9533}},{"uid":"aac1486bce8100b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2088//#testresult/aac1486bce8100b7","status":"passed","time":{"start":1725581916513,"stop":1725581928328,"duration":11815}},{"uid":"faa3c24c049b8093","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2086//#testresult/faa3c24c049b8093","status":"passed","time":{"start":1725569780151,"stop":1725569781289,"duration":1138}},{"uid":"6cbbb784fe9487f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2083//#testresult/6cbbb784fe9487f8","status":"passed","time":{"start":1725495575509,"stop":1725495576685,"duration":1176}},{"uid":"7766731bdadfd6f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/7766731bdadfd6f8","status":"passed","time":{"start":1725430621914,"stop":1725430623039,"duration":1125}},{"uid":"314cb91bcdc98024","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/314cb91bcdc98024","status":"passed","time":{"start":1725409276281,"stop":1725409277583,"duration":1302}},{"uid":"cb36b00b7101ac5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2080//#testresult/cb36b00b7101ac5","status":"passed","time":{"start":1725404200670,"stop":1725404201708,"duration":1038}}]},"tags":[]},"source":"cfb5251edd36de89.json","parameterValues":["MaldonDistrictCouncil"]}