{"uid":"87d5c50655af7f66","name":"Validate Council Output [SouthNorfolkCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e5d83111f1a9552c04e48720eaedba42","time":{"start":1703034423123,"stop":1703034424810,"duration":1687},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fee2c0afd80>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fee2b3d6610>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fee2b3d6610>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fee2c0afd80>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fee2b3d6610>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fee2b3d6610>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: SouthNorfolkCouncil","time":{"start":1703034423123,"stop":1703034423123,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SouthNorfolkCouncil using None and the None is set","time":{"start":1703034423124,"stop":1703034424808,"duration":1684},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1703034424809,"stop":1703034424809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1703034424809,"stop":1703034424810,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1429-529"},{"name":"thread","value":"2793-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthNorfolkCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":31,"broken":0,"skipped":0,"passed":56,"unknown":0,"total":87},"items":[{"uid":"979dad98bcfe8add","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1279//#testresult/979dad98bcfe8add","status":"passed","time":{"start":1703025050263,"stop":1703025051883,"duration":1620}},{"uid":"81b42b2646b64145","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1278//#testresult/81b42b2646b64145","status":"passed","time":{"start":1703025000579,"stop":1703025002156,"duration":1577}},{"uid":"a1e3ba13330cb62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1276//#testresult/a1e3ba13330cb62","status":"passed","time":{"start":1702948830619,"stop":1702948832220,"duration":1601}},{"uid":"c5a564fe39621334","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1275//#testresult/c5a564fe39621334","status":"passed","time":{"start":1702862449845,"stop":1702862451588,"duration":1743}},{"uid":"fae0b5c48d0e5d59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/fae0b5c48d0e5d59","status":"passed","time":{"start":1702860086729,"stop":1702860089505,"duration":2776}},{"uid":"c9215c100fa5a339","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/c9215c100fa5a339","status":"passed","time":{"start":1702843660659,"stop":1702843662502,"duration":1843}},{"uid":"5212bff1df3fbf78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/5212bff1df3fbf78","status":"passed","time":{"start":1702809485616,"stop":1702809487380,"duration":1764}},{"uid":"eaafc56e356ca989","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1247//#testresult/eaafc56e356ca989","status":"passed","time":{"start":1702657332722,"stop":1702657334165,"duration":1443}},{"uid":"3fdc55d1a80ce9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1248//#testresult/3fdc55d1a80ce9","status":"passed","time":{"start":1702657328324,"stop":1702657329880,"duration":1556}},{"uid":"f5138d1908cc52cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1244//#testresult/f5138d1908cc52cf","status":"passed","time":{"start":1702603268813,"stop":1702603270114,"duration":1301}},{"uid":"55072ce1401b2c6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1243//#testresult/55072ce1401b2c6c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702540143136,"stop":1702540144159,"duration":1023}},{"uid":"33fde221279b238e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1241//#testresult/33fde221279b238e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702516806707,"stop":1702516808289,"duration":1582}},{"uid":"8989bf244369f939","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1238//#testresult/8989bf244369f939","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702447538235,"stop":1702447539591,"duration":1356}},{"uid":"309a44825a3d0d98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1236//#testresult/309a44825a3d0d98","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702430419252,"stop":1702430422017,"duration":2765}},{"uid":"61e9b50676dae338","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1232//#testresult/61e9b50676dae338","status":"passed","time":{"start":1702366549642,"stop":1702366551521,"duration":1879}},{"uid":"3e8f193fc959cca0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1231//#testresult/3e8f193fc959cca0","status":"passed","time":{"start":1702344028525,"stop":1702344030492,"duration":1967}},{"uid":"f703a51b338c0e5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1229//#testresult/f703a51b338c0e5c","status":"passed","time":{"start":1702257603526,"stop":1702257605052,"duration":1526}},{"uid":"bfa6d51739a1f4eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1228//#testresult/bfa6d51739a1f4eb","status":"passed","time":{"start":1702171673300,"stop":1702171675840,"duration":2540}},{"uid":"3b6b2dd79327d553","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1227//#testresult/3b6b2dd79327d553","status":"passed","time":{"start":1702084732675,"stop":1702084736245,"duration":3570}},{"uid":"9701da86d653e748","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1225//#testresult/9701da86d653e748","status":"passed","time":{"start":1702066798827,"stop":1702066800517,"duration":1690}}]},"tags":[]},"source":"87d5c50655af7f66.json","parameterValues":["SouthNorfolkCouncil","None","None"]}