{"uid":"84c352e7ef323edf","name":"Validate Council Output [TorridgeDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"da903249529007ec357275ac5f075b6c","time":{"start":1701036341299,"stop":1701036343869,"duration":2570},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f33b355f060>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f33a3adc5d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f33a3adc5d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f33b355f060>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f33a3adc5d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f33a3adc5d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1701036341300,"stop":1701036341300,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from TorridgeDistrictCouncil using None and the None is set","time":{"start":1701036341300,"stop":1701036343867,"duration":2567},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701036343867,"stop":1701036343867,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701036343867,"stop":1701036343869,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1499-185"},{"name":"thread","value":"2991-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":20,"unknown":0,"total":29},"items":[{"uid":"468cebcfaa8ede92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1148//#testresult/468cebcfaa8ede92","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700961981562,"stop":1700961984345,"duration":2783}},{"uid":"d1885b0f4272c34d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1147//#testresult/d1885b0f4272c34d","status":"passed","time":{"start":1700875043364,"stop":1700875046049,"duration":2685}},{"uid":"fce09b3d5cabaa2e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1146//#testresult/fce09b3d5cabaa2e","status":"passed","time":{"start":1700788644617,"stop":1700788647337,"duration":2720}},{"uid":"d70745872915ba8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1145//#testresult/d70745872915ba8a","status":"passed","time":{"start":1700702364620,"stop":1700702370337,"duration":5717}},{"uid":"c032bf863651d02a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1143//#testresult/c032bf863651d02a","status":"passed","time":{"start":1700646487197,"stop":1700646489640,"duration":2443}},{"uid":"508aafd66fd16b70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1144//#testresult/508aafd66fd16b70","status":"passed","time":{"start":1700646466506,"stop":1700646469149,"duration":2643}},{"uid":"6cf27f30165ff6b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1141//#testresult/6cf27f30165ff6b9","status":"passed","time":{"start":1700616241830,"stop":1700616244854,"duration":3024}},{"uid":"5d168e53d7abad7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1136//#testresult/5d168e53d7abad7a","status":"passed","time":{"start":1700529866733,"stop":1700529869663,"duration":2930}},{"uid":"b4d79a76af811922","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1135//#testresult/b4d79a76af811922","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443303360,"stop":1700443306084,"duration":2724}},{"uid":"484a99c13c6a2e91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1134//#testresult/484a99c13c6a2e91","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700357058387,"stop":1700357061661,"duration":3274}},{"uid":"fb4d8d72b99bd3a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1133//#testresult/fb4d8d72b99bd3a0","status":"passed","time":{"start":1700270353822,"stop":1700270356570,"duration":2748}},{"uid":"d86d83054bbef4c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1132//#testresult/d86d83054bbef4c3","status":"passed","time":{"start":1700184122017,"stop":1700184125514,"duration":3497}},{"uid":"8e55ac0c276780e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1131//#testresult/8e55ac0c276780e","status":"passed","time":{"start":1700097627508,"stop":1700097630204,"duration":2696}},{"uid":"2ba53577d2312669","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1129//#testresult/2ba53577d2312669","status":"passed","time":{"start":1700011291517,"stop":1700011294347,"duration":2830}},{"uid":"1114c96dc0a99aa0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1128//#testresult/1114c96dc0a99aa0","status":"passed","time":{"start":1699924940063,"stop":1699924943392,"duration":3329}},{"uid":"4a98a10885c5382d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1127//#testresult/4a98a10885c5382d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699838363720,"stop":1699838366801,"duration":3081}},{"uid":"27cee0523e0abd24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1126//#testresult/27cee0523e0abd24","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699752239654,"stop":1699752242562,"duration":2908}},{"uid":"a2360668d82a9b2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/a2360668d82a9b2b","status":"passed","time":{"start":1699669275335,"stop":1699669278718,"duration":3383}},{"uid":"78ed849d8b47a293","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/78ed849d8b47a293","status":"passed","time":{"start":1699579136910,"stop":1699579140312,"duration":3402}},{"uid":"b5176727bb4e5ca5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/b5176727bb4e5ca5","status":"passed","time":{"start":1699492805305,"stop":1699492808268,"duration":2963}}]},"tags":[]},"source":"84c352e7ef323edf.json","parameterValues":["TorridgeDistrictCouncil","None","None"]}