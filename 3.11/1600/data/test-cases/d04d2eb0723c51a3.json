{"uid":"d04d2eb0723c51a3","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1710203142714,"stop":1710203162728,"duration":20014},"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f5f9cdd8e00>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5f9c23d350>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f5f9cdd8e00>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5f9c23d350>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1710203142714,"stop":1710203142715,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1710203142715,"stop":1710203162728,"duration":20013},"status":"failed","statusMessage":"time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"ValueError: time data 'Being collected today' does not match format '%A %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az975-941"},{"name":"thread","value":"2768-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":45,"broken":0,"skipped":0,"passed":78,"unknown":0,"total":123},"items":[{"uid":"4101be9df4321509","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1599//#testresult/4101be9df4321509","status":"passed","time":{"start":1710116841182,"stop":1710116858457,"duration":17275}},{"uid":"dae4abbd30fa111a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1598//#testresult/dae4abbd30fa111a","status":"passed","time":{"start":1710030508940,"stop":1710030526315,"duration":17375}},{"uid":"56384d806fb3d343","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1597//#testresult/56384d806fb3d343","status":"passed","time":{"start":1709943907724,"stop":1709943924449,"duration":16725}},{"uid":"44ebcc7a2550cd56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1596//#testresult/44ebcc7a2550cd56","status":"passed","time":{"start":1709857572154,"stop":1709857591338,"duration":19184}},{"uid":"2c716fde32f58767","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1595//#testresult/2c716fde32f58767","status":"passed","time":{"start":1709770851921,"stop":1709770868922,"duration":17001}},{"uid":"a62f1b4ad0ba244d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1594//#testresult/a62f1b4ad0ba244d","status":"passed","time":{"start":1709684761593,"stop":1709684778395,"duration":16802}},{"uid":"6cfb27bb0ed15eab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1593//#testresult/6cfb27bb0ed15eab","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55cb31b8ee93 <unknown>\n#1 0x55cb31886ce6 <unknown>\n#2 0x55cb318d1e48 <unknown>\n#3 0x55cb318d1f01 <unknown>\n#4 0x55cb319153f4 <unknown>\n#5 0x55cb318f3edd <unknown>\n#6 0x55cb31912899 <unknown>\n#7 0x55cb318f3c53 <unknown>\n#8 0x55cb318c4db3 <unknown>\n#9 0x55cb318c577e <unknown>\n#10 0x55cb31b547cb <unknown>\n#11 0x55cb31b587e5 <unknown>\n#12 0x55cb31b420e1 <unknown>\n#13 0x55cb31b59372 <unknown>\n#14 0x55cb31b261bf <unknown>\n#15 0x55cb31b7d488 <unknown>\n#16 0x55cb31b7d683 <unknown>\n#17 0x55cb31b8e044 <unknown>\n#18 0x7f3b62094ac3 <unknown>","time":{"start":1709598313553,"stop":1709598380310,"duration":66757}},{"uid":"9507578572ab749f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1592//#testresult/9507578572ab749f","status":"passed","time":{"start":1709511995335,"stop":1709512018205,"duration":22870}},{"uid":"81f7b2f235d1ced5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1572//#testresult/81f7b2f235d1ced5","status":"passed","time":{"start":1708561543622,"stop":1708561558044,"duration":14422}},{"uid":"6489bb078b176675","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1570//#testresult/6489bb078b176675","status":"passed","time":{"start":1708475138876,"stop":1708475157355,"duration":18479}},{"uid":"aa4c14a581fb0412","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1569//#testresult/aa4c14a581fb0412","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1708388751080,"stop":1708388769577,"duration":18497}},{"uid":"28f92826a9ab0820","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1568//#testresult/28f92826a9ab0820","status":"passed","time":{"start":1708302487449,"stop":1708302502420,"duration":14971}},{"uid":"1735a28046c0595e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1567//#testresult/1735a28046c0595e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55794a970303 <unknown>\n#1 0x55794a6552b7 <unknown>\n#2 0x55794a6a0cc0 <unknown>\n#3 0x55794a6a0db1 <unknown>\n#4 0x55794a6e4b44 <unknown>\n#5 0x55794a6c33ad <unknown>\n#6 0x55794a6e207c <unknown>\n#7 0x55794a6c3123 <unknown>\n#8 0x55794a693095 <unknown>\n#9 0x55794a69409e <unknown>\n#10 0x55794a9346ab <unknown>\n#11 0x55794a9384ba <unknown>\n#12 0x55794a920f85 <unknown>\n#13 0x55794a93912f <unknown>\n#14 0x55794a904e6f <unknown>\n#15 0x55794a95d5f8 <unknown>\n#16 0x55794a95d7c2 <unknown>\n#17 0x55794a96f4a4 <unknown>\n#18 0x7fad84294ac3 <unknown>","time":{"start":1708216084936,"stop":1708216153066,"duration":68130}},{"uid":"613924cf78c5951c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1566//#testresult/613924cf78c5951c","status":"passed","time":{"start":1708129529951,"stop":1708129552278,"duration":22327}},{"uid":"3e469f562d291626","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1563//#testresult/3e469f562d291626","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55dff614dd93 <unknown>\n#1 0x55dff5e31337 <unknown>\n#2 0x55dff5e7cd60 <unknown>\n#3 0x55dff5e7ce51 <unknown>\n#4 0x55dff5ec0bc4 <unknown>\n#5 0x55dff5e9f46d <unknown>\n#6 0x55dff5ebe12d <unknown>\n#7 0x55dff5e9f1e3 <unknown>\n#8 0x55dff5e6f135 <unknown>\n#9 0x55dff5e7013e <unknown>\n#10 0x55dff6111e4b <unknown>\n#11 0x55dff6115dfa <unknown>\n#12 0x55dff60fe6d5 <unknown>\n#13 0x55dff6116a6f <unknown>\n#14 0x55dff60e269f <unknown>\n#15 0x55dff613b098 <unknown>\n#16 0x55dff613b262 <unknown>\n#17 0x55dff614cf34 <unknown>\n#18 0x7f551c494ac3 <unknown>","time":{"start":1708043113555,"stop":1708043189788,"duration":76233}},{"uid":"885f0e17b9f5c793","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1562//#testresult/885f0e17b9f5c793","status":"passed","time":{"start":1707956738738,"stop":1707956756933,"duration":18195}},{"uid":"f9748fe3850ad241","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1561//#testresult/f9748fe3850ad241","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55c1096afd93 <unknown>\n#1 0x55c109393337 <unknown>\n#2 0x55c1093ded60 <unknown>\n#3 0x55c1093dee51 <unknown>\n#4 0x55c109422bc4 <unknown>\n#5 0x55c10940146d <unknown>\n#6 0x55c10942012d <unknown>\n#7 0x55c1094011e3 <unknown>\n#8 0x55c1093d1135 <unknown>\n#9 0x55c1093d213e <unknown>\n#10 0x55c109673e4b <unknown>\n#11 0x55c109677dfa <unknown>\n#12 0x55c1096606d5 <unknown>\n#13 0x55c109678a6f <unknown>\n#14 0x55c10964469f <unknown>\n#15 0x55c10969d098 <unknown>\n#16 0x55c10969d262 <unknown>\n#17 0x55c1096aef34 <unknown>\n#18 0x7f6245294ac3 <unknown>","time":{"start":1707870334876,"stop":1707870408202,"duration":73326}},{"uid":"e37516952cb17522","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1560//#testresult/e37516952cb17522","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ba43d12d93 <unknown>\n#1 0x55ba439f6337 <unknown>\n#2 0x55ba43a41d60 <unknown>\n#3 0x55ba43a41e51 <unknown>\n#4 0x55ba43a85bc4 <unknown>\n#5 0x55ba43a6446d <unknown>\n#6 0x55ba43a8312d <unknown>\n#7 0x55ba43a641e3 <unknown>\n#8 0x55ba43a34135 <unknown>\n#9 0x55ba43a3513e <unknown>\n#10 0x55ba43cd6e4b <unknown>\n#11 0x55ba43cdadfa <unknown>\n#12 0x55ba43cc36d5 <unknown>\n#13 0x55ba43cdba6f <unknown>\n#14 0x55ba43ca769f <unknown>\n#15 0x55ba43d00098 <unknown>\n#16 0x55ba43d00262 <unknown>\n#17 0x55ba43d11f34 <unknown>\n#18 0x7fe4e2e94ac3 <unknown>","time":{"start":1707784001725,"stop":1707784069171,"duration":67446}},{"uid":"aa057c173c0bf210","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1559//#testresult/aa057c173c0bf210","status":"passed","time":{"start":1707697636646,"stop":1707697654849,"duration":18203}},{"uid":"3fa1c03d3221789f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1556//#testresult/3fa1c03d3221789f","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=121.0.6167.139)\nStacktrace:\n#0 0x55ae237e9d93 <unknown>\n#1 0x55ae234cd177 <unknown>\n#2 0x55ae23512cef <unknown>\n#3 0x55ae2351105b <unknown>\n#4 0x55ae2353b442 <unknown>\n#5 0x55ae2350d028 <unknown>\n#6 0x55ae2353b60e <unknown>\n#7 0x55ae2355a12d <unknown>\n#8 0x55ae2353b1e3 <unknown>\n#9 0x55ae2350b135 <unknown>\n#10 0x55ae2350c13e <unknown>\n#11 0x55ae237ade4b <unknown>\n#12 0x55ae237b1dfa <unknown>\n#13 0x55ae2379a6d5 <unknown>\n#14 0x55ae237b2a6f <unknown>\n#15 0x55ae2377e69f <unknown>\n#16 0x55ae237d7098 <unknown>\n#17 0x55ae237d7262 <unknown>\n#18 0x55ae237e8f34 <unknown>\n#19 0x7f6b14094ac3 <unknown>","time":{"start":1707611309475,"stop":1707611323254,"duration":13779}}]},"tags":[]},"source":"d04d2eb0723c51a3.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}