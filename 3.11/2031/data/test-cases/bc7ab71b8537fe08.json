{"uid":"bc7ab71b8537fe08","name":"Validate Council Output [WestSuffolkCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f49da38cf3e195a06db2680429130b4a","time":{"start":1724027061795,"stop":1724027073058,"duration":11263},"status":"failed","statusMessage":"AttributeError: module 'itertools' has no attribute 'batched'","statusTrace":"fixturefunc = <function scrape_step at 0x7fca2bd61940>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fca2ba09090>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WestSuffolkCouncil.CouncilClass object at 0x7fca2b167390>, page = ''\nkwargs = {'council_module_str': 'WestSuffolkCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, user_uprn = '10009739960'\napi_url = 'https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId=10009739960'\nresponse = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html>\n<head>\n<style>\r\n\t\ta {\r\n\t\t  color: #0000EE; /* Traditional hyperlink blue color */\r\n\t\t}\t\r\n\t</st...<div id=\"atFooter\"></div>-->\n<script src=\"custom/js/responsivemap.js\" type=\"text/javascript\"></script>\n</body>\n</html>\n\npanel_search = <function CouncilClass.parse_data.<locals>.panel_search at 0x7fca2b0ff1a0>\ncollection_tag = [<div class=\"atPanelData\"><strong>Black bin:</strong> Wednesday 7th August <br/><strong>Blue \r\n bin:</strong> Wednesday 14th August <br/><strong>Brown  \r\n bin:</strong> Wednesday 14th August \r\n </div>]\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_uprn = kwargs.get(\"uprn\")\n    \n        api_url = f\"https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId={user_uprn}\"\n    \n        response = requests.get(api_url)\n    \n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        def panel_search(cur_tag: Tag):\n            \"\"\"\n            Helper function to find the correct tag\n            \"\"\"\n            if cur_tag.name != \"div\":\n                return False\n    \n            tag_class = cur_tag.attrs.get(\"class\", None)\n            if tag_class is None:\n                return False\n    \n            parent_has_header = cur_tag.parent.find_all(\n                \"h4\", string=\"Bin collection days\"\n            )\n            if len(parent_has_header) < 1:\n                return False\n    \n            return \"atPanelData\" in tag_class\n    \n        collection_tag = soup.body.find_all(panel_search)\n    \n        # Parse the resultant div\n        for tag in collection_tag:\n            text_list = list(tag.stripped_strings)\n            # Create and parse the list as tuples of name:date\n>           for bin_name, collection_date in itertools.batched(text_list, 2):\nE           AttributeError: module 'itertools' has no attribute 'batched'\n\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:48: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: module 'itertools' has no attribute 'batched'","statusTrace":"fixturefunc = <function scrape_step at 0x7fca2bd61940>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fca2ba09090>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WestSuffolkCouncil.CouncilClass object at 0x7fca2b167390>, page = ''\nkwargs = {'council_module_str': 'WestSuffolkCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, user_uprn = '10009739960'\napi_url = 'https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId=10009739960'\nresponse = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html>\n<head>\n<style>\r\n\t\ta {\r\n\t\t  color: #0000EE; /* Traditional hyperlink blue color */\r\n\t\t}\t\r\n\t</st...<div id=\"atFooter\"></div>-->\n<script src=\"custom/js/responsivemap.js\" type=\"text/javascript\"></script>\n</body>\n</html>\n\npanel_search = <function CouncilClass.parse_data.<locals>.panel_search at 0x7fca2b0ff1a0>\ncollection_tag = [<div class=\"atPanelData\"><strong>Black bin:</strong> Wednesday 7th August <br/><strong>Blue \r\n bin:</strong> Wednesday 14th August <br/><strong>Brown  \r\n bin:</strong> Wednesday 14th August \r\n </div>]\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_uprn = kwargs.get(\"uprn\")\n    \n        api_url = f\"https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId={user_uprn}\"\n    \n        response = requests.get(api_url)\n    \n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        def panel_search(cur_tag: Tag):\n            \"\"\"\n            Helper function to find the correct tag\n            \"\"\"\n            if cur_tag.name != \"div\":\n                return False\n    \n            tag_class = cur_tag.attrs.get(\"class\", None)\n            if tag_class is None:\n                return False\n    \n            parent_has_header = cur_tag.parent.find_all(\n                \"h4\", string=\"Bin collection days\"\n            )\n            if len(parent_has_header) < 1:\n                return False\n    \n            return \"atPanelData\" in tag_class\n    \n        collection_tag = soup.body.find_all(panel_search)\n    \n        # Parse the resultant div\n        for tag in collection_tag:\n            text_list = list(tag.stripped_strings)\n            # Create and parse the list as tuples of name:date\n>           for bin_name, collection_date in itertools.batched(text_list, 2):\nE           AttributeError: module 'itertools' has no attribute 'batched'\n\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:48: AttributeError","steps":[{"name":"Given the council","time":{"start":1724027061795,"stop":1724027061796,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1724027061796,"stop":1724027073058,"duration":11262},"status":"failed","statusMessage":"module 'itertools' has no attribute 'batched'","statusTrace":"AttributeError: module 'itertools' has no attribute 'batched'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fa9d8a6870f7eb5c","name":"stdout","source":"fa9d8a6870f7eb5c.txt","type":"text/plain","size":45}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1113-542"},{"name":"thread","value":"2769-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":104,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":104},"items":[{"uid":"b5dcbe50b3a4d590","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2030//#testresult/b5dcbe50b3a4d590","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723940717212,"stop":1723940727590,"duration":10378}},{"uid":"ea53b81836d078d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2029//#testresult/ea53b81836d078d3","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723854349325,"stop":1723854360108,"duration":10783}},{"uid":"67972d13f682875a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2028//#testresult/67972d13f682875a","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723767913181,"stop":1723767923471,"duration":10290}},{"uid":"b06efd98ddbe6f70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2027//#testresult/b06efd98ddbe6f70","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723681053501,"stop":1723681063615,"duration":10114}},{"uid":"b8f941f589435e65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2026//#testresult/b8f941f589435e65","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723595090114,"stop":1723595102923,"duration":12809}},{"uid":"cc44b6b3479b7e94","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2025//#testresult/cc44b6b3479b7e94","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723508862783,"stop":1723508874976,"duration":12193}},{"uid":"e8dce9418862d91d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2024//#testresult/e8dce9418862d91d","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723422464896,"stop":1723422475166,"duration":10270}},{"uid":"d957dbb0a07f1a2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2022//#testresult/d957dbb0a07f1a2f","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723336009235,"stop":1723336020044,"duration":10809}},{"uid":"e915d266e1d48ff5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2020//#testresult/e915d266e1d48ff5","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723249662511,"stop":1723249672600,"duration":10089}},{"uid":"9d294c286e3840ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2019//#testresult/9d294c286e3840ca","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723163240122,"stop":1723163251231,"duration":11109}},{"uid":"cc093c4279d04437","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2014//#testresult/cc093c4279d04437","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1723076756588,"stop":1723076771473,"duration":14885}},{"uid":"bd0f7f5c6a82c82c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2012//#testresult/bd0f7f5c6a82c82c","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1722990348423,"stop":1722990358732,"duration":10309}},{"uid":"468732c0c4e66c5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2007//#testresult/468732c0c4e66c5e","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1722903989802,"stop":1722904000469,"duration":10667}},{"uid":"f6303c8ffb7da4c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2006//#testresult/f6303c8ffb7da4c7","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1722817858551,"stop":1722817869897,"duration":11346}},{"uid":"ae5d6356af7d3678","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2005//#testresult/ae5d6356af7d3678","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1722731194441,"stop":1722731205252,"duration":10811}},{"uid":"52c4453d5e8146b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2004//#testresult/52c4453d5e8146b5","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1722644890269,"stop":1722644901381,"duration":11112}},{"uid":"40f046c73012c715","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2003//#testresult/40f046c73012c715","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1722558406779,"stop":1722558416811,"duration":10032}},{"uid":"a1dba63a7c08491f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2002//#testresult/a1dba63a7c08491f","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1722471878617,"stop":1722471888411,"duration":9794}},{"uid":"cba3fe42e24393c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1998//#testresult/cba3fe42e24393c0","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1722385521639,"stop":1722385532176,"duration":10537}},{"uid":"1c09b5f6203d8542","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1997//#testresult/1c09b5f6203d8542","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1722299080005,"stop":1722299089888,"duration":9883}}]},"tags":[]},"source":"bc7ab71b8537fe08.json","parameterValues":["WestSuffolkCouncil"]}