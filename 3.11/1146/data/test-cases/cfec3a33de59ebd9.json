{"uid":"cfec3a33de59ebd9","name":"Validate Council Output [BromleyBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f99c7ea76f01e7f999185ee0dfc6d3a7","time":{"start":1700788542275,"stop":1700788546106,"duration":3831},"status":"failed","statusMessage":"ValueError: unconverted data remains: \n              \n              (In progress)","statusTrace":"fixturefunc = <function scrape_step at 0x7f53eff1f240>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f53e2199b90>, 'council': 'BromleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BromleyBoroughCouncil.py:39: in parse_data\n    next_collection = datetime.strptime(remove_ordinal_indicator_from_date_string(collection_date.replace(',', '')), \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Friday 24 November\\n              \\n              (In progress)'\nformat = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n            raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\n        if len(data_string) != found.end():\n>           raise ValueError(\"unconverted data remains: %s\" %\n                              data_string[found.end():])\nE           ValueError: unconverted data remains: \nE                         \nE                         (In progress)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:352: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: unconverted data remains: \n              \n              (In progress)","statusTrace":"fixturefunc = <function scrape_step at 0x7f53eff1f240>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f53e2199b90>, 'council': 'BromleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BromleyBoroughCouncil.py:39: in parse_data\n    next_collection = datetime.strptime(remove_ordinal_indicator_from_date_string(collection_date.replace(',', '')), \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Friday 24 November\\n              \\n              (In progress)'\nformat = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n            raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\n        if len(data_string) != found.end():\n>           raise ValueError(\"unconverted data remains: %s\" %\n                              data_string[found.end():])\nE           ValueError: unconverted data remains: \nE                         \nE                         (In progress)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:352: ValueError","steps":[{"name":"Given the council: BromleyBoroughCouncil","time":{"start":1700788542276,"stop":1700788542276,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BromleyBoroughCouncil using None and the None is set","time":{"start":1700788542276,"stop":1700788546106,"duration":3830},"status":"failed","statusMessage":"unconverted data remains: \n              \n              (In progress)","statusTrace":"ValueError: unconverted data remains: \n              \n              (In progress)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az887-156"},{"name":"thread","value":"2829-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BromleyBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":24,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":26},"items":[{"uid":"89c05b765e093e03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1145//#testresult/89c05b765e093e03","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700702251938,"stop":1700702253501,"duration":1563}},{"uid":"522b9eb570110aa6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1143//#testresult/522b9eb570110aa6","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1700646335779,"stop":1700646340230,"duration":4451}},{"uid":"5f8fe19af33e4b57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1144//#testresult/5f8fe19af33e4b57","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700646384743,"stop":1700646385801,"duration":1058}},{"uid":"848b30b9ea7b976e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1141//#testresult/848b30b9ea7b976e","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700616016643,"stop":1700616018100,"duration":1457}},{"uid":"ba8ad197a02ea7d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1136//#testresult/ba8ad197a02ea7d6","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700529653892,"stop":1700529655076,"duration":1184}},{"uid":"3358ec8f51f0dee0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1135//#testresult/3358ec8f51f0dee0","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700443139794,"stop":1700443140721,"duration":927}},{"uid":"f98d65112f643618","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1134//#testresult/f98d65112f643618","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700356965463,"stop":1700356966947,"duration":1484}},{"uid":"ec93876936f7275a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1133//#testresult/ec93876936f7275a","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700270232747,"stop":1700270233860,"duration":1113}},{"uid":"e8e14677ea27661c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1132//#testresult/e8e14677ea27661c","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700183879363,"stop":1700183880453,"duration":1090}},{"uid":"fcda7d962a2846d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1131//#testresult/fcda7d962a2846d3","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700097524186,"stop":1700097525198,"duration":1012}},{"uid":"758075ad9e6532d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1129//#testresult/758075ad9e6532d","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1700011037526,"stop":1700011038806,"duration":1280}},{"uid":"25ce68ba994b3cb0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1128//#testresult/25ce68ba994b3cb0","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699924578563,"stop":1699924579616,"duration":1053}},{"uid":"8ca4e2c5e1a89393","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1127//#testresult/8ca4e2c5e1a89393","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699838250686,"stop":1699838252350,"duration":1664}},{"uid":"ee0c213d06a32a2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1126//#testresult/ee0c213d06a32a2a","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699752024365,"stop":1699752025652,"duration":1287}},{"uid":"71f6c6a041e9e526","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/71f6c6a041e9e526","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699668896219,"stop":1699668897667,"duration":1448}},{"uid":"ea8d35b7bb9b340d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/ea8d35b7bb9b340d","status":"failed","statusDetails":"ValueError: unconverted data remains: \n              \n              (In progress)","time":{"start":1699578921308,"stop":1699578925795,"duration":4487}},{"uid":"13649711af4e1416","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/13649711af4e1416","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1699492590371,"stop":1699492594894,"duration":4523}},{"uid":"868b6aac06a2a58f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/868b6aac06a2a58f","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699481269904,"stop":1699481271112,"duration":1208}},{"uid":"32318215f0d145","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/32318215f0d145","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699481291903,"stop":1699481293176,"duration":1273}},{"uid":"a5936f08a8db0b4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/a5936f08a8db0b4b","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699445057634,"stop":1699445058734,"duration":1100}}]},"tags":[]},"source":"cfec3a33de59ebd9.json","parameterValues":["BromleyBoroughCouncil","None","None"]}