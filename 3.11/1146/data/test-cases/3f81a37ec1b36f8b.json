{"uid":"3f81a37ec1b36f8b","name":"Validate Council Output [MertonCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a067692419696058d026d9aab0da27d0","time":{"start":1700788576318,"stop":1700788620544,"duration":44226},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f53eff1f240>\nrequest = <FixtureRequest for <Function test_scenario_outline[MertonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f53e061c850>, 'council': 'MertonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MertonCouncil.CouncilClass object at 0x7f53e06cc390>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://myneighbourhood.merton.gov.uk/Wasteservices/WasteServices.aspx?ID=28186366', ...}\nsoup = \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.d...</a>\r\n\t\t| Copyright © 2023 Merton Council and its licensors. All rights reserved.\r\n\t</p>\n</div>\n</div>\n</body>\n</html>\n\nbin_data_dict = {'bins': []}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        bin_data_dict = {\"bins\": []}\n    \n        # Search for the specific bin in the table using BS4\n>       rows = soup.find(\"table\", class_=(\"collectiondays\")).find_all(\n            \"tr\",\n            class_=(\n                \"food-caddy\",\n                \"papercard-wheelie\",\n                \"plastics-boxes\",\n                \"rubbish-wheelie\",\n                \"textiles\",\n                \"batteries\",\n            ),\n        )\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/MertonCouncil.py:24: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f53eff1f240>\nrequest = <FixtureRequest for <Function test_scenario_outline[MertonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f53e061c850>, 'council': 'MertonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MertonCouncil.CouncilClass object at 0x7f53e06cc390>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://myneighbourhood.merton.gov.uk/Wasteservices/WasteServices.aspx?ID=28186366', ...}\nsoup = \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.d...</a>\r\n\t\t| Copyright © 2023 Merton Council and its licensors. All rights reserved.\r\n\t</p>\n</div>\n</div>\n</body>\n</html>\n\nbin_data_dict = {'bins': []}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        bin_data_dict = {\"bins\": []}\n    \n        # Search for the specific bin in the table using BS4\n>       rows = soup.find(\"table\", class_=(\"collectiondays\")).find_all(\n            \"tr\",\n            class_=(\n                \"food-caddy\",\n                \"papercard-wheelie\",\n                \"plastics-boxes\",\n                \"rubbish-wheelie\",\n                \"textiles\",\n                \"batteries\",\n            ),\n        )\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/MertonCouncil.py:24: AttributeError","steps":[{"name":"Given the council: MertonCouncil","time":{"start":1700788576319,"stop":1700788576319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from MertonCouncil using None and the None is set","time":{"start":1700788576319,"stop":1700788620544,"duration":44225},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az887-156"},{"name":"thread","value":"2829-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MertonCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":26,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":26},"items":[{"uid":"d360ae7fa4318c99","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1145//#testresult/d360ae7fa4318c99","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700702296180,"stop":1700702301309,"duration":5129}},{"uid":"635d7cff743a2d83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1143//#testresult/635d7cff743a2d83","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646379277,"stop":1700646385289,"duration":6012}},{"uid":"d68f7338c79fa477","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1144//#testresult/d68f7338c79fa477","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646423907,"stop":1700646430080,"duration":6173}},{"uid":"5f2f57693008cc80","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1141//#testresult/5f2f57693008cc80","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700616074789,"stop":1700616076467,"duration":1678}},{"uid":"bd82f71aaf141a0f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1136//#testresult/bd82f71aaf141a0f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700529701357,"stop":1700529703168,"duration":1811}},{"uid":"e2eb749373a959fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1135//#testresult/e2eb749373a959fa","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443324865,"stop":1700443330222,"duration":5357}},{"uid":"1b74c0d01d2ca970","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1134//#testresult/1b74c0d01d2ca970","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700357004483,"stop":1700357010216,"duration":5733}},{"uid":"38b8b4e9a380985e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1133//#testresult/38b8b4e9a380985e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270281387,"stop":1700270287485,"duration":6098}},{"uid":"41b7f2dc8fe50c0b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1132//#testresult/41b7f2dc8fe50c0b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183914925,"stop":1700183920453,"duration":5528}},{"uid":"f16785753193bab6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1131//#testresult/f16785753193bab6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097579640,"stop":1700097581176,"duration":1536}},{"uid":"140231ac629c1efa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1129//#testresult/140231ac629c1efa","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700011139161,"stop":1700011141020,"duration":1859}},{"uid":"2dbdcfc72273fdce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1128//#testresult/2dbdcfc72273fdce","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699924901494,"stop":1699924907771,"duration":6277}},{"uid":"9ebacf9838896a4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1127//#testresult/9ebacf9838896a4a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699838293070,"stop":1699838294762,"duration":1692}},{"uid":"e9425240f72309ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1126//#testresult/e9425240f72309ab","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699752078238,"stop":1699752080108,"duration":1870}},{"uid":"f6225c5de98197da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/f6225c5de98197da","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699669145201,"stop":1699669147062,"duration":1861}},{"uid":"e46957495c753a22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/e46957495c753a22","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1699578959107,"stop":1699578960648,"duration":1541}},{"uid":"525f17559c18bf75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/525f17559c18bf75","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699492651272,"stop":1699492657235,"duration":5963}},{"uid":"46909eecc007f956","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/46909eecc007f956","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699481534195,"stop":1699481536339,"duration":2144}},{"uid":"d82710eb7183be64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/d82710eb7183be64","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699481453253,"stop":1699481454799,"duration":1546}},{"uid":"271344ae9034b60c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/271344ae9034b60c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699445093280,"stop":1699445094775,"duration":1495}}]},"tags":[]},"source":"3f81a37ec1b36f8b.json","parameterValues":["MertonCouncil","None","None"]}