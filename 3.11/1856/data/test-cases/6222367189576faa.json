{"uid":"6222367189576faa","name":"Validate Council Output [WestBerkshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"01e9aabe7c605fabcf00c630ea7946b4","time":{"start":1716511415395,"stop":1716511422916,"duration":7521},"status":"failed","statusMessage":"ValueError: time data '' does not match format '%d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fd72b1223e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestBerkshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd729e43510>, 'council': 'WestBerkshireCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestBerkshireCouncil.py:85: in parse_data\n    recycling_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = '', format = '%d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data '' does not match format '%d %B'\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data '' does not match format '%d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fd72b1223e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestBerkshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd729e43510>, 'council': 'WestBerkshireCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestBerkshireCouncil.py:85: in parse_data\n    recycling_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = '', format = '%d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data '' does not match format '%d %B'\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: WestBerkshireCouncil","time":{"start":1716511415395,"stop":1716511415396,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestBerkshireCouncil","time":{"start":1716511415396,"stop":1716511422916,"duration":7520},"status":"failed","statusMessage":"time data '' does not match format '%d %B'","statusTrace":"ValueError: time data '' does not match format '%d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c37588a35dab28d4","name":"stdout","source":"c37588a35dab28d4.txt","type":"text/plain","size":62}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1383-897"},{"name":"thread","value":"2833-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestBerkshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":11},"items":[{"uid":"8054eb1637d14f32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1855//#testresult/8054eb1637d14f32","status":"failed","statusDetails":"ValueError: time data '' does not match format '%d %B'","time":{"start":1716424955932,"stop":1716424962088,"duration":6156}},{"uid":"7f0e55d522c9d476","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1854//#testresult/7f0e55d522c9d476","status":"passed","time":{"start":1716338352229,"stop":1716338364832,"duration":12603}},{"uid":"ed4d5da897815a29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1853//#testresult/ed4d5da897815a29","status":"passed","time":{"start":1716252139789,"stop":1716252153366,"duration":13577}},{"uid":"8c844d3e8516ab64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1852//#testresult/8c844d3e8516ab64","status":"failed","statusDetails":"ValueError: time data 'May' does not match format '%d %B'","time":{"start":1716165644685,"stop":1716165657829,"duration":13144}},{"uid":"d7e2a80558e0690e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1851//#testresult/d7e2a80558e0690e","status":"failed","statusDetails":"ValueError: time data '' does not match format '%d %B'","time":{"start":1716155356447,"stop":1716155493192,"duration":136745}},{"uid":"d30991cef6c66767","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1849//#testresult/d30991cef6c66767","status":"passed","time":{"start":1716152888552,"stop":1716152912753,"duration":24201}},{"uid":"4c3ddf55e92fa576","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1846//#testresult/4c3ddf55e92fa576","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x557f83d7aeca <unknown>\n#1 0x557f83a6445c <unknown>\n#2 0x557f83a996f8 <unknown>\n#3 0x557f83a9563b <unknown>\n#4 0x557f83adfb19 <unknown>\n#5 0x557f83ad3253 <unknown>\n#6 0x557f83aa31c7 <unknown>\n#7 0x557f83aa3b3e <unknown>\n#8 0x557f83d4130b <unknown>\n#9 0x557f83d453b7 <unknown>\n#10 0x557f83d2de3e <unknown>\n#11 0x557f83d45e82 <unknown>\n#12 0x557f83d127df <unknown>\n#13 0x557f83d6a1b8 <unknown>\n#14 0x557f83d6a38b <unknown>\n#15 0x557f83d79ffc <unknown>\n#16 0x7f89fb094ac3 <unknown>","time":{"start":1716079391181,"stop":1716079405369,"duration":14188}},{"uid":"3f822ec7a73d0a3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1842//#testresult/3f822ec7a73d0a3f","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x56464c745eca <unknown>\n#1 0x56464c42f45c <unknown>\n#2 0x56464c4646f8 <unknown>\n#3 0x56464c46063b <unknown>\n#4 0x56464c4aab19 <unknown>\n#5 0x56464c49e253 <unknown>\n#6 0x56464c46e1c7 <unknown>\n#7 0x56464c46eb3e <unknown>\n#8 0x56464c70c30b <unknown>\n#9 0x56464c7103b7 <unknown>\n#10 0x56464c6f8e3e <unknown>\n#11 0x56464c710e82 <unknown>\n#12 0x56464c6dd7df <unknown>\n#13 0x56464c7351b8 <unknown>\n#14 0x56464c73538b <unknown>\n#15 0x56464c744ffc <unknown>\n#16 0x7f94d4294ac3 <unknown>","time":{"start":1715992660735,"stop":1715992672480,"duration":11745}},{"uid":"57ccc9d30d31d88d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1839//#testresult/57ccc9d30d31d88d","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55cf39f6eeca <unknown>\n#1 0x55cf39c5845c <unknown>\n#2 0x55cf39c8d6f8 <unknown>\n#3 0x55cf39c8963b <unknown>\n#4 0x55cf39cd3b19 <unknown>\n#5 0x55cf39cc7253 <unknown>\n#6 0x55cf39c971c7 <unknown>\n#7 0x55cf39c97b3e <unknown>\n#8 0x55cf39f3530b <unknown>\n#9 0x55cf39f393b7 <unknown>\n#10 0x55cf39f21e3e <unknown>\n#11 0x55cf39f39e82 <unknown>\n#12 0x55cf39f067df <unknown>\n#13 0x55cf39f5e1b8 <unknown>\n#14 0x55cf39f5e38b <unknown>\n#15 0x55cf39f6dffc <unknown>\n#16 0x7fc28b694ac3 <unknown>","time":{"start":1715984009072,"stop":1715984010552,"duration":1480}},{"uid":"635d95ffed51b4a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1834//#testresult/635d95ffed51b4a7","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x559bedcc1eca <unknown>\n#1 0x559bed9ab45c <unknown>\n#2 0x559bed9e06f8 <unknown>\n#3 0x559bed9dc63b <unknown>\n#4 0x559beda26b19 <unknown>\n#5 0x559beda1a253 <unknown>\n#6 0x559bed9ea1c7 <unknown>\n#7 0x559bed9eab3e <unknown>\n#8 0x559bedc8830b <unknown>\n#9 0x559bedc8c3b7 <unknown>\n#10 0x559bedc74e3e <unknown>\n#11 0x559bedc8ce82 <unknown>\n#12 0x559bedc597df <unknown>\n#13 0x559bedcb11b8 <unknown>\n#14 0x559bedcb138b <unknown>\n#15 0x559bedcc0ffc <unknown>\n#16 0x7f39c8c94ac3 <unknown>","time":{"start":1715974255809,"stop":1715974257409,"duration":1600}}]},"tags":[]},"source":"6222367189576faa.json","parameterValues":["WestBerkshireCouncil"]}