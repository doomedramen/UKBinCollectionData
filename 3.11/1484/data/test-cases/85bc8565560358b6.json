{"uid":"85bc8565560358b6","name":"Validate Council Output [MaldonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d7ae259690887cdb3dd06225c666392f","time":{"start":1705105678030,"stop":1705105708839,"duration":30809},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7fc36e4a4d60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc36db3dd50>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7fc3703fc810>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7fc36e4a4d60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc36db3dd50>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7fc3703fc810>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council: MaldonDistrictCouncil","time":{"start":1705105678030,"stop":1705105678031,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MaldonDistrictCouncil using None and the None is set","time":{"start":1705105678031,"stop":1705105708839,"duration":30808},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az773-91"},{"name":"thread","value":"2748-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":152,"unknown":0,"total":158},"items":[{"uid":"9fb282ada43e22a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1482//#testresult/9fb282ada43e22a0","status":"passed","time":{"start":1705019248219,"stop":1705019252558,"duration":4339}},{"uid":"7ce0b41dab034712","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1478//#testresult/7ce0b41dab034712","status":"passed","time":{"start":1704932849542,"stop":1704932858763,"duration":9221}},{"uid":"6261d6b38f15fa70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1472//#testresult/6261d6b38f15fa70","status":"passed","time":{"start":1704846456413,"stop":1704846463590,"duration":7177}},{"uid":"140813d43dbee961","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1456//#testresult/140813d43dbee961","status":"passed","time":{"start":1704760167814,"stop":1704760168826,"duration":1012}},{"uid":"4aba38b94bc8cc5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1452//#testresult/4aba38b94bc8cc5e","status":"passed","time":{"start":1704711521631,"stop":1704711522642,"duration":1011}},{"uid":"f42a2ad538edd693","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1450//#testresult/f42a2ad538edd693","status":"passed","time":{"start":1704710758620,"stop":1704710759737,"duration":1117}},{"uid":"64f0bbbf55f6b2a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1448//#testresult/64f0bbbf55f6b2a5","status":"passed","time":{"start":1704710165937,"stop":1704710167100,"duration":1163}},{"uid":"f4d1949ec3654ede","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1446//#testresult/f4d1949ec3654ede","status":"passed","time":{"start":1704709639297,"stop":1704709640604,"duration":1307}},{"uid":"ed7ee1e6c254f071","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1443//#testresult/ed7ee1e6c254f071","status":"passed","time":{"start":1704704147821,"stop":1704704149118,"duration":1297}},{"uid":"86db32bf23933f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1441//#testresult/86db32bf23933f6","status":"passed","time":{"start":1704673794415,"stop":1704673796190,"duration":1775}},{"uid":"b7bd872f2a67e964","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1426//#testresult/b7bd872f2a67e964","status":"passed","time":{"start":1704615428780,"stop":1704615429745,"duration":965}},{"uid":"f5dc22d4ec83291d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1423//#testresult/f5dc22d4ec83291d","status":"passed","time":{"start":1704614826882,"stop":1704614827992,"duration":1110}},{"uid":"aaf6be5ceeefbe4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1420//#testresult/aaf6be5ceeefbe4a","status":"passed","time":{"start":1704587512509,"stop":1704587522435,"duration":9926}},{"uid":"bfcf537dcc2746c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1413//#testresult/bfcf537dcc2746c1","status":"passed","time":{"start":1704542778914,"stop":1704542783412,"duration":4498}},{"uid":"b8ef6f90ff9805ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1408//#testresult/b8ef6f90ff9805ae","status":"passed","time":{"start":1704496206770,"stop":1704496208125,"duration":1355}},{"uid":"bd709fc84472ffe5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1406//#testresult/bd709fc84472ffe5","status":"passed","time":{"start":1704453459216,"stop":1704453460546,"duration":1330}},{"uid":"d3deed2fd7da36d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1405//#testresult/d3deed2fd7da36d0","status":"passed","time":{"start":1704452653284,"stop":1704452654448,"duration":1164}},{"uid":"bbba523110f2c4e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1400//#testresult/bbba523110f2c4e8","status":"passed","time":{"start":1704443812297,"stop":1704443813391,"duration":1094}},{"uid":"513b1ab31050c857","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1399//#testresult/513b1ab31050c857","status":"passed","time":{"start":1704443391607,"stop":1704443392716,"duration":1109}},{"uid":"ab462c22ea2db8c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1397//#testresult/ab462c22ea2db8c6","status":"passed","time":{"start":1704442523226,"stop":1704442524208,"duration":982}}]},"tags":[]},"source":"85bc8565560358b6.json","parameterValues":["MaldonDistrictCouncil","None","None"]}