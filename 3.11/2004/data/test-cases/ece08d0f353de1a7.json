{"uid":"ece08d0f353de1a7","name":"Validate Council Output [BedfordBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4d48486dc2c0a9c252d5ac44f0d62a3d","time":{"start":1722643779684,"stop":1722643840766,"duration":61082},"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7f24c1eb4860>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f24c1d2e090>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7f24c1a8ee50>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7f24c1eb4860>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f24c1d2e090>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7f24c1a8ee50>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","steps":[{"name":"Given the council","time":{"start":1722643779684,"stop":1722643779684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1722643779685,"stop":1722643840766,"duration":61081},"status":"failed","statusMessage":"Could not get latest data!","statusTrace":"ConnectionError: Could not get latest data!\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"24ed82187947f6c","name":"stdout","source":"24ed82187947f6c.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az891-146"},{"name":"thread","value":"2791-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BedfordBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":83,"unknown":0,"total":86},"items":[{"uid":"d4aae6e910d5c530","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2003//#testresult/d4aae6e910d5c530","status":"passed","time":{"start":1722557374511,"stop":1722557382915,"duration":8404}},{"uid":"19f687573b83be1e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2002//#testresult/19f687573b83be1e","status":"passed","time":{"start":1722470854937,"stop":1722470875625,"duration":20688}},{"uid":"275476ff1c52239a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1998//#testresult/275476ff1c52239a","status":"passed","time":{"start":1722384475457,"stop":1722384479093,"duration":3636}},{"uid":"90c4189be4229ddb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1997//#testresult/90c4189be4229ddb","status":"passed","time":{"start":1722298041894,"stop":1722298047369,"duration":5475}},{"uid":"530d7d12648ef8c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1996//#testresult/530d7d12648ef8c","status":"passed","time":{"start":1722211629284,"stop":1722211634275,"duration":4991}},{"uid":"782e0301332c4fdc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1995//#testresult/782e0301332c4fdc","status":"passed","time":{"start":1722125237964,"stop":1722125243169,"duration":5205}},{"uid":"ce11d40c8e31d106","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1994//#testresult/ce11d40c8e31d106","status":"passed","time":{"start":1722038839783,"stop":1722038850873,"duration":11090}},{"uid":"5b170fde6cccaa85","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1993//#testresult/5b170fde6cccaa85","status":"passed","time":{"start":1721952432751,"stop":1721952437740,"duration":4989}},{"uid":"71ab068426ddf44a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1992//#testresult/71ab068426ddf44a","status":"passed","time":{"start":1721866093764,"stop":1721866096694,"duration":2930}},{"uid":"54635cca9c0ed4f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1991//#testresult/54635cca9c0ed4f0","status":"passed","time":{"start":1721779689448,"stop":1721779693269,"duration":3821}},{"uid":"51b00b26509d8091","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1990//#testresult/51b00b26509d8091","status":"passed","time":{"start":1721693245397,"stop":1721693248308,"duration":2911}},{"uid":"7ef1564282b3acb6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1989//#testresult/7ef1564282b3acb6","status":"passed","time":{"start":1721606845795,"stop":1721606849769,"duration":3974}},{"uid":"61e65db19e3b6d46","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1988//#testresult/61e65db19e3b6d46","status":"passed","time":{"start":1721520445557,"stop":1721520452874,"duration":7317}},{"uid":"fc30151d7913f4c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1987//#testresult/fc30151d7913f4c6","status":"passed","time":{"start":1721434047204,"stop":1721434054568,"duration":7364}},{"uid":"e32c776b87614ae7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1986//#testresult/e32c776b87614ae7","status":"passed","time":{"start":1721372154180,"stop":1721372156402,"duration":2222}},{"uid":"684f18e9019b2e41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1985//#testresult/684f18e9019b2e41","status":"passed","time":{"start":1721262906814,"stop":1721262909834,"duration":3020}},{"uid":"163ed016659706a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1984//#testresult/163ed016659706a0","status":"passed","time":{"start":1721176551341,"stop":1721176554245,"duration":2904}},{"uid":"a30830d208c22697","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1983//#testresult/a30830d208c22697","status":"passed","time":{"start":1721090140754,"stop":1721090142872,"duration":2118}},{"uid":"4ad34b999fa4d70e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1982//#testresult/4ad34b999fa4d70e","status":"passed","time":{"start":1721003817244,"stop":1721003820064,"duration":2820}},{"uid":"c2f49aefe80b74d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1981//#testresult/c2f49aefe80b74d3","status":"passed","time":{"start":1720917543495,"stop":1720917545900,"duration":2405}}]},"tags":[]},"source":"ece08d0f353de1a7.json","parameterValues":["BedfordBoroughCouncil"]}