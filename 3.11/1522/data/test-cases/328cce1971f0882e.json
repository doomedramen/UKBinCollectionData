{"uid":"328cce1971f0882e","name":"Validate Council Output [ReadingBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7fabea5e392292423f65daf6696a21a8","time":{"start":1706056202730,"stop":1706056203780,"duration":1050},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f61f20cc720>\nrequest = <FixtureRequest for <Function test_scenario_outline[ReadingBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f61f1da8310>, 'council': 'ReadingBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ReadingBoroughCouncil.py:13: in parse_data\n    json_result = json.loads(page.text)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f6205cec890>\ns = '<html>\\n  <head>\\n    <title>Internal Server Error</title>\\n  </head>\\n  <body>\\n    <h1><p>Internal Server Error</p></h1>\\n    \\n  </body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f61f20cc720>\nrequest = <FixtureRequest for <Function test_scenario_outline[ReadingBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f61f1da8310>, 'council': 'ReadingBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ReadingBoroughCouncil.py:13: in parse_data\n    json_result = json.loads(page.text)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f6205cec890>\ns = '<html>\\n  <head>\\n    <title>Internal Server Error</title>\\n  </head>\\n  <body>\\n    <h1><p>Internal Server Error</p></h1>\\n    \\n  </body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: ReadingBoroughCouncil","time":{"start":1706056202730,"stop":1706056202731,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from ReadingBoroughCouncil using None and the None is set","time":{"start":1706056202731,"stop":1706056203780,"duration":1049},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az568-260"},{"name":"thread","value":"2755-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ReadingBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":96,"unknown":0,"total":98},"items":[{"uid":"b3f7398937881eef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1521//#testresult/b3f7398937881eef","status":"passed","time":{"start":1705969810007,"stop":1705969810606,"duration":599}},{"uid":"6cc36f5e08f7a43d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1520//#testresult/6cc36f5e08f7a43d","status":"passed","time":{"start":1705883493823,"stop":1705883494329,"duration":506}},{"uid":"33d42de4629f6113","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1519//#testresult/33d42de4629f6113","status":"passed","time":{"start":1705797139334,"stop":1705797140064,"duration":730}},{"uid":"a87bea5d7ce6c991","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1515//#testresult/a87bea5d7ce6c991","status":"passed","time":{"start":1705710554098,"stop":1705710554931,"duration":833}},{"uid":"eba948db510bf74a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1511//#testresult/eba948db510bf74a","status":"passed","time":{"start":1705624193253,"stop":1705624193742,"duration":489}},{"uid":"afad230ca77df3bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/afad230ca77df3bc","status":"passed","time":{"start":1705537737619,"stop":1705537738295,"duration":676}},{"uid":"54c81f30d8b7a9b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/54c81f30d8b7a9b3","status":"passed","time":{"start":1705451350574,"stop":1705451351105,"duration":531}},{"uid":"3a4484d26a292b8c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1499//#testresult/3a4484d26a292b8c","status":"passed","time":{"start":1705365022828,"stop":1705365023356,"duration":528}},{"uid":"1384825bae56bcb6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1492//#testresult/1384825bae56bcb6","status":"passed","time":{"start":1705295695820,"stop":1705295696641,"duration":821}},{"uid":"5031cc910c45ef65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1491//#testresult/5031cc910c45ef65","status":"passed","time":{"start":1705295160737,"stop":1705295161241,"duration":504}},{"uid":"e62246131e2d4c59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1490//#testresult/e62246131e2d4c59","status":"passed","time":{"start":1705278579358,"stop":1705278579982,"duration":624}},{"uid":"816495064cd7c210","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1485//#testresult/816495064cd7c210","status":"passed","time":{"start":1705192228123,"stop":1705192228642,"duration":519}},{"uid":"6634e5b5189b11b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1484//#testresult/6634e5b5189b11b6","status":"passed","time":{"start":1705105702511,"stop":1705105703393,"duration":882}},{"uid":"48fabaa5fdfee229","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1482//#testresult/48fabaa5fdfee229","status":"passed","time":{"start":1705019270739,"stop":1705019271496,"duration":757}},{"uid":"812621e7de03d142","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1478//#testresult/812621e7de03d142","status":"passed","time":{"start":1704932860444,"stop":1704932861186,"duration":742}},{"uid":"de74ad74b79c331a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1472//#testresult/de74ad74b79c331a","status":"passed","time":{"start":1704846466157,"stop":1704846466693,"duration":536}},{"uid":"3bc2042529337834","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1456//#testresult/3bc2042529337834","status":"passed","time":{"start":1704760370528,"stop":1704760371161,"duration":633}},{"uid":"aea95ec84f37ca91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1452//#testresult/aea95ec84f37ca91","status":"passed","time":{"start":1704711713226,"stop":1704711713979,"duration":753}},{"uid":"cd4f97b1b4c6ea81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1450//#testresult/cd4f97b1b4c6ea81","status":"passed","time":{"start":1704710953110,"stop":1704710953971,"duration":861}},{"uid":"ae10b4d44bebe6bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1448//#testresult/ae10b4d44bebe6bf","status":"passed","time":{"start":1704710373354,"stop":1704710374418,"duration":1064}}]},"tags":[]},"source":"328cce1971f0882e.json","parameterValues":["ReadingBoroughCouncil","None","None"]}