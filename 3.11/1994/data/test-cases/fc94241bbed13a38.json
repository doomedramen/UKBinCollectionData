{"uid":"fc94241bbed13a38","name":"Validate Council Output [NorthNorthamptonshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"92c0f84b87cb9703264ef6f7bea152ee","time":{"start":1722039719288,"stop":1722039750005,"duration":30717},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7faf8d9fd800>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7faf8d87d9d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7faf8cf36d10>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', dateforurl = '2024-07-27'\ndateforurl2 = '2024-09-07'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7faf8d9fd800>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7faf8d87d9d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7faf8cf36d10>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', dateforurl = '2024-07-27'\ndateforurl2 = '2024-09-07'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","steps":[{"name":"Given the council","time":{"start":1722039719288,"stop":1722039719289,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1722039719289,"stop":1722039750005,"duration":30716},"status":"failed","statusMessage":"No bin data found for provided UPRN..","statusTrace":"ValueError: No bin data found for provided UPRN..\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4fb362ec49ecfaaa","name":"stdout","source":"4fb362ec49ecfaaa.txt","type":"text/plain","size":55}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1022-138"},{"name":"thread","value":"2748-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":87,"unknown":0,"total":89},"items":[{"uid":"17cd1e1f3fc1a855","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1993//#testresult/17cd1e1f3fc1a855","status":"passed","time":{"start":1721953291492,"stop":1721953294011,"duration":2519}},{"uid":"e5bcc589494c2195","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1992//#testresult/e5bcc589494c2195","status":"passed","time":{"start":1721866678058,"stop":1721866680798,"duration":2740}},{"uid":"68d05745f1a7b343","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1991//#testresult/68d05745f1a7b343","status":"passed","time":{"start":1721780463757,"stop":1721780468766,"duration":5009}},{"uid":"ddcc28b48e9dba1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1990//#testresult/ddcc28b48e9dba1a","status":"passed","time":{"start":1721693785316,"stop":1721693786141,"duration":825}},{"uid":"e55867c7a0c50d97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1989//#testresult/e55867c7a0c50d97","status":"passed","time":{"start":1721607366373,"stop":1721607367088,"duration":715}},{"uid":"ef04025b303bed73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1988//#testresult/ef04025b303bed73","status":"passed","time":{"start":1721521200850,"stop":1721521203018,"duration":2168}},{"uid":"ddc12594e460afe8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1987//#testresult/ddc12594e460afe8","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN..","time":{"start":1721434636312,"stop":1721434666990,"duration":30678}},{"uid":"9d727576fec02432","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1986//#testresult/9d727576fec02432","status":"passed","time":{"start":1721372880572,"stop":1721372881281,"duration":709}},{"uid":"102e3d21552c3dc6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1985//#testresult/102e3d21552c3dc6","status":"passed","time":{"start":1721263875029,"stop":1721263876073,"duration":1044}},{"uid":"5bfca76d799ba4fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1984//#testresult/5bfca76d799ba4fe","status":"passed","time":{"start":1721177331866,"stop":1721177332946,"duration":1080}},{"uid":"782f9221c68f108a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1983//#testresult/782f9221c68f108a","status":"passed","time":{"start":1721090891069,"stop":1721090892147,"duration":1078}},{"uid":"ee8de4e8e34cdcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1982//#testresult/ee8de4e8e34cdcd","status":"passed","time":{"start":1721004642197,"stop":1721004643260,"duration":1063}},{"uid":"fb65cb8864f3a3b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1981//#testresult/fb65cb8864f3a3b1","status":"passed","time":{"start":1720918113610,"stop":1720918114652,"duration":1042}},{"uid":"fb719d2146268422","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1980//#testresult/fb719d2146268422","status":"passed","time":{"start":1720831489870,"stop":1720831490604,"duration":734}},{"uid":"3466a4ab27ec6ce3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1979//#testresult/3466a4ab27ec6ce3","status":"passed","time":{"start":1720744981382,"stop":1720744982424,"duration":1042}},{"uid":"25fe54040a6cec9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1978//#testresult/25fe54040a6cec9b","status":"passed","time":{"start":1720658923004,"stop":1720658924047,"duration":1043}},{"uid":"feb9afb456d3f20b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1977//#testresult/feb9afb456d3f20b","status":"passed","time":{"start":1720572489748,"stop":1720572490512,"duration":764}},{"uid":"2deeb87405058713","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1976//#testresult/2deeb87405058713","status":"passed","time":{"start":1720485715815,"stop":1720485716958,"duration":1143}},{"uid":"817367f33e9b98b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1975//#testresult/817367f33e9b98b1","status":"passed","time":{"start":1720399202046,"stop":1720399203630,"duration":1584}},{"uid":"e8ba3a7579054188","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1971//#testresult/e8ba3a7579054188","status":"passed","time":{"start":1720313079695,"stop":1720313080608,"duration":913}}]},"tags":[]},"source":"fc94241bbed13a38.json","parameterValues":["NorthNorthamptonshireCouncil"]}