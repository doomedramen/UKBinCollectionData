{"uid":"5a3e51b2d81368e2","name":"Validate Council Output [LondonBoroughHounslow-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2d5d41f2f80a2dfc213e6858543e98d5","time":{"start":1704114769023,"stop":1704114772116,"duration":3093},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fe415ce5080>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe4150a8c10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fe4150a8c10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fe415ce5080>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe4150a8c10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fe4150a8c10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1704114769023,"stop":1704114769023,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from LondonBoroughHounslow using None and the None is set","time":{"start":1704114769023,"stop":1704114772114,"duration":3091},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704114772114,"stop":1704114772114,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704114772114,"stop":1704114772116,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az698-733"},{"name":"thread","value":"2743-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":119,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":119},"items":[{"uid":"24e103476e76ddf8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1343//#testresult/24e103476e76ddf8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704113884395,"stop":1704113888185,"duration":3790}},{"uid":"bbf20fc7fd78fc72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1342//#testresult/bbf20fc7fd78fc72","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704113819087,"stop":1704113821512,"duration":2425}},{"uid":"2194743f1e8b1bfe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1341//#testresult/2194743f1e8b1bfe","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112396403,"stop":1704112398916,"duration":2513}},{"uid":"384d7176f1fdbbd9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1339//#testresult/384d7176f1fdbbd9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112253671,"stop":1704112257321,"duration":3650}},{"uid":"8ab196d18e450bbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1336//#testresult/8ab196d18e450bbc","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112016390,"stop":1704112019301,"duration":2911}},{"uid":"619121a7b4cee391","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1337//#testresult/619121a7b4cee391","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112017627,"stop":1704112020590,"duration":2963}},{"uid":"c0fd0a90d172d906","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1335//#testresult/c0fd0a90d172d906","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704111650395,"stop":1704111652891,"duration":2496}},{"uid":"fb4cc540af9b5e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1332//#testresult/fb4cc540af9b5e0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704111503014,"stop":1704111505983,"duration":2969}},{"uid":"72a2fa65aeb743a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1330//#testresult/72a2fa65aeb743a9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704100169702,"stop":1704100172796,"duration":3094}},{"uid":"a3d68a0aa709f944","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1329//#testresult/a3d68a0aa709f944","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704072427425,"stop":1704072430460,"duration":3035}},{"uid":"f92bf600cbe817c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1327//#testresult/f92bf600cbe817c3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704050565616,"stop":1704050568755,"duration":3139}},{"uid":"bb42e7b750b1e875","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1325//#testresult/bb42e7b750b1e875","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704044069271,"stop":1704044071784,"duration":2513}},{"uid":"9223ccb33e843dc8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1320//#testresult/9223ccb33e843dc8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703985917353,"stop":1703985920597,"duration":3244}},{"uid":"d7d65c4ea48c4379","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1316//#testresult/d7d65c4ea48c4379","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703899108489,"stop":1703899140722,"duration":32233}},{"uid":"e47d9cf4c06a4305","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1314//#testresult/e47d9cf4c06a4305","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703853617560,"stop":1703853620427,"duration":2867}},{"uid":"e42cf43214823052","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1311//#testresult/e42cf43214823052","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703851223467,"stop":1703851227474,"duration":4007}},{"uid":"8465e322ab5f2051","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1309//#testresult/8465e322ab5f2051","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703812181616,"stop":1703812184710,"duration":3094}},{"uid":"3b4289b1fc4a0ba7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1306//#testresult/3b4289b1fc4a0ba7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703756304522,"stop":1703756316061,"duration":11539}},{"uid":"705c3ced35b80be5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1305//#testresult/705c3ced35b80be5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703726283214,"stop":1703726286521,"duration":3307}},{"uid":"5246febc5eff1e3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1304//#testresult/5246febc5eff1e3f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703717458926,"stop":1703717461472,"duration":2546}}]},"tags":[]},"source":"5a3e51b2d81368e2.json","parameterValues":["LondonBoroughHounslow","None","None"]}