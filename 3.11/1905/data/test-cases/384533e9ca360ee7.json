{"uid":"384533e9ca360ee7","name":"Validate Council Output [SouthKestevenDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2a7001e5e46e0082211a729ea73e7cc2","time":{"start":1717202487193,"stop":1717202678352,"duration":191159},"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556eaf767e9a <unknown>\n#1 0x556eaf45145c <unknown>\n#2 0x556eaf448fd0 <unknown>\n#3 0x556eaf438b32 <unknown>\n#4 0x556eaf43a162 <unknown>\n#5 0x556eaf438ded <unknown>\n#6 0x556eaf438503 <unknown>\n#7 0x556eaf4383f5 <unknown>\n#8 0x556eaf436336 <unknown>\n#9 0x556eaf43683a <unknown>\n#10 0x556eaf453ea7 <unknown>\n#11 0x556eaf4dfed5 <unknown>\n#12 0x556eaf4c04b2 <unknown>\n#13 0x556eaf4df2cc <unknown>\n#14 0x556eaf4c0253 <unknown>\n#15 0x556eaf4901c7 <unknown>\n#16 0x556eaf490b3e <unknown>\n#17 0x556eaf72e2db <unknown>\n#18 0x556eaf732387 <unknown>\n#19 0x556eaf71ae0e <unknown>\n#20 0x556eaf732e52 <unknown>\n#21 0x556eaf6ff7af <unknown>\n#22 0x556eaf757188 <unknown>\n#23 0x556eaf75735b <unknown>\n#24 0x556eaf766fcc <unknown>\n#25 0x7f24cdefeac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fbe82f2cf40>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthKestevenDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fbe82bc9910>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/SouthKestevenDistrictCouncil.py:75: in parse_data\n    driver.get(page)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbe820322d0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x556eaf75735b \\\\u003Cunknown>\\\\n#24 0x556eaf766fcc \\\\u003Cunknown>\\\\n#25 0x7f24cdefeac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x556eaf767e9a <unknown>\nE       #1 0x556eaf45145c <unknown>\nE       #2 0x556eaf448fd0 <unknown>\nE       #3 0x556eaf438b32 <unknown>\nE       #4 0x556eaf43a162 <unknown>\nE       #5 0x556eaf438ded <unknown>\nE       #6 0x556eaf438503 <unknown>\nE       #7 0x556eaf4383f5 <unknown>\nE       #8 0x556eaf436336 <unknown>\nE       #9 0x556eaf43683a <unknown>\nE       #10 0x556eaf453ea7 <unknown>\nE       #11 0x556eaf4dfed5 <unknown>\nE       #12 0x556eaf4c04b2 <unknown>\nE       #13 0x556eaf4df2cc <unknown>\nE       #14 0x556eaf4c0253 <unknown>\nE       #15 0x556eaf4901c7 <unknown>\nE       #16 0x556eaf490b3e <unknown>\nE       #17 0x556eaf72e2db <unknown>\nE       #18 0x556eaf732387 <unknown>\nE       #19 0x556eaf71ae0e <unknown>\nE       #20 0x556eaf732e52 <unknown>\nE       #21 0x556eaf6ff7af <unknown>\nE       #22 0x556eaf757188 <unknown>\nE       #23 0x556eaf75735b <unknown>\nE       #24 0x556eaf766fcc <unknown>\nE       #25 0x7f24cdefeac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556eaf767e9a <unknown>\n#1 0x556eaf45145c <unknown>\n#2 0x556eaf448fd0 <unknown>\n#3 0x556eaf438b32 <unknown>\n#4 0x556eaf43a162 <unknown>\n#5 0x556eaf438ded <unknown>\n#6 0x556eaf438503 <unknown>\n#7 0x556eaf4383f5 <unknown>\n#8 0x556eaf436336 <unknown>\n#9 0x556eaf43683a <unknown>\n#10 0x556eaf453ea7 <unknown>\n#11 0x556eaf4dfed5 <unknown>\n#12 0x556eaf4c04b2 <unknown>\n#13 0x556eaf4df2cc <unknown>\n#14 0x556eaf4c0253 <unknown>\n#15 0x556eaf4901c7 <unknown>\n#16 0x556eaf490b3e <unknown>\n#17 0x556eaf72e2db <unknown>\n#18 0x556eaf732387 <unknown>\n#19 0x556eaf71ae0e <unknown>\n#20 0x556eaf732e52 <unknown>\n#21 0x556eaf6ff7af <unknown>\n#22 0x556eaf757188 <unknown>\n#23 0x556eaf75735b <unknown>\n#24 0x556eaf766fcc <unknown>\n#25 0x7f24cdefeac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fbe82f2cf40>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthKestevenDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fbe82bc9910>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/SouthKestevenDistrictCouncil.py:75: in parse_data\n    driver.get(page)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbe820322d0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x556eaf75735b \\\\u003Cunknown>\\\\n#24 0x556eaf766fcc \\\\u003Cunknown>\\\\n#25 0x7f24cdefeac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x556eaf767e9a <unknown>\nE       #1 0x556eaf45145c <unknown>\nE       #2 0x556eaf448fd0 <unknown>\nE       #3 0x556eaf438b32 <unknown>\nE       #4 0x556eaf43a162 <unknown>\nE       #5 0x556eaf438ded <unknown>\nE       #6 0x556eaf438503 <unknown>\nE       #7 0x556eaf4383f5 <unknown>\nE       #8 0x556eaf436336 <unknown>\nE       #9 0x556eaf43683a <unknown>\nE       #10 0x556eaf453ea7 <unknown>\nE       #11 0x556eaf4dfed5 <unknown>\nE       #12 0x556eaf4c04b2 <unknown>\nE       #13 0x556eaf4df2cc <unknown>\nE       #14 0x556eaf4c0253 <unknown>\nE       #15 0x556eaf4901c7 <unknown>\nE       #16 0x556eaf490b3e <unknown>\nE       #17 0x556eaf72e2db <unknown>\nE       #18 0x556eaf732387 <unknown>\nE       #19 0x556eaf71ae0e <unknown>\nE       #20 0x556eaf732e52 <unknown>\nE       #21 0x556eaf6ff7af <unknown>\nE       #22 0x556eaf757188 <unknown>\nE       #23 0x556eaf75735b <unknown>\nE       #24 0x556eaf766fcc <unknown>\nE       #25 0x7f24cdefeac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","steps":[{"name":"Given the council","time":{"start":1717202487193,"stop":1717202487194,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1717202487194,"stop":1717202678352,"duration":191158},"status":"failed","statusMessage":"Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556eaf767e9a <unknown>\n#1 0x556eaf45145c <unknown>\n#2 0x556eaf448fd0 <unknown>\n#3 0x556eaf438b32 <unknown>\n#4 0x556eaf43a162 <unknown>\n#5 0x556eaf438ded <unknown>\n#6 0x556eaf438503 <unknown>\n#7 0x556eaf4383f5 <unknown>\n#8 0x556eaf436336 <unknown>\n#9 0x556eaf43683a <unknown>\n#10 0x556eaf453ea7 <unknown>\n#11 0x556eaf4dfed5 <unknown>\n#12 0x556eaf4c04b2 <unknown>\n#13 0x556eaf4df2cc <unknown>\n#14 0x556eaf4c0253 <unknown>\n#15 0x556eaf4901c7 <unknown>\n#16 0x556eaf490b3e <unknown>\n#17 0x556eaf72e2db <unknown>\n#18 0x556eaf732387 <unknown>\n#19 0x556eaf71ae0e <unknown>\n#20 0x556eaf732e52 <unknown>\n#21 0x556eaf6ff7af <unknown>\n#22 0x556eaf757188 <unknown>\n#23 0x556eaf75735b <unknown>\n#24 0x556eaf766fcc <unknown>\n#25 0x7f24cdefeac3 <unknown>\n","statusTrace":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x556eaf767e9a <unknown>\n#1 0x556eaf45145c <unknown>\n#2 0x556eaf448fd0 <unknown>\n#3 0x556eaf438b32 <unknown>\n#4 0x556eaf43a162 <unknown>\n#5 0x556eaf438ded <unknown>\n#6 0x556eaf438503 <unknown>\n#7 0x556eaf4383f5 <unknown>\n#8 0x556eaf436336 <unknown>\n#9 0x556eaf43683a <unknown>\n#10 0x556eaf453ea7 <unknown>\n#11 0x556eaf4dfed5 <unknown>\n#12 0x556eaf4c04b2 <unknown>\n#13 0x556eaf4df2cc <unknown>\n#14 0x556eaf4c0253 <unknown>\n#15 0x556eaf4901c7 <unknown>\n#16 0x556eaf490b3e <unknown>\n#17 0x556eaf72e2db <unknown>\n#18 0x556eaf732387 <unknown>\n#19 0x556eaf71ae0e <unknown>\n#20 0x556eaf732e52 <unknown>\n#21 0x556eaf6ff7af <unknown>\n#22 0x556eaf757188 <unknown>\n#23 0x556eaf75735b <unknown>\n#24 0x556eaf766fcc <unknown>\n#25 0x7f24cdefeac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8e9f8ba123bccc27","name":"stdout","source":"8e9f8ba123bccc27.txt","type":"text/plain","size":939}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1501-651"},{"name":"thread","value":"2672-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthKestevenDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"e93aa2d3de6bb03d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1904//#testresult/e93aa2d3de6bb03d","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x5613a6e99e9a <unknown>\n#1 0x5613a6b8345c <unknown>\n#2 0x5613a6b7afd0 <unknown>\n#3 0x5613a6b6ab32 <unknown>\n#4 0x5613a6b6c162 <unknown>\n#5 0x5613a6b6aded <unknown>\n#6 0x5613a6b6a503 <unknown>\n#7 0x5613a6b6a3f5 <unknown>\n#8 0x5613a6b68336 <unknown>\n#9 0x5613a6b6883a <unknown>\n#10 0x5613a6b85ea7 <unknown>\n#11 0x5613a6c11ed5 <unknown>\n#12 0x5613a6bf24b2 <unknown>\n#13 0x5613a6c112cc <unknown>\n#14 0x5613a6bf2253 <unknown>\n#15 0x5613a6bc21c7 <unknown>\n#16 0x5613a6bc2b3e <unknown>\n#17 0x5613a6e602db <unknown>\n#18 0x5613a6e64387 <unknown>\n#19 0x5613a6e4ce0e <unknown>\n#20 0x5613a6e64e52 <unknown>\n#21 0x5613a6e317af <unknown>\n#22 0x5613a6e89188 <unknown>\n#23 0x5613a6e8935b <unknown>\n#24 0x5613a6e98fcc <unknown>\n#25 0x7fe3c34f8ac3 <unknown>","time":{"start":1717116004952,"stop":1717116159404,"duration":154452}},{"uid":"64828f9acffc0dc8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1903//#testresult/64828f9acffc0dc8","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55b206172e9a <unknown>\n#1 0x55b205e5c45c <unknown>\n#2 0x55b205e53fd0 <unknown>\n#3 0x55b205e43b32 <unknown>\n#4 0x55b205e45162 <unknown>\n#5 0x55b205e43ded <unknown>\n#6 0x55b205e43503 <unknown>\n#7 0x55b205e433f5 <unknown>\n#8 0x55b205e41336 <unknown>\n#9 0x55b205e4183a <unknown>\n#10 0x55b205e5eea7 <unknown>\n#11 0x55b205eeaed5 <unknown>\n#12 0x55b205ecb4b2 <unknown>\n#13 0x55b205eea2cc <unknown>\n#14 0x55b205ecb253 <unknown>\n#15 0x55b205e9b1c7 <unknown>\n#16 0x55b205e9bb3e <unknown>\n#17 0x55b2061392db <unknown>\n#18 0x55b20613d387 <unknown>\n#19 0x55b206125e0e <unknown>\n#20 0x55b20613de52 <unknown>\n#21 0x55b20610a7af <unknown>\n#22 0x55b206162188 <unknown>\n#23 0x55b20616235b <unknown>\n#24 0x55b206171fcc <unknown>\n#25 0x7f0319d2bac3 <unknown>","time":{"start":1717029662287,"stop":1717029811828,"duration":149541}},{"uid":"fefc064b6b38f2e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1898//#testresult/fefc064b6b38f2e1","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x56055303ce9a <unknown>\n#1 0x560552d2645c <unknown>\n#2 0x560552d1dfd0 <unknown>\n#3 0x560552d0db32 <unknown>\n#4 0x560552d0f162 <unknown>\n#5 0x560552d0dded <unknown>\n#6 0x560552d0d503 <unknown>\n#7 0x560552d0d3f5 <unknown>\n#8 0x560552d0b336 <unknown>\n#9 0x560552d0b83a <unknown>\n#10 0x560552d28ea7 <unknown>\n#11 0x560552db4ed5 <unknown>\n#12 0x560552d954b2 <unknown>\n#13 0x560552db42cc <unknown>\n#14 0x560552d95253 <unknown>\n#15 0x560552d651c7 <unknown>\n#16 0x560552d65b3e <unknown>\n#17 0x5605530032db <unknown>\n#18 0x560553007387 <unknown>\n#19 0x560552fefe0e <unknown>\n#20 0x560553007e52 <unknown>\n#21 0x560552fd47af <unknown>\n#22 0x56055302c188 <unknown>\n#23 0x56055302c35b <unknown>\n#24 0x56055303bfcc <unknown>\n#25 0x7f4e160c3ac3 <unknown>","time":{"start":1716943282999,"stop":1716943545404,"duration":262405}},{"uid":"e57dd303b7964595","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1896//#testresult/e57dd303b7964595","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x56322d4c2e9a <unknown>\n#1 0x56322d1ac45c <unknown>\n#2 0x56322d1a3fd0 <unknown>\n#3 0x56322d193b32 <unknown>\n#4 0x56322d195162 <unknown>\n#5 0x56322d193ded <unknown>\n#6 0x56322d193503 <unknown>\n#7 0x56322d1933f5 <unknown>\n#8 0x56322d191336 <unknown>\n#9 0x56322d19183a <unknown>\n#10 0x56322d1aeea7 <unknown>\n#11 0x56322d23aed5 <unknown>\n#12 0x56322d21b4b2 <unknown>\n#13 0x56322d23a2cc <unknown>\n#14 0x56322d21b253 <unknown>\n#15 0x56322d1eb1c7 <unknown>\n#16 0x56322d1ebb3e <unknown>\n#17 0x56322d4892db <unknown>\n#18 0x56322d48d387 <unknown>\n#19 0x56322d475e0e <unknown>\n#20 0x56322d48de52 <unknown>\n#21 0x56322d45a7af <unknown>\n#22 0x56322d4b2188 <unknown>\n#23 0x56322d4b235b <unknown>\n#24 0x56322d4c1fcc <unknown>\n#25 0x7f2353b9dac3 <unknown>","time":{"start":1716930944540,"stop":1716931114600,"duration":170060}}]},"tags":[]},"source":"384533e9ca360ee7.json","parameterValues":["SouthKestevenDistrictCouncil"]}