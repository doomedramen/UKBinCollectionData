{"uid":"2fa843bb2eb2dc60","name":"Validate Council Output [BedfordshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"205f76a3eddc8da4816de8fdd2c7974e","time":{"start":1701990354940,"stop":1701990355141,"duration":201},"status":"failed","statusMessage":"ValueError: Exception: Invalid postcode Status: 404","statusTrace":"fixturefunc = <function scrape_step at 0x7fab681da2a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fab67765810>, 'council': 'BedfordshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BedfordshireCouncil.py:22: in parse_data\n    check_postcode(user_postcode)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npostcode = None\n\n    def check_postcode(postcode: str):\n        \"\"\"\n        Checks a postcode exists and validates UK formatting against a RegEx string\n            :param postcode: Postcode to parse\n        \"\"\"\n        postcode_api_url = \"https://api.postcodes.io/postcodes/\"\n        postcode_api_response = requests.get(f\"{postcode_api_url}{postcode}\")\n    \n        if postcode_api_response.status_code != 200:\n            val_error = json.loads(postcode_api_response.text)\n>           raise ValueError(\n                f\"Exception: {val_error['error']} Status: {val_error['status']}\"\n            )\nE           ValueError: Exception: Invalid postcode Status: 404\n\nuk_bin_collection/uk_bin_collection/common.py:43: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: Exception: Invalid postcode Status: 404","statusTrace":"fixturefunc = <function scrape_step at 0x7fab681da2a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fab67765810>, 'council': 'BedfordshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BedfordshireCouncil.py:22: in parse_data\n    check_postcode(user_postcode)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npostcode = None\n\n    def check_postcode(postcode: str):\n        \"\"\"\n        Checks a postcode exists and validates UK formatting against a RegEx string\n            :param postcode: Postcode to parse\n        \"\"\"\n        postcode_api_url = \"https://api.postcodes.io/postcodes/\"\n        postcode_api_response = requests.get(f\"{postcode_api_url}{postcode}\")\n    \n        if postcode_api_response.status_code != 200:\n            val_error = json.loads(postcode_api_response.text)\n>           raise ValueError(\n                f\"Exception: {val_error['error']} Status: {val_error['status']}\"\n            )\nE           ValueError: Exception: Invalid postcode Status: 404\n\nuk_bin_collection/uk_bin_collection/common.py:43: ValueError","steps":[{"name":"Given the council: BedfordshireCouncil","time":{"start":1701990354940,"stop":1701990354941,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BedfordshireCouncil using None and the None is set","time":{"start":1701990354941,"stop":1701990355141,"duration":200},"status":"failed","statusMessage":"Exception: Invalid postcode Status: 404","statusTrace":"ValueError: Exception: Invalid postcode Status: 404\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1429-363"},{"name":"thread","value":"2722-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BedfordshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"b852ebb0b6e41891","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1217//#testresult/b852ebb0b6e41891","status":"failed","statusDetails":"ValueError: Exception: Invalid postcode Status: 404","time":{"start":1701990322208,"stop":1701990322368,"duration":160}}]},"tags":[]},"source":"2fa843bb2eb2dc60.json","parameterValues":["BedfordshireCouncil","None","None"]}