{"uid":"c9d60f2194b5053b","name":"Validate Council Output [SouthOxfordshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7f57931d644fea4dd7a0419f9995c47e","time":{"start":1701990440676,"stop":1701990443360,"duration":2684},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f6db03f89a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6daf58a490>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f6daf58a490>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f6db03f89a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6daf58a490>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f6daf58a490>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: SouthOxfordshireCouncil","time":{"start":1701990440676,"stop":1701990440676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SouthOxfordshireCouncil using None and the None is set","time":{"start":1701990440677,"stop":1701990443359,"duration":2682},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1701990443359,"stop":1701990443359,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1701990443359,"stop":1701990443360,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1429-363"},{"name":"thread","value":"2728-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthOxfordshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":62,"unknown":0,"total":63},"items":[{"uid":"5be6dbba746110ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1217//#testresult/5be6dbba746110ee","status":"passed","time":{"start":1701990400439,"stop":1701990407068,"duration":6629}},{"uid":"c16e2093ce185dfd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1215//#testresult/c16e2093ce185dfd","status":"passed","time":{"start":1701942856811,"stop":1701942860671,"duration":3860}},{"uid":"d06d6820c44c51e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1214//#testresult/d06d6820c44c51e8","status":"passed","time":{"start":1701936603829,"stop":1701936607845,"duration":4016}},{"uid":"fc45351d2e3b7e65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1213//#testresult/fc45351d2e3b7e65","status":"passed","time":{"start":1701936559193,"stop":1701936562230,"duration":3037}},{"uid":"1ea87c4d4892344d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1211//#testresult/1ea87c4d4892344d","status":"passed","time":{"start":1701912055652,"stop":1701912060207,"duration":4555}},{"uid":"fce941a9ebe0574d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1209//#testresult/fce941a9ebe0574d","status":"passed","time":{"start":1701904926715,"stop":1701904930399,"duration":3684}},{"uid":"3db8105357b5c129","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1201//#testresult/3db8105357b5c129","status":"passed","time":{"start":1701882640240,"stop":1701882644476,"duration":4236}},{"uid":"85c53e62f6000d23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1202//#testresult/85c53e62f6000d23","status":"passed","time":{"start":1701882617561,"stop":1701882621571,"duration":4010}},{"uid":"bf683458ae45a53b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1199//#testresult/bf683458ae45a53b","status":"passed","time":{"start":1701825613718,"stop":1701825617898,"duration":4180}},{"uid":"978d937438527986","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1198//#testresult/978d937438527986","status":"passed","time":{"start":1701795619732,"stop":1701795622825,"duration":3093}},{"uid":"b18ffc7ef6c859cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1197//#testresult/b18ffc7ef6c859cf","status":"passed","time":{"start":1701795575420,"stop":1701795578420,"duration":3000}},{"uid":"d25c598b15c36968","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1193//#testresult/d25c598b15c36968","status":"passed","time":{"start":1701758586051,"stop":1701758590061,"duration":4010}},{"uid":"1b845a95caccd1dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1192//#testresult/1b845a95caccd1dd","status":"passed","time":{"start":1701758560779,"stop":1701758563763,"duration":2984}},{"uid":"55e381e6e92a4df5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1191//#testresult/55e381e6e92a4df5","status":"passed","time":{"start":1701739234677,"stop":1701739237698,"duration":3021}},{"uid":"7e37b55f85ef563c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1187//#testresult/7e37b55f85ef563c","status":"passed","time":{"start":1701714393563,"stop":1701714398277,"duration":4714}},{"uid":"d864a2437fa97c19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1184//#testresult/d864a2437fa97c19","status":"passed","time":{"start":1701652789535,"stop":1701652793106,"duration":3571}},{"uid":"120f2e2eecb16c3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1183//#testresult/120f2e2eecb16c3a","status":"passed","time":{"start":1701566647135,"stop":1701566651069,"duration":3934}},{"uid":"55ca91f54c00455","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1182//#testresult/55ca91f54c00455","status":"passed","time":{"start":1701479800520,"stop":1701479803821,"duration":3301}},{"uid":"d2c06536474cd457","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1179//#testresult/d2c06536474cd457","status":"passed","time":{"start":1701419034358,"stop":1701419037696,"duration":3338}},{"uid":"f74770f0b3a2763d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1181//#testresult/f74770f0b3a2763d","status":"passed","time":{"start":1701419137751,"stop":1701419141713,"duration":3962}}]},"tags":[]},"source":"c9d60f2194b5053b.json","parameterValues":["SouthOxfordshireCouncil","None","None"]}