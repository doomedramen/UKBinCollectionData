{"uid":"755da61f973d1008","name":"Validate Council Output [EastLindseyDistrictCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"eb374edb17b4c377c221232fbb03cdfe","time":{"start":1703416445317,"stop":1703416452373,"duration":7056},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7faa7f3e9c60>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faa7e942250>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7faa7f1f63d0>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': []}, user_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY'\nweb_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"156f862ef5bdc84057531e7fd6ea2308\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"156f862ef5bdc84057531e7fd6ea2308\", element=\"894F7BF3F15BB68D5A1401CC56069483_element_13\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"156f862ef5bdc84057531e7fd6ea2308\", element=\"894F7BF3F15BB68D5A1401CC56069483_element_15\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7faa7f3e9c60>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faa7e942250>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7faa7f1f63d0>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': []}, user_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY'\nweb_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"156f862ef5bdc84057531e7fd6ea2308\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"156f862ef5bdc84057531e7fd6ea2308\", element=\"894F7BF3F15BB68D5A1401CC56069483_element_13\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"156f862ef5bdc84057531e7fd6ea2308\", element=\"894F7BF3F15BB68D5A1401CC56069483_element_15\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","steps":[{"name":"Given the council: EastLindseyDistrictCouncil","time":{"start":1703416445317,"stop":1703416445317,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from EastLindseyDistrictCouncil using local and the http://selenium:4444 is set","time":{"start":1703416445318,"stop":1703416452373,"duration":7055},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1196-639"},{"name":"thread","value":"2710-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastLindseyDistrictCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":66,"broken":0,"skipped":0,"passed":27,"unknown":0,"total":93},"items":[{"uid":"5a2600401cb68667","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1291//#testresult/5a2600401cb68667","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703416360994,"stop":1703416367191,"duration":6197}},{"uid":"242ea693f459239e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1289//#testresult/242ea693f459239e","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703381110457,"stop":1703381117244,"duration":6787}},{"uid":"83214064c0596c11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1287//#testresult/83214064c0596c11","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ecf3561f83 <unknown>\n#1 0x55ecf321acf7 <unknown>\n#2 0x55ecf326a99e <unknown>\n#3 0x55ecf326aaa1 <unknown>\n#4 0x55ecf32b5d64 <unknown>\n#5 0x55ecf32940dd <unknown>\n#6 0x55ecf32b3006 <unknown>\n#7 0x55ecf3293e53 <unknown>\n#8 0x55ecf325bdd4 <unknown>\n#9 0x55ecf325d1de <unknown>\n#10 0x55ecf3526531 <unknown>\n#11 0x55ecf352a455 <unknown>\n#12 0x55ecf3512f55 <unknown>\n#13 0x55ecf352b0ef <unknown>\n#14 0x55ecf34f699f <unknown>\n#15 0x55ecf354f008 <unknown>\n#16 0x55ecf354f1d7 <unknown>\n#17 0x55ecf3561124 <unknown>\n#18 0x7fd62aa94ac3 <unknown>","time":{"start":1703294078899,"stop":1703294093766,"duration":14867}},{"uid":"a5a94e44763a0158","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1282//#testresult/a5a94e44763a0158","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703207857619,"stop":1703207865055,"duration":7436}},{"uid":"801847d3aa02e9ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1281//#testresult/801847d3aa02e9ca","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703121434103,"stop":1703121439610,"duration":5507}},{"uid":"c61214cbef1dcbef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1280//#testresult/c61214cbef1dcbef","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703034276831,"stop":1703034284532,"duration":7701}},{"uid":"29616aa200c30330","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1279//#testresult/29616aa200c30330","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703024910284,"stop":1703024915466,"duration":5182}},{"uid":"613cc3aad8e9dd0b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1278//#testresult/613cc3aad8e9dd0b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1703024869416,"stop":1703024875113,"duration":5697}},{"uid":"5e10240e2ec314d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1276//#testresult/5e10240e2ec314d7","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702948715595,"stop":1702948722434,"duration":6839}},{"uid":"dc4a7d519e925c74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1275//#testresult/dc4a7d519e925c74","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702862348126,"stop":1702862355567,"duration":7441}},{"uid":"7992143427b9d874","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/7992143427b9d874","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702860000080,"stop":1702860005421,"duration":5341}},{"uid":"3f3f7cc478373b5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/3f3f7cc478373b5e","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702843564025,"stop":1702843570823,"duration":6798}},{"uid":"80eaa2d910ef163a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/80eaa2d910ef163a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702809373752,"stop":1702809379556,"duration":5804}},{"uid":"ac2261ba757fee72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1247//#testresult/ac2261ba757fee72","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702657133914,"stop":1702657140578,"duration":6664}},{"uid":"f58447198b5ef7db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1248//#testresult/f58447198b5ef7db","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702657160230,"stop":1702657166881,"duration":6651}},{"uid":"37826b70970c71cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1244//#testresult/37826b70970c71cc","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702603196257,"stop":1702603201588,"duration":5331}},{"uid":"10930874d6206e00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1243//#testresult/10930874d6206e00","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702540045622,"stop":1702540051320,"duration":5698}},{"uid":"40faa57567e9ae2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1241//#testresult/40faa57567e9ae2b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1702516684973,"stop":1702516691187,"duration":6214}},{"uid":"8b1b3f86c1a712b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1238//#testresult/8b1b3f86c1a712b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559d5fe9e5e3 <unknown>\n#1 0x559d5fb610b7 <unknown>\n#2 0x559d5fbaef53 <unknown>\n#3 0x559d5fbaf051 <unknown>\n#4 0x559d5fbf49c4 <unknown>\n#5 0x559d5fbd5f1d <unknown>\n#6 0x559d5fbf1b3d <unknown>\n#7 0x559d5fbd5cc3 <unknown>\n#8 0x559d5fba10e4 <unknown>\n#9 0x559d5fba20ae <unknown>\n#10 0x559d5fe64ce1 <unknown>\n#11 0x559d5fe68b7e <unknown>\n#12 0x559d5fe524b5 <unknown>\n#13 0x559d5fe697d6 <unknown>\n#14 0x559d5fe35dbf <unknown>\n#15 0x559d5fe8c748 <unknown>\n#16 0x559d5fe8c917 <unknown>\n#17 0x559d5fe9d773 <unknown>\n#18 0x7f25f9494ac3 <unknown>","time":{"start":1702447470677,"stop":1702447484025,"duration":13348}},{"uid":"7cda2d4a8787a70e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1236//#testresult/7cda2d4a8787a70e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55b42ef595e3 <unknown>\n#1 0x55b42ec1c0b7 <unknown>\n#2 0x55b42ec69f53 <unknown>\n#3 0x55b42ec6a051 <unknown>\n#4 0x55b42ecaf9c4 <unknown>\n#5 0x55b42ec90f1d <unknown>\n#6 0x55b42ecacb3d <unknown>\n#7 0x55b42ec90cc3 <unknown>\n#8 0x55b42ec5c0e4 <unknown>\n#9 0x55b42ec5d0ae <unknown>\n#10 0x55b42ef1fce1 <unknown>\n#11 0x55b42ef23b7e <unknown>\n#12 0x55b42ef0d4b5 <unknown>\n#13 0x55b42ef247d6 <unknown>\n#14 0x55b42eef0dbf <unknown>\n#15 0x55b42ef47748 <unknown>\n#16 0x55b42ef47917 <unknown>\n#17 0x55b42ef58773 <unknown>\n#18 0x7f4114094ac3 <unknown>","time":{"start":1702430334926,"stop":1702430348205,"duration":13279}}]},"tags":[]},"source":"755da61f973d1008.json","parameterValues":["EastLindseyDistrictCouncil","local","http://selenium:4444"]}