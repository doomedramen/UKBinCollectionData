{"uid":"641e36781bbd4817","name":"Validate Council Output [EastleighBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4b31307dbdce23dc5dddd2f51563d5a7","time":{"start":1697702044762,"stop":1697702044763,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f3c41efeca0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastleighBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3c41df2d10>, 'council_name': 'EastleighBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f3c429b7a10>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f3c41efeca0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastleighBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3c41df2d10>, 'council_name': 'EastleighBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f3c429b7a10>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: EastleighBoroughCouncil","time":{"start":1697702044763,"stop":1697702044763,"duration":0},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az221-715"},{"name":"thread","value":"2052-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastleighBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":140},"items":[{"uid":"db243f3a31da4e03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/db243f3a31da4e03","status":"passed","time":{"start":1697696151465,"stop":1697696153071,"duration":1606}},{"uid":"6595567d0b88c061","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/6595567d0b88c061","status":"passed","time":{"start":1697678081714,"stop":1697678083650,"duration":1936}},{"uid":"8fb9f28e177dd3e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/8fb9f28e177dd3e1","status":"passed","time":{"start":1697666560802,"stop":1697666562413,"duration":1611}},{"uid":"e08d696869e47705","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/e08d696869e47705","status":"passed","time":{"start":1697656822537,"stop":1697656824636,"duration":2099}},{"uid":"b9f884c4bc1439dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/b9f884c4bc1439dc","status":"passed","time":{"start":1697650015045,"stop":1697650016470,"duration":1425}},{"uid":"3883a329485d7b81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/3883a329485d7b81","status":"passed","time":{"start":1697618245287,"stop":1697618246999,"duration":1712}},{"uid":"65b4cfbbd9c3c4ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/65b4cfbbd9c3c4ce","status":"passed","time":{"start":1697591699571,"stop":1697591701380,"duration":1809}},{"uid":"3273ad5f66e123e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/3273ad5f66e123e5","status":"passed","time":{"start":1697542554369,"stop":1697542555626,"duration":1257}},{"uid":"6f24a20528804306","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/6f24a20528804306","status":"passed","time":{"start":1697505312393,"stop":1697505314180,"duration":1787}},{"uid":"aa8f4231a8799546","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/aa8f4231a8799546","status":"passed","time":{"start":1697484620111,"stop":1697484621730,"duration":1619}},{"uid":"b5bbb5b76f4d627a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/b5bbb5b76f4d627a","status":"passed","time":{"start":1697484565284,"stop":1697484566508,"duration":1224}},{"uid":"a84a1e67a3bc4f25","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/a84a1e67a3bc4f25","status":"passed","time":{"start":1697418949434,"stop":1697418951052,"duration":1618}},{"uid":"a52b7c4d8a3bdb3d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/a52b7c4d8a3bdb3d","status":"passed","time":{"start":1697403139220,"stop":1697403140598,"duration":1378}},{"uid":"bd173033d5947a2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/bd173033d5947a2c","status":"passed","time":{"start":1697399703262,"stop":1697399705069,"duration":1807}},{"uid":"a2742c22c85b9a60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/a2742c22c85b9a60","status":"passed","time":{"start":1697366962401,"stop":1697366964238,"duration":1837}},{"uid":"3fed4bf9ff348b2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/3fed4bf9ff348b2c","status":"passed","time":{"start":1697366904974,"stop":1697366906678,"duration":1704}},{"uid":"141b5e30cf1456ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/141b5e30cf1456ff","status":"passed","time":{"start":1697332785070,"stop":1697332786787,"duration":1717}},{"uid":"4e5175eb18eaf463","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/4e5175eb18eaf463","status":"passed","time":{"start":1697245945546,"stop":1697245946999,"duration":1453}},{"uid":"f20876fc515a1ea4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/f20876fc515a1ea4","status":"passed","time":{"start":1697159788505,"stop":1697159790466,"duration":1961}},{"uid":"294f0687403fa1ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/294f0687403fa1ee","status":"passed","time":{"start":1697073142087,"stop":1697073143910,"duration":1823}}]},"tags":[]},"source":"641e36781bbd4817.json","parameterValues":["EastleighBoroughCouncil"]}