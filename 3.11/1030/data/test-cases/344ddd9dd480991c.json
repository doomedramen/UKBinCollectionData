{"uid":"344ddd9dd480991c","name":"Validate Council Output [StHelensBC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aefb4666f5cfa7265d9db53c16df38b6","time":{"start":1697702045988,"stop":1697702045989,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f3c41efeca0>\nrequest = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3c41b14290>, 'council_name': 'StHelensBC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f3c429b7a10>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f3c41efeca0>\nrequest = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3c41b14290>, 'council_name': 'StHelensBC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f3c429b7a10>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: StHelensBC","time":{"start":1697702045988,"stop":1697702045989,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az221-715"},{"name":"thread","value":"2052-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StHelensBC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":78,"broken":0,"skipped":0,"passed":62,"unknown":0,"total":140},"items":[{"uid":"52a26828407ad4a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/52a26828407ad4a3","status":"passed","time":{"start":1697696378891,"stop":1697696379681,"duration":790}},{"uid":"5524353744cf144b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/5524353744cf144b","status":"passed","time":{"start":1697678367223,"stop":1697678368144,"duration":921}},{"uid":"13178fb2f89565d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/13178fb2f89565d2","status":"passed","time":{"start":1697666748773,"stop":1697666749369,"duration":596}},{"uid":"d12383e3877c9d61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/d12383e3877c9d61","status":"passed","time":{"start":1697657040363,"stop":1697657041150,"duration":787}},{"uid":"f847132995c1125c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/f847132995c1125c","status":"passed","time":{"start":1697650218999,"stop":1697650219648,"duration":649}},{"uid":"33cc38e53e06e071","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/33cc38e53e06e071","status":"passed","time":{"start":1697618480170,"stop":1697618480902,"duration":732}},{"uid":"eeac3781b42dc0b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/eeac3781b42dc0b3","status":"passed","time":{"start":1697591941541,"stop":1697591944706,"duration":3165}},{"uid":"739cfc48e5112418","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/739cfc48e5112418","status":"passed","time":{"start":1697542759152,"stop":1697542759774,"duration":622}},{"uid":"1b9e5e42257ae9fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/1b9e5e42257ae9fc","status":"passed","time":{"start":1697505579527,"stop":1697505580479,"duration":952}},{"uid":"b27a75760572eac9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/b27a75760572eac9","status":"passed","time":{"start":1697484869524,"stop":1697484870341,"duration":817}},{"uid":"f6e491504f3034c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/f6e491504f3034c2","status":"passed","time":{"start":1697484768308,"stop":1697484768890,"duration":582}},{"uid":"94abbc742f7f66f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/94abbc742f7f66f6","status":"passed","time":{"start":1697419198408,"stop":1697419201561,"duration":3153}},{"uid":"bb4fabc5d68d2e18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/bb4fabc5d68d2e18","status":"passed","time":{"start":1697403336120,"stop":1697403336733,"duration":613}},{"uid":"8c7cb4896ec7d820","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/8c7cb4896ec7d820","status":"passed","time":{"start":1697399950576,"stop":1697399951598,"duration":1022}},{"uid":"2628babf2d75264d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/2628babf2d75264d","status":"passed","time":{"start":1697367213487,"stop":1697367214445,"duration":958}},{"uid":"25343e8aa60bb0dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/25343e8aa60bb0dc","status":"passed","time":{"start":1697367134391,"stop":1697367135192,"duration":801}},{"uid":"914b28393461ab62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/914b28393461ab62","status":"passed","time":{"start":1697333034293,"stop":1697333035096,"duration":803}},{"uid":"64004c6bce990eff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/64004c6bce990eff","status":"passed","time":{"start":1697246151967,"stop":1697246155100,"duration":3133}},{"uid":"710c1172eb1fe1af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/710c1172eb1fe1af","status":"passed","time":{"start":1697160044328,"stop":1697160047602,"duration":3274}},{"uid":"ac81e89f02f9d063","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/ac81e89f02f9d063","status":"passed","time":{"start":1697073413001,"stop":1697073415501,"duration":2500}}]},"tags":[]},"source":"344ddd9dd480991c.json","parameterValues":["StHelensBC"]}