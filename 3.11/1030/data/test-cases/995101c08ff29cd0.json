{"uid":"995101c08ff29cd0","name":"Validate Council Output [CharnwoodBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"801248c9ab954856945dc1ac5bef1fab","time":{"start":1697702044255,"stop":1697702044256,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f3c41efeca0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CharnwoodBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3c41cb27d0>, 'council_name': 'CharnwoodBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f3c429b7a10>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f3c41efeca0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CharnwoodBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3c41cb27d0>, 'council_name': 'CharnwoodBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f3c429b7a10>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: CharnwoodBoroughCouncil","time":{"start":1697702044255,"stop":1697702044256,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az221-715"},{"name":"thread","value":"2052-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CharnwoodBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":0,"skipped":0,"passed":121,"unknown":0,"total":140},"items":[{"uid":"4bc677bce9554c7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/4bc677bce9554c7b","status":"passed","time":{"start":1697696113578,"stop":1697696115392,"duration":1814}},{"uid":"cf198ae3bb572d79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/cf198ae3bb572d79","status":"passed","time":{"start":1697678035178,"stop":1697678037464,"duration":2286}},{"uid":"a87f34485ba004e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/a87f34485ba004e","status":"passed","time":{"start":1697666522864,"stop":1697666524495,"duration":1631}},{"uid":"a573d9de06465dd7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/a573d9de06465dd7","status":"passed","time":{"start":1697656776293,"stop":1697656778169,"duration":1876}},{"uid":"30e9eb7161dcbf13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/30e9eb7161dcbf13","status":"passed","time":{"start":1697650026600,"stop":1697650027927,"duration":1327}},{"uid":"abae1f7f19f373c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/abae1f7f19f373c","status":"passed","time":{"start":1697618238297,"stop":1697618240181,"duration":1884}},{"uid":"c7a623b57f481e5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/c7a623b57f481e5b","status":"passed","time":{"start":1697591661393,"stop":1697591664314,"duration":2921}},{"uid":"8cb9897a309c49e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/8cb9897a309c49e1","status":"passed","time":{"start":1697542519106,"stop":1697542521877,"duration":2771}},{"uid":"a1c16b2c2b062765","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/a1c16b2c2b062765","status":"passed","time":{"start":1697505275794,"stop":1697505278125,"duration":2331}},{"uid":"3636ea66aae3f001","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/3636ea66aae3f001","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1697484601870,"stop":1697484604032,"duration":2162}},{"uid":"91ed72e29df29519","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/91ed72e29df29519","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1697484542478,"stop":1697484544123,"duration":1645}},{"uid":"3d62b46a72f4fd95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/3d62b46a72f4fd95","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1697418918125,"stop":1697418921184,"duration":3059}},{"uid":"59d81d06f519be38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/59d81d06f519be38","status":"passed","time":{"start":1697403113402,"stop":1697403114758,"duration":1356}},{"uid":"c56d667baed0ecfa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/c56d667baed0ecfa","status":"passed","time":{"start":1697399679701,"stop":1697399681636,"duration":1935}},{"uid":"a800f843609a5082","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/a800f843609a5082","status":"passed","time":{"start":1697366931670,"stop":1697366933786,"duration":2116}},{"uid":"57b61baf1267e216","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/57b61baf1267e216","status":"passed","time":{"start":1697366881068,"stop":1697366882484,"duration":1416}},{"uid":"cdff54143f9be91c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/cdff54143f9be91c","status":"passed","time":{"start":1697332751410,"stop":1697332753245,"duration":1835}},{"uid":"d10aec8befdcae17","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/d10aec8befdcae17","status":"passed","time":{"start":1697245912046,"stop":1697245913900,"duration":1854}},{"uid":"8304fdd8317bf3e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/8304fdd8317bf3e2","status":"passed","time":{"start":1697159752622,"stop":1697159754591,"duration":1969}},{"uid":"e0b4b29b7c6e9fbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/e0b4b29b7c6e9fbc","status":"passed","time":{"start":1697073099025,"stop":1697073100931,"duration":1906}}]},"tags":[]},"source":"995101c08ff29cd0.json","parameterValues":["CharnwoodBoroughCouncil"]}