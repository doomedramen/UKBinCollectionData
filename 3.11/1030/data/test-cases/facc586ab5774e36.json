{"uid":"facc586ab5774e36","name":"Validate Council Output [TonbridgeAndMallingBC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"702154f20d1bb392cb26213b3a14a202","time":{"start":1697702046111,"stop":1697702046113,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd4739d1c60>\nrequest = <FixtureRequest for <Function test_scenario_outline[TonbridgeAndMallingBC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd4739147d0>, 'council_name': 'TonbridgeAndMallingBC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd479f90f90>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd4739d1c60>\nrequest = <FixtureRequest for <Function test_scenario_outline[TonbridgeAndMallingBC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd4739147d0>, 'council_name': 'TonbridgeAndMallingBC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd479f90f90>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: TonbridgeAndMallingBC","time":{"start":1697702046112,"stop":1697702046113,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az221-715"},{"name":"thread","value":"2049-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TonbridgeAndMallingBC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":140},"items":[{"uid":"b7b689a8cc9e0e15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/b7b689a8cc9e0e15","status":"passed","time":{"start":1697696523194,"stop":1697696526221,"duration":3027}},{"uid":"22e23e4a3139d897","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/22e23e4a3139d897","status":"passed","time":{"start":1697678494416,"stop":1697678497092,"duration":2676}},{"uid":"a4bf9ecfdfb10146","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/a4bf9ecfdfb10146","status":"passed","time":{"start":1697666886594,"stop":1697666889529,"duration":2935}},{"uid":"abe475841b12d5d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/abe475841b12d5d2","status":"passed","time":{"start":1697657173604,"stop":1697657176795,"duration":3191}},{"uid":"e4243616c7813ded","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/e4243616c7813ded","status":"passed","time":{"start":1697650359828,"stop":1697650363280,"duration":3452}},{"uid":"97c00ceab6c29876","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/97c00ceab6c29876","status":"passed","time":{"start":1697618613086,"stop":1697618616196,"duration":3110}},{"uid":"e3b4e469c99ce239","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/e3b4e469c99ce239","status":"passed","time":{"start":1697592083712,"stop":1697592087048,"duration":3336}},{"uid":"20c02be4e51156b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/20c02be4e51156b1","status":"passed","time":{"start":1697542898051,"stop":1697542901274,"duration":3223}},{"uid":"36553e0cdeeef3c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/36553e0cdeeef3c5","status":"passed","time":{"start":1697505719081,"stop":1697505722866,"duration":3785}},{"uid":"300c304e858725e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/300c304e858725e6","status":"passed","time":{"start":1697484998002,"stop":1697485001214,"duration":3212}},{"uid":"58be8da36adaf6e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/58be8da36adaf6e1","status":"passed","time":{"start":1697484931656,"stop":1697484935622,"duration":3966}},{"uid":"e01f4f6debf17611","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/e01f4f6debf17611","status":"passed","time":{"start":1697419335553,"stop":1697419338618,"duration":3065}},{"uid":"1e66877d2e32b8cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/1e66877d2e32b8cc","status":"passed","time":{"start":1697403469410,"stop":1697403475952,"duration":6542}},{"uid":"f99e6af5e254cacc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/f99e6af5e254cacc","status":"passed","time":{"start":1697400085618,"stop":1697400088583,"duration":2965}},{"uid":"ebeada5324ccc4f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/ebeada5324ccc4f5","status":"passed","time":{"start":1697367348111,"stop":1697367356418,"duration":8307}},{"uid":"89868a2f6d6601d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/89868a2f6d6601d","status":"passed","time":{"start":1697367268238,"stop":1697367271690,"duration":3452}},{"uid":"bd8d085782e1e25f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/bd8d085782e1e25f","status":"passed","time":{"start":1697333166416,"stop":1697333169662,"duration":3246}},{"uid":"da451e824c363314","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/da451e824c363314","status":"passed","time":{"start":1697246290750,"stop":1697246293848,"duration":3098}},{"uid":"769e08f8fd4166ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/769e08f8fd4166ff","status":"passed","time":{"start":1697160175778,"stop":1697160178943,"duration":3165}},{"uid":"582a62849af58c26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/582a62849af58c26","status":"passed","time":{"start":1697073548290,"stop":1697073551501,"duration":3211}}]},"tags":[]},"source":"facc586ab5774e36.json","parameterValues":["TonbridgeAndMallingBC"]}