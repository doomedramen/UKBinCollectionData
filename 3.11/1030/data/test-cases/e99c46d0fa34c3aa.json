{"uid":"e99c46d0fa34c3aa","name":"Validate Council Output [NewcastleCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f8fee070cb49e91fbb5bb87c533c294a","time":{"start":1697702045214,"stop":1697702045215,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f3c41efeca0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3c41e36010>, 'council_name': 'NewcastleCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f3c429b7a10>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f3c41efeca0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3c41e36010>, 'council_name': 'NewcastleCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f3c429b7a10>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1697702045214,"stop":1697702045215,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az221-715"},{"name":"thread","value":"2052-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":135,"unknown":0,"total":140},"items":[{"uid":"a681805044ccebcf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/a681805044ccebcf","status":"passed","time":{"start":1697696161401,"stop":1697696168775,"duration":7374}},{"uid":"3618f56135732253","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/3618f56135732253","status":"passed","time":{"start":1697678102111,"stop":1697678162820,"duration":60709}},{"uid":"e5ad6e526e893abb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/e5ad6e526e893abb","status":"passed","time":{"start":1697666569350,"stop":1697666576295,"duration":6945}},{"uid":"bada3f888461ac52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/bada3f888461ac52","status":"passed","time":{"start":1697656821059,"stop":1697656837397,"duration":16338}},{"uid":"8b4dc88cbe43e8f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/8b4dc88cbe43e8f5","status":"passed","time":{"start":1697650191040,"stop":1697650197695,"duration":6655}},{"uid":"c378acd0ffe8ef57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/c378acd0ffe8ef57","status":"passed","time":{"start":1697618448192,"stop":1697618454984,"duration":6792}},{"uid":"45e89e026488318c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/45e89e026488318c","status":"passed","time":{"start":1697591927821,"stop":1697591934940,"duration":7119}},{"uid":"d26b8096a1c0d20a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/d26b8096a1c0d20a","status":"passed","time":{"start":1697542723331,"stop":1697542737181,"duration":13850}},{"uid":"2ca9cbd93bbdcbec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/2ca9cbd93bbdcbec","status":"passed","time":{"start":1697505585473,"stop":1697505608493,"duration":23020}},{"uid":"c68ff57d4bb879e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/c68ff57d4bb879e","status":"passed","time":{"start":1697484845076,"stop":1697484866317,"duration":21241}},{"uid":"8d15488667cc6fb5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/8d15488667cc6fb5","status":"passed","time":{"start":1697484735701,"stop":1697484747348,"duration":11647}},{"uid":"f8066ce899ba0427","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/f8066ce899ba0427","status":"passed","time":{"start":1697419195477,"stop":1697419224614,"duration":29137}},{"uid":"a2888e6dc5882543","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/a2888e6dc5882543","status":"passed","time":{"start":1697403304753,"stop":1697403311363,"duration":6610}},{"uid":"5f7f5d23bf7a1458","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/5f7f5d23bf7a1458","status":"passed","time":{"start":1697399964987,"stop":1697399971868,"duration":6881}},{"uid":"f344ce23d7085175","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/f344ce23d7085175","status":"passed","time":{"start":1697367217678,"stop":1697367224964,"duration":7286}},{"uid":"70532a044a3df5d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/70532a044a3df5d6","status":"passed","time":{"start":1697367122693,"stop":1697367129456,"duration":6763}},{"uid":"7e8bb85fc7a99145","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/7e8bb85fc7a99145","status":"passed","time":{"start":1697332804209,"stop":1697332832515,"duration":28306}},{"uid":"41b3b961a5100694","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/41b3b961a5100694","status":"passed","time":{"start":1697245968137,"stop":1697246023603,"duration":55466}},{"uid":"533d0a20f2190697","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/533d0a20f2190697","status":"passed","time":{"start":1697159817785,"stop":1697159845708,"duration":27923}},{"uid":"a29bdb024f8c64cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/a29bdb024f8c64cd","status":"passed","time":{"start":1697073168462,"stop":1697073199019,"duration":30557}}]},"tags":[]},"source":"e99c46d0fa34c3aa.json","parameterValues":["NewcastleCityCouncil"]}