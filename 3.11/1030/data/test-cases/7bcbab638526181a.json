{"uid":"7bcbab638526181a","name":"Validate Council Output [WealdenDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"fd6e3e2b6c7fbe2d0715ca47848314a0","time":{"start":1697702046344,"stop":1697702046345,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd4739d1c60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd473906910>, 'council_name': 'WealdenDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd479f90f90>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd4739d1c60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd473906910>, 'council_name': 'WealdenDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd479f90f90>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: WealdenDistrictCouncil","time":{"start":1697702046344,"stop":1697702046345,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az221-715"},{"name":"thread","value":"2049-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WealdenDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":140},"items":[{"uid":"96c12452a165270d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/96c12452a165270d","status":"passed","time":{"start":1697696404891,"stop":1697696406774,"duration":1883}},{"uid":"4fa1af84bb198f02","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/4fa1af84bb198f02","status":"passed","time":{"start":1697678399605,"stop":1697678401692,"duration":2087}},{"uid":"68f98fc5a8d64e85","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/68f98fc5a8d64e85","status":"passed","time":{"start":1697666778576,"stop":1697666780444,"duration":1868}},{"uid":"dc47a4bb4fbb0664","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/dc47a4bb4fbb0664","status":"passed","time":{"start":1697657069989,"stop":1697657071445,"duration":1456}},{"uid":"e76bdf0be6625911","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/e76bdf0be6625911","status":"passed","time":{"start":1697650368789,"stop":1697650370219,"duration":1430}},{"uid":"648581c5910d73da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/648581c5910d73da","status":"passed","time":{"start":1697618511206,"stop":1697618512721,"duration":1515}},{"uid":"f089084054b185d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/f089084054b185d8","status":"passed","time":{"start":1697591972979,"stop":1697591974718,"duration":1739}},{"uid":"71e96063ce4822f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/71e96063ce4822f9","status":"passed","time":{"start":1697542906679,"stop":1697542908192,"duration":1513}},{"uid":"5f2058f4df3bdb7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/5f2058f4df3bdb7","status":"passed","time":{"start":1697505640227,"stop":1697505642202,"duration":1975}},{"uid":"755d052fd3702de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/755d052fd3702de","status":"passed","time":{"start":1697484894065,"stop":1697484895731,"duration":1666}},{"uid":"6cc7bf2c2d0c1539","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/6cc7bf2c2d0c1539","status":"passed","time":{"start":1697484805070,"stop":1697484806559,"duration":1489}},{"uid":"c75b0e1d2de05af0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/c75b0e1d2de05af0","status":"passed","time":{"start":1697419263257,"stop":1697419264911,"duration":1654}},{"uid":"cf045e4df2746b90","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/cf045e4df2746b90","status":"passed","time":{"start":1697403362408,"stop":1697403363849,"duration":1441}},{"uid":"9f95fb290a34e67","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/9f95fb290a34e67","status":"passed","time":{"start":1697399994053,"stop":1697399995835,"duration":1782}},{"uid":"ab89a4dcbc6f4da6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/ab89a4dcbc6f4da6","status":"passed","time":{"start":1697367246510,"stop":1697367248223,"duration":1713}},{"uid":"72913feef6bb6d5a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/72913feef6bb6d5a","status":"passed","time":{"start":1697367161196,"stop":1697367162730,"duration":1534}},{"uid":"8815492572c01def","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/8815492572c01def","status":"passed","time":{"start":1697333073282,"stop":1697333074822,"duration":1540}},{"uid":"1b048e799716c286","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/1b048e799716c286","status":"passed","time":{"start":1697246236268,"stop":1697246237659,"duration":1391}},{"uid":"91e0b77332ddc8e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/91e0b77332ddc8e1","status":"passed","time":{"start":1697160086241,"stop":1697160088009,"duration":1768}},{"uid":"dfab08c57433d9d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/dfab08c57433d9d7","status":"passed","time":{"start":1697073450822,"stop":1697073452627,"duration":1805}}]},"tags":[]},"source":"7bcbab638526181a.json","parameterValues":["WealdenDistrictCouncil"]}