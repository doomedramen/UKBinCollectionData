{"uid":"985ebd47b5fc5bed","name":"Validate Council Output [AylesburyValeCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"974fd2c15e32d40e1deeebde92c36bd9","time":{"start":1697702044024,"stop":1697702044054,"duration":30},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd4739d1c60>\nrequest = <FixtureRequest for <Function test_scenario_outline[AylesburyValeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd473a2d690>, 'council_name': 'AylesburyValeCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd479f90f90>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd4739d1c60>\nrequest = <FixtureRequest for <Function test_scenario_outline[AylesburyValeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd473a2d690>, 'council_name': 'AylesburyValeCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd479f90f90>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: AylesburyValeCouncil","time":{"start":1697702044025,"stop":1697702044054,"duration":29},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az221-715"},{"name":"thread","value":"2049-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"AylesburyValeCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":108,"unknown":0,"total":111},"items":[{"uid":"cd7e044b234eaf67","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/cd7e044b234eaf67","status":"passed","time":{"start":1697696103518,"stop":1697696107347,"duration":3829}},{"uid":"c578f6ae31de7fb8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/c578f6ae31de7fb8","status":"passed","time":{"start":1697678025353,"stop":1697678028872,"duration":3519}},{"uid":"1628366f46082c60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/1628366f46082c60","status":"passed","time":{"start":1697666516464,"stop":1697666519616,"duration":3152}},{"uid":"afb1cccd36b13ae4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/afb1cccd36b13ae4","status":"passed","time":{"start":1697656768919,"stop":1697656772095,"duration":3176}},{"uid":"31137c28fc1dbb98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/31137c28fc1dbb98","status":"passed","time":{"start":1697649961731,"stop":1697649965843,"duration":4112}},{"uid":"9066d0a991b0dd9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/9066d0a991b0dd9","status":"passed","time":{"start":1697618197533,"stop":1697618200357,"duration":2824}},{"uid":"9fa1c586edf4cb54","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/9fa1c586edf4cb54","status":"passed","time":{"start":1697591651144,"stop":1697591656209,"duration":5065}},{"uid":"cafd19d56254e988","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/cafd19d56254e988","status":"passed","time":{"start":1697542512175,"stop":1697542518712,"duration":6537}},{"uid":"d833ffae9063f975","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/d833ffae9063f975","status":"passed","time":{"start":1697505266961,"stop":1697505270328,"duration":3367}},{"uid":"1a9b0cb376679280","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/1a9b0cb376679280","status":"passed","time":{"start":1697484590313,"stop":1697484593462,"duration":3149}},{"uid":"12a43d556995f5e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/12a43d556995f5e4","status":"passed","time":{"start":1697484536837,"stop":1697484540055,"duration":3218}},{"uid":"b15c08e81eba84be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/b15c08e81eba84be","status":"passed","time":{"start":1697418912013,"stop":1697418914722,"duration":2709}},{"uid":"93b880d71486c502","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/93b880d71486c502","status":"passed","time":{"start":1697403108346,"stop":1697403110908,"duration":2562}},{"uid":"4df50c107b6c9d54","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/4df50c107b6c9d54","status":"passed","time":{"start":1697399672499,"stop":1697399675684,"duration":3185}},{"uid":"6f78a941f34b0c0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/6f78a941f34b0c0d","status":"passed","time":{"start":1697366923955,"stop":1697366927036,"duration":3081}},{"uid":"364717fad712b4ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/364717fad712b4ff","status":"passed","time":{"start":1697366875140,"stop":1697366878106,"duration":2966}},{"uid":"7c1b335cedb2278a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/7c1b335cedb2278a","status":"passed","time":{"start":1697332744727,"stop":1697332748302,"duration":3575}},{"uid":"10fd67281f5a4a9e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/10fd67281f5a4a9e","status":"passed","time":{"start":1697245906904,"stop":1697245909641,"duration":2737}},{"uid":"a4f0d6d3dc0c8928","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/a4f0d6d3dc0c8928","status":"passed","time":{"start":1697159746438,"stop":1697159749562,"duration":3124}},{"uid":"ca740748d33a8b26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/ca740748d33a8b26","status":"passed","time":{"start":1697073092232,"stop":1697073095263,"duration":3031}}]},"tags":[]},"source":"985ebd47b5fc5bed.json","parameterValues":["AylesburyValeCouncil"]}