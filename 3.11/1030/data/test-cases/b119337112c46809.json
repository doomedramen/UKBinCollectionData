{"uid":"b119337112c46809","name":"Validate Council Output [EastCambridgeshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"94109bff7ef580f8a70ff49447a40d87","time":{"start":1697702044650,"stop":1697702044651,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f3c41efeca0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastCambridgeshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3c41fbb8d0>, 'council_name': 'EastCambridgeshireCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f3c429b7a10>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f3c41efeca0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastCambridgeshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3c41fbb8d0>, 'council_name': 'EastCambridgeshireCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f3c429b7a10>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: EastCambridgeshireCouncil","time":{"start":1697702044650,"stop":1697702044651,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az221-715"},{"name":"thread","value":"2052-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastCambridgeshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":135,"unknown":0,"total":140},"items":[{"uid":"e636b6f2eaa000d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/e636b6f2eaa000d4","status":"passed","time":{"start":1697696148938,"stop":1697696150643,"duration":1705}},{"uid":"248c1de67f1be051","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/248c1de67f1be051","status":"passed","time":{"start":1697678078698,"stop":1697678080277,"duration":1579}},{"uid":"8205b67c226f36e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/8205b67c226f36e9","status":"passed","time":{"start":1697666547110,"stop":1697666548393,"duration":1283}},{"uid":"16fca9c171e99388","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/16fca9c171e99388","status":"passed","time":{"start":1697656806361,"stop":1697656807655,"duration":1294}},{"uid":"93d03d79af02b2b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/93d03d79af02b2b0","status":"passed","time":{"start":1697650013229,"stop":1697650014417,"duration":1188}},{"uid":"819e85d8736c87e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/819e85d8736c87e5","status":"passed","time":{"start":1697618243282,"stop":1697618244511,"duration":1229}},{"uid":"f71aaeea6f463fae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/f71aaeea6f463fae","status":"passed","time":{"start":1697591697127,"stop":1697591698786,"duration":1659}},{"uid":"52c9676ffcee28d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/52c9676ffcee28d","status":"passed","time":{"start":1697542552438,"stop":1697542553694,"duration":1256}},{"uid":"d30b29bf8e1bd20e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/d30b29bf8e1bd20e","status":"passed","time":{"start":1697505309668,"stop":1697505311251,"duration":1583}},{"uid":"4e52024f9ecd34ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/4e52024f9ecd34ec","status":"passed","time":{"start":1697484616334,"stop":1697484619312,"duration":2978}},{"uid":"1642efb34c378024","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/1642efb34c378024","status":"passed","time":{"start":1697484563394,"stop":1697484564673,"duration":1279}},{"uid":"2321616f988314eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/2321616f988314eb","status":"passed","time":{"start":1697418946864,"stop":1697418948662,"duration":1798}},{"uid":"8d68f1487944ddd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/8d68f1487944ddd","status":"passed","time":{"start":1697403134832,"stop":1697403138605,"duration":3773}},{"uid":"505e90eb0da8fb04","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/505e90eb0da8fb04","status":"passed","time":{"start":1697399700589,"stop":1697399702212,"duration":1623}},{"uid":"4a05d7be85282f77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/4a05d7be85282f77","status":"passed","time":{"start":1697366959682,"stop":1697366961363,"duration":1681}},{"uid":"99838dcff22f41fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/99838dcff22f41fc","status":"passed","time":{"start":1697366902528,"stop":1697366904010,"duration":1482}},{"uid":"641c031a765b7909","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/641c031a765b7909","status":"passed","time":{"start":1697332782401,"stop":1697332784221,"duration":1820}},{"uid":"c5d41b2f40063a90","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/c5d41b2f40063a90","status":"passed","time":{"start":1697245943656,"stop":1697245944933,"duration":1277}},{"uid":"c17193f65ec1f239","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/c17193f65ec1f239","status":"passed","time":{"start":1697159786198,"stop":1697159787695,"duration":1497}},{"uid":"a1b2d3444a332456","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/a1b2d3444a332456","status":"passed","time":{"start":1697073139204,"stop":1697073141039,"duration":1835}}]},"tags":[]},"source":"b119337112c46809.json","parameterValues":["EastCambridgeshireCouncil"]}