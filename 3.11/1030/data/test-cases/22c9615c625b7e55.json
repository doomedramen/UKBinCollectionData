{"uid":"22c9615c625b7e55","name":"Validate Council Output [BCPCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7d71d1ccc30dceca9719e13fd958458d","time":{"start":1697702044261,"stop":1697702044262,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd4739d1c60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BCPCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd4736f0d90>, 'council_name': 'BCPCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd479f90f90>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7fd4739d1c60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BCPCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd4736f0d90>, 'council_name': 'BCPCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd479f90f90>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: BCPCouncil","time":{"start":1697702044261,"stop":1697702044262,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az221-715"},{"name":"thread","value":"2049-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BCPCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":140},"items":[{"uid":"be39032c0b8df496","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/be39032c0b8df496","status":"passed","time":{"start":1697696109123,"stop":1697696109923,"duration":800}},{"uid":"2af30087064d56e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/2af30087064d56e8","status":"passed","time":{"start":1697678031126,"stop":1697678032420,"duration":1294}},{"uid":"f63d2e8f93cd9ff7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/f63d2e8f93cd9ff7","status":"passed","time":{"start":1697666520934,"stop":1697666521573,"duration":639}},{"uid":"3f87a6c432e3c797","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/3f87a6c432e3c797","status":"passed","time":{"start":1697656773818,"stop":1697656774649,"duration":831}},{"uid":"b59a523e0cffeadc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/b59a523e0cffeadc","status":"passed","time":{"start":1697649967414,"stop":1697649968277,"duration":863}},{"uid":"c3d1510d05c0bdd9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/c3d1510d05c0bdd9","status":"passed","time":{"start":1697618202537,"stop":1697618203407,"duration":870}},{"uid":"2405447ee6c2f03e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/2405447ee6c2f03e","status":"passed","time":{"start":1697591657879,"stop":1697591658876,"duration":997}},{"uid":"4dc97cfb704c1b09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/4dc97cfb704c1b09","status":"passed","time":{"start":1697542523196,"stop":1697542523966,"duration":770}},{"uid":"79e078924e12bd1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/79e078924e12bd1f","status":"passed","time":{"start":1697505272811,"stop":1697505273810,"duration":999}},{"uid":"46b226815c785c86","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/46b226815c785c86","status":"passed","time":{"start":1697484595244,"stop":1697484596056,"duration":812}},{"uid":"59d744b33862aa51","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/59d744b33862aa51","status":"passed","time":{"start":1697484541397,"stop":1697484542284,"duration":887}},{"uid":"6dfca255d41be55b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/6dfca255d41be55b","status":"passed","time":{"start":1697418916403,"stop":1697418917405,"duration":1002}},{"uid":"fb99aacc1a7fd1bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/fb99aacc1a7fd1bd","status":"passed","time":{"start":1697403112517,"stop":1697403113383,"duration":866}},{"uid":"e7bf1fa93d7ab49f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/e7bf1fa93d7ab49f","status":"passed","time":{"start":1697399677872,"stop":1697399678838,"duration":966}},{"uid":"1bfee6055d3e386a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/1bfee6055d3e386a","status":"passed","time":{"start":1697366929250,"stop":1697366930275,"duration":1025}},{"uid":"e1ba3a9a7d040980","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/e1ba3a9a7d040980","status":"passed","time":{"start":1697366879925,"stop":1697366880870,"duration":945}},{"uid":"3aecbfe1e501979f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/3aecbfe1e501979f","status":"passed","time":{"start":1697332750505,"stop":1697332751334,"duration":829}},{"uid":"bf543bd90209f5f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/bf543bd90209f5f3","status":"passed","time":{"start":1697245911155,"stop":1697245912509,"duration":1354}},{"uid":"291b9ed053d9e1ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/291b9ed053d9e1ee","status":"passed","time":{"start":1697159751266,"stop":1697159752388,"duration":1122}},{"uid":"164e3641fb8f43da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/164e3641fb8f43da","status":"passed","time":{"start":1697073097227,"stop":1697073098425,"duration":1198}}]},"tags":[]},"source":"22c9615c625b7e55.json","parameterValues":["BCPCouncil"]}