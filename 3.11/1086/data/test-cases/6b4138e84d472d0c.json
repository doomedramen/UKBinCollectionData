{"uid":"6b4138e84d472d0c","name":"Validate Council Output [LondonBoroughHounslow]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e674cebf616dd1178743c85688db8654","time":{"start":1698867604851,"stop":1698867607962,"duration":3111},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0548c063e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f05386e10d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f05386e10d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0548c063e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f05386e10d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f05386e10d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1698867604851,"stop":1698867604852,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from LondonBoroughHounslow","time":{"start":1698867604852,"stop":1698867607958,"duration":3106},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698867607959,"stop":1698867607959,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698867607959,"stop":1698867607962,"duration":3},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1242-562"},{"name":"thread","value":"2215-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":163,"unknown":0,"total":170},"items":[{"uid":"78a749add36bc0c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1081//#testresult/78a749add36bc0c4","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801655623,"stop":1698801673894,"duration":18271}},{"uid":"e046b09a1c09fe77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1079//#testresult/e046b09a1c09fe77","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788693212,"stop":1698788696908,"duration":3696}},{"uid":"fed2e341e23699aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1077//#testresult/fed2e341e23699aa","status":"passed","time":{"start":1698715171646,"stop":1698715174620,"duration":2974}},{"uid":"b22c6d75754f7baf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/b22c6d75754f7baf","status":"passed","time":{"start":1698701499721,"stop":1698701502236,"duration":2515}},{"uid":"b9fbf180e12ca349","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/b9fbf180e12ca349","status":"passed","time":{"start":1698700408832,"stop":1698700412068,"duration":3236}},{"uid":"badc32e863833507","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/badc32e863833507","status":"passed","time":{"start":1698692982748,"stop":1698692985835,"duration":3087}},{"uid":"113a37e17711e24c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/113a37e17711e24c","status":"passed","time":{"start":1698692931660,"stop":1698692934986,"duration":3326}},{"uid":"4f598211a45b87fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/4f598211a45b87fa","status":"passed","time":{"start":1698646547949,"stop":1698646550925,"duration":2976}},{"uid":"b12beb4b29c31827","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/b12beb4b29c31827","status":"passed","time":{"start":1698646486863,"stop":1698646490219,"duration":3356}},{"uid":"42ef6ce1a13697e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/42ef6ce1a13697e3","status":"passed","time":{"start":1698628523558,"stop":1698628527277,"duration":3719}},{"uid":"320d9b2bc179c357","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/320d9b2bc179c357","status":"passed","time":{"start":1698615148981,"stop":1698615152042,"duration":3061}},{"uid":"a894a6fcdbb88888","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1063//#testresult/a894a6fcdbb88888","status":"passed","time":{"start":1698615220868,"stop":1698615223503,"duration":2635}},{"uid":"64390310db34062a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1061//#testresult/64390310db34062a","status":"passed","time":{"start":1698615080412,"stop":1698615083882,"duration":3470}},{"uid":"928a8fc6f01e71e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1054//#testresult/928a8fc6f01e71e5","status":"passed","time":{"start":1698542316542,"stop":1698542320002,"duration":3460}},{"uid":"cde8eaee996cac2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1053//#testresult/cde8eaee996cac2","status":"passed","time":{"start":1698455513173,"stop":1698455516137,"duration":2964}},{"uid":"86a37bf92554c3b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1051//#testresult/86a37bf92554c3b2","status":"passed","time":{"start":1698369200076,"stop":1698369202998,"duration":2922}},{"uid":"2b1da665b88153cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1050//#testresult/2b1da665b88153cf","status":"passed","time":{"start":1698282791311,"stop":1698282794008,"duration":2697}},{"uid":"9be621af73a90b51","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1049//#testresult/9be621af73a90b51","status":"passed","time":{"start":1698196466199,"stop":1698196468868,"duration":2669}},{"uid":"7e3a3e41b71933bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1048//#testresult/7e3a3e41b71933bb","status":"passed","time":{"start":1698178194096,"stop":1698178196958,"duration":2862}},{"uid":"b38f91ebe4c373c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1047//#testresult/b38f91ebe4c373c8","status":"passed","time":{"start":1698178131217,"stop":1698178134160,"duration":2943}}]},"tags":[]},"source":"6b4138e84d472d0c.json","parameterValues":["LondonBoroughHounslow"]}