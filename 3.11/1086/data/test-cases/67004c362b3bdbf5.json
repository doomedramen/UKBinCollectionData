{"uid":"67004c362b3bdbf5","name":"Validate Council Output [BasingstokeCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"920a57bf4f74278e86b973f40cf06007","time":{"start":1698867375402,"stop":1698867376165,"duration":763},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0548c063e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BasingstokeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f053dad9ad0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f053dad9ad0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0548c063e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BasingstokeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f053dad9ad0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f053dad9ad0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","steps":[{"name":"Given the council: BasingstokeCouncil","time":{"start":1698867375402,"stop":1698867375403,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BasingstokeCouncil","time":{"start":1698867375403,"stop":1698867376162,"duration":759},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698867376162,"stop":1698867376162,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698867376163,"stop":1698867376165,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1242-562"},{"name":"thread","value":"2215-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BasingstokeCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":122,"broken":0,"skipped":0,"passed":48,"unknown":0,"total":170},"items":[{"uid":"8bb98ed47d5ddf9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1081//#testresult/8bb98ed47d5ddf9b","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801494817,"stop":1698801495511,"duration":694}},{"uid":"e71a781dec0f3c97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1079//#testresult/e71a781dec0f3c97","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788423713,"stop":1698788424742,"duration":1029}},{"uid":"ade56f97df75e7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1077//#testresult/ade56f97df75e7e","status":"passed","time":{"start":1698714882499,"stop":1698714883792,"duration":1293}},{"uid":"a0f22a11ac030f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/a0f22a11ac030f0","status":"passed","time":{"start":1698701269143,"stop":1698701269899,"duration":756}},{"uid":"36a12f2aaf1e31ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/36a12f2aaf1e31ec","status":"passed","time":{"start":1698700150772,"stop":1698700152222,"duration":1450}},{"uid":"8c52e2db178818a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/8c52e2db178818a0","status":"passed","time":{"start":1698692708202,"stop":1698692709541,"duration":1339}},{"uid":"63e6629c9d1ddff9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/63e6629c9d1ddff9","status":"passed","time":{"start":1698692662258,"stop":1698692663262,"duration":1004}},{"uid":"3b066988d1ec725c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/3b066988d1ec725c","status":"passed","time":{"start":1698646222180,"stop":1698646223184,"duration":1004}},{"uid":"648e963de2fe3474","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/648e963de2fe3474","status":"passed","time":{"start":1698646251117,"stop":1698646252240,"duration":1123}},{"uid":"c6ea30f3d9669fb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/c6ea30f3d9669fb9","status":"passed","time":{"start":1698628466547,"stop":1698628467301,"duration":754}},{"uid":"8d8d7fbf3db6af8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/8d8d7fbf3db6af8f","status":"passed","time":{"start":1698615104410,"stop":1698615105173,"duration":763}},{"uid":"85ca3bac73b2c9c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1063//#testresult/85ca3bac73b2c9c","status":"passed","time":{"start":1698615159038,"stop":1698615159784,"duration":746}},{"uid":"3ded55989e6318c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1061//#testresult/3ded55989e6318c2","status":"passed","time":{"start":1698615035998,"stop":1698615036988,"duration":990}},{"uid":"16cc0236ed8ab7d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1054//#testresult/16cc0236ed8ab7d4","status":"passed","time":{"start":1698542269475,"stop":1698542270617,"duration":1142}},{"uid":"8a1175d09845fc03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1053//#testresult/8a1175d09845fc03","status":"passed","time":{"start":1698455465317,"stop":1698455466071,"duration":754}},{"uid":"32d296f58c223435","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1051//#testresult/32d296f58c223435","status":"passed","time":{"start":1698369152118,"stop":1698369153114,"duration":996}},{"uid":"6ca385258eb339f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1050//#testresult/6ca385258eb339f5","status":"passed","time":{"start":1698282734178,"stop":1698282735354,"duration":1176}},{"uid":"99046c969744cd1b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1049//#testresult/99046c969744cd1b","status":"passed","time":{"start":1698196414124,"stop":1698196414895,"duration":771}},{"uid":"fc71e4d6f81d1b92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1048//#testresult/fc71e4d6f81d1b92","status":"passed","time":{"start":1698178129850,"stop":1698178131146,"duration":1296}},{"uid":"b1a30748b921b3de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1047//#testresult/b1a30748b921b3de","status":"passed","time":{"start":1698178084807,"stop":1698178085588,"duration":781}}]},"tags":[]},"source":"67004c362b3bdbf5.json","parameterValues":["BasingstokeCouncil"]}