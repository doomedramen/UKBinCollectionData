{"uid":"4e583ea97f8f8e54","name":"Validate Council Output [SwaleBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"af246d65f1eea891cf11ee497308965a","time":{"start":1716710193813,"stop":1716710195258,"duration":1445},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f81d9022160>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f81d8328a90>, 'council': 'SwaleBoroughCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f81d7973450>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>Bins - Check Your Bin Days</ti...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:41: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f81d9022160>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f81d8328a90>, 'council': 'SwaleBoroughCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f81d7973450>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>Bins - Check Your Bin Days</ti...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:41: AttributeError","steps":[{"name":"Given the council: SwaleBoroughCouncil","time":{"start":1716710193813,"stop":1716710193814,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SwaleBoroughCouncil","time":{"start":1716710193814,"stop":1716710195258,"duration":1444},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1442-421"},{"name":"thread","value":"2832-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwaleBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":171,"broken":0,"skipped":0,"passed":23,"unknown":0,"total":194},"items":[{"uid":"23f8e7a7aa9c46fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1866//#testresult/23f8e7a7aa9c46fd","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716705618805,"stop":1716705620417,"duration":1612}},{"uid":"2ff1eb6f0a32eda4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1865//#testresult/2ff1eb6f0a32eda4","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716684079534,"stop":1716684081262,"duration":1728}},{"uid":"2671f9ed5aa2a3c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1863//#testresult/2671f9ed5aa2a3c1","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716625213716,"stop":1716625215298,"duration":1582}},{"uid":"f3fe2df3df09dcde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1862//#testresult/f3fe2df3df09dcde","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716597455280,"stop":1716597456937,"duration":1657}},{"uid":"ac44a46390d88f1d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1856//#testresult/ac44a46390d88f1d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716511279011,"stop":1716511281130,"duration":2119}},{"uid":"c2cd900b7f753b9f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1855//#testresult/c2cd900b7f753b9f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716424931447,"stop":1716424933225,"duration":1778}},{"uid":"ecf1b954b60c9498","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1854//#testresult/ecf1b954b60c9498","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716338322491,"stop":1716338324612,"duration":2121}},{"uid":"ae1c84e22929b529","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1853//#testresult/ae1c84e22929b529","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716252128969,"stop":1716252131692,"duration":2723}},{"uid":"e14877db090b476","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1852//#testresult/e14877db090b476","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716165643160,"stop":1716165644842,"duration":1682}},{"uid":"9cae30d8e872f00e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1851//#testresult/9cae30d8e872f00e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716155475455,"stop":1716155477929,"duration":2474}},{"uid":"2c16c62ac156902b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1846//#testresult/2c16c62ac156902b","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1716079364360,"stop":1716079366739,"duration":2379}},{"uid":"a6cc62be16d31e24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1842//#testresult/a6cc62be16d31e24","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1715992641244,"stop":1715992642974,"duration":1730}},{"uid":"2a5fdd4c91b3334f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1839//#testresult/2a5fdd4c91b3334f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1715983855018,"stop":1715983857570,"duration":2552}},{"uid":"925e8f47c6396129","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1834//#testresult/925e8f47c6396129","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1715974233258,"stop":1715974235126,"duration":1868}},{"uid":"da262616df0d100f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1110//#testresult/da262616df0d100f","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1699147306219,"stop":1699147307382,"duration":1163}},{"uid":"1e5b68bcc07d989","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1107//#testresult/1e5b68bcc07d989","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1699101584481,"stop":1699101585309,"duration":828}},{"uid":"931f6a5a63c3f1aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1106//#testresult/931f6a5a63c3f1aa","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1699060697855,"stop":1699060698522,"duration":667}},{"uid":"63140363c6beebe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1100//#testresult/63140363c6beebe","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1699007684776,"stop":1699007685771,"duration":995}},{"uid":"51683f1b74eefb72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1095//#testresult/51683f1b74eefb72","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1698988829535,"stop":1698988830278,"duration":743}},{"uid":"4b7d4e29883c5dea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1094//#testresult/4b7d4e29883c5dea","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1698974412378,"stop":1698974413354,"duration":976}}]},"tags":[]},"source":"4e583ea97f8f8e54.json","parameterValues":["SwaleBoroughCouncil"]}