{"uid":"f3d858850583784e","name":"Validate Council Output [YorkCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"95d2ddaa8617a8ae0ab01b561e2fb1b9","time":{"start":1716710365129,"stop":1716710465512,"duration":100383},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7effe99165c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[YorkCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7effe8c69b50>, 'council': 'YorkCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/YorkCouncil.py:26: in parse_data\n    json_response = json.loads(response.content)[\"services\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7efffd6044d0>\ns = '<!DOCTYPE html>\\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\\n<!--[if IE 7]>    <html ...istener(\"DOMContentLoaded\",d)})();</script>\\n</div><!-- /.error-footer -->\\n\\n\\n    </div>\\n</div>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7effe99165c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[YorkCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7effe8c69b50>, 'council': 'YorkCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/YorkCouncil.py:26: in parse_data\n    json_response = json.loads(response.content)[\"services\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7efffd6044d0>\ns = '<!DOCTYPE html>\\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\\n<!--[if IE 7]>    <html ...istener(\"DOMContentLoaded\",d)})();</script>\\n</div><!-- /.error-footer -->\\n\\n\\n    </div>\\n</div>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: YorkCouncil","time":{"start":1716710365130,"stop":1716710365130,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from YorkCouncil","time":{"start":1716710365130,"stop":1716710465512,"duration":100382},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1442-421"},{"name":"thread","value":"2829-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"YorkCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":188,"unknown":0,"total":194},"items":[{"uid":"aed6e6516ab3a48b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1866//#testresult/aed6e6516ab3a48b","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716705663048,"stop":1716705763440,"duration":100392}},{"uid":"a62337779305623e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1865//#testresult/a62337779305623e","status":"passed","time":{"start":1716684103081,"stop":1716684104392,"duration":1311}},{"uid":"445b5d7a5b763f6f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1863//#testresult/445b5d7a5b763f6f","status":"passed","time":{"start":1716625389163,"stop":1716625393575,"duration":4412}},{"uid":"2d8bfe153439f712","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1862//#testresult/2d8bfe153439f712","status":"passed","time":{"start":1716597550129,"stop":1716597550699,"duration":570}},{"uid":"9d2e0ba4bc21b816","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1856//#testresult/9d2e0ba4bc21b816","status":"passed","time":{"start":1716511299445,"stop":1716511300137,"duration":692}},{"uid":"f16d67e474646d19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1855//#testresult/f16d67e474646d19","status":"passed","time":{"start":1716424978686,"stop":1716424979456,"duration":770}},{"uid":"8b2e1b3c02462774","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1854//#testresult/8b2e1b3c02462774","status":"passed","time":{"start":1716338371595,"stop":1716338372099,"duration":504}},{"uid":"9c99c3907e29afed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1853//#testresult/9c99c3907e29afed","status":"passed","time":{"start":1716252164084,"stop":1716252166014,"duration":1930}},{"uid":"e5b6b2c23468f28f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1852//#testresult/e5b6b2c23468f28f","status":"passed","time":{"start":1716165662184,"stop":1716165662731,"duration":547}},{"uid":"14dc7800fc876e03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1851//#testresult/14dc7800fc876e03","status":"passed","time":{"start":1716155503275,"stop":1716155504102,"duration":827}},{"uid":"437f811a54ce5716","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1846//#testresult/437f811a54ce5716","status":"passed","time":{"start":1716079412602,"stop":1716079413431,"duration":829}},{"uid":"78fd1a316c1c676d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1842//#testresult/78fd1a316c1c676d","status":"passed","time":{"start":1715992802524,"stop":1715992803217,"duration":693}},{"uid":"713734acfc0a72c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1839//#testresult/713734acfc0a72c","status":"passed","time":{"start":1715984026814,"stop":1715984027647,"duration":833}},{"uid":"2821cfed9fa985f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1834//#testresult/2821cfed9fa985f7","status":"passed","time":{"start":1715974275497,"stop":1715974276099,"duration":602}},{"uid":"c3d2973152c0b627","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1110//#testresult/c3d2973152c0b627","status":"passed","time":{"start":1699147473787,"stop":1699147474685,"duration":898}},{"uid":"c9aca4c4bf899c66","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1107//#testresult/c9aca4c4bf899c66","status":"passed","time":{"start":1699101750229,"stop":1699101750793,"duration":564}},{"uid":"9f5dbadd773f4f1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1106//#testresult/9f5dbadd773f4f1f","status":"passed","time":{"start":1699060729492,"stop":1699060730018,"duration":526}},{"uid":"11cda793829f5fe8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1100//#testresult/11cda793829f5fe8","status":"passed","time":{"start":1699007839567,"stop":1699007840378,"duration":811}},{"uid":"e494ebc77b5306c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1095//#testresult/e494ebc77b5306c8","status":"passed","time":{"start":1698988869569,"stop":1698988870246,"duration":677}},{"uid":"1145706896ea7d0f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1094//#testresult/1145706896ea7d0f","status":"passed","time":{"start":1698974490058,"stop":1698974490933,"duration":875}}]},"tags":[]},"source":"f3d858850583784e.json","parameterValues":["YorkCouncil"]}