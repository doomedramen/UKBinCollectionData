{"uid":"ad2aad7a21244e8","name":"Validate Council Output [BarnetCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cc586f88bb959e318f31a1e5c380b8cb","time":{"start":1705710379752,"stop":1705710386327,"duration":6575},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"submit\" name=\"ctl00$MainContent$CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" value=\"Find address\" onclick=\"SetSpinnerText(this);\" id=\"MainContent_CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" callcounter=\"0\" form-uid=\"27\" clientuid=\"CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" class=\"css-invokeworkflow forthButtonColour forthButtonTextColour\" repeat-uid=\"\" data-invokeworkflow=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" maxcalls=\"-1\" questionobject-uid=\"PROFILESEARCHADDR\" question-uid=\"455b794d-8fee-4fb7-922e-32157834fd7c\" isbutton=\"true\" uid=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" formsection-uid=\"808562d4-b07f-437e-a751-317cabd19d9e\" showrequiredmessage=\"true\"> is not clickable at point (304, 579). Other element would receive the click: <div style=\"position: relative; height: auto; width: 90%; padding: 15px; margin-left: auto; margin-right: auto; background-color: rgb(0, 0, 0); min-height: 0px;\">...</div>\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x55575373ef83 <unknown>\n#1 0x5557533f7cf7 <unknown>\n#2 0x55575344fd92 <unknown>\n#3 0x55575344d7f4 <unknown>\n#4 0x55575344a894 <unknown>\n#5 0x5557534494b9 <unknown>\n#6 0x55575343b313 <unknown>\n#7 0x5557534710b2 <unknown>\n#8 0x55575343ab49 <unknown>\n#9 0x5557534714ce <unknown>\n#10 0x555753490006 <unknown>\n#11 0x555753470e53 <unknown>\n#12 0x555753438dd4 <unknown>\n#13 0x55575343a1de <unknown>\n#14 0x555753703531 <unknown>\n#15 0x555753707455 <unknown>\n#16 0x5557536eff55 <unknown>\n#17 0x5557537080ef <unknown>\n#18 0x5557536d399f <unknown>\n#19 0x55575372c008 <unknown>\n#20 0x55575372c1d7 <unknown>\n#21 0x55575373e124 <unknown>\n#22 0x7fcb23094ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f1b6dafcea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f1b6de55010>, 'council': 'BarnetCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:94: in parse_data\n    find_address_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1b80333210>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55575372c1d7 \\\\u003Cunknown>\\\\n#21 0x55575373e124 \\\\u003Cunknown>\\\\n#22 0x7fcb23094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"submit\" name=\"ctl00$MainContent$CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" value=\"Find address\" onclick=\"SetSpinnerText(this);\" id=\"MainContent_CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" callcounter=\"0\" form-uid=\"27\" clientuid=\"CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" class=\"css-invokeworkflow forthButtonColour forthButtonTextColour\" repeat-uid=\"\" data-invokeworkflow=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" maxcalls=\"-1\" questionobject-uid=\"PROFILESEARCHADDR\" question-uid=\"455b794d-8fee-4fb7-922e-32157834fd7c\" isbutton=\"true\" uid=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" formsection-uid=\"808562d4-b07f-437e-a751-317cabd19d9e\" showrequiredmessage=\"true\"> is not clickable at point (304, 579). Other element would receive the click: <div style=\"position: relative; height: auto; width: 90%; padding: 15px; margin-left: auto; margin-right: auto; background-color: rgb(0, 0, 0); min-height: 0px;\">...</div>\nE         (Session info: chrome-headless-shell=120.0.6099.216)\nE       Stacktrace:\nE       #0 0x55575373ef83 <unknown>\nE       #1 0x5557533f7cf7 <unknown>\nE       #2 0x55575344fd92 <unknown>\nE       #3 0x55575344d7f4 <unknown>\nE       #4 0x55575344a894 <unknown>\nE       #5 0x5557534494b9 <unknown>\nE       #6 0x55575343b313 <unknown>\nE       #7 0x5557534710b2 <unknown>\nE       #8 0x55575343ab49 <unknown>\nE       #9 0x5557534714ce <unknown>\nE       #10 0x555753490006 <unknown>\nE       #11 0x555753470e53 <unknown>\nE       #12 0x555753438dd4 <unknown>\nE       #13 0x55575343a1de <unknown>\nE       #14 0x555753703531 <unknown>\nE       #15 0x555753707455 <unknown>\nE       #16 0x5557536eff55 <unknown>\nE       #17 0x5557537080ef <unknown>\nE       #18 0x5557536d399f <unknown>\nE       #19 0x55575372c008 <unknown>\nE       #20 0x55575372c1d7 <unknown>\nE       #21 0x55575373e124 <unknown>\nE       #22 0x7fcb23094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"submit\" name=\"ctl00$MainContent$CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" value=\"Find address\" onclick=\"SetSpinnerText(this);\" id=\"MainContent_CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" callcounter=\"0\" form-uid=\"27\" clientuid=\"CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" class=\"css-invokeworkflow forthButtonColour forthButtonTextColour\" repeat-uid=\"\" data-invokeworkflow=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" maxcalls=\"-1\" questionobject-uid=\"PROFILESEARCHADDR\" question-uid=\"455b794d-8fee-4fb7-922e-32157834fd7c\" isbutton=\"true\" uid=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" formsection-uid=\"808562d4-b07f-437e-a751-317cabd19d9e\" showrequiredmessage=\"true\"> is not clickable at point (304, 579). Other element would receive the click: <div style=\"position: relative; height: auto; width: 90%; padding: 15px; margin-left: auto; margin-right: auto; background-color: rgb(0, 0, 0); min-height: 0px;\">...</div>\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x55575373ef83 <unknown>\n#1 0x5557533f7cf7 <unknown>\n#2 0x55575344fd92 <unknown>\n#3 0x55575344d7f4 <unknown>\n#4 0x55575344a894 <unknown>\n#5 0x5557534494b9 <unknown>\n#6 0x55575343b313 <unknown>\n#7 0x5557534710b2 <unknown>\n#8 0x55575343ab49 <unknown>\n#9 0x5557534714ce <unknown>\n#10 0x555753490006 <unknown>\n#11 0x555753470e53 <unknown>\n#12 0x555753438dd4 <unknown>\n#13 0x55575343a1de <unknown>\n#14 0x555753703531 <unknown>\n#15 0x555753707455 <unknown>\n#16 0x5557536eff55 <unknown>\n#17 0x5557537080ef <unknown>\n#18 0x5557536d399f <unknown>\n#19 0x55575372c008 <unknown>\n#20 0x55575372c1d7 <unknown>\n#21 0x55575373e124 <unknown>\n#22 0x7fcb23094ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f1b6dafcea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f1b6de55010>, 'council': 'BarnetCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:94: in parse_data\n    find_address_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1b80333210>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55575372c1d7 \\\\u003Cunknown>\\\\n#21 0x55575373e124 \\\\u003Cunknown>\\\\n#22 0x7fcb23094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"submit\" name=\"ctl00$MainContent$CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" value=\"Find address\" onclick=\"SetSpinnerText(this);\" id=\"MainContent_CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" callcounter=\"0\" form-uid=\"27\" clientuid=\"CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" class=\"css-invokeworkflow forthButtonColour forthButtonTextColour\" repeat-uid=\"\" data-invokeworkflow=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" maxcalls=\"-1\" questionobject-uid=\"PROFILESEARCHADDR\" question-uid=\"455b794d-8fee-4fb7-922e-32157834fd7c\" isbutton=\"true\" uid=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" formsection-uid=\"808562d4-b07f-437e-a751-317cabd19d9e\" showrequiredmessage=\"true\"> is not clickable at point (304, 579). Other element would receive the click: <div style=\"position: relative; height: auto; width: 90%; padding: 15px; margin-left: auto; margin-right: auto; background-color: rgb(0, 0, 0); min-height: 0px;\">...</div>\nE         (Session info: chrome-headless-shell=120.0.6099.216)\nE       Stacktrace:\nE       #0 0x55575373ef83 <unknown>\nE       #1 0x5557533f7cf7 <unknown>\nE       #2 0x55575344fd92 <unknown>\nE       #3 0x55575344d7f4 <unknown>\nE       #4 0x55575344a894 <unknown>\nE       #5 0x5557534494b9 <unknown>\nE       #6 0x55575343b313 <unknown>\nE       #7 0x5557534710b2 <unknown>\nE       #8 0x55575343ab49 <unknown>\nE       #9 0x5557534714ce <unknown>\nE       #10 0x555753490006 <unknown>\nE       #11 0x555753470e53 <unknown>\nE       #12 0x555753438dd4 <unknown>\nE       #13 0x55575343a1de <unknown>\nE       #14 0x555753703531 <unknown>\nE       #15 0x555753707455 <unknown>\nE       #16 0x5557536eff55 <unknown>\nE       #17 0x5557537080ef <unknown>\nE       #18 0x5557536d399f <unknown>\nE       #19 0x55575372c008 <unknown>\nE       #20 0x55575372c1d7 <unknown>\nE       #21 0x55575373e124 <unknown>\nE       #22 0x7fcb23094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council: BarnetCouncil","time":{"start":1705710379753,"stop":1705710379753,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BarnetCouncil using local and the http://selenium:4444 is set","time":{"start":1705710379753,"stop":1705710386327,"duration":6574},"status":"failed","statusMessage":"Message: element click intercepted: Element <input type=\"submit\" name=\"ctl00$MainContent$CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" value=\"Find address\" onclick=\"SetSpinnerText(this);\" id=\"MainContent_CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" callcounter=\"0\" form-uid=\"27\" clientuid=\"CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" class=\"css-invokeworkflow forthButtonColour forthButtonTextColour\" repeat-uid=\"\" data-invokeworkflow=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" maxcalls=\"-1\" questionobject-uid=\"PROFILESEARCHADDR\" question-uid=\"455b794d-8fee-4fb7-922e-32157834fd7c\" isbutton=\"true\" uid=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" formsection-uid=\"808562d4-b07f-437e-a751-317cabd19d9e\" showrequiredmessage=\"true\"> is not clickable at point (304, 579). Other element would receive the click: <div style=\"position: relative; height: auto; width: 90%; padding: 15px; margin-left: auto; margin-right: auto; background-color: rgb(0, 0, 0); min-height: 0px;\">...</div>\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x55575373ef83 <unknown>\n#1 0x5557533f7cf7 <unknown>\n#2 0x55575344fd92 <unknown>\n#3 0x55575344d7f4 <unknown>\n#4 0x55575344a894 <unknown>\n#5 0x5557534494b9 <unknown>\n#6 0x55575343b313 <unknown>\n#7 0x5557534710b2 <unknown>\n#8 0x55575343ab49 <unknown>\n#9 0x5557534714ce <unknown>\n#10 0x555753490006 <unknown>\n#11 0x555753470e53 <unknown>\n#12 0x555753438dd4 <unknown>\n#13 0x55575343a1de <unknown>\n#14 0x555753703531 <unknown>\n#15 0x555753707455 <unknown>\n#16 0x5557536eff55 <unknown>\n#17 0x5557537080ef <unknown>\n#18 0x5557536d399f <unknown>\n#19 0x55575372c008 <unknown>\n#20 0x55575372c1d7 <unknown>\n#21 0x55575373e124 <unknown>\n#22 0x7fcb23094ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input type=\"submit\" name=\"ctl00$MainContent$CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" value=\"Find address\" onclick=\"SetSpinnerText(this);\" id=\"MainContent_CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" callcounter=\"0\" form-uid=\"27\" clientuid=\"CUSTOM_FIELD_808562d4b07f437ea751317cabd19d9e455b794d8fee4fb7922e32157834fd7c\" class=\"css-invokeworkflow forthButtonColour forthButtonTextColour\" repeat-uid=\"\" data-invokeworkflow=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" maxcalls=\"-1\" questionobject-uid=\"PROFILESEARCHADDR\" question-uid=\"455b794d-8fee-4fb7-922e-32157834fd7c\" isbutton=\"true\" uid=\"CUSTOM_FIELD_808562d4-b07f-437e-a751-317cabd19d9e455b794d-8fee-4fb7-922e-32157834fd7c\" formsection-uid=\"808562d4-b07f-437e-a751-317cabd19d9e\" showrequiredmessage=\"true\"> is not clickable at point (304, 579). Other element would receive the click: <div style=\"position: relative; height: auto; width: 90%; padding: 15px; margin-left: auto; margin-right: auto; background-color: rgb(0, 0, 0); min-height: 0px;\">...</div>\n  (Session info: chrome-headless-shell=120.0.6099.216)\nStacktrace:\n#0 0x55575373ef83 <unknown>\n#1 0x5557533f7cf7 <unknown>\n#2 0x55575344fd92 <unknown>\n#3 0x55575344d7f4 <unknown>\n#4 0x55575344a894 <unknown>\n#5 0x5557534494b9 <unknown>\n#6 0x55575343b313 <unknown>\n#7 0x5557534710b2 <unknown>\n#8 0x55575343ab49 <unknown>\n#9 0x5557534714ce <unknown>\n#10 0x555753490006 <unknown>\n#11 0x555753470e53 <unknown>\n#12 0x555753438dd4 <unknown>\n#13 0x55575343a1de <unknown>\n#14 0x555753703531 <unknown>\n#15 0x555753707455 <unknown>\n#16 0x5557536eff55 <unknown>\n#17 0x5557537080ef <unknown>\n#18 0x5557536d399f <unknown>\n#19 0x55575372c008 <unknown>\n#20 0x55575372c1d7 <unknown>\n#21 0x55575373e124 <unknown>\n#22 0x7fcb23094ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1022-11"},{"name":"thread","value":"2803-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BarnetCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":23,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":42},"items":[{"uid":"16f6ea213b64f71","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1513//#testresult/16f6ea213b64f71","status":"passed","time":{"start":1705674559777,"stop":1705674586149,"duration":26372}},{"uid":"92ea9701efb5ae61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1511//#testresult/92ea9701efb5ae61","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find'","time":{"start":1705624038251,"stop":1705624055397,"duration":17146}},{"uid":"bb3e5868b657843a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/bb3e5868b657843a","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find'","time":{"start":1705537609310,"stop":1705537629690,"duration":20380}},{"uid":"5c2b7e741b1dd284","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/5c2b7e741b1dd284","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find'","time":{"start":1705451221553,"stop":1705451239607,"duration":18054}},{"uid":"6ec8307a9d4f46b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1499//#testresult/6ec8307a9d4f46b4","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find'","time":{"start":1705364815579,"stop":1705364847793,"duration":32214}},{"uid":"ef750de002000014","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1492//#testresult/ef750de002000014","status":"failed","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: Could not locate element with visible text: HA8 7NA, 2, MANOR PARK GARDENS, EDGWARE, BARNET; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception","time":{"start":1705295552794,"stop":1705295570295,"duration":17501}},{"uid":"ac73eb486234c942","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1491//#testresult/ac73eb486234c942","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705295120678,"stop":1705295120751,"duration":73}},{"uid":"e70a7baa518e9e65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1490//#testresult/e70a7baa518e9e65","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705278522792,"stop":1705278522986,"duration":194}},{"uid":"9d149976c45b12fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1485//#testresult/9d149976c45b12fb","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705192187493,"stop":1705192187649,"duration":156}},{"uid":"a7f0cb371eb56375","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1484//#testresult/a7f0cb371eb56375","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705105651729,"stop":1705105652333,"duration":604}},{"uid":"2d982c829b66f60c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1482//#testresult/2d982c829b66f60c","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705019226544,"stop":1705019226777,"duration":233}},{"uid":"495116fc6bdcd990","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1478//#testresult/495116fc6bdcd990","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1704932817350,"stop":1704932817509,"duration":159}},{"uid":"13c7a0a5ccc08807","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1472//#testresult/13c7a0a5ccc08807","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1704846428612,"stop":1704846428797,"duration":185}},{"uid":"27e18d832ae8e46a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1456//#testresult/27e18d832ae8e46a","status":"passed","time":{"start":1704760054680,"stop":1704760081414,"duration":26734}},{"uid":"cc5b5631aa313c3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1452//#testresult/cc5b5631aa313c3f","status":"passed","time":{"start":1704711466145,"stop":1704711483658,"duration":17513}},{"uid":"dc73eae538686a79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1450//#testresult/dc73eae538686a79","status":"passed","time":{"start":1704710672221,"stop":1704710693317,"duration":21096}},{"uid":"a1f50987aba84778","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1448//#testresult/a1f50987aba84778","status":"passed","time":{"start":1704710052945,"stop":1704710079203,"duration":26258}},{"uid":"60e778ecfdd34018","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1446//#testresult/60e778ecfdd34018","status":"passed","time":{"start":1704709529846,"stop":1704709553332,"duration":23486}},{"uid":"b0fa799c31627536","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1443//#testresult/b0fa799c31627536","status":"passed","time":{"start":1704704041130,"stop":1704704062288,"duration":21158}},{"uid":"3df40d1184442265","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1441//#testresult/3df40d1184442265","status":"passed","time":{"start":1704673675700,"stop":1704673696524,"duration":20824}}]},"tags":[]},"source":"ad2aad7a21244e8.json","parameterValues":["BarnetCouncil","local","http://selenium:4444"]}