{"uid":"1ba4b164390790c6","name":"Validate Council Output [SwaleBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"af246d65f1eea891cf11ee497308965a","time":{"start":1697702017960,"stop":1697702017961,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c15baf50>, 'council_name': 'SwaleBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c15baf50>, 'council_name': 'SwaleBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: SwaleBoroughCouncil","time":{"start":1697702017960,"stop":1697702017961,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwaleBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":136,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":140},"items":[{"uid":"671e1eae15748c58","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/671e1eae15748c58","status":"passed","time":{"start":1697696379052,"stop":1697696391665,"duration":12613}},{"uid":"7aaed65a4149d4b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/7aaed65a4149d4b3","status":"passed","time":{"start":1697678362178,"stop":1697678364271,"duration":2093}},{"uid":"4aa15dd91e2fcde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/4aa15dd91e2fcde","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697666754384,"stop":1697666755464,"duration":1080}},{"uid":"33c69f78e3555dfe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/33c69f78e3555dfe","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697657048332,"stop":1697657049675,"duration":1343}},{"uid":"18555ec08c00b3a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/18555ec08c00b3a3","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697650225431,"stop":1697650228588,"duration":3157}},{"uid":"e729e284ba933290","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/e729e284ba933290","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697618481304,"stop":1697618482754,"duration":1450}},{"uid":"4ed4aa1eff8868df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/4ed4aa1eff8868df","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697591944750,"stop":1697591954052,"duration":9302}},{"uid":"8d759db771494f7f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/8d759db771494f7f","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697542763695,"stop":1697542766571,"duration":2876}},{"uid":"40b204701ca1aa92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/40b204701ca1aa92","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697505583108,"stop":1697505588251,"duration":5143}},{"uid":"5ab5eaab91698ab3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/5ab5eaab91698ab3","status":"passed","time":{"start":1697484866366,"stop":1697484867743,"duration":1377}},{"uid":"c3327250657043e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/c3327250657043e0","status":"passed","time":{"start":1697484772090,"stop":1697484801047,"duration":28957}},{"uid":"4ac945f6fccc449","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/4ac945f6fccc449","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697419203192,"stop":1697419204050,"duration":858}},{"uid":"f9049b6d6a28dcb6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/f9049b6d6a28dcb6","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697403337959,"stop":1697403338598,"duration":639}},{"uid":"a29a01fc64c88d26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/a29a01fc64c88d26","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697399953499,"stop":1697399954571,"duration":1072}},{"uid":"e9e5fd0e65e901ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/e9e5fd0e65e901ed","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697367216433,"stop":1697367217518,"duration":1085}},{"uid":"3e250054b6dc9d60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/3e250054b6dc9d60","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697367136766,"stop":1697367138138,"duration":1372}},{"uid":"2e567cfb67c0684c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/2e567cfb67c0684c","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697333044209,"stop":1697333045227,"duration":1018}},{"uid":"b3a66a8ab5b4d91e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/b3a66a8ab5b4d91e","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697246159101,"stop":1697246159928,"duration":827}},{"uid":"9b4fe7a84cd5c27f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/9b4fe7a84cd5c27f","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697160052662,"stop":1697160053627,"duration":965}},{"uid":"7a040d47343a5693","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/7a040d47343a5693","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697073423279,"stop":1697073424488,"duration":1209}}]},"tags":[]},"source":"1ba4b164390790c6.json","parameterValues":["SwaleBoroughCouncil"]}