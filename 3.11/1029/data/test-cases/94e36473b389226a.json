{"uid":"94e36473b389226a","name":"Validate Council Output [BroxtoweBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2a2bbcaf16a5fcec6968b3e85d684c8e","time":{"start":1697702016085,"stop":1697702016086,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BroxtoweBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1439dd0>, 'council_name': 'BroxtoweBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BroxtoweBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1439dd0>, 'council_name': 'BroxtoweBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: BroxtoweBoroughCouncil","time":{"start":1697702016085,"stop":1697702016086,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BroxtoweBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":140},"items":[{"uid":"745c828fa87589bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/745c828fa87589bb","status":"passed","time":{"start":1697696121194,"stop":1697696130827,"duration":9633}},{"uid":"55c39493c1b13b64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/55c39493c1b13b64","status":"passed","time":{"start":1697678048866,"stop":1697678062008,"duration":13142}},{"uid":"7f690db212ba035a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/7f690db212ba035a","status":"passed","time":{"start":1697666535065,"stop":1697666542867,"duration":7802}},{"uid":"a703cfaa1f31e815","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/a703cfaa1f31e815","status":"passed","time":{"start":1697656786077,"stop":1697656802036,"duration":15959}},{"uid":"c33c45fa4ac1ad78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/c33c45fa4ac1ad78","status":"passed","time":{"start":1697649979490,"stop":1697650010220,"duration":30730}},{"uid":"a14c8fc3dffbf377","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/a14c8fc3dffbf377","status":"passed","time":{"start":1697618215302,"stop":1697618220894,"duration":5592}},{"uid":"61df95c4637e33b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/61df95c4637e33b3","status":"passed","time":{"start":1697591672358,"stop":1697591693816,"duration":21458}},{"uid":"1b31d2e323457263","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/1b31d2e323457263","status":"passed","time":{"start":1697542541506,"stop":1697542547730,"duration":6224}},{"uid":"afc2aa871c2590f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/afc2aa871c2590f2","status":"passed","time":{"start":1697505286675,"stop":1697505306840,"duration":20165}},{"uid":"e04a861a981c189d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/e04a861a981c189d","status":"passed","time":{"start":1697484607305,"stop":1697484613727,"duration":6422}},{"uid":"6c66b0e6d49d7873","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/6c66b0e6d49d7873","status":"passed","time":{"start":1697484555440,"stop":1697484559938,"duration":4498}},{"uid":"42bc4f3fbc1ebe08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/42bc4f3fbc1ebe08","status":"passed","time":{"start":1697418929770,"stop":1697418943863,"duration":14093}},{"uid":"37c725f8bd144520","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/37c725f8bd144520","status":"passed","time":{"start":1697403128037,"stop":1697403132168,"duration":4131}},{"uid":"32dde45cc70c9112","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/32dde45cc70c9112","status":"passed","time":{"start":1697399691684,"stop":1697399698263,"duration":6579}},{"uid":"97cf70fc440f3704","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/97cf70fc440f3704","status":"passed","time":{"start":1697366941635,"stop":1697366956041,"duration":14406}},{"uid":"3cb5694eef52ca45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/3cb5694eef52ca45","status":"passed","time":{"start":1697366894810,"stop":1697366899298,"duration":4488}},{"uid":"28720c4c9a442dc6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/28720c4c9a442dc6","status":"passed","time":{"start":1697332766484,"stop":1697332780263,"duration":13779}},{"uid":"57e89e5d8165a4a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/57e89e5d8165a4a7","status":"passed","time":{"start":1697245929241,"stop":1697245941033,"duration":11792}},{"uid":"68de67577e627152","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/68de67577e627152","status":"passed","time":{"start":1697159768044,"stop":1697159782421,"duration":14377}},{"uid":"843dce6a4f2585ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/843dce6a4f2585ba","status":"passed","time":{"start":1697073111433,"stop":1697073136796,"duration":25363}}]},"tags":[]},"source":"94e36473b389226a.json","parameterValues":["BroxtoweBoroughCouncil"]}