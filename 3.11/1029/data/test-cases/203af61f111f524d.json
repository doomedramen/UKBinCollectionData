{"uid":"203af61f111f524d","name":"Validate Council Output [NorthSomersetCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1d6e269a7b6351ace4d7bae7deb3de47","time":{"start":1697702017180,"stop":1697702017181,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthSomersetCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1411ad0>, 'council_name': 'NorthSomersetCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthSomersetCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1411ad0>, 'council_name': 'NorthSomersetCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: NorthSomersetCouncil","time":{"start":1697702017180,"stop":1697702017181,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthSomersetCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":140},"items":[{"uid":"57d51a230901936c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/57d51a230901936c","status":"passed","time":{"start":1697696190556,"stop":1697696192142,"duration":1586}},{"uid":"5587e12e6d784b31","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/5587e12e6d784b31","status":"passed","time":{"start":1697678179789,"stop":1697678181492,"duration":1703}},{"uid":"b76f1e30ef483114","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/b76f1e30ef483114","status":"passed","time":{"start":1697666600771,"stop":1697666602150,"duration":1379}},{"uid":"acee59c397b28592","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/acee59c397b28592","status":"passed","time":{"start":1697656854538,"stop":1697656856181,"duration":1643}},{"uid":"36ecfc6d06234e1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/36ecfc6d06234e1a","status":"passed","time":{"start":1697650062771,"stop":1697650064076,"duration":1305}},{"uid":"4b94908e2adfdcac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/4b94908e2adfdcac","status":"passed","time":{"start":1697618301572,"stop":1697618303882,"duration":2310}},{"uid":"fd15f76437a86898","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/fd15f76437a86898","status":"passed","time":{"start":1697591758101,"stop":1697591760014,"duration":1913}},{"uid":"d70e6a0a1f672657","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/d70e6a0a1f672657","status":"passed","time":{"start":1697542603283,"stop":1697542604467,"duration":1184}},{"uid":"e5052aa25032cf92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/e5052aa25032cf92","status":"passed","time":{"start":1697505369833,"stop":1697505371696,"duration":1863}},{"uid":"dbc18f25d8fbf0cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/dbc18f25d8fbf0cb","status":"passed","time":{"start":1697484674095,"stop":1697484675598,"duration":1503}},{"uid":"440ad54a82ffae3b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/440ad54a82ffae3b","status":"passed","time":{"start":1697484611226,"stop":1697484612331,"duration":1105}},{"uid":"ea8a5079e646449e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/ea8a5079e646449e","status":"passed","time":{"start":1697418997594,"stop":1697418999179,"duration":1585}},{"uid":"f4a6955d3ca0acf3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/f4a6955d3ca0acf3","status":"passed","time":{"start":1697403181144,"stop":1697403182447,"duration":1303}},{"uid":"cb1068c3198b47b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/cb1068c3198b47b","status":"passed","time":{"start":1697399753387,"stop":1697399755083,"duration":1696}},{"uid":"541a1c34ad0afebd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/541a1c34ad0afebd","status":"passed","time":{"start":1697367012296,"stop":1697367014604,"duration":2308}},{"uid":"254027c04f53866c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/254027c04f53866c","status":"passed","time":{"start":1697366949975,"stop":1697366951458,"duration":1483}},{"uid":"ad8608243a3ca577","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/ad8608243a3ca577","status":"passed","time":{"start":1697332851452,"stop":1697332853081,"duration":1629}},{"uid":"b624ea03dd28c9e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/b624ea03dd28c9e7","status":"passed","time":{"start":1697246039959,"stop":1697246041474,"duration":1515}},{"uid":"6d16b26599b7ae22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/6d16b26599b7ae22","status":"passed","time":{"start":1697159862120,"stop":1697159863590,"duration":1470}},{"uid":"db8a1ede2664cdc4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/db8a1ede2664cdc4","status":"passed","time":{"start":1697073217949,"stop":1697073219945,"duration":1996}}]},"tags":[]},"source":"203af61f111f524d.json","parameterValues":["NorthSomersetCouncil"]}