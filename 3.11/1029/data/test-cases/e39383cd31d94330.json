{"uid":"e39383cd31d94330","name":"Validate Council Output [WiganBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d724d8b9a4d0593a99f53e95b03e558b","time":{"start":1697702018307,"stop":1697702018309,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f70357bb950>, 'council_name': 'WiganBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f70357bb950>, 'council_name': 'WiganBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: WiganBoroughCouncil","time":{"start":1697702018308,"stop":1697702018309,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiganBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":64,"broken":0,"skipped":0,"passed":76,"unknown":0,"total":140},"items":[{"uid":"fec255d142fd3c41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/fec255d142fd3c41","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697696407013,"stop":1697696410578,"duration":3565}},{"uid":"c6c54aaa5ddf3565","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/c6c54aaa5ddf3565","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697678401860,"stop":1697678406231,"duration":4371}},{"uid":"15b8549f3a32e788","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/15b8549f3a32e788","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697666780617,"stop":1697666784016,"duration":3399}},{"uid":"3d361d1bdd90c4d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/3d361d1bdd90c4d5","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697657072104,"stop":1697657075680,"duration":3576}},{"uid":"67fb4e67f211f58e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/67fb4e67f211f58e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697650378408,"stop":1697650381803,"duration":3395}},{"uid":"f9dd1c232952c622","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/f9dd1c232952c622","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697618512896,"stop":1697618516494,"duration":3598}},{"uid":"42b67cd43f38e35a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/42b67cd43f38e35a","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697591974943,"stop":1697591978429,"duration":3486}},{"uid":"fa85a3fb71c378af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/fa85a3fb71c378af","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697542908353,"stop":1697542911805,"duration":3452}},{"uid":"30484533196e146e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/30484533196e146e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697505642383,"stop":1697505647052,"duration":4669}},{"uid":"44c741068d12d415","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/44c741068d12d415","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484896051,"stop":1697484899700,"duration":3649}},{"uid":"ce3053bfb94c4aaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/ce3053bfb94c4aaf","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484806699,"stop":1697484810060,"duration":3361}},{"uid":"1b8792ddaae20e5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/1b8792ddaae20e5e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697419265085,"stop":1697419268868,"duration":3783}},{"uid":"e0ae209d8cb75eb6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/e0ae209d8cb75eb6","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697403364153,"stop":1697403367910,"duration":3757}},{"uid":"7a9c453fd7631ba4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/7a9c453fd7631ba4","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697399996618,"stop":1697400002407,"duration":5789}},{"uid":"e46a8126f4b3c20d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/e46a8126f4b3c20d","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697367248532,"stop":1697367253116,"duration":4584}},{"uid":"2516f45c6313983c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/2516f45c6313983c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697367162899,"stop":1697367166582,"duration":3683}},{"uid":"452d163da828e242","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/452d163da828e242","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697333075162,"stop":1697333079039,"duration":3877}},{"uid":"119f3926e299776c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/119f3926e299776c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697246237914,"stop":1697246244110,"duration":6196}},{"uid":"14ccead43feec4fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/14ccead43feec4fb","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697160088185,"stop":1697160092079,"duration":3894}},{"uid":"5ef1a35fab6dae8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/5ef1a35fab6dae8f","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697073452845,"stop":1697073456941,"duration":4096}}]},"tags":[]},"source":"e39383cd31d94330.json","parameterValues":["WiganBoroughCouncil"]}