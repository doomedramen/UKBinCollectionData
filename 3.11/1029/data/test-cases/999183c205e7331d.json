{"uid":"999183c205e7331d","name":"Validate Council Output [WiltshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aedb86c72e1849b4679ed1a7ee37cf59","time":{"start":1697702018289,"stop":1697702018291,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiltshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c12f1250>, 'council_name': 'WiltshireCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiltshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c12f1250>, 'council_name': 'WiltshireCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: WiltshireCouncil","time":{"start":1697702018290,"stop":1697702018291,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiltshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":140},"items":[{"uid":"f9f4033b4f510479","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/f9f4033b4f510479","status":"passed","time":{"start":1697696410612,"stop":1697696414394,"duration":3782}},{"uid":"60e7a19198ecce5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/60e7a19198ecce5b","status":"passed","time":{"start":1697678406264,"stop":1697678410813,"duration":4549}},{"uid":"641f8a6b8818cae6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/641f8a6b8818cae6","status":"passed","time":{"start":1697666784114,"stop":1697666786377,"duration":2263}},{"uid":"7d2f8e5df9535a89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/7d2f8e5df9535a89","status":"passed","time":{"start":1697657075718,"stop":1697657080862,"duration":5144}},{"uid":"29d9b583b2ab8b5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/29d9b583b2ab8b5b","status":"passed","time":{"start":1697650370407,"stop":1697650373704,"duration":3297}},{"uid":"1cd2f69462b261db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/1cd2f69462b261db","status":"passed","time":{"start":1697618516560,"stop":1697618536199,"duration":19639}},{"uid":"742f0dd38432c191","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/742f0dd38432c191","status":"passed","time":{"start":1697591978459,"stop":1697591982998,"duration":4539}},{"uid":"8b33c60c8e7587fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/8b33c60c8e7587fa","status":"passed","time":{"start":1697542911833,"stop":1697542913643,"duration":1810}},{"uid":"dce68b4c5f110087","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/dce68b4c5f110087","status":"passed","time":{"start":1697505647098,"stop":1697505650950,"duration":3852}},{"uid":"542fbdfc930e5114","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/542fbdfc930e5114","status":"passed","time":{"start":1697484899735,"stop":1697484902348,"duration":2613}},{"uid":"72372ff87c0353fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/72372ff87c0353fd","status":"passed","time":{"start":1697484810090,"stop":1697484816352,"duration":6262}},{"uid":"d1acfbd7bb60729c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/d1acfbd7bb60729c","status":"passed","time":{"start":1697419268896,"stop":1697419271852,"duration":2956}},{"uid":"4b6235d63fee0f42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/4b6235d63fee0f42","status":"passed","time":{"start":1697403367941,"stop":1697403384175,"duration":16234}},{"uid":"57d2e6fbf3fa4a9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/57d2e6fbf3fa4a9d","status":"passed","time":{"start":1697400002443,"stop":1697400009307,"duration":6864}},{"uid":"32444905c8ad6657","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/32444905c8ad6657","status":"passed","time":{"start":1697367253213,"stop":1697367260130,"duration":6917}},{"uid":"a8b00b33ac069063","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/a8b00b33ac069063","status":"passed","time":{"start":1697367166619,"stop":1697367168643,"duration":2024}},{"uid":"a853fd0977bab9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/a853fd0977bab9","status":"passed","time":{"start":1697333079092,"stop":1697333081643,"duration":2551}},{"uid":"3bb379481285b1cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/3bb379481285b1cf","status":"passed","time":{"start":1697246244150,"stop":1697246246903,"duration":2753}},{"uid":"b0faeb51efda891d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/b0faeb51efda891d","status":"passed","time":{"start":1697160092181,"stop":1697160095429,"duration":3248}},{"uid":"141fb8319989ce6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/141fb8319989ce6b","status":"passed","time":{"start":1697073456989,"stop":1697073460817,"duration":3828}}]},"tags":[]},"source":"999183c205e7331d.json","parameterValues":["WiltshireCouncil"]}