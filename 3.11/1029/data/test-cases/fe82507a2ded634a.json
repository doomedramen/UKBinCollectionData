{"uid":"fe82507a2ded634a","name":"Validate Council Output [CheshireEastCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b583dc83005aea8688ae703bcdf0d977","time":{"start":1697702015789,"stop":1697702015793,"duration":4},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireEastCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f7035512a50>, 'council_name': 'CheshireEastCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireEastCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f7035512a50>, 'council_name': 'CheshireEastCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: CheshireEastCouncil","time":{"start":1697702015790,"stop":1697702015793,"duration":3},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CheshireEastCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":77,"broken":0,"skipped":0,"passed":63,"unknown":0,"total":140},"items":[{"uid":"8ebcd3a1ca744f94","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/8ebcd3a1ca744f94","status":"passed","time":{"start":1697696124691,"stop":1697696126865,"duration":2174}},{"uid":"e62520a7d51a5cdb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/e62520a7d51a5cdb","status":"passed","time":{"start":1697678058208,"stop":1697678061063,"duration":2855}},{"uid":"42c0ebd1becd14a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/42c0ebd1becd14a7","status":"passed","time":{"start":1697666533615,"stop":1697666535586,"duration":1971}},{"uid":"d521b5fe13e274bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/d521b5fe13e274bc","status":"passed","time":{"start":1697656787516,"stop":1697656789417,"duration":1901}},{"uid":"3a7806aebba6501f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/3a7806aebba6501f","status":"passed","time":{"start":1697650037159,"stop":1697650038749,"duration":1590}},{"uid":"393d1b48975ab027","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/393d1b48975ab027","status":"passed","time":{"start":1697618249570,"stop":1697618251395,"duration":1825}},{"uid":"9d8902f010a4a49e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/9d8902f010a4a49e","status":"passed","time":{"start":1697591684682,"stop":1697591690071,"duration":5389}},{"uid":"b9499c1e87349b63","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/b9499c1e87349b63","status":"passed","time":{"start":1697542531070,"stop":1697542537357,"duration":6287}},{"uid":"39fbc02dbda5206a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/39fbc02dbda5206a","status":"passed","time":{"start":1697505298676,"stop":1697505301391,"duration":2715}},{"uid":"31585e3c12c4d596","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/31585e3c12c4d596","status":"passed","time":{"start":1697484613422,"stop":1697484615111,"duration":1689}},{"uid":"ef09452e4f2dda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/ef09452e4f2dda","status":"passed","time":{"start":1697484553407,"stop":1697484554975,"duration":1568}},{"uid":"1d75ed69ccef8c6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/1d75ed69ccef8c6b","status":"passed","time":{"start":1697418941390,"stop":1697418943063,"duration":1673}},{"uid":"70102e075029bf45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/70102e075029bf45","status":"passed","time":{"start":1697403123983,"stop":1697403125384,"duration":1401}},{"uid":"a61d00e0fcbc64d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/a61d00e0fcbc64d4","status":"passed","time":{"start":1697399691518,"stop":1697399694183,"duration":2665}},{"uid":"2c312499ca56c76d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/2c312499ca56c76d","status":"passed","time":{"start":1697366943452,"stop":1697366945230,"duration":1778}},{"uid":"70aa78bac2107647","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/70aa78bac2107647","status":"passed","time":{"start":1697366891757,"stop":1697366893491,"duration":1734}},{"uid":"313a439b27fcdd61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/313a439b27fcdd61","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697332773432,"stop":1697332773797,"duration":365}},{"uid":"699420652d4af3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/699420652d4af3f","status":"passed","time":{"start":1697245934070,"stop":1697245935749,"duration":1679}},{"uid":"b9581786beed18a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/b9581786beed18a4","status":"passed","time":{"start":1697159774686,"stop":1697159776345,"duration":1659}},{"uid":"9da22e566a8688f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/9da22e566a8688f2","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697073121500,"stop":1697073121971,"duration":471}}]},"tags":[]},"source":"fe82507a2ded634a.json","parameterValues":["CheshireEastCouncil"]}