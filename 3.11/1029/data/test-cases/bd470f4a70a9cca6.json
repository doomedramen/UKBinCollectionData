{"uid":"bd470f4a70a9cca6","name":"Validate Council Output [WaverleyBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"64028773adeaa616798d2ec053582700","time":{"start":1697702018162,"stop":1697702018163,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WaverleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1485dd0>, 'council_name': 'WaverleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WaverleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1485dd0>, 'council_name': 'WaverleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: WaverleyBoroughCouncil","time":{"start":1697702018162,"stop":1697702018163,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WaverleyBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":140},"items":[{"uid":"77236e5652dee1d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/77236e5652dee1d2","status":"passed","time":{"start":1697696400556,"stop":1697696404887,"duration":4331}},{"uid":"f67d61bfdcc70a7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/f67d61bfdcc70a7c","status":"passed","time":{"start":1697678394598,"stop":1697678399601,"duration":5003}},{"uid":"156cfb79c9ea35af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/156cfb79c9ea35af","status":"passed","time":{"start":1697666772250,"stop":1697666778573,"duration":6323}},{"uid":"89c459f299230756","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/89c459f299230756","status":"passed","time":{"start":1697657065681,"stop":1697657069985,"duration":4304}},{"uid":"14afe42bee0adba1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/14afe42bee0adba1","status":"passed","time":{"start":1697650364725,"stop":1697650368787,"duration":4062}},{"uid":"87642f02cbe7bbc5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/87642f02cbe7bbc5","status":"passed","time":{"start":1697618506158,"stop":1697618511203,"duration":5045}},{"uid":"1485280f2b784e03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/1485280f2b784e03","status":"passed","time":{"start":1697591968528,"stop":1697591972976,"duration":4448}},{"uid":"381f6c91ebc83eca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/381f6c91ebc83eca","status":"passed","time":{"start":1697542902482,"stop":1697542906676,"duration":4194}},{"uid":"5a7105d3a1b37e23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/5a7105d3a1b37e23","status":"passed","time":{"start":1697505633178,"stop":1697505640222,"duration":7044}},{"uid":"cca7070e80eaef42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/cca7070e80eaef42","status":"passed","time":{"start":1697484889782,"stop":1697484894061,"duration":4279}},{"uid":"5bc434cfc448cb0f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/5bc434cfc448cb0f","status":"passed","time":{"start":1697484799267,"stop":1697484805067,"duration":5800}},{"uid":"f02ff21e20448757","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/f02ff21e20448757","status":"passed","time":{"start":1697419256435,"stop":1697419263254,"duration":6819}},{"uid":"62652cb1e8fec7dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/62652cb1e8fec7dc","status":"passed","time":{"start":1697403357075,"stop":1697403362405,"duration":5330}},{"uid":"c204608f98ef172c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/c204608f98ef172c","status":"passed","time":{"start":1697399989443,"stop":1697399994050,"duration":4607}},{"uid":"b02d5e12099b5291","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/b02d5e12099b5291","status":"passed","time":{"start":1697367241903,"stop":1697367246507,"duration":4604}},{"uid":"92c2225bccad6b72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/92c2225bccad6b72","status":"passed","time":{"start":1697367156931,"stop":1697367161193,"duration":4262}},{"uid":"84a76fc8f4cc879f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/84a76fc8f4cc879f","status":"passed","time":{"start":1697333067396,"stop":1697333073278,"duration":5882}},{"uid":"7a452ff350a16de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/7a452ff350a16de","status":"passed","time":{"start":1697246232065,"stop":1697246236265,"duration":4200}},{"uid":"8d6724a32f538a15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/8d6724a32f538a15","status":"passed","time":{"start":1697160078476,"stop":1697160086237,"duration":7761}},{"uid":"bff249a8c3b18d20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/bff249a8c3b18d20","status":"passed","time":{"start":1697073444312,"stop":1697073450819,"duration":6507}}]},"tags":[]},"source":"bd470f4a70a9cca6.json","parameterValues":["WaverleyBoroughCouncil"]}