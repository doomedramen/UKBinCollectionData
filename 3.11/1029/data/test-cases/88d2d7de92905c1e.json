{"uid":"88d2d7de92905c1e","name":"Validate Council Output [BromleyBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7f3dc7acf0fc90eded39e25c4ed3bb60","time":{"start":1697702016026,"stop":1697702016028,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c133c7d0>, 'council_name': 'BromleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c133c7d0>, 'council_name': 'BromleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: BromleyBoroughCouncil","time":{"start":1697702016027,"stop":1697702016028,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BromleyBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":23,"broken":0,"skipped":0,"passed":117,"unknown":0,"total":140},"items":[{"uid":"339e6563caae9735","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/339e6563caae9735","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697696120280,"stop":1697696121112,"duration":832}},{"uid":"f22faebfb304d990","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/f22faebfb304d990","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697678047527,"stop":1697678048782,"duration":1255}},{"uid":"30473b3bd7ebff0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/30473b3bd7ebff0d","status":"passed","time":{"start":1697666531602,"stop":1697666535062,"duration":3460}},{"uid":"f6c56b1395b9baf1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/f6c56b1395b9baf1","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697656785153,"stop":1697656785989,"duration":836}},{"uid":"9fbdbf9ef667baaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/9fbdbf9ef667baaf","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697649978451,"stop":1697649979426,"duration":975}},{"uid":"6dc221d8a128653e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/6dc221d8a128653e","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697618214322,"stop":1697618215231,"duration":909}},{"uid":"e950940504beb410","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/e950940504beb410","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697591671212,"stop":1697591672287,"duration":1075}},{"uid":"37b91eafb4d482fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/37b91eafb4d482fe","status":"passed","time":{"start":1697542537473,"stop":1697542541503,"duration":4030}},{"uid":"e9bfa44da0ea9364","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/e9bfa44da0ea9364","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697505285595,"stop":1697505286592,"duration":997}},{"uid":"328218280fe14c21","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/328218280fe14c21","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697484606121,"stop":1697484607226,"duration":1105}},{"uid":"69256f76c59b50f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/69256f76c59b50f0","status":"passed","time":{"start":1697484551597,"stop":1697484555437,"duration":3840}},{"uid":"e30d32b61d4244bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/e30d32b61d4244bb","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697418928823,"stop":1697418929698,"duration":875}},{"uid":"d85a5b5ddfb60af8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/d85a5b5ddfb60af8","status":"passed","time":{"start":1697403124160,"stop":1697403128034,"duration":3874}},{"uid":"829b959c7d2c061b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/829b959c7d2c061b","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697399690318,"stop":1697399691568,"duration":1250}},{"uid":"2b8783ca64e4c02c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/2b8783ca64e4c02c","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1697366940572,"stop":1697366941532,"duration":960}},{"uid":"56281c3d5ab98047","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/56281c3d5ab98047","status":"passed","time":{"start":1697366890806,"stop":1697366894806,"duration":4000}},{"uid":"6d108041df696b68","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/6d108041df696b68","status":"passed","time":{"start":1697332765460,"stop":1697332766480,"duration":1020}},{"uid":"9c4dd5e51994f3a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/9c4dd5e51994f3a8","status":"passed","time":{"start":1697245925793,"stop":1697245929238,"duration":3445}},{"uid":"e87cf62c935efb60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/e87cf62c935efb60","status":"failed","statusDetails":"dateutil.parser._parser.ParserError: Unknown string format: Friday, 13th October\n              \n              (In progress)","time":{"start":1697159763342,"stop":1697159767963,"duration":4621}},{"uid":"ccad6c540bd94b6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/ccad6c540bd94b6c","status":"passed","time":{"start":1697073110276,"stop":1697073111430,"duration":1154}}]},"tags":[]},"source":"88d2d7de92905c1e.json","parameterValues":["BromleyBoroughCouncil"]}