{"uid":"9d21e4e880a200f9","name":"Validate Council Output [NorthEastLincs]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"5bf150f9d14a36325cbfaf9b6349d178","time":{"start":1697702016985,"stop":1697702016986,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthEastLincs]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f70357d9850>, 'council_name': 'NorthEastLincs'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthEastLincs]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f70357d9850>, 'council_name': 'NorthEastLincs'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: NorthEastLincs","time":{"start":1697702016985,"stop":1697702016986,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthEastLincs"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":140,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":140},"items":[{"uid":"4e6cedfc16486999","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/4e6cedfc16486999","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697696168778,"stop":1697696168782,"duration":4}},{"uid":"c81465ee8acd27af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/c81465ee8acd27af","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697678162824,"stop":1697678162827,"duration":3}},{"uid":"f56d794cee72de1d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/f56d794cee72de1d","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697666576298,"stop":1697666576304,"duration":6}},{"uid":"b4371877a7615cb7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/b4371877a7615cb7","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697656837400,"stop":1697656837404,"duration":4}},{"uid":"1fbadb3424cdf535","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/1fbadb3424cdf535","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697650197698,"stop":1697650197701,"duration":3}},{"uid":"8bde591d5efce676","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/8bde591d5efce676","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697618454987,"stop":1697618454990,"duration":3}},{"uid":"98b35b8f5f2ade82","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/98b35b8f5f2ade82","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697591934943,"stop":1697591934946,"duration":3}},{"uid":"cd74932845776850","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/cd74932845776850","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697542737184,"stop":1697542737187,"duration":3}},{"uid":"59d0e49ae02e8205","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/59d0e49ae02e8205","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697505608496,"stop":1697505608499,"duration":3}},{"uid":"b4e1a27334db91b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/b4e1a27334db91b7","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697484866320,"stop":1697484866324,"duration":4}},{"uid":"4259c94679e9d6e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/4259c94679e9d6e2","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697484747351,"stop":1697484747354,"duration":3}},{"uid":"bd14e900fcb5da56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/bd14e900fcb5da56","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697419224617,"stop":1697419224620,"duration":3}},{"uid":"238230698f214a1e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/238230698f214a1e","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697403311366,"stop":1697403311370,"duration":4}},{"uid":"71dcc7cdde6e825","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/71dcc7cdde6e825","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697399971872,"stop":1697399971876,"duration":4}},{"uid":"b7dc62d14906174c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/b7dc62d14906174c","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697367224968,"stop":1697367224971,"duration":3}},{"uid":"c2a249a742edd493","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/c2a249a742edd493","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697367129460,"stop":1697367129463,"duration":3}},{"uid":"22a73654f5c103e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/22a73654f5c103e5","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697332832518,"stop":1697332832522,"duration":4}},{"uid":"e6d158786192cde6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/e6d158786192cde6","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697246023607,"stop":1697246023610,"duration":3}},{"uid":"5cbdb5f32fa963cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/5cbdb5f32fa963cd","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697159845711,"stop":1697159845714,"duration":3}},{"uid":"529f4bad97dee68f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/529f4bad97dee68f","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697073199022,"stop":1697073199026,"duration":4}}]},"tags":[]},"source":"9d21e4e880a200f9.json","parameterValues":["NorthEastLincs"]}