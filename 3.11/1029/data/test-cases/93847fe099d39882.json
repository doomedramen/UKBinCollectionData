{"uid":"93847fe099d39882","name":"Validate Council Output [MalvernHillsDC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4fed604a10daf77aacbf6179bf28f404","time":{"start":1697702016804,"stop":1697702016805,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1425f10>, 'council_name': 'MalvernHillsDC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1425f10>, 'council_name': 'MalvernHillsDC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: MalvernHillsDC","time":{"start":1697702016804,"stop":1697702016805,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MalvernHillsDC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":106,"broken":0,"skipped":0,"passed":34,"unknown":0,"total":140},"items":[{"uid":"58cf14fc7c36b070","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/58cf14fc7c36b070","status":"passed","time":{"start":1697696146481,"stop":1697696147495,"duration":1014}},{"uid":"21c04c53ee79357e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/21c04c53ee79357e","status":"passed","time":{"start":1697678084332,"stop":1697678085791,"duration":1459}},{"uid":"d53ad0da86c26061","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/d53ad0da86c26061","status":"passed","time":{"start":1697666551904,"stop":1697666552853,"duration":949}},{"uid":"a58ee06704cd0992","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/a58ee06704cd0992","status":"passed","time":{"start":1697656811381,"stop":1697656812564,"duration":1183}},{"uid":"4539c65a944b2aff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/4539c65a944b2aff","status":"passed","time":{"start":1697650182733,"stop":1697650183804,"duration":1071}},{"uid":"be08d86aa0d8604a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/be08d86aa0d8604a","status":"passed","time":{"start":1697618439215,"stop":1697618440335,"duration":1120}},{"uid":"2c4061f7bf24e29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/2c4061f7bf24e29","status":"passed","time":{"start":1697591911323,"stop":1697591912515,"duration":1192}},{"uid":"3520518e4dec8237","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/3520518e4dec8237","status":"passed","time":{"start":1697542715725,"stop":1697542716818,"duration":1093}},{"uid":"a9a8ece0f0d152e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/a9a8ece0f0d152e8","status":"passed","time":{"start":1697505573507,"stop":1697505574981,"duration":1474}},{"uid":"ed9feb92fb3b20e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/ed9feb92fb3b20e6","status":"passed","time":{"start":1697484836235,"stop":1697484837458,"duration":1223}},{"uid":"2b107e5c4bf7b320","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/2b107e5c4bf7b320","status":"passed","time":{"start":1697484728379,"stop":1697484729262,"duration":883}},{"uid":"49545728ae83ec0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/49545728ae83ec0c","status":"passed","time":{"start":1697419163864,"stop":1697419164946,"duration":1082}},{"uid":"3adc68ca507344be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/3adc68ca507344be","status":"passed","time":{"start":1697403293136,"stop":1697403294211,"duration":1075}},{"uid":"9601439e2ae0233a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/9601439e2ae0233a","status":"passed","time":{"start":1697399955627,"stop":1697399956804,"duration":1177}},{"uid":"6c57de5baa0d3fcb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/6c57de5baa0d3fcb","status":"passed","time":{"start":1697367208137,"stop":1697367209633,"duration":1496}},{"uid":"b09e75793c3248d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/b09e75793c3248d8","status":"passed","time":{"start":1697367113113,"stop":1697367114783,"duration":1670}},{"uid":"96d9db7fe92d8bd5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/96d9db7fe92d8bd5","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swict.malvernhills.gov.uk', port=443): Max retries exceeded with url: /mhdcroundlookup/HandleSearchScreen (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')))","time":{"start":1697333002204,"stop":1697333002797,"duration":593}},{"uid":"c4b49531111d050a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/c4b49531111d050a","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swict.malvernhills.gov.uk', port=443): Max retries exceeded with url: /mhdcroundlookup/HandleSearchScreen (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')))","time":{"start":1697246116803,"stop":1697246117212,"duration":409}},{"uid":"ae68c9f0067a7fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/ae68c9f0067a7fd","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swict.malvernhills.gov.uk', port=443): Max retries exceeded with url: /mhdcroundlookup/HandleSearchScreen (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')))","time":{"start":1697160007560,"stop":1697160008112,"duration":552}},{"uid":"71b989c5c6a2dad8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/71b989c5c6a2dad8","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swict.malvernhills.gov.uk', port=443): Max retries exceeded with url: /mhdcroundlookup/HandleSearchScreen (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')))","time":{"start":1697073405420,"stop":1697073406119,"duration":699}}]},"tags":[]},"source":"93847fe099d39882.json","parameterValues":["MalvernHillsDC"]}