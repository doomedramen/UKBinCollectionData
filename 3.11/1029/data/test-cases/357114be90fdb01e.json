{"uid":"357114be90fdb01e","name":"Validate Council Output [WakefieldCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"532d749d88b4b8fb0bc694b350a3d71a","time":{"start":1697702018099,"stop":1697702018101,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c16067d0>, 'council_name': 'WakefieldCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c16067d0>, 'council_name': 'WakefieldCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: WakefieldCityCouncil","time":{"start":1697702018099,"stop":1697702018101,"duration":2},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WakefieldCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":85,"broken":0,"skipped":0,"passed":55,"unknown":0,"total":140},"items":[{"uid":"82e24f2e81ae6088","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/82e24f2e81ae6088","status":"passed","time":{"start":1697696391283,"stop":1697696399231,"duration":7948}},{"uid":"e0d737534e0a21fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/e0d737534e0a21fb","status":"passed","time":{"start":1697678383067,"stop":1697678392873,"duration":9806}},{"uid":"4422b0483ff50fb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/4422b0483ff50fb3","status":"passed","time":{"start":1697666761487,"stop":1697666771089,"duration":9602}},{"uid":"602943c21e200c2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/602943c21e200c2b","status":"passed","time":{"start":1697657056134,"stop":1697657064234,"duration":8100}},{"uid":"4427000b86a7ae41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/4427000b86a7ae41","status":"passed","time":{"start":1697650369955,"stop":1697650378406,"duration":8451}},{"uid":"95a029f880a252d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/95a029f880a252d0","status":"passed","time":{"start":1697618496271,"stop":1697618504433,"duration":8162}},{"uid":"d40972f6f44fb6ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/d40972f6f44fb6ed","status":"passed","time":{"start":1697591956755,"stop":1697591966038,"duration":9283}},{"uid":"fb65b84c418868c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/fb65b84c418868c2","status":"passed","time":{"start":1697542918440,"stop":1697542926220,"duration":7780}},{"uid":"ed2d697e3a4cead9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/ed2d697e3a4cead9","status":"passed","time":{"start":1697505616298,"stop":1697505631125,"duration":14827}},{"uid":"890adf5b94c5135c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/890adf5b94c5135c","status":"passed","time":{"start":1697484880446,"stop":1697484888172,"duration":7726}},{"uid":"1f2c63ebbf58bd64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/1f2c63ebbf58bd64","status":"passed","time":{"start":1697484790183,"stop":1697484798158,"duration":7975}},{"uid":"451a1dfcd950033a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/451a1dfcd950033a","status":"passed","time":{"start":1697419237762,"stop":1697419254068,"duration":16306}},{"uid":"26aa1107e2b3b39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/26aa1107e2b3b39","status":"passed","time":{"start":1697403348527,"stop":1697403355615,"duration":7088}},{"uid":"c7fa3d1158232912","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/c7fa3d1158232912","status":"passed","time":{"start":1697399979382,"stop":1697399987545,"duration":8163}},{"uid":"201c8360f3490c66","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/201c8360f3490c66","status":"passed","time":{"start":1697367232263,"stop":1697367240335,"duration":8072}},{"uid":"ac531a967123e4c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/ac531a967123e4c","status":"passed","time":{"start":1697367147326,"stop":1697367155620,"duration":8294}},{"uid":"57ad580e5654bcdd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/57ad580e5654bcdd","status":"passed","time":{"start":1697333055251,"stop":1697333064861,"duration":9610}},{"uid":"d04a8f72620dd516","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/d04a8f72620dd516","status":"passed","time":{"start":1697246219796,"stop":1697246230019,"duration":10223}},{"uid":"5e9a8de7d588e192","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/5e9a8de7d588e192","status":"passed","time":{"start":1697160066125,"stop":1697160076657,"duration":10532}},{"uid":"87b34d98c7861a87","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/87b34d98c7861a87","status":"passed","time":{"start":1697073433431,"stop":1697073442129,"duration":8698}}]},"tags":[]},"source":"357114be90fdb01e.json","parameterValues":["WakefieldCityCouncil"]}