{"uid":"74aac77424049891","name":"Validate Council Output [TorridgeDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"617b4311b681b19c6f82373e9ef5a04d","time":{"start":1697702018053,"stop":1697702018055,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f703578abd0>, 'council_name': 'TorridgeDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f703578abd0>, 'council_name': 'TorridgeDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1697702018053,"stop":1697702018055,"duration":2},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":140},"items":[{"uid":"c9d2b625ecf8f7b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/c9d2b625ecf8f7b8","status":"passed","time":{"start":1697696386387,"stop":1697696389237,"duration":2850}},{"uid":"64835dca27277423","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/64835dca27277423","status":"passed","time":{"start":1697678376987,"stop":1697678380535,"duration":3548}},{"uid":"41ffa217ca9b0094","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/41ffa217ca9b0094","status":"passed","time":{"start":1697666755376,"stop":1697666758970,"duration":3594}},{"uid":"8dce5015a9738c92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/8dce5015a9738c92","status":"passed","time":{"start":1697657051191,"stop":1697657053846,"duration":2655}},{"uid":"45ad10b6acbeb4e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/45ad10b6acbeb4e2","status":"passed","time":{"start":1697650236354,"stop":1697650239187,"duration":2833}},{"uid":"f9d67d877a8c1da6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/f9d67d877a8c1da6","status":"passed","time":{"start":1697618486933,"stop":1697618490099,"duration":3166}},{"uid":"26d2c06502d7f0a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/26d2c06502d7f0a6","status":"passed","time":{"start":1697591951306,"stop":1697591954200,"duration":2894}},{"uid":"4e3ce8507a4a33b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/4e3ce8507a4a33b6","status":"passed","time":{"start":1697542783940,"stop":1697542787617,"duration":3677}},{"uid":"98b25e765708f1fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/98b25e765708f1fd","status":"passed","time":{"start":1697505610576,"stop":1697505613696,"duration":3120}},{"uid":"2e73f6d1b9dc8e2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/2e73f6d1b9dc8e2b","status":"passed","time":{"start":1697484875632,"stop":1697484878492,"duration":2860}},{"uid":"b82b7ae970b2b2d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/b82b7ae970b2b2d0","status":"passed","time":{"start":1697484784982,"stop":1697484787632,"duration":2650}},{"uid":"4eb53298fa1b6666","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/4eb53298fa1b6666","status":"passed","time":{"start":1697419231974,"stop":1697419235459,"duration":3485}},{"uid":"e71713a6469b574b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/e71713a6469b574b","status":"passed","time":{"start":1697403343620,"stop":1697403346696,"duration":3076}},{"uid":"5f8f79e90c946044","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/5f8f79e90c946044","status":"passed","time":{"start":1697399973598,"stop":1697399976795,"duration":3197}},{"uid":"a4e1a249429daf20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/a4e1a249429daf20","status":"passed","time":{"start":1697367226837,"stop":1697367229744,"duration":2907}},{"uid":"c720631cce97aa60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/c720631cce97aa60","status":"passed","time":{"start":1697367142312,"stop":1697367145434,"duration":3122}},{"uid":"3202ca3bb14d1cc5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/3202ca3bb14d1cc5","status":"passed","time":{"start":1697333049851,"stop":1697333052887,"duration":3036}},{"uid":"2addd77231156098","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/2addd77231156098","status":"passed","time":{"start":1697246214849,"stop":1697246217566,"duration":2717}},{"uid":"e421239cc97e48a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/e421239cc97e48a0","status":"passed","time":{"start":1697160057075,"stop":1697160063469,"duration":6394}},{"uid":"ba655c9474e75a2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/ba655c9474e75a2a","status":"passed","time":{"start":1697073426339,"stop":1697073431289,"duration":4950}}]},"tags":[]},"source":"74aac77424049891.json","parameterValues":["TorridgeDistrictCouncil"]}