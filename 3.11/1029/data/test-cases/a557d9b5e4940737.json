{"uid":"a557d9b5e4940737","name":"Validate Council Output [ValeofGlamorganCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1e5a723ab9bb5ec179bcd63e0a46576d","time":{"start":1697702018040,"stop":1697702018041,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c15f1350>, 'council_name': 'ValeofGlamorganCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c15f1350>, 'council_name': 'ValeofGlamorganCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: ValeofGlamorganCouncil","time":{"start":1697702018040,"stop":1697702018041,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ValeofGlamorganCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":0,"skipped":0,"passed":121,"unknown":0,"total":140},"items":[{"uid":"606d66baf3a84e4f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/606d66baf3a84e4f","status":"passed","time":{"start":1697696389241,"stop":1697696391280,"duration":2039}},{"uid":"cec3fd41202063c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/cec3fd41202063c6","status":"passed","time":{"start":1697678380539,"stop":1697678383064,"duration":2525}},{"uid":"616219d06dba0b31","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/616219d06dba0b31","status":"passed","time":{"start":1697666758974,"stop":1697666761483,"duration":2509}},{"uid":"2e7ab8915403cce4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/2e7ab8915403cce4","status":"passed","time":{"start":1697657053850,"stop":1697657056123,"duration":2273}},{"uid":"5e44472e6a1b3a4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/5e44472e6a1b3a4d","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f6f2511c550>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1697650239189,"stop":1697650369847,"duration":130658}},{"uid":"e18d0ac6e92415cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/e18d0ac6e92415cf","status":"passed","time":{"start":1697618490101,"stop":1697618496268,"duration":6167}},{"uid":"7e29798d60a2a3b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/7e29798d60a2a3b6","status":"passed","time":{"start":1697591954203,"stop":1697591956752,"duration":2549}},{"uid":"1f2ad51e12de96a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/1f2ad51e12de96a","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fdd99761fd0>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1697542787620,"stop":1697542918334,"duration":130714}},{"uid":"1b787df42f99ae8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/1b787df42f99ae8b","status":"passed","time":{"start":1697505613700,"stop":1697505616294,"duration":2594}},{"uid":"890351e292e43822","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/890351e292e43822","status":"passed","time":{"start":1697484878496,"stop":1697484880442,"duration":1946}},{"uid":"3c54332d8817819d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/3c54332d8817819d","status":"passed","time":{"start":1697484787635,"stop":1697484790180,"duration":2545}},{"uid":"12087c3dd8b7b9a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/12087c3dd8b7b9a7","status":"passed","time":{"start":1697419235462,"stop":1697419237759,"duration":2297}},{"uid":"3aeee10f1427c5bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/3aeee10f1427c5bd","status":"passed","time":{"start":1697403346699,"stop":1697403348524,"duration":1825}},{"uid":"389c4ed2365f4582","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/389c4ed2365f4582","status":"passed","time":{"start":1697399976799,"stop":1697399979377,"duration":2578}},{"uid":"f8fb9548cd95a87","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/f8fb9548cd95a87","status":"passed","time":{"start":1697367229747,"stop":1697367232260,"duration":2513}},{"uid":"e77ad2e7f331899b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/e77ad2e7f331899b","status":"passed","time":{"start":1697367145437,"stop":1697367147323,"duration":1886}},{"uid":"dc0c650ee2995fea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/dc0c650ee2995fea","status":"passed","time":{"start":1697333052890,"stop":1697333055248,"duration":2358}},{"uid":"7bcc97188b02b6ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/7bcc97188b02b6ea","status":"passed","time":{"start":1697246217569,"stop":1697246219793,"duration":2224}},{"uid":"4e385eaab9b73947","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/4e385eaab9b73947","status":"passed","time":{"start":1697160063472,"stop":1697160066122,"duration":2650}},{"uid":"8a8ef9144f11be05","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/8a8ef9144f11be05","status":"passed","time":{"start":1697073431293,"stop":1697073433428,"duration":2135}}]},"tags":[]},"source":"a557d9b5e4940737.json","parameterValues":["ValeofGlamorganCouncil"]}