{"uid":"e06ce7eab3806be3","name":"Validate Council Output [CrawleyBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"dac8bb4374cb8d8a9239d9475542e329","time":{"start":1697702015888,"stop":1697702015889,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CrawleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f70355c6c50>, 'council_name': 'CrawleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CrawleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f70355c6c50>, 'council_name': 'CrawleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: CrawleyBoroughCouncil","time":{"start":1697702015888,"stop":1697702015889,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CrawleyBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":118,"broken":0,"skipped":0,"passed":22,"unknown":0,"total":140},"items":[{"uid":"d381b5cd39808333","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/d381b5cd39808333","status":"passed","time":{"start":1697696126868,"stop":1697696129454,"duration":2586}},{"uid":"f1c9616dc60f29aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/f1c9616dc60f29aa","status":"passed","time":{"start":1697678061066,"stop":1697678062902,"duration":1836}},{"uid":"245986fda1cf7f86","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/245986fda1cf7f86","status":"passed","time":{"start":1697666535589,"stop":1697666536870,"duration":1281}},{"uid":"e75de270983e382d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/e75de270983e382d","status":"passed","time":{"start":1697656789420,"stop":1697656794737,"duration":5317}},{"uid":"c267caa7879f605c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/c267caa7879f605c","status":"passed","time":{"start":1697650038752,"stop":1697650040467,"duration":1715}},{"uid":"de1d0e607de34bd0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/de1d0e607de34bd0","status":"passed","time":{"start":1697618251397,"stop":1697618252676,"duration":1279}},{"uid":"7e44759393cd0164","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/7e44759393cd0164","status":"passed","time":{"start":1697591711699,"stop":1697591718237,"duration":6538}},{"uid":"15273a5210c55d7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/15273a5210c55d7c","status":"passed","time":{"start":1697542556477,"stop":1697542563378,"duration":6901}},{"uid":"f2f14ee1730ae6c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/f2f14ee1730ae6c9","status":"passed","time":{"start":1697505323058,"stop":1697505326833,"duration":3775}},{"uid":"3a23a3409a641a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/3a23a3409a641a2","status":"passed","time":{"start":1697484634097,"stop":1697484635629,"duration":1532}},{"uid":"bd5067fc9e33ed2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/bd5067fc9e33ed2f","status":"passed","time":{"start":1697484573087,"stop":1697484578664,"duration":5577}},{"uid":"70fd42b13d0feaf7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/70fd42b13d0feaf7","status":"passed","time":{"start":1697418962848,"stop":1697418965196,"duration":2348}},{"uid":"ca9ccf1e9bc395a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/ca9ccf1e9bc395a2","status":"passed","time":{"start":1697403143148,"stop":1697403148933,"duration":5785}},{"uid":"d29678b97caf1729","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/d29678b97caf1729","status":"passed","time":{"start":1697399712697,"stop":1697399716788,"duration":4091}},{"uid":"90edaa367dda23d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/90edaa367dda23d4","status":"passed","time":{"start":1697366968103,"stop":1697366970338,"duration":2235}},{"uid":"c43c8ea2ce7799c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/c43c8ea2ce7799c","status":"passed","time":{"start":1697366911861,"stop":1697366914066,"duration":2205}},{"uid":"76a75fea5bc9ac49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/76a75fea5bc9ac49","status":"failed","statusDetails":"ValueError: time data '' does not match format '%A %d %B'","time":{"start":1697332792182,"stop":1697332794213,"duration":2031}},{"uid":"2743da46bd0b6798","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/2743da46bd0b6798","status":"failed","statusDetails":"ValueError: time data '' does not match format '%A %d %B'","time":{"start":1697245953486,"stop":1697245954873,"duration":1387}},{"uid":"1a4d5b4cb526d5ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/1a4d5b4cb526d5ea","status":"failed","statusDetails":"ValueError: time data '' does not match format '%A %d %B'","time":{"start":1697159795883,"stop":1697159797583,"duration":1700}},{"uid":"fffa33640c19c911","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/fffa33640c19c911","status":"failed","statusDetails":"ValueError: time data '' does not match format '%A %d %B'","time":{"start":1697073151428,"stop":1697073153121,"duration":1693}}]},"tags":[]},"source":"e06ce7eab3806be3.json","parameterValues":["CrawleyBoroughCouncil"]}