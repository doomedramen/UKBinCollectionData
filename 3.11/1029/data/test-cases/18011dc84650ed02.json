{"uid":"18011dc84650ed02","name":"Validate Council Output [MaldonDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"53c5720a05c261e2bad5904bb33e19b7","time":{"start":1697702016742,"stop":1697702016744,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1355590>, 'council_name': 'MaldonDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1355590>, 'council_name': 'MaldonDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: MaldonDistrictCouncil","time":{"start":1697702016743,"stop":1697702016744,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":135,"unknown":0,"total":140},"items":[{"uid":"607351f7524fa086","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/607351f7524fa086","status":"passed","time":{"start":1697696145415,"stop":1697696146479,"duration":1064}},{"uid":"819162a8f011d43a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/819162a8f011d43a","status":"passed","time":{"start":1697678082964,"stop":1697678084329,"duration":1365}},{"uid":"1b51b2c39b2f56a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/1b51b2c39b2f56a9","status":"passed","time":{"start":1697666550831,"stop":1697666551901,"duration":1070}},{"uid":"1071dd7d753246b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/1071dd7d753246b5","status":"passed","time":{"start":1697656810303,"stop":1697656811378,"duration":1075}},{"uid":"ac229e09409c0c13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/ac229e09409c0c13","status":"passed","time":{"start":1697650181733,"stop":1697650182731,"duration":998}},{"uid":"659be391e5ac743c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/659be391e5ac743c","status":"passed","time":{"start":1697618438237,"stop":1697618439213,"duration":976}},{"uid":"317080a1213b12a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/317080a1213b12a9","status":"passed","time":{"start":1697591910045,"stop":1697591911320,"duration":1275}},{"uid":"2c2e4714d6817888","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/2c2e4714d6817888","status":"passed","time":{"start":1697542714186,"stop":1697542715723,"duration":1537}},{"uid":"6de123bc982c0b64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/6de123bc982c0b64","status":"passed","time":{"start":1697505572339,"stop":1697505573504,"duration":1165}},{"uid":"1c0f60375f5de241","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/1c0f60375f5de241","status":"passed","time":{"start":1697484835137,"stop":1697484836232,"duration":1095}},{"uid":"121babb21e29a06c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/121babb21e29a06c","status":"passed","time":{"start":1697484727464,"stop":1697484728377,"duration":913}},{"uid":"5f5a19a315345d53","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/5f5a19a315345d53","status":"passed","time":{"start":1697419162800,"stop":1697419163862,"duration":1062}},{"uid":"17ea16f395ad09eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/17ea16f395ad09eb","status":"passed","time":{"start":1697403292073,"stop":1697403293134,"duration":1061}},{"uid":"f45971f76067a8e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/f45971f76067a8e3","status":"passed","time":{"start":1697399954442,"stop":1697399955624,"duration":1182}},{"uid":"acd48ef668c2e0df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/acd48ef668c2e0df","status":"passed","time":{"start":1697367207001,"stop":1697367208134,"duration":1133}},{"uid":"909d8cf7018fd59b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/909d8cf7018fd59b","status":"passed","time":{"start":1697367112103,"stop":1697367113111,"duration":1008}},{"uid":"db2c93ebb10d551f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/db2c93ebb10d551f","status":"passed","time":{"start":1697333000884,"stop":1697333002201,"duration":1317}},{"uid":"953d2f17caf5d492","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/953d2f17caf5d492","status":"passed","time":{"start":1697246107763,"stop":1697246116800,"duration":9037}},{"uid":"c133ae5f5821427a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/c133ae5f5821427a","status":"passed","time":{"start":1697160006449,"stop":1697160007558,"duration":1109}},{"uid":"f1850507160824f1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/f1850507160824f1","status":"passed","time":{"start":1697073404202,"stop":1697073405417,"duration":1215}}]},"tags":[]},"source":"18011dc84650ed02.json","parameterValues":["MaldonDistrictCouncil"]}