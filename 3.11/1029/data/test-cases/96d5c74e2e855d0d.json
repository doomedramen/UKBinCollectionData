{"uid":"96d5c74e2e855d0d","name":"Validate Council Output [FenlandDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b9a0b94e117284e01290d827dc1bf029","time":{"start":1697702016660,"stop":1697702016661,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[FenlandDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f70358a8c90>, 'council_name': 'FenlandDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[FenlandDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f70358a8c90>, 'council_name': 'FenlandDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: FenlandDistrictCouncil","time":{"start":1697702016660,"stop":1697702016661,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"FenlandDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":71,"broken":0,"skipped":0,"passed":69,"unknown":0,"total":140},"items":[{"uid":"df62bb3434276e69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/df62bb3434276e69","status":"passed","time":{"start":1697696158066,"stop":1697696161600,"duration":3534}},{"uid":"730e23c3f021df3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/730e23c3f021df3f","status":"passed","time":{"start":1697678088829,"stop":1697678092579,"duration":3750}},{"uid":"45850f082a55ce4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/45850f082a55ce4a","status":"passed","time":{"start":1697666566648,"stop":1697666569544,"duration":2896}},{"uid":"55d2809f44d53397","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/55d2809f44d53397","status":"passed","time":{"start":1697656829315,"stop":1697656832341,"duration":3026}},{"uid":"72123bea3273bec3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/72123bea3273bec3","status":"passed","time":{"start":1697650023724,"stop":1697650026517,"duration":2793}},{"uid":"5511e5171c512733","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/5511e5171c512733","status":"passed","time":{"start":1697618255133,"stop":1697618258317,"duration":3184}},{"uid":"1fc7c0fa7664a657","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/1fc7c0fa7664a657","status":"passed","time":{"start":1697591709620,"stop":1697591713253,"duration":3633}},{"uid":"1cff89fd54c7ef34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/1cff89fd54c7ef34","status":"passed","time":{"start":1697542559919,"stop":1697542563564,"duration":3645}},{"uid":"f943276252a558ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/f943276252a558ca","status":"passed","time":{"start":1697505319128,"stop":1697505322093,"duration":2965}},{"uid":"1fe6ec63d62d7a2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/1fe6ec63d62d7a2b","status":"passed","time":{"start":1697484629815,"stop":1697484632570,"duration":2755}},{"uid":"a5b11a0b6c3b2e2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/a5b11a0b6c3b2e2c","status":"passed","time":{"start":1697484570630,"stop":1697484573748,"duration":3118}},{"uid":"b9f46600f057dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/b9f46600f057dd","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697418956294,"stop":1697418956946,"duration":652}},{"uid":"b165adb1e0fabade","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/b165adb1e0fabade","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697403144101,"stop":1697403144709,"duration":608}},{"uid":"5e982f398d9639cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/5e982f398d9639cf","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697399709844,"stop":1697399710498,"duration":654}},{"uid":"40fb85c76d392248","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/40fb85c76d392248","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697366969281,"stop":1697366970020,"duration":739}},{"uid":"d4d8c73c8b43ca64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/d4d8c73c8b43ca64","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697366910833,"stop":1697366911443,"duration":610}},{"uid":"1f12cfeb87cdab26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/1f12cfeb87cdab26","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697332792130,"stop":1697332793104,"duration":974}},{"uid":"c7d1b23e320b5cf9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/c7d1b23e320b5cf9","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697245955381,"stop":1697245956001,"duration":620}},{"uid":"c44ef422688695c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/c44ef422688695c4","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697159798673,"stop":1697159799359,"duration":686}},{"uid":"af906612a26cd9db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/af906612a26cd9db","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697073149169,"stop":1697073149826,"duration":657}}]},"tags":[]},"source":"96d5c74e2e855d0d.json","parameterValues":["FenlandDistrictCouncil"]}