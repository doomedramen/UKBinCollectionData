{"uid":"98178907d52c5b63","name":"Validate Council Output [NorthumberlandCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"be5066a45f8f21ace99c9910b786c6c9","time":{"start":1697702017324,"stop":1697702017326,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthumberlandCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c137b690>, 'council_name': 'NorthumberlandCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthumberlandCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c137b690>, 'council_name': 'NorthumberlandCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: NorthumberlandCouncil","time":{"start":1697702017325,"stop":1697702017326,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthumberlandCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":0,"skipped":0,"passed":111,"unknown":0,"total":140},"items":[{"uid":"1b9fc26052cd020","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/1b9fc26052cd020","status":"passed","time":{"start":1697696193794,"stop":1697696199097,"duration":5303}},{"uid":"e12dd06e3179eaf0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/e12dd06e3179eaf0","status":"passed","time":{"start":1697678187523,"stop":1697678193579,"duration":6056}},{"uid":"3cef5083c361faaa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/3cef5083c361faaa","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'string'","time":{"start":1697666607577,"stop":1697666612177,"duration":4600}},{"uid":"c56d65b0803180d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/c56d65b0803180d3","status":"passed","time":{"start":1697656861520,"stop":1697656867162,"duration":5642}},{"uid":"163e39c33a08c142","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/163e39c33a08c142","status":"passed","time":{"start":1697650071814,"stop":1697650076960,"duration":5146}},{"uid":"db1dd7dfef2add80","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/db1dd7dfef2add80","status":"passed","time":{"start":1697618313286,"stop":1697618318579,"duration":5293}},{"uid":"f6fbd6e661d08a12","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/f6fbd6e661d08a12","status":"passed","time":{"start":1697591761712,"stop":1697591767313,"duration":5601}},{"uid":"65148b8c39e05493","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/65148b8c39e05493","status":"passed","time":{"start":1697542610215,"stop":1697542615763,"duration":5548}},{"uid":"a6dd42a1b98dbc17","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/a6dd42a1b98dbc17","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'string'","time":{"start":1697505374363,"stop":1697505380341,"duration":5978}},{"uid":"bab638db0bf82997","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/bab638db0bf82997","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'string'","time":{"start":1697484681370,"stop":1697484686983,"duration":5613}},{"uid":"82356d542ea7d315","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/82356d542ea7d315","status":"passed","time":{"start":1697484621996,"stop":1697484626758,"duration":4762}},{"uid":"244cde08fea7bdaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/244cde08fea7bdaf","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'string'","time":{"start":1697419005724,"stop":1697419010656,"duration":4932}},{"uid":"1f59b5436d82613f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/1f59b5436d82613f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'string'","time":{"start":1697403184360,"stop":1697403189005,"duration":4645}},{"uid":"a15be99406e0acf0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/a15be99406e0acf0","status":"passed","time":{"start":1697399756949,"stop":1697399762897,"duration":5948}},{"uid":"efd34b94a32f3e03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/efd34b94a32f3e03","status":"passed","time":{"start":1697367016487,"stop":1697367022196,"duration":5709}},{"uid":"15ee6acdbe5621d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/15ee6acdbe5621d1","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'string'","time":{"start":1697366953114,"stop":1697366958486,"duration":5372}},{"uid":"ad9967c01bdd1369","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/ad9967c01bdd1369","status":"passed","time":{"start":1697332859499,"stop":1697332865161,"duration":5662}},{"uid":"708046b8cd95151a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/708046b8cd95151a","status":"passed","time":{"start":1697246046825,"stop":1697246051913,"duration":5088}},{"uid":"45c3615f8d56f60d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/45c3615f8d56f60d","status":"passed","time":{"start":1697159868718,"stop":1697159874190,"duration":5472}},{"uid":"33615504a1ea48d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/33615504a1ea48d7","status":"passed","time":{"start":1697073221920,"stop":1697073229230,"duration":7310}}]},"tags":[]},"source":"98178907d52c5b63.json","parameterValues":["NorthumberlandCouncil"]}