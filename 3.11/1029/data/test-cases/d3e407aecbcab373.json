{"uid":"d3e407aecbcab373","name":"Validate Council Output [ChelmsfordCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"ca53b6762a00c9270716d2dce73b5f79","time":{"start":1697702015731,"stop":1697702015733,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChelmsfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f70355c0390>, 'council_name': 'ChelmsfordCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChelmsfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f70355c0390>, 'council_name': 'ChelmsfordCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: ChelmsfordCityCouncil","time":{"start":1697702015732,"stop":1697702015733,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ChelmsfordCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":140},"items":[{"uid":"7f59ca6b596e9272","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/7f59ca6b596e9272","status":"passed","time":{"start":1697696115396,"stop":1697696124688,"duration":9292}},{"uid":"9e156636a335432","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/9e156636a335432","status":"passed","time":{"start":1697678037467,"stop":1697678058205,"duration":20738}},{"uid":"10427724bf01fa9a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/10427724bf01fa9a","status":"passed","time":{"start":1697666524498,"stop":1697666533612,"duration":9114}},{"uid":"26c9819f6562e23e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/26c9819f6562e23e","status":"passed","time":{"start":1697656778172,"stop":1697656787513,"duration":9341}},{"uid":"dfdaa418f9228236","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/dfdaa418f9228236","status":"passed","time":{"start":1697650027929,"stop":1697650037153,"duration":9224}},{"uid":"5ba15588252214e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/5ba15588252214e2","status":"passed","time":{"start":1697618240183,"stop":1697618249567,"duration":9384}},{"uid":"efba0231c507328b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/efba0231c507328b","status":"passed","time":{"start":1697591664316,"stop":1697591684679,"duration":20363}},{"uid":"607f74b6c4af0c0b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/607f74b6c4af0c0b","status":"passed","time":{"start":1697542521879,"stop":1697542531068,"duration":9189}},{"uid":"d672a9bfbe1421b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/d672a9bfbe1421b2","status":"passed","time":{"start":1697505278128,"stop":1697505298673,"duration":20545}},{"uid":"823d0d5afb226f52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/823d0d5afb226f52","status":"passed","time":{"start":1697484604153,"stop":1697484613419,"duration":9266}},{"uid":"8292c066a7cc2005","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/8292c066a7cc2005","status":"passed","time":{"start":1697484544223,"stop":1697484553405,"duration":9182}},{"uid":"b2c4abf24c24dcf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/b2c4abf24c24dcf6","status":"passed","time":{"start":1697418921232,"stop":1697418941387,"duration":20155}},{"uid":"50bb74352537d052","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/50bb74352537d052","status":"passed","time":{"start":1697403114761,"stop":1697403123980,"duration":9219}},{"uid":"c9d5808bced54efc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/c9d5808bced54efc","status":"passed","time":{"start":1697399681639,"stop":1697399691508,"duration":9869}},{"uid":"19222162793f6bba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/19222162793f6bba","status":"passed","time":{"start":1697366933789,"stop":1697366943449,"duration":9660}},{"uid":"84b894b69736b564","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/84b894b69736b564","status":"passed","time":{"start":1697366882488,"stop":1697366891754,"duration":9266}},{"uid":"5fc950284768b0d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/5fc950284768b0d4","status":"passed","time":{"start":1697332753248,"stop":1697332773429,"duration":20181}},{"uid":"c1a397355b4fc68e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/c1a397355b4fc68e","status":"passed","time":{"start":1697245913903,"stop":1697245934068,"duration":20165}},{"uid":"3ccb5711c3152af4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/3ccb5711c3152af4","status":"passed","time":{"start":1697159754595,"stop":1697159774683,"duration":20088}},{"uid":"4c7aabff75ebdfe8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/4c7aabff75ebdfe8","status":"passed","time":{"start":1697073100934,"stop":1697073121497,"duration":20563}}]},"tags":[]},"source":"d3e407aecbcab373.json","parameterValues":["ChelmsfordCityCouncil"]}