{"uid":"b704e5a20fc803ff","name":"Validate Council Output [CroydonCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cc336f6dd92ae6b8042805cd6f13d13e","time":{"start":1697702015970,"stop":1697702015972,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f703556b990>, 'council_name': 'CroydonCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f703556b990>, 'council_name': 'CroydonCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: CroydonCouncil","time":{"start":1697702015971,"stop":1697702015972,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":79,"broken":0,"skipped":0,"passed":61,"unknown":0,"total":140},"items":[{"uid":"f03994ddde0ee083","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/f03994ddde0ee083","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697696129457,"stop":1697696131033,"duration":1576}},{"uid":"13aabd72a1112c7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/13aabd72a1112c7b","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697678062905,"stop":1697678064588,"duration":1683}},{"uid":"a26b7863bdc9444e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/a26b7863bdc9444e","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697666536873,"stop":1697666538100,"duration":1227}},{"uid":"3e9b8c6f940127fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/3e9b8c6f940127fd","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697656794740,"stop":1697656796280,"duration":1540}},{"uid":"bf2983f8d05ad3ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/bf2983f8d05ad3ab","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697650040469,"stop":1697650041829,"duration":1360}},{"uid":"5a0364c112d30290","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/5a0364c112d30290","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697618252678,"stop":1697618254220,"duration":1542}},{"uid":"4a3e9efb828af6b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/4a3e9efb828af6b8","status":"passed","time":{"start":1697591718239,"stop":1697591724448,"duration":6209}},{"uid":"384c8220e7e1543","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/384c8220e7e1543","status":"passed","time":{"start":1697542563381,"stop":1697542568707,"duration":5326}},{"uid":"a455c473ad4975d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/a455c473ad4975d","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697505326837,"stop":1697505329277,"duration":2440}},{"uid":"ad6a61fdcb6a79f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/ad6a61fdcb6a79f0","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697484635632,"stop":1697484637133,"duration":1501}},{"uid":"bd835875d00c252c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/bd835875d00c252c","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697484578667,"stop":1697484579777,"duration":1110}},{"uid":"425ca6ea34feb93c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/425ca6ea34feb93c","status":"passed","time":{"start":1697418965198,"stop":1697418970449,"duration":5251}},{"uid":"b4a22586be274166","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/b4a22586be274166","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697403148935,"stop":1697403150106,"duration":1171}},{"uid":"dd7ea4f1d2f8b7c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/dd7ea4f1d2f8b7c1","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697399716792,"stop":1697399718728,"duration":1936}},{"uid":"212d37e804d01ac9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/212d37e804d01ac9","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697366970341,"stop":1697366972053,"duration":1712}},{"uid":"6432aee502d18327","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/6432aee502d18327","status":"passed","time":{"start":1697366914069,"stop":1697366918634,"duration":4565}},{"uid":"e57fa365656ec929","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/e57fa365656ec929","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1697332794339,"stop":1697332796177,"duration":1838}},{"uid":"d49436325e1852db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/d49436325e1852db","status":"passed","time":{"start":1697245954938,"stop":1697245958910,"duration":3972}},{"uid":"f2ab443ac5366cbf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/f2ab443ac5366cbf","status":"passed","time":{"start":1697159797650,"stop":1697159803313,"duration":5663}},{"uid":"9e20d22514dc23a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/9e20d22514dc23a6","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1697073153221,"stop":1697073158021,"duration":4800}}]},"tags":[]},"source":"b704e5a20fc803ff.json","parameterValues":["CroydonCouncil"]}