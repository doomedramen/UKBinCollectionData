{"uid":"113ed7bf550c4aa9","name":"Validate Council Output [MidSussexDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a89b66947aa74789814d9628a2d7e666","time":{"start":1697702017003,"stop":1697702017004,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c13a6f90>, 'council_name': 'MidSussexDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c13a6f90>, 'council_name': 'MidSussexDistrictCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: MidSussexDistrictCouncil","time":{"start":1697702017003,"stop":1697702017004,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MidSussexDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":102,"broken":0,"skipped":0,"passed":38,"unknown":0,"total":140},"items":[{"uid":"6dffea2b0e44bb2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/6dffea2b0e44bb2f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697696152607,"stop":1697696153573,"duration":966}},{"uid":"70dc0677989ecba4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/70dc0677989ecba4","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697678093817,"stop":1697678094891,"duration":1074}},{"uid":"e382eb1a65f80c0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/e382eb1a65f80c0d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697666562605,"stop":1697666563360,"duration":755}},{"uid":"853fc4c204dac130","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/853fc4c204dac130","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697656818388,"stop":1697656819730,"duration":1342}},{"uid":"44b54ab64a859a81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/44b54ab64a859a81","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697650189428,"stop":1697650190151,"duration":723}},{"uid":"482d9eb3e18a03c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/482d9eb3e18a03c9","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697618446145,"stop":1697618447084,"duration":939}},{"uid":"1c1078bed320f634","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/1c1078bed320f634","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697591925373,"stop":1697591926703,"duration":1330}},{"uid":"6d73342d00eb16fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/6d73342d00eb16fd","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697542721646,"stop":1697542722377,"duration":731}},{"uid":"19ffcade01998c71","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/19ffcade01998c71","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697505582572,"stop":1697505583683,"duration":1111}},{"uid":"c438f6c58913f5b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/c438f6c58913f5b4","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697484842493,"stop":1697484843887,"duration":1394}},{"uid":"ce92e4753e89c8a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/ce92e4753e89c8a8","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697484733552,"stop":1697484734550,"duration":998}},{"uid":"d7187ae4fa848b3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/d7187ae4fa848b3a","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697419192856,"stop":1697419194118,"duration":1262}},{"uid":"a7233db635520ba4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/a7233db635520ba4","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697403302844,"stop":1697403303748,"duration":904}},{"uid":"be53084b07e69d8c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/be53084b07e69d8c","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697399962135,"stop":1697399963555,"duration":1420}},{"uid":"f4a6fa79b8fc14bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/f4a6fa79b8fc14bf","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697367215268,"stop":1697367216240,"duration":972}},{"uid":"799267500b90ab93","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/799267500b90ab93","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697367120018,"stop":1697367121235,"duration":1217}},{"uid":"80737f93ca4f8011","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/80737f93ca4f8011","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697333015169,"stop":1697333016283,"duration":1114}},{"uid":"23d219acf1eb0457","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/23d219acf1eb0457","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697246122410,"stop":1697246123070,"duration":660}},{"uid":"7338abf940f5f1e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/7338abf940f5f1e2","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697160015898,"stop":1697160016884,"duration":986}},{"uid":"642885b436b900a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/642885b436b900a3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1697073411709,"stop":1697073412851,"duration":1142}}]},"tags":[]},"source":"113ed7bf550c4aa9.json","parameterValues":["MidSussexDistrictCouncil"]}