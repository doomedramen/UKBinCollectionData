{"uid":"646605394313cea0","name":"Validate Council Output [BasingstokeCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"920a57bf4f74278e86b973f40cf06007","time":{"start":1697702015564,"stop":1697702015565,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BasingstokeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1539010>, 'council_name': 'BasingstokeCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BasingstokeCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1539010>, 'council_name': 'BasingstokeCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: BasingstokeCouncil","time":{"start":1697702015564,"stop":1697702015565,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BasingstokeCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":119,"broken":0,"skipped":0,"passed":21,"unknown":0,"total":140},"items":[{"uid":"419c0641c6c39a0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/419c0641c6c39a0c","status":"passed","time":{"start":1697696107350,"stop":1697696108116,"duration":766}},{"uid":"105c7a03e568ad89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/105c7a03e568ad89","status":"passed","time":{"start":1697678028876,"stop":1697678029874,"duration":998}},{"uid":"e0e1e25e942722b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/e0e1e25e942722b6","status":"passed","time":{"start":1697666519619,"stop":1697666520216,"duration":597}},{"uid":"d09c84b859e55903","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/d09c84b859e55903","status":"passed","time":{"start":1697656772098,"stop":1697656772880,"duration":782}},{"uid":"f471c87b819c5507","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/f471c87b819c5507","status":"passed","time":{"start":1697649965846,"stop":1697649966609,"duration":763}},{"uid":"d4da5c0aec2f639","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/d4da5c0aec2f639","status":"passed","time":{"start":1697618200360,"stop":1697618201486,"duration":1126}},{"uid":"eaf1df3e7fadead1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/eaf1df3e7fadead1","status":"passed","time":{"start":1697591656212,"stop":1697591656967,"duration":755}},{"uid":"6beade51338f9dab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/6beade51338f9dab","status":"passed","time":{"start":1697542518715,"stop":1697542522417,"duration":3702}},{"uid":"a9a3626b2cb2f8c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/a9a3626b2cb2f8c8","status":"passed","time":{"start":1697505270332,"stop":1697505271607,"duration":1275}},{"uid":"91e75feedd354b73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/91e75feedd354b73","status":"passed","time":{"start":1697484593467,"stop":1697484594232,"duration":765}},{"uid":"42c6d99bbc9b4d3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/42c6d99bbc9b4d3a","status":"passed","time":{"start":1697484540058,"stop":1697484540627,"duration":569}},{"uid":"633779d294bf649d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/633779d294bf649d","status":"passed","time":{"start":1697418914725,"stop":1697418915506,"duration":781}},{"uid":"938b278f1d75a3cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/938b278f1d75a3cd","status":"passed","time":{"start":1697403110911,"stop":1697403111547,"duration":636}},{"uid":"fe59a59156e2bca7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/fe59a59156e2bca7","status":"passed","time":{"start":1697399675689,"stop":1697399676667,"duration":978}},{"uid":"5e9843569b18dc1b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/5e9843569b18dc1b","status":"passed","time":{"start":1697366927039,"stop":1697366928011,"duration":972}},{"uid":"181fa256377366f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/181fa256377366f2","status":"passed","time":{"start":1697366878110,"stop":1697366878932,"duration":822}},{"uid":"4e35bbd5ff0a9f8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/4e35bbd5ff0a9f8a","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='www.basingstoke.gov.uk', port=443): Max retries exceeded with url: /bincollections (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')))","time":{"start":1697332748306,"stop":1697332749196,"duration":890}},{"uid":"c20ee6b9c1e3bd1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/c20ee6b9c1e3bd1c","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='www.basingstoke.gov.uk', port=443): Max retries exceeded with url: /bincollections (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')))","time":{"start":1697245909644,"stop":1697245910095,"duration":451}},{"uid":"10f06e43925e2406","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/10f06e43925e2406","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='www.basingstoke.gov.uk', port=443): Max retries exceeded with url: /bincollections (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')))","time":{"start":1697159749567,"stop":1697159750151,"duration":584}},{"uid":"c91efdfa88b0adf0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/c91efdfa88b0adf0","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='www.basingstoke.gov.uk', port=443): Max retries exceeded with url: /bincollections (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1006)')))","time":{"start":1697073095268,"stop":1697073095968,"duration":700}}]},"tags":[]},"source":"646605394313cea0.json","parameterValues":["BasingstokeCouncil"]}