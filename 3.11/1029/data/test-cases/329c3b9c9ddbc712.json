{"uid":"329c3b9c9ddbc712","name":"Validate Council Output [ManchesterCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"6c9ed2342b08e1ed67054efc9a5b20e8","time":{"start":1697702016864,"stop":1697702016865,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[ManchesterCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1606510>, 'council_name': 'ManchesterCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[ManchesterCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c1606510>, 'council_name': 'ManchesterCityCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: ManchesterCityCouncil","time":{"start":1697702016864,"stop":1697702016865,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ManchesterCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":140},"items":[{"uid":"24310f79fea39738","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/24310f79fea39738","status":"passed","time":{"start":1697696147498,"stop":1697696150876,"duration":3378}},{"uid":"5b4626fed2c0e006","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/5b4626fed2c0e006","status":"passed","time":{"start":1697678085794,"stop":1697678091800,"duration":6006}},{"uid":"fbe46b8591b7c15a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/fbe46b8591b7c15a","status":"passed","time":{"start":1697666552856,"stop":1697666556766,"duration":3910}},{"uid":"21a7d589e8b3e31","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/21a7d589e8b3e31","status":"passed","time":{"start":1697656812567,"stop":1697656816251,"duration":3684}},{"uid":"4bbde036841f9fc7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/4bbde036841f9fc7","status":"passed","time":{"start":1697650183807,"stop":1697650187940,"duration":4133}},{"uid":"36f3646942f7b422","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/36f3646942f7b422","status":"passed","time":{"start":1697618440338,"stop":1697618443846,"duration":3508}},{"uid":"4d1d4483eac4fa8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/4d1d4483eac4fa8","status":"passed","time":{"start":1697591912517,"stop":1697591919413,"duration":6896}},{"uid":"d78dd471b6c318f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/d78dd471b6c318f","status":"passed","time":{"start":1697542716820,"stop":1697542720174,"duration":3354}},{"uid":"5d3f0c30198f3821","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/5d3f0c30198f3821","status":"passed","time":{"start":1697505574984,"stop":1697505580616,"duration":5632}},{"uid":"e7dbd4c35187b379","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/e7dbd4c35187b379","status":"passed","time":{"start":1697484837461,"stop":1697484840387,"duration":2926}},{"uid":"18c427d1851135ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/18c427d1851135ac","status":"passed","time":{"start":1697484729265,"stop":1697484731871,"duration":2606}},{"uid":"e978b53d1127c652","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/e978b53d1127c652","status":"passed","time":{"start":1697419164949,"stop":1697419190940,"duration":25991}},{"uid":"ac1f90788f2e9101","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/ac1f90788f2e9101","status":"passed","time":{"start":1697403294213,"stop":1697403297675,"duration":3462}},{"uid":"192ce650ba5313b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/192ce650ba5313b8","status":"passed","time":{"start":1697399956807,"stop":1697399960217,"duration":3410}},{"uid":"3a81b99397cd41af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/3a81b99397cd41af","status":"passed","time":{"start":1697367209635,"stop":1697367213303,"duration":3668}},{"uid":"50a765ac334f665c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/50a765ac334f665c","status":"passed","time":{"start":1697367114785,"stop":1697367118086,"duration":3301}},{"uid":"44dbbff91467b61b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/44dbbff91467b61b","status":"passed","time":{"start":1697333003029,"stop":1697333012939,"duration":9910}},{"uid":"404d740dd1570e98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/404d740dd1570e98","status":"passed","time":{"start":1697246117386,"stop":1697246121445,"duration":4059}},{"uid":"e19eb441ca520751","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/e19eb441ca520751","status":"passed","time":{"start":1697160008294,"stop":1697160014425,"duration":6131}},{"uid":"101aa92cbe170996","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/101aa92cbe170996","status":"passed","time":{"start":1697073406360,"stop":1697073410389,"duration":4029}}]},"tags":[]},"source":"329c3b9c9ddbc712.json","parameterValues":["ManchesterCityCouncil"]}