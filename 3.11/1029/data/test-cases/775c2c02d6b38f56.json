{"uid":"775c2c02d6b38f56","name":"Validate Council Output [SouthTynesideCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"efde6c2c8e15955ad5fa48845f3c2c06","time":{"start":1697702017738,"stop":1697702017739,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthTynesideCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f703551ab50>, 'council_name': 'SouthTynesideCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthTynesideCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f703551ab50>, 'council_name': 'SouthTynesideCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: SouthTynesideCouncil","time":{"start":1697702017738,"stop":1697702017739,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthTynesideCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":58,"broken":0,"skipped":0,"passed":82,"unknown":0,"total":140},"items":[{"uid":"f61e318e4afc714b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/f61e318e4afc714b","status":"passed","time":{"start":1697696376782,"stop":1697696378889,"duration":2107}},{"uid":"2428fb20482c08c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/2428fb20482c08c7","status":"passed","time":{"start":1697678363668,"stop":1697678367220,"duration":3552}},{"uid":"efb347828d01ad5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/efb347828d01ad5e","status":"passed","time":{"start":1697666747035,"stop":1697666748761,"duration":1726}},{"uid":"7d825cb6f977276e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/7d825cb6f977276e","status":"passed","time":{"start":1697657038409,"stop":1697657040358,"duration":1949}},{"uid":"413c7175476f9218","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/413c7175476f9218","status":"passed","time":{"start":1697650217290,"stop":1697650218997,"duration":1707}},{"uid":"4dae16c769e6a997","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/4dae16c769e6a997","status":"passed","time":{"start":1697618478302,"stop":1697618480168,"duration":1866}},{"uid":"655727903b2f8162","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/655727903b2f8162","status":"passed","time":{"start":1697591939355,"stop":1697591941538,"duration":2183}},{"uid":"47e872a8b8a09fd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/47e872a8b8a09fd8","status":"passed","time":{"start":1697542757336,"stop":1697542759150,"duration":1814}},{"uid":"ebd43d345fcc04f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/ebd43d345fcc04f2","status":"passed","time":{"start":1697505571937,"stop":1697505579524,"duration":7587}},{"uid":"3bc73f9b8d1f354","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/3bc73f9b8d1f354","status":"passed","time":{"start":1697484867510,"stop":1697484869522,"duration":2012}},{"uid":"7208650bb74441f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/7208650bb74441f3","status":"passed","time":{"start":1697484766825,"stop":1697484768305,"duration":1480}},{"uid":"d364b7eef17beee5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/d364b7eef17beee5","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697419197179,"stop":1697419198045,"duration":866}},{"uid":"a937654f034e987e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/a937654f034e987e","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697403334524,"stop":1697403335856,"duration":1332}},{"uid":"721d3842a83884f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/721d3842a83884f7","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697399948433,"stop":1697399950274,"duration":1841}},{"uid":"1039767f280a210c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/1039767f280a210c","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697367210835,"stop":1697367213213,"duration":2378}},{"uid":"83876fc61078a292","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/83876fc61078a292","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697367133318,"stop":1697367134170,"duration":852}},{"uid":"e25be0e015ee5b9e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/e25be0e015ee5b9e","status":"passed","time":{"start":1697333031754,"stop":1697333034290,"duration":2536}},{"uid":"c4223bd45134474a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/c4223bd45134474a","status":"passed","time":{"start":1697246150399,"stop":1697246151964,"duration":1565}},{"uid":"b5b768ef21439314","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/b5b768ef21439314","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697160042775,"stop":1697160044020,"duration":1245}},{"uid":"80fd28ad602a184b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/80fd28ad602a184b","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1697073415144,"stop":1697073416958,"duration":1814}}]},"tags":[]},"source":"775c2c02d6b38f56.json","parameterValues":["SouthTynesideCouncil"]}