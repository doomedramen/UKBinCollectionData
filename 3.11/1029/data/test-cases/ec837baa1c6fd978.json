{"uid":"ec837baa1c6fd978","name":"Validate Council Output [WelhatCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9757596c6a580c04f776b266c6584936","time":{"start":1697702018226,"stop":1697702018227,"duration":1},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WelhatCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c126a250>, 'council_name': 'WelhatCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[WelhatCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c126a250>, 'council_name': 'WelhatCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: WelhatCouncil","time":{"start":1697702018226,"stop":1697702018227,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WelhatCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":140,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":140},"items":[{"uid":"b893f721d37fbc7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/b893f721d37fbc7b","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697696406778,"stop":1697696406960,"duration":182}},{"uid":"4441d0e8addb09df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/4441d0e8addb09df","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697678401696,"stop":1697678401815,"duration":119}},{"uid":"ce287ad99b72f38f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/ce287ad99b72f38f","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697666780448,"stop":1697666780567,"duration":119}},{"uid":"f4dc91ce7cd12ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/f4dc91ce7cd12ee","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697657071448,"stop":1697657072059,"duration":611}},{"uid":"68eadcea60148768","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/68eadcea60148768","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697650370222,"stop":1697650370340,"duration":118}},{"uid":"bfc2a98371a5946f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/bfc2a98371a5946f","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697618512724,"stop":1697618512861,"duration":137}},{"uid":"860fd1c5d7925f83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/860fd1c5d7925f83","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697591974720,"stop":1697591974906,"duration":186}},{"uid":"9a5b598f381a962d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/9a5b598f381a962d","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697542908195,"stop":1697542908316,"duration":121}},{"uid":"2cf9b32824e4fcaa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/2cf9b32824e4fcaa","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697505642206,"stop":1697505642333,"duration":127}},{"uid":"b5a201d374680b82","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/b5a201d374680b82","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697484895736,"stop":1697484896004,"duration":268}},{"uid":"3a8e3887c37ff734","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/3a8e3887c37ff734","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697484806562,"stop":1697484806661,"duration":99}},{"uid":"c81d733700f74aa6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/c81d733700f74aa6","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697419264914,"stop":1697419265047,"duration":133}},{"uid":"6ef22ba010102066","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/6ef22ba010102066","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697403363852,"stop":1697403363960,"duration":108}},{"uid":"d6e1b87b4bbe1dc7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/d6e1b87b4bbe1dc7","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697399995839,"stop":1697399996562,"duration":723}},{"uid":"b1c2e2ab2d95c4d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/b1c2e2ab2d95c4d5","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697367248226,"stop":1697367248477,"duration":251}},{"uid":"7cf8e391f71a893","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/7cf8e391f71a893","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697367162733,"stop":1697367162852,"duration":119}},{"uid":"9c5f08f2a5e30128","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/9c5f08f2a5e30128","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697333074826,"stop":1697333075105,"duration":279}},{"uid":"c7b3cd6022465da7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/c7b3cd6022465da7","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697246237662,"stop":1697246237867,"duration":205}},{"uid":"a541baf30a052978","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/a541baf30a052978","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697160088012,"stop":1697160088132,"duration":120}},{"uid":"1ded096a3a236838","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/1ded096a3a236838","status":"failed","statusDetails":"AttributeError: 'str' object has no attribute 'text'","time":{"start":1697073452630,"stop":1697073452741,"duration":111}}]},"tags":[]},"source":"ec837baa1c6fd978.json","parameterValues":["WelhatCouncil"]}