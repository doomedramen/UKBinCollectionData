{"uid":"1a2d0622f766eb1b","name":"Validate Council Output [HighPeakCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f014a970b405df22a91c3a1e6926ba51","time":{"start":1697702016283,"stop":1697702016285,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[HighPeakCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c14d7190>, 'council_name': 'HighPeakCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[HighPeakCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c14d7190>, 'council_name': 'HighPeakCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: HighPeakCouncil","time":{"start":1697702016284,"stop":1697702016285,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"HighPeakCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":31,"broken":0,"skipped":0,"passed":109,"unknown":0,"total":140},"items":[{"uid":"291d12473c9d357f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/291d12473c9d357f","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697696168908,"stop":1697696179851,"duration":10943}},{"uid":"8cdedfcc09b619dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/8cdedfcc09b619dc","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697678099381,"stop":1697678109372,"duration":9991}},{"uid":"c19756d7a3bb4010","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/c19756d7a3bb4010","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697666576049,"stop":1697666582726,"duration":6677}},{"uid":"804a6599af5175aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/804a6599af5175aa","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697656839901,"stop":1697656847834,"duration":7933}},{"uid":"938165d56ad31794","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/938165d56ad31794","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697650032709,"stop":1697650039764,"duration":7055}},{"uid":"73e6430a28114c70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/73e6430a28114c70","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697618266463,"stop":1697618275878,"duration":9415}},{"uid":"a97af4bd92d9c18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/a97af4bd92d9c18","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697591720765,"stop":1697591728571,"duration":7806}},{"uid":"1dbf56af08cea2e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/1dbf56af08cea2e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697542572962,"stop":1697542581313,"duration":8351}},{"uid":"d00bda35d74f2e35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/d00bda35d74f2e35","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697505329960,"stop":1697505339036,"duration":9076}},{"uid":"2c8f35b9b968afee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/2c8f35b9b968afee","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484641097,"stop":1697484648890,"duration":7793}},{"uid":"9d09a285fe17154c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/9d09a285fe17154c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484579791,"stop":1697484586465,"duration":6674}},{"uid":"4d5c086c606f6fea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/4d5c086c606f6fea","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697418964033,"stop":1697418971342,"duration":7309}},{"uid":"9338b924c72fdad6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/9338b924c72fdad6","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697403150569,"stop":1697403157418,"duration":6849}},{"uid":"c9bf42e54e369c28","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/c9bf42e54e369c28","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697399718169,"stop":1697399726972,"duration":8803}},{"uid":"27a103fc76c1df72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/27a103fc76c1df72","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697366978461,"stop":1697366987304,"duration":8843}},{"uid":"eb95165884003575","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/eb95165884003575","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697366917553,"stop":1697366925416,"duration":7863}},{"uid":"af2cc90e70dcb412","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/af2cc90e70dcb412","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697332797627,"stop":1697332806523,"duration":8896}},{"uid":"b2b2d911b0694260","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/b2b2d911b0694260","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697245959872,"stop":1697245967532,"duration":7660}},{"uid":"4581129667494d4e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/4581129667494d4e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697159806003,"stop":1697159813333,"duration":7330}},{"uid":"f0e9ae208e9b10cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/f0e9ae208e9b10cf","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697073155031,"stop":1697073163557,"duration":8526}}]},"tags":[]},"source":"1a2d0622f766eb1b.json","parameterValues":["HighPeakCouncil"]}