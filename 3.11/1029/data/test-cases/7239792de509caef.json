{"uid":"7239792de509caef","name":"Validate Council Output [NewarkAndSherwoodDC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4d76ea9dcf3a3c0d5f40470e07f35ac0","time":{"start":1697702016845,"stop":1697702016847,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewarkAndSherwoodDC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f703578a0d0>, 'council_name': 'NewarkAndSherwoodDC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f7035aa1bc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewarkAndSherwoodDC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f703578a0d0>, 'council_name': 'NewarkAndSherwoodDC'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f70362b7810>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: NewarkAndSherwoodDC","time":{"start":1697702016846,"stop":1697702016847,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewarkAndSherwoodDC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":140},"items":[{"uid":"b06aeb64239a633a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/b06aeb64239a633a","status":"passed","time":{"start":1697696160236,"stop":1697696161398,"duration":1162}},{"uid":"1424a0b09cf29097","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/1424a0b09cf29097","status":"passed","time":{"start":1697678100815,"stop":1697678102108,"duration":1293}},{"uid":"2d646190c35132f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/2d646190c35132f8","status":"passed","time":{"start":1697666568485,"stop":1697666569347,"duration":862}},{"uid":"a5e28a08b61513d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/a5e28a08b61513d6","status":"passed","time":{"start":1697656819876,"stop":1697656821056,"duration":1180}},{"uid":"95b04245a0b9d27a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/95b04245a0b9d27a","status":"passed","time":{"start":1697650190222,"stop":1697650191038,"duration":816}},{"uid":"a065b254a6a28022","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/a065b254a6a28022","status":"passed","time":{"start":1697618447192,"stop":1697618448189,"duration":997}},{"uid":"423c437bffaaf721","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/423c437bffaaf721","status":"passed","time":{"start":1697591926830,"stop":1697591927818,"duration":988}},{"uid":"47b193ba19137a3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/47b193ba19137a3c","status":"passed","time":{"start":1697542722501,"stop":1697542723329,"duration":828}},{"uid":"e121784ffc7dc823","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/e121784ffc7dc823","status":"passed","time":{"start":1697505583830,"stop":1697505585469,"duration":1639}},{"uid":"4a4aae1bd9a71398","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/4a4aae1bd9a71398","status":"passed","time":{"start":1697484844020,"stop":1697484845073,"duration":1053}},{"uid":"7dff4e281bf0ad83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/7dff4e281bf0ad83","status":"passed","time":{"start":1697484734662,"stop":1697484735698,"duration":1036}},{"uid":"f608358623aacecf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/f608358623aacecf","status":"passed","time":{"start":1697419194190,"stop":1697419195474,"duration":1284}},{"uid":"eff07bdbf6855032","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/eff07bdbf6855032","status":"passed","time":{"start":1697403303866,"stop":1697403304751,"duration":885}},{"uid":"170fb13fc0dcad60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/170fb13fc0dcad60","status":"passed","time":{"start":1697399963721,"stop":1697399964984,"duration":1263}},{"uid":"da1dfac4d504cfef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/da1dfac4d504cfef","status":"passed","time":{"start":1697367216404,"stop":1697367217674,"duration":1270}},{"uid":"31301e5931f7d71a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/31301e5931f7d71a","status":"passed","time":{"start":1697367121384,"stop":1697367122691,"duration":1307}},{"uid":"8d8d04991d0148d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/8d8d04991d0148d2","status":"passed","time":{"start":1697332802668,"stop":1697332804206,"duration":1538}},{"uid":"447bde51689680ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/447bde51689680ba","status":"passed","time":{"start":1697245967207,"stop":1697245968135,"duration":928}},{"uid":"aa29f5d00f604eec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/aa29f5d00f604eec","status":"passed","time":{"start":1697159812583,"stop":1697159817782,"duration":5199}},{"uid":"5ed190ce89b6a213","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/5ed190ce89b6a213","status":"passed","time":{"start":1697073167202,"stop":1697073168459,"duration":1257}}]},"tags":[]},"source":"7239792de509caef.json","parameterValues":["NewarkAndSherwoodDC"]}