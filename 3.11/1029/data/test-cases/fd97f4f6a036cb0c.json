{"uid":"fd97f4f6a036cb0c","name":"Validate Council Output [LondonBoroughHounslow]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e674cebf616dd1178743c85688db8654","time":{"start":1697702016684,"stop":1697702016686,"duration":2},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c14a45d0>, 'council_name': 'LondonBoroughHounslow'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"fixturefunc = <function get_council_step at 0x7f39c167dc60>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f39c14a45d0>, 'council_name': 'LondonBoroughHounslow'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:32: in get_council_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:27: in get_council_step\n    council_input_data = file_handler.load_inputs_file(\"input.json\")\nuk_bin_collection/tests/step_defs/step_helpers/file_handler.py:11: in load_inputs_file\n    data = json.load(f)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f39c20dba50>\ns = '{\\n  \"AylesburyValeCouncil\": {\\n    \"SKIP_GET_URL\": \"SKIP_GET_URL\",\\n    \"uprn\": \"766252532\",\\n    \"url\": \"http://avd...ttps://waste-api.york.gov.uk/api/Collections/GetBinCollectionDataForUprn/\",\\n    \"wiki_name\": \"York Council\"\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:353: JSONDecodeError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1697702016685,"stop":1697702016686,"duration":1},"status":"failed","statusMessage":"Expecting ',' delimiter: line 181 column 5 (char 9185)","statusTrace":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az951-436"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":136,"unknown":0,"total":140},"items":[{"uid":"f2c4734a5f4aacd2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/f2c4734a5f4aacd2","status":"passed","time":{"start":1697696141936,"stop":1697696145412,"duration":3476}},{"uid":"835ac3840df4c6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/835ac3840df4c6b","status":"passed","time":{"start":1697678080280,"stop":1697678082961,"duration":2681}},{"uid":"78b57a63d91009d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/78b57a63d91009d3","status":"passed","time":{"start":1697666548396,"stop":1697666550829,"duration":2433}},{"uid":"5f311c4418c99fa5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/5f311c4418c99fa5","status":"passed","time":{"start":1697656807658,"stop":1697656810300,"duration":2642}},{"uid":"90df345fd5485d8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/90df345fd5485d8f","status":"passed","time":{"start":1697650178998,"stop":1697650181731,"duration":2733}},{"uid":"83bb63e5aa88a973","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/83bb63e5aa88a973","status":"passed","time":{"start":1697618435567,"stop":1697618438235,"duration":2668}},{"uid":"f19a20743ab40a28","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/f19a20743ab40a28","status":"passed","time":{"start":1697591907389,"stop":1697591910042,"duration":2653}},{"uid":"105bff77600d0c4e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/105bff77600d0c4e","status":"passed","time":{"start":1697542710723,"stop":1697542714184,"duration":3461}},{"uid":"8e25be99f7a44ecb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/8e25be99f7a44ecb","status":"passed","time":{"start":1697505569498,"stop":1697505572336,"duration":2838}},{"uid":"e7c89cd515ff22cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/e7c89cd515ff22cc","status":"passed","time":{"start":1697484832389,"stop":1697484835134,"duration":2745}},{"uid":"525d43020ece07a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/525d43020ece07a5","status":"passed","time":{"start":1697484725142,"stop":1697484727462,"duration":2320}},{"uid":"bd3ba4e113cc3082","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/bd3ba4e113cc3082","status":"passed","time":{"start":1697419160144,"stop":1697419162798,"duration":2654}},{"uid":"4ee46514b962a90","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/4ee46514b962a90","status":"passed","time":{"start":1697403289161,"stop":1697403292070,"duration":2909}},{"uid":"ab62b293c23a63c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/ab62b293c23a63c4","status":"passed","time":{"start":1697399951074,"stop":1697399954439,"duration":3365}},{"uid":"9ebb88e5f513e598","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/9ebb88e5f513e598","status":"passed","time":{"start":1697367203980,"stop":1697367206998,"duration":3018}},{"uid":"39ac435cc9db158d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/39ac435cc9db158d","status":"passed","time":{"start":1697367108996,"stop":1697367112099,"duration":3103}},{"uid":"79a534e80fbbb61b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/79a534e80fbbb61b","status":"passed","time":{"start":1697332998205,"stop":1697333000881,"duration":2676}},{"uid":"f8b62f1f99b1fd30","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/f8b62f1f99b1fd30","status":"passed","time":{"start":1697246104648,"stop":1697246107760,"duration":3112}},{"uid":"4e88228652b3e6b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/4e88228652b3e6b9","status":"passed","time":{"start":1697160003791,"stop":1697160006447,"duration":2656}},{"uid":"28ea6c89f1330979","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/28ea6c89f1330979","status":"passed","time":{"start":1697073401180,"stop":1697073404199,"duration":3019}}]},"tags":[]},"source":"fd97f4f6a036cb0c.json","parameterValues":["LondonBoroughHounslow"]}