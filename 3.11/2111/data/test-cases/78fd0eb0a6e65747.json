{"uid":"78fd0eb0a6e65747","name":"Validate Council Output [CheshireWestAndChesterCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"64af12fdfc56ab0224e14523e9cf88ad","time":{"start":1726012871865,"stop":1726012876640,"duration":4775},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x556b7fdce86a <unknown>\n#1 0x556b7fa9ce50 <unknown>\n#2 0x556b7faf3346 <unknown>\n#3 0x556b7faf125d <unknown>\n#4 0x556b7faeecf7 <unknown>\n#5 0x556b7faedb9c <unknown>\n#6 0x556b7fae14d6 <unknown>\n#7 0x556b7fb11492 <unknown>\n#8 0x556b7fae0e89 <unknown>\n#9 0x556b7fb1165e <unknown>\n#10 0x556b7fb2f9c6 <unknown>\n#11 0x556b7fb11233 <unknown>\n#12 0x556b7fadf093 <unknown>\n#13 0x556b7fae009e <unknown>\n#14 0x556b7fd95acb <unknown>\n#15 0x556b7fd99a81 <unknown>\n#16 0x556b7fd81695 <unknown>\n#17 0x556b7fd9a5f2 <unknown>\n#18 0x556b7fd6686f <unknown>\n#19 0x556b7fdbd668 <unknown>\n#20 0x556b7fdbd832 <unknown>\n#21 0x556b7fdcd65c <unknown>\n#22 0x7fae7fdc2a94 <unknown>\n#23 0x7fae7fe4fa34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f2ea6d59260>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f2ea6bcb3d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:52: in parse_data\n    click_element(By.LINK_TEXT, \"Find your collection day\")\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:46: in click_element\n    element.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2ea82f8f90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x556b7fdcd65c \\\\u003Cunknown>\\\\n#22 0x7fae7fdc2a94 \\\\u003Cunknown>\\\\n#23 0x7fae7fe4fa34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\nE         (Session info: chrome=128.0.6613.119)\nE       Stacktrace:\nE       #0 0x556b7fdce86a <unknown>\nE       #1 0x556b7fa9ce50 <unknown>\nE       #2 0x556b7faf3346 <unknown>\nE       #3 0x556b7faf125d <unknown>\nE       #4 0x556b7faeecf7 <unknown>\nE       #5 0x556b7faedb9c <unknown>\nE       #6 0x556b7fae14d6 <unknown>\nE       #7 0x556b7fb11492 <unknown>\nE       #8 0x556b7fae0e89 <unknown>\nE       #9 0x556b7fb1165e <unknown>\nE       #10 0x556b7fb2f9c6 <unknown>\nE       #11 0x556b7fb11233 <unknown>\nE       #12 0x556b7fadf093 <unknown>\nE       #13 0x556b7fae009e <unknown>\nE       #14 0x556b7fd95acb <unknown>\nE       #15 0x556b7fd99a81 <unknown>\nE       #16 0x556b7fd81695 <unknown>\nE       #17 0x556b7fd9a5f2 <unknown>\nE       #18 0x556b7fd6686f <unknown>\nE       #19 0x556b7fdbd668 <unknown>\nE       #20 0x556b7fdbd832 <unknown>\nE       #21 0x556b7fdcd65c <unknown>\nE       #22 0x7fae7fdc2a94 <unknown>\nE       #23 0x7fae7fe4fa34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x556b7fdce86a <unknown>\n#1 0x556b7fa9ce50 <unknown>\n#2 0x556b7faf3346 <unknown>\n#3 0x556b7faf125d <unknown>\n#4 0x556b7faeecf7 <unknown>\n#5 0x556b7faedb9c <unknown>\n#6 0x556b7fae14d6 <unknown>\n#7 0x556b7fb11492 <unknown>\n#8 0x556b7fae0e89 <unknown>\n#9 0x556b7fb1165e <unknown>\n#10 0x556b7fb2f9c6 <unknown>\n#11 0x556b7fb11233 <unknown>\n#12 0x556b7fadf093 <unknown>\n#13 0x556b7fae009e <unknown>\n#14 0x556b7fd95acb <unknown>\n#15 0x556b7fd99a81 <unknown>\n#16 0x556b7fd81695 <unknown>\n#17 0x556b7fd9a5f2 <unknown>\n#18 0x556b7fd6686f <unknown>\n#19 0x556b7fdbd668 <unknown>\n#20 0x556b7fdbd832 <unknown>\n#21 0x556b7fdcd65c <unknown>\n#22 0x7fae7fdc2a94 <unknown>\n#23 0x7fae7fe4fa34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f2ea6d59260>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f2ea6bcb3d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:52: in parse_data\n    click_element(By.LINK_TEXT, \"Find your collection day\")\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:46: in click_element\n    element.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2ea82f8f90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x556b7fdcd65c \\\\u003Cunknown>\\\\n#22 0x7fae7fdc2a94 \\\\u003Cunknown>\\\\n#23 0x7fae7fe4fa34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\nE         (Session info: chrome=128.0.6613.119)\nE       Stacktrace:\nE       #0 0x556b7fdce86a <unknown>\nE       #1 0x556b7fa9ce50 <unknown>\nE       #2 0x556b7faf3346 <unknown>\nE       #3 0x556b7faf125d <unknown>\nE       #4 0x556b7faeecf7 <unknown>\nE       #5 0x556b7faedb9c <unknown>\nE       #6 0x556b7fae14d6 <unknown>\nE       #7 0x556b7fb11492 <unknown>\nE       #8 0x556b7fae0e89 <unknown>\nE       #9 0x556b7fb1165e <unknown>\nE       #10 0x556b7fb2f9c6 <unknown>\nE       #11 0x556b7fb11233 <unknown>\nE       #12 0x556b7fadf093 <unknown>\nE       #13 0x556b7fae009e <unknown>\nE       #14 0x556b7fd95acb <unknown>\nE       #15 0x556b7fd99a81 <unknown>\nE       #16 0x556b7fd81695 <unknown>\nE       #17 0x556b7fd9a5f2 <unknown>\nE       #18 0x556b7fd6686f <unknown>\nE       #19 0x556b7fdbd668 <unknown>\nE       #20 0x556b7fdbd832 <unknown>\nE       #21 0x556b7fdcd65c <unknown>\nE       #22 0x7fae7fdc2a94 <unknown>\nE       #23 0x7fae7fe4fa34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1726012871865,"stop":1726012871866,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1726012871866,"stop":1726012876640,"duration":4774},"status":"failed","statusMessage":"Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x556b7fdce86a <unknown>\n#1 0x556b7fa9ce50 <unknown>\n#2 0x556b7faf3346 <unknown>\n#3 0x556b7faf125d <unknown>\n#4 0x556b7faeecf7 <unknown>\n#5 0x556b7faedb9c <unknown>\n#6 0x556b7fae14d6 <unknown>\n#7 0x556b7fb11492 <unknown>\n#8 0x556b7fae0e89 <unknown>\n#9 0x556b7fb1165e <unknown>\n#10 0x556b7fb2f9c6 <unknown>\n#11 0x556b7fb11233 <unknown>\n#12 0x556b7fadf093 <unknown>\n#13 0x556b7fae009e <unknown>\n#14 0x556b7fd95acb <unknown>\n#15 0x556b7fd99a81 <unknown>\n#16 0x556b7fd81695 <unknown>\n#17 0x556b7fd9a5f2 <unknown>\n#18 0x556b7fd6686f <unknown>\n#19 0x556b7fdbd668 <unknown>\n#20 0x556b7fdbd832 <unknown>\n#21 0x556b7fdcd65c <unknown>\n#22 0x7fae7fdc2a94 <unknown>\n#23 0x7fae7fe4fa34 __clone\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x556b7fdce86a <unknown>\n#1 0x556b7fa9ce50 <unknown>\n#2 0x556b7faf3346 <unknown>\n#3 0x556b7faf125d <unknown>\n#4 0x556b7faeecf7 <unknown>\n#5 0x556b7faedb9c <unknown>\n#6 0x556b7fae14d6 <unknown>\n#7 0x556b7fb11492 <unknown>\n#8 0x556b7fae0e89 <unknown>\n#9 0x556b7fb1165e <unknown>\n#10 0x556b7fb2f9c6 <unknown>\n#11 0x556b7fb11233 <unknown>\n#12 0x556b7fadf093 <unknown>\n#13 0x556b7fae009e <unknown>\n#14 0x556b7fd95acb <unknown>\n#15 0x556b7fd99a81 <unknown>\n#16 0x556b7fd81695 <unknown>\n#17 0x556b7fd9a5f2 <unknown>\n#18 0x556b7fd6686f <unknown>\n#19 0x556b7fdbd668 <unknown>\n#20 0x556b7fdbd832 <unknown>\n#21 0x556b7fdcd65c <unknown>\n#22 0x7fae7fdc2a94 <unknown>\n#23 0x7fae7fe4fa34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c3fb814ca086058","name":"log","source":"c3fb814ca086058.txt","type":"text/plain","size":1357},{"uid":"e33cb089504086c7","name":"stdout","source":"e33cb089504086c7.txt","type":"text/plain","size":56}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az777-136"},{"name":"thread","value":"2751-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CheshireWestAndChesterCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":127,"unknown":0,"total":138},"items":[{"uid":"668aea41f981480d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2109//#testresult/668aea41f981480d","status":"passed","time":{"start":1725954753982,"stop":1725954770370,"duration":16388}},{"uid":"2a830161c7ebc19c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2107//#testresult/2a830161c7ebc19c","status":"passed","time":{"start":1725926488051,"stop":1725926518929,"duration":30878}},{"uid":"4c82b58823ad6f16","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2095//#testresult/4c82b58823ad6f16","status":"passed","time":{"start":1725840091450,"stop":1725840132406,"duration":40956}},{"uid":"8b8186baf89d3b3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2093//#testresult/8b8186baf89d3b3a","status":"passed","time":{"start":1725753677515,"stop":1725753710108,"duration":32593}},{"uid":"3075668a2cd0f059","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2092//#testresult/3075668a2cd0f059","status":"passed","time":{"start":1725667275598,"stop":1725667330641,"duration":55043}},{"uid":"7841b0cd98a12aec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2088//#testresult/7841b0cd98a12aec","status":"passed","time":{"start":1725580872591,"stop":1725580905573,"duration":32982}},{"uid":"354174527fad36b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2086//#testresult/354174527fad36b1","status":"passed","time":{"start":1725568766329,"stop":1725568784278,"duration":17949}},{"uid":"b964576368651c0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2083//#testresult/b964576368651c0a","status":"passed","time":{"start":1725494482801,"stop":1725494503653,"duration":20852}},{"uid":"f4afcfd5bcea9e98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/f4afcfd5bcea9e98","status":"passed","time":{"start":1725429669128,"stop":1725429690614,"duration":21486}},{"uid":"767163fe65da3eab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/767163fe65da3eab","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55c233f4b8da <unknown>\n#1 0x55c233c19e50 <unknown>\n#2 0x55c233c69644 <unknown>\n#3 0x55c233c69931 <unknown>\n#4 0x55c233caf534 <unknown>\n#5 0x55c233c8e4bd <unknown>\n#6 0x55c233cac9c6 <unknown>\n#7 0x55c233c8e233 <unknown>\n#8 0x55c233c5c093 <unknown>\n#9 0x55c233c5d09e <unknown>\n#10 0x55c233f12b3b <unknown>\n#11 0x55c233f16af1 <unknown>\n#12 0x55c233efe705 <unknown>\n#13 0x55c233f17662 <unknown>\n#14 0x55c233ee38df <unknown>\n#15 0x55c233f3a6d8 <unknown>\n#16 0x55c233f3a8a2 <unknown>\n#17 0x55c233f4a6cc <unknown>\n#18 0x7fc5519d6a94 <unknown>\n#19 0x7fc551a63a34 __clone","time":{"start":1725408089801,"stop":1725408161642,"duration":71841}},{"uid":"fec9a951f656053d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2080//#testresult/fec9a951f656053d","status":"passed","time":{"start":1725403279551,"stop":1725403305038,"duration":25487}},{"uid":"a0f59bbae74933d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2073//#testresult/a0f59bbae74933d8","status":"passed","time":{"start":1725384222133,"stop":1725384241101,"duration":18968}},{"uid":"ba4c6eae85758762","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2070//#testresult/ba4c6eae85758762","status":"passed","time":{"start":1725346446641,"stop":1725346467219,"duration":20578}},{"uid":"4eeea2b67518499f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2069//#testresult/4eeea2b67518499f","status":"passed","time":{"start":1725321669220,"stop":1725321712954,"duration":43734}},{"uid":"fc305918e6d75661","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2068//#testresult/fc305918e6d75661","status":"passed","time":{"start":1725315621008,"stop":1725315636954,"duration":15946}},{"uid":"1af20e0224487a78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2066//#testresult/1af20e0224487a78","status":"passed","time":{"start":1725312343582,"stop":1725312365282,"duration":21700}},{"uid":"c25be6f1771a235b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2064//#testresult/c25be6f1771a235b","status":"passed","time":{"start":1725310187222,"stop":1725310208384,"duration":21162}},{"uid":"192dd104123d9923","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2060//#testresult/192dd104123d9923","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=128.0.6613.113)\nStacktrace:\n#0 0x559b60a328da <unknown>\n#1 0x559b60700e50 <unknown>\n#2 0x559b60757346 <unknown>\n#3 0x559b6075525d <unknown>\n#4 0x559b60752cf7 <unknown>\n#5 0x559b60751b9c <unknown>\n#6 0x559b607454d6 <unknown>\n#7 0x559b60775492 <unknown>\n#8 0x559b60744e89 <unknown>\n#9 0x559b6077565e <unknown>\n#10 0x559b607939c6 <unknown>\n#11 0x559b60775233 <unknown>\n#12 0x559b60743093 <unknown>\n#13 0x559b6074409e <unknown>\n#14 0x559b609f9b3b <unknown>\n#15 0x559b609fdaf1 <unknown>\n#16 0x559b609e5705 <unknown>\n#17 0x559b609fe662 <unknown>\n#18 0x559b609ca8df <unknown>\n#19 0x559b60a216d8 <unknown>\n#20 0x559b60a218a2 <unknown>\n#21 0x559b60a316cc <unknown>\n#22 0x7effc7842a94 <unknown>\n#23 0x7effc78cfa34 __clone","time":{"start":1725307444113,"stop":1725307455260,"duration":11147}},{"uid":"8ded12e3cb619f25","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2059//#testresult/8ded12e3cb619f25","status":"passed","time":{"start":1725307303597,"stop":1725307326698,"duration":23101}},{"uid":"964d18ea2385d0d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2054//#testresult/964d18ea2385d0d8","status":"passed","time":{"start":1725235698266,"stop":1725236005065,"duration":306799}}]},"tags":[]},"source":"78fd0eb0a6e65747.json","parameterValues":["CheshireWestAndChesterCouncil"]}