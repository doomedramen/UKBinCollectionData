{"uid":"6d7325b4b88afa03","name":"Validate Council Output [StHelensBC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aefb4666f5cfa7265d9db53c16df38b6","time":{"start":1695206357452,"stop":1695206358064,"duration":612},"status":"failed","statusMessage":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\n_pytest_bdd_example = {'council': 'StHelensBC'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/StHelensBC.py:43: in parse_data\n    collection_date = datetime.strptime(bin_date.get_text(strip=True), \"%a %d %b %Y\")\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Fri 22 Sept 2023', format = '%a %d %b %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\n_pytest_bdd_example = {'council': 'StHelensBC'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/StHelensBC.py:43: in parse_data\n    collection_date = datetime.strptime(bin_date.get_text(strip=True), \"%a %d %b %Y\")\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Fri 22 Sept 2023', format = '%a %d %b %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: StHelensBC","time":{"start":1695206357452,"stop":1695206357453,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from StHelensBC","time":{"start":1695206357453,"stop":1695206358064,"duration":611},"status":"failed","statusMessage":"time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1030-38"},{"name":"thread","value":"2099-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StHelensBC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":75,"broken":0,"skipped":0,"passed":15,"unknown":0,"total":90},"items":[{"uid":"4d63579239d4b6dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/939//#testresult/4d63579239d4b6dd","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1695193846987,"stop":1695193847979,"duration":992}},{"uid":"7224846d475b65c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/937//#testresult/7224846d475b65c8","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1695172655765,"stop":1695172656662,"duration":897}},{"uid":"fec8e8d37d9be895","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/936//#testresult/fec8e8d37d9be895","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1695162149486,"stop":1695162151255,"duration":1769}},{"uid":"5ce761bb59cdd427","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/935//#testresult/5ce761bb59cdd427","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1695160077710,"stop":1695160079322,"duration":1612}},{"uid":"ac053ca4abd14e35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/932//#testresult/ac053ca4abd14e35","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1695157045238,"stop":1695157049523,"duration":4285}},{"uid":"a7cb04f3993b2adb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/930//#testresult/a7cb04f3993b2adb","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1695086319182,"stop":1695086319958,"duration":776}},{"uid":"2b60b7bce587d9cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/929//#testresult/2b60b7bce587d9cb","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694999713284,"stop":1694999721733,"duration":8449}},{"uid":"cbe36e9370c2d770","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/928//#testresult/cbe36e9370c2d770","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694988005687,"stop":1694988006300,"duration":613}},{"uid":"f263ea196da20f12","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/926//#testresult/f263ea196da20f12","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694987760764,"stop":1694987763783,"duration":3019}},{"uid":"8a1d1b4f593e6f94","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/922//#testresult/8a1d1b4f593e6f94","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694971719485,"stop":1694971720365,"duration":880}},{"uid":"2bb7a6b54162d3aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/920//#testresult/2bb7a6b54162d3aa","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694913636762,"stop":1694913644804,"duration":8042}},{"uid":"aee0e82a3eac7f7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/919//#testresult/aee0e82a3eac7f7b","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694892971341,"stop":1694892977095,"duration":5754}},{"uid":"cb8c2dc5341c6c55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/917//#testresult/cb8c2dc5341c6c55","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694889931401,"stop":1694889934424,"duration":3023}},{"uid":"5a2e14229486cd57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/915//#testresult/5a2e14229486cd57","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694864854455,"stop":1694864855535,"duration":1080}},{"uid":"dcb55b112d51da74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/913//#testresult/dcb55b112d51da74","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694840542493,"stop":1694840545670,"duration":3177}},{"uid":"45c1cdf436060ab4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/912//#testresult/45c1cdf436060ab4","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694826886594,"stop":1694826894940,"duration":8346}},{"uid":"ba43ffc2000772db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/910//#testresult/ba43ffc2000772db","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694796963028,"stop":1694796963973,"duration":945}},{"uid":"34e04da0e8c88982","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/906//#testresult/34e04da0e8c88982","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694740626614,"stop":1694740634696,"duration":8082}},{"uid":"41b6b44272b4aaef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/905//#testresult/41b6b44272b4aaef","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694654126308,"stop":1694654134326,"duration":8018}},{"uid":"e356e6df251841ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/904//#testresult/e356e6df251841ba","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='secure.sthelens.net', port=443): Max retries exceeded with url: /website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672 (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1006)')))","time":{"start":1694567940597,"stop":1694567941173,"duration":576}}]},"tags":[]},"source":"6d7325b4b88afa03.json","parameterValues":["StHelensBC"]}