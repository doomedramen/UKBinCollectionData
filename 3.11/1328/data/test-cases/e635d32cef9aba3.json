{"uid":"e635d32cef9aba3","name":"Validate Council Output [GlasgowCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"afbda54786d9dbd764f92d2f8c30a5fd","time":{"start":1704050489507,"stop":1704050491753,"duration":2246},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f73bd8ff9c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GlasgowCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f73bcaaec10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f73bcaaec10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f73bd8ff9c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GlasgowCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f73bcaaec10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f73bcaaec10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: GlasgowCityCouncil","time":{"start":1704050489507,"stop":1704050489507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GlasgowCityCouncil using None and the None is set","time":{"start":1704050489507,"stop":1704050491751,"duration":2244},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704050491751,"stop":1704050491751,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704050491751,"stop":1704050491753,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1272-858"},{"name":"thread","value":"2687-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GlasgowCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":96,"unknown":0,"total":108},"items":[{"uid":"b5fc69db642ef7ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1325//#testresult/b5fc69db642ef7ec","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704043873762,"stop":1704043875859,"duration":2097}},{"uid":"54bec7b03b3302ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1320//#testresult/54bec7b03b3302ff","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703985749987,"stop":1703985752362,"duration":2375}},{"uid":"efdd4f586d868689","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1316//#testresult/efdd4f586d868689","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703898908476,"stop":1703898910502,"duration":2026}},{"uid":"14f1032ae97de0d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1314//#testresult/14f1032ae97de0d9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703853461970,"stop":1703853464849,"duration":2879}},{"uid":"674e36c59fa56673","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1311//#testresult/674e36c59fa56673","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703851080207,"stop":1703851082621,"duration":2414}},{"uid":"b08a11df298d6b28","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1309//#testresult/b08a11df298d6b28","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703812021921,"stop":1703812023984,"duration":2063}},{"uid":"f407c7dfc5d389af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1306//#testresult/f407c7dfc5d389af","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703756152068,"stop":1703756154756,"duration":2688}},{"uid":"27be083c015a4df9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1305//#testresult/27be083c015a4df9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703726133084,"stop":1703726135139,"duration":2055}},{"uid":"e733f4ff6dc7ab4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1304//#testresult/e733f4ff6dc7ab4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703717306816,"stop":1703717309019,"duration":2203}},{"uid":"bd75e195c67eb960","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1303//#testresult/bd75e195c67eb960","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703717269344,"stop":1703717271301,"duration":1957}},{"uid":"7bebacc1bf9deaeb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1301//#testresult/7bebacc1bf9deaeb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703639724654,"stop":1703639726616,"duration":1962}},{"uid":"7c5b7c35be8f9721","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1300//#testresult/7c5b7c35be8f9721","status":"passed","time":{"start":1703553314247,"stop":1703553316347,"duration":2100}},{"uid":"5910e0a0dbccf98a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1298//#testresult/5910e0a0dbccf98a","status":"passed","time":{"start":1703541111559,"stop":1703541113552,"duration":1993}},{"uid":"8394a8e614e48cef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1295//#testresult/8394a8e614e48cef","status":"passed","time":{"start":1703467090221,"stop":1703467092288,"duration":2067}},{"uid":"e832e97e7f548aaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1292//#testresult/e832e97e7f548aaf","status":"passed","time":{"start":1703416388939,"stop":1703416391307,"duration":2368}},{"uid":"269748ac84345ffa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1291//#testresult/269748ac84345ffa","status":"passed","time":{"start":1703416352786,"stop":1703416355214,"duration":2428}},{"uid":"262f5f826a3534da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1289//#testresult/262f5f826a3534da","status":"passed","time":{"start":1703381291692,"stop":1703381294125,"duration":2433}},{"uid":"75406a9303cc4278","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1287//#testresult/75406a9303cc4278","status":"passed","time":{"start":1703294125417,"stop":1703294127767,"duration":2350}},{"uid":"43de3f9f99fb34c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1282//#testresult/43de3f9f99fb34c","status":"passed","time":{"start":1703207807692,"stop":1703207810153,"duration":2461}},{"uid":"67ffd19de54ab07b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1281//#testresult/67ffd19de54ab07b","status":"passed","time":{"start":1703121437634,"stop":1703121439767,"duration":2133}}]},"tags":[]},"source":"e635d32cef9aba3.json","parameterValues":["GlasgowCityCouncil","None","None"]}