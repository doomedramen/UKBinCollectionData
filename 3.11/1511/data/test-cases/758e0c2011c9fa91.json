{"uid":"758e0c2011c9fa91","name":"Validate Council Output [CroydonCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"45037cd07f0522bb0563bf59883b0382","time":{"start":1705624037279,"stop":1705624038661,"duration":1382},"status":"failed","statusMessage":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","statusTrace":"fixturefunc = <function scrape_step at 0x7f9c688c8860>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9c68781f50>, 'council': 'CroydonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:255: in parse_data\n    collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = <requests.sessions.Session object at 0x7f9c685c0c90>\nbase_url = 'https://service.croydon.gov.uk'\ncsrf_token = '8f67bde0be200fe20c055c1d963013e68c732af6', address_id = '96383'\n\n    def get_collection_data(\n        s: requests.session, base_url: str, csrf_token: str, address_id: str\n    ) -> str:\n        \"\"\"\n        Gets the collection data\n            :rtype: str\n            :param s: requests.session() to use\n            :param base_url: Base URL to use\n            :param csrf_token: CSRF token to use\n            :param address_id: Address id to use\n            :param retries: Retries count\n            :return: Collection data\n        \"\"\"\n        collection_data = \"\"\n        if address_id != \"0\":\n            form_data = {\n                \"form_check\": csrf_token,\n                \"submitted_page_id\": \"PAG0000898EECEC1\",\n                \"submitted_widget_group_id\": \"PWG0002644EECEC1\",\n                \"submitted_widget_group_type\": \"modify\",\n                \"submission_token\": \"63e9126bacd815.12997577\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020408EECEC1]\": address_id,\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0021449EECEC1]\": \"1\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020072EECEC1]\": \"Next\",\n                \"submit_fragment_id\": \"PCF0020072EECEC1\",\n                \"_session_storage\": json.dumps({\"_global\": get_session_storage_global()}),\n                \"_update_page_content_request\": 1,\n                \"form_check_ajax\": csrf_token,\n            }\n            response = s.post(\n                base_url\n                + \"/wasteservices/w/webpage/bin-day-enter-address?webpage_subpage_id=PAG0000898EECEC1\"\n                \"&webpage_token=faab02e1f62a58f7bad4c2ae5b8622e19846b97dde2a76f546c4bb1230cee044\",\n                headers=get_headers(base_url, \"POST\"),\n                data=form_data,\n            )\n            if response.status_code == 200 and len(response.text) > 0:\n                json_response = json.loads(response.text)\n                form_data = {\n                    \"_dummy\": 1,\n                    \"_session_storage\": json.dumps(\n                        {\"_global\": get_session_storage_global()}\n                    ),\n                    \"_update_page_content_request\": 1,\n                    \"form_check_ajax\": csrf_token,\n                }\n                response = s.post(\n                    base_url + json_response[\"redirect_url\"],\n                    headers=get_headers(base_url, \"POST\"),\n                    data=form_data,\n                )\n                if response.status_code == 200 and len(response.text) > 0:\n                    json_response = json.loads(response.text)\n                    collection_data = json_response[\"data\"]\n                else:\n                    raise ValueError(\"Code 4: Failed to get bin data.\")\n            else:\n>               raise ValueError(\n                    \"Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\"\n                )\nE               ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:228: ValueError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","statusTrace":"fixturefunc = <function scrape_step at 0x7f9c688c8860>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9c68781f50>, 'council': 'CroydonCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:255: in parse_data\n    collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = <requests.sessions.Session object at 0x7f9c685c0c90>\nbase_url = 'https://service.croydon.gov.uk'\ncsrf_token = '8f67bde0be200fe20c055c1d963013e68c732af6', address_id = '96383'\n\n    def get_collection_data(\n        s: requests.session, base_url: str, csrf_token: str, address_id: str\n    ) -> str:\n        \"\"\"\n        Gets the collection data\n            :rtype: str\n            :param s: requests.session() to use\n            :param base_url: Base URL to use\n            :param csrf_token: CSRF token to use\n            :param address_id: Address id to use\n            :param retries: Retries count\n            :return: Collection data\n        \"\"\"\n        collection_data = \"\"\n        if address_id != \"0\":\n            form_data = {\n                \"form_check\": csrf_token,\n                \"submitted_page_id\": \"PAG0000898EECEC1\",\n                \"submitted_widget_group_id\": \"PWG0002644EECEC1\",\n                \"submitted_widget_group_type\": \"modify\",\n                \"submission_token\": \"63e9126bacd815.12997577\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020408EECEC1]\": address_id,\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0021449EECEC1]\": \"1\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020072EECEC1]\": \"Next\",\n                \"submit_fragment_id\": \"PCF0020072EECEC1\",\n                \"_session_storage\": json.dumps({\"_global\": get_session_storage_global()}),\n                \"_update_page_content_request\": 1,\n                \"form_check_ajax\": csrf_token,\n            }\n            response = s.post(\n                base_url\n                + \"/wasteservices/w/webpage/bin-day-enter-address?webpage_subpage_id=PAG0000898EECEC1\"\n                \"&webpage_token=faab02e1f62a58f7bad4c2ae5b8622e19846b97dde2a76f546c4bb1230cee044\",\n                headers=get_headers(base_url, \"POST\"),\n                data=form_data,\n            )\n            if response.status_code == 200 and len(response.text) > 0:\n                json_response = json.loads(response.text)\n                form_data = {\n                    \"_dummy\": 1,\n                    \"_session_storage\": json.dumps(\n                        {\"_global\": get_session_storage_global()}\n                    ),\n                    \"_update_page_content_request\": 1,\n                    \"form_check_ajax\": csrf_token,\n                }\n                response = s.post(\n                    base_url + json_response[\"redirect_url\"],\n                    headers=get_headers(base_url, \"POST\"),\n                    data=form_data,\n                )\n                if response.status_code == 200 and len(response.text) > 0:\n                    json_response = json.loads(response.text)\n                    collection_data = json_response[\"data\"]\n                else:\n                    raise ValueError(\"Code 4: Failed to get bin data.\")\n            else:\n>               raise ValueError(\n                    \"Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\"\n                )\nE               ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:228: ValueError","steps":[{"name":"Given the council: CroydonCouncil","time":{"start":1705624037279,"stop":1705624037279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from CroydonCouncil using None and the None is set","time":{"start":1705624037279,"stop":1705624038661,"duration":1382},"status":"failed","statusMessage":"Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","statusTrace":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az700-666"},{"name":"thread","value":"2725-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":111,"broken":0,"skipped":0,"passed":55,"unknown":0,"total":166},"items":[{"uid":"fe4f866ba99f0d10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/fe4f866ba99f0d10","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1705537610529,"stop":1705537615627,"duration":5098}},{"uid":"1661d34a4d7905f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/1661d34a4d7905f5","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1705451220704,"stop":1705451221974,"duration":1270}},{"uid":"8c99a9a7cbb5384d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1499//#testresult/8c99a9a7cbb5384d","status":"passed","time":{"start":1705364814902,"stop":1705364820016,"duration":5114}},{"uid":"2596d406de0f7cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1492//#testresult/2596d406de0f7cc","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1705295587919,"stop":1705295589560,"duration":1641}},{"uid":"29da70f5fe05f9fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1491//#testresult/29da70f5fe05f9fa","status":"passed","time":{"start":1705295150708,"stop":1705295155248,"duration":4540}},{"uid":"bd97339754bba867","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1490//#testresult/bd97339754bba867","status":"passed","time":{"start":1705278522528,"stop":1705278527799,"duration":5271}},{"uid":"9af031575e0e455e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1485//#testresult/9af031575e0e455e","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1705192189360,"stop":1705192190625,"duration":1265}},{"uid":"183b62dd662d01bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1484//#testresult/183b62dd662d01bb","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1705105652596,"stop":1705105654377,"duration":1781}},{"uid":"7b7c90e502e1292d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1482//#testresult/7b7c90e502e1292d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1705019233229,"stop":1705019238951,"duration":5722}},{"uid":"f142f775beb0f4ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1478//#testresult/f142f775beb0f4ac","status":"passed","time":{"start":1704932822634,"stop":1704932828192,"duration":5558}},{"uid":"f874cdb333f4d363","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1472//#testresult/f874cdb333f4d363","status":"passed","time":{"start":1704846441609,"stop":1704846446618,"duration":5009}},{"uid":"69e5308ee1df8c8d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1456//#testresult/69e5308ee1df8c8d","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704760160332,"stop":1704760161945,"duration":1613}},{"uid":"ccffabeac49d1b0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1452//#testresult/ccffabeac49d1b0a","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704711479685,"stop":1704711480932,"duration":1247}},{"uid":"8f4b7a0a374cd444","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1450//#testresult/8f4b7a0a374cd444","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704710690610,"stop":1704710692035,"duration":1425}},{"uid":"857031551f68d622","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1448//#testresult/857031551f68d622","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704710074630,"stop":1704710076563,"duration":1933}},{"uid":"ff104953ab584b81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1446//#testresult/ff104953ab584b81","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704709553252,"stop":1704709555301,"duration":2049}},{"uid":"cffab528974d2be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1443//#testresult/cffab528974d2be","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704704060627,"stop":1704704062359,"duration":1732}},{"uid":"c5e8b64710627908","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1441//#testresult/c5e8b64710627908","status":"passed","time":{"start":1704673768839,"stop":1704673773711,"duration":4872}},{"uid":"9654c615540a1474","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1426//#testresult/9654c615540a1474","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704615386736,"stop":1704615388095,"duration":1359}},{"uid":"88fad0ed1fdaea3d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1423//#testresult/88fad0ed1fdaea3d","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1704614787808,"stop":1704614789597,"duration":1789}}]},"tags":[]},"source":"758e0c2011c9fa91.json","parameterValues":["CroydonCouncil","None","None"]}