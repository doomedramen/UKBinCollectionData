{"uid":"b9b8bd7fe14cbf33","name":"Validate Council Output [LiverpoolCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"fa4aaa0dd252fd9a79edc6c4503ba92d","time":{"start":1701758639921,"stop":1701758640876,"duration":955},"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f10dfabd440>\nrequest = <FixtureRequest for <Function test_scenario_outline[LiverpoolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f10ccacfed0>, 'council': 'LiverpoolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/LiverpoolCityCouncil.py:39: in parse_data\n    bin_date = datetime.strptime(remove_ordinal_indicator_from_date_string(item.text.strip()),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%A, %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f10dfabd440>\nrequest = <FixtureRequest for <Function test_scenario_outline[LiverpoolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f10ccacfed0>, 'council': 'LiverpoolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/LiverpoolCityCouncil.py:39: in parse_data\n    bin_date = datetime.strptime(remove_ordinal_indicator_from_date_string(item.text.strip()),\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%A, %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: LiverpoolCityCouncil","time":{"start":1701758639921,"stop":1701758639922,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from LiverpoolCityCouncil using None and the None is set","time":{"start":1701758639922,"stop":1701758640876,"duration":954},"status":"failed","statusMessage":"time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az777-246"},{"name":"thread","value":"2737-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LiverpoolCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":43,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":44},"items":[{"uid":"aaf0b8bddd6ed9e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1191//#testresult/aaf0b8bddd6ed9e5","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","time":{"start":1701739283436,"stop":1701739284477,"duration":1041}},{"uid":"7cc8319bed28a2fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1187//#testresult/7cc8319bed28a2fe","status":"passed","time":{"start":1701714454793,"stop":1701714455641,"duration":848}},{"uid":"32a7ecbcd62edcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1184//#testresult/32a7ecbcd62edcd","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701652855071,"stop":1701652855086,"duration":15}},{"uid":"46635787a0efb77b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1183//#testresult/46635787a0efb77b","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701566727223,"stop":1701566727240,"duration":17}},{"uid":"c3bada527ab8c3c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1182//#testresult/c3bada527ab8c3c3","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701479829757,"stop":1701479829806,"duration":49}},{"uid":"5c95c8818d704421","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1179//#testresult/5c95c8818d704421","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701419103998,"stop":1701419104000,"duration":2}},{"uid":"72d5addd635a603a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1181//#testresult/72d5addd635a603a","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701419267451,"stop":1701419267453,"duration":2}},{"uid":"3267a918cae2f839","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1180//#testresult/3267a918cae2f839","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701419150159,"stop":1701419150161,"duration":2}},{"uid":"ab0bf4c84584f0cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1176//#testresult/ab0bf4c84584f0cc","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701418996751,"stop":1701418996759,"duration":8}},{"uid":"d03436d6647b7e71","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1177//#testresult/d03436d6647b7e71","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701419124651,"stop":1701419124659,"duration":8}},{"uid":"7d2609791a3efa38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1175//#testresult/7d2609791a3efa38","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701414471177,"stop":1701414471206,"duration":29}},{"uid":"d2fc89fcc16c9c14","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1173//#testresult/d2fc89fcc16c9c14","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701394085320,"stop":1701394085359,"duration":39}},{"uid":"65cf991448566e08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1169//#testresult/65cf991448566e08","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701353478314,"stop":1701353478357,"duration":43}},{"uid":"c145404e62592f5a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1170//#testresult/c145404e62592f5a","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701353480885,"stop":1701353480921,"duration":36}},{"uid":"2b467942168039ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1163//#testresult/2b467942168039ee","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701307240715,"stop":1701307240717,"duration":2}},{"uid":"c64f4f1c5cf007d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1161//#testresult/c64f4f1c5cf007d0","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701279514544,"stop":1701279514555,"duration":11}},{"uid":"53317de7fe1b74d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1156//#testresult/53317de7fe1b74d9","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701220893135,"stop":1701220893176,"duration":41}},{"uid":"4c00b320659e8345","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1155//#testresult/4c00b320659e8345","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701134504052,"stop":1701134504074,"duration":22}},{"uid":"434fd5449f5d1112","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1152//#testresult/434fd5449f5d1112","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701048108535,"stop":1701048108549,"duration":14}},{"uid":"1828c2635b861438","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1151//#testresult/1828c2635b861438","status":"failed","statusDetails":"ModuleNotFoundError: No module named 'LiverpoolCityCouncil'","time":{"start":1701036280110,"stop":1701036280151,"duration":41}}]},"tags":[]},"source":"b9b8bd7fe14cbf33.json","parameterValues":["LiverpoolCityCouncil","None","None"]}