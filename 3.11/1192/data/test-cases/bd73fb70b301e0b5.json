{"uid":"bd73fb70b301e0b5","name":"Validate Council Output [HuntingdonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c2822894b8c5df9c3b14f6331988dcc1","time":{"start":1701758486423,"stop":1701758487620,"duration":1197},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb3bb78c400>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb3abd6f690>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb3abd6f690>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb3bb78c400>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb3abd6f690>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb3abd6f690>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: HuntingdonDistrictCouncil","time":{"start":1701758486423,"stop":1701758486423,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from HuntingdonDistrictCouncil using None and the None is set","time":{"start":1701758486423,"stop":1701758487617,"duration":1194},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701758487618,"stop":1701758487618,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701758487618,"stop":1701758487620,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az885-371"},{"name":"thread","value":"2820-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"HuntingdonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":50,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":50},"items":[{"uid":"85e283bb403c4319","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1191//#testresult/85e283bb403c4319","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701739158044,"stop":1701739159179,"duration":1135}},{"uid":"29ca9f5b0c37858d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1187//#testresult/29ca9f5b0c37858d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701714329301,"stop":1701714330378,"duration":1077}},{"uid":"f8d6ba5cb9e191e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1184//#testresult/f8d6ba5cb9e191e3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701652728221,"stop":1701652729333,"duration":1112}},{"uid":"84b58193b34b07b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1183//#testresult/84b58193b34b07b2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701566538651,"stop":1701566540399,"duration":1748}},{"uid":"384d136451206da2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1182//#testresult/384d136451206da2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701479702183,"stop":1701479703344,"duration":1161}},{"uid":"4cb8fdd77c740059","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1179//#testresult/4cb8fdd77c740059","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418959356,"stop":1701418960561,"duration":1205}},{"uid":"cdf1e8c5d0164536","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1181//#testresult/cdf1e8c5d0164536","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701419075555,"stop":1701419077298,"duration":1743}},{"uid":"8571bbed4019fa45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1180//#testresult/8571bbed4019fa45","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701419023551,"stop":1701419024750,"duration":1199}},{"uid":"4d0428f03599beb5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1176//#testresult/4d0428f03599beb5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418875057,"stop":1701418876110,"duration":1053}},{"uid":"b631a06955bc88ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1177//#testresult/b631a06955bc88ed","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418914957,"stop":1701418916641,"duration":1684}},{"uid":"91225c9dc36221f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1175//#testresult/91225c9dc36221f9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701414327425,"stop":1701414328642,"duration":1217}},{"uid":"858fe66c2e77d603","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1173//#testresult/858fe66c2e77d603","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701393889717,"stop":1701393891409,"duration":1692}},{"uid":"769b28d79da690bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1169//#testresult/769b28d79da690bd","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701353330169,"stop":1701353331524,"duration":1355}},{"uid":"1189dd3b32ffa4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1170//#testresult/1189dd3b32ffa4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701353355495,"stop":1701353356553,"duration":1058}},{"uid":"12a067c93f6f2738","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1163//#testresult/12a067c93f6f2738","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701307090348,"stop":1701307091724,"duration":1376}},{"uid":"7c5f28eca8f14a39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1161//#testresult/7c5f28eca8f14a39","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701279307555,"stop":1701279309325,"duration":1770}},{"uid":"76359a42bd642362","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1156//#testresult/76359a42bd642362","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701220738029,"stop":1701220739259,"duration":1230}},{"uid":"b9ba1936e74d6750","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1155//#testresult/b9ba1936e74d6750","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701134347799,"stop":1701134349049,"duration":1250}},{"uid":"ac60e30a49cf00f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1152//#testresult/ac60e30a49cf00f9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701047919848,"stop":1701047921397,"duration":1549}},{"uid":"6dedfb95e6d6dba3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1151//#testresult/6dedfb95e6d6dba3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036155180,"stop":1701036156288,"duration":1108}}]},"tags":[]},"source":"bd73fb70b301e0b5.json","parameterValues":["HuntingdonDistrictCouncil","None","None"]}