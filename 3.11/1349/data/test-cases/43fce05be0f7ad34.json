{"uid":"43fce05be0f7ad34","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1704244624563,"stop":1704244639040,"duration":14477},"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f81a5fe9e40>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f81a5e23190>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:113: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f81a5fe9e40>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f81a5e23190>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:113: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1704244624563,"stop":1704244624564,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1704244624564,"stop":1704244639040,"duration":14476},"status":"failed","statusMessage":"time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"ValueError: time data 'Being collected today' does not match format '%A %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1498-860"},{"name":"thread","value":"2681-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":23,"unknown":0,"total":31},"items":[{"uid":"53b7227285a57567","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1348//#testresult/53b7227285a57567","status":"passed","time":{"start":1704180199538,"stop":1704180220267,"duration":20729}},{"uid":"e8006003e1ed035f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1346//#testresult/e8006003e1ed035f","status":"passed","time":{"start":1704158220168,"stop":1704158243939,"duration":23771}},{"uid":"11b60b6ddc2e8014","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1345//#testresult/11b60b6ddc2e8014","status":"passed","time":{"start":1704114596888,"stop":1704114613229,"duration":16341}},{"uid":"6d5e4f28614b7efa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1343//#testresult/6d5e4f28614b7efa","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55fe89603f83 <unknown>\n#1 0x55fe892bcb2b <unknown>\n#2 0x55fe89305eff <unknown>\n#3 0x55fe893041a0 <unknown>\n#4 0x55fe893360b2 <unknown>\n#5 0x55fe892ffb49 <unknown>\n#6 0x55fe893364ce <unknown>\n#7 0x55fe89355006 <unknown>\n#8 0x55fe89335e53 <unknown>\n#9 0x55fe892fddd4 <unknown>\n#10 0x55fe892ff1de <unknown>\n#11 0x55fe895c8531 <unknown>\n#12 0x55fe895cc455 <unknown>\n#13 0x55fe895b4f55 <unknown>\n#14 0x55fe895cd0ef <unknown>\n#15 0x55fe8959899f <unknown>\n#16 0x55fe895f1008 <unknown>\n#17 0x55fe895f11d7 <unknown>\n#18 0x55fe89603124 <unknown>\n#19 0x7f644fa94ac3 <unknown>","time":{"start":1704113693009,"stop":1704113707260,"duration":14251}},{"uid":"689212ec71e1a9a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1342//#testresult/689212ec71e1a9a4","status":"passed","time":{"start":1704113650434,"stop":1704113667504,"duration":17070}},{"uid":"b2a4f6fd3b3d19da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1341//#testresult/b2a4f6fd3b3d19da","status":"passed","time":{"start":1704112220366,"stop":1704112235743,"duration":15377}},{"uid":"17caa5c7c1056eaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1339//#testresult/17caa5c7c1056eaf","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55a59b790f83 <unknown>\n#1 0x55a59b449cf7 <unknown>\n#2 0x55a59b49999e <unknown>\n#3 0x55a59b499aa1 <unknown>\n#4 0x55a59b4e4d64 <unknown>\n#5 0x55a59b4c30dd <unknown>\n#6 0x55a59b4e2006 <unknown>\n#7 0x55a59b4c2e53 <unknown>\n#8 0x55a59b48add4 <unknown>\n#9 0x55a59b48c1de <unknown>\n#10 0x55a59b755531 <unknown>\n#11 0x55a59b759455 <unknown>\n#12 0x55a59b741f55 <unknown>\n#13 0x55a59b75a0ef <unknown>\n#14 0x55a59b72599f <unknown>\n#15 0x55a59b77e008 <unknown>\n#16 0x55a59b77e1d7 <unknown>\n#17 0x55a59b790124 <unknown>\n#18 0x7fb8c9494ac3 <unknown>","time":{"start":1704112076651,"stop":1704112149056,"duration":72405}},{"uid":"fb23147925b48027","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1336//#testresult/fb23147925b48027","status":"passed","time":{"start":1704111818876,"stop":1704111848987,"duration":30111}},{"uid":"8c96348a9bd49d72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1337//#testresult/8c96348a9bd49d72","status":"passed","time":{"start":1704111838766,"stop":1704111855499,"duration":16733}},{"uid":"11f5ddf69dfd82ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1335//#testresult/11f5ddf69dfd82ec","status":"passed","time":{"start":1704111483557,"stop":1704111500664,"duration":17107}},{"uid":"c68f91a3356396e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1332//#testresult/c68f91a3356396e5","status":"passed","time":{"start":1704111317358,"stop":1704111339887,"duration":22529}},{"uid":"c23784162f3eca85","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1330//#testresult/c23784162f3eca85","status":"passed","time":{"start":1704099921012,"stop":1704099940790,"duration":19778}},{"uid":"c06fbef8860fe8a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1329//#testresult/c06fbef8860fe8a7","status":"passed","time":{"start":1704072225288,"stop":1704072244649,"duration":19361}},{"uid":"43ec6bec090061e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1327//#testresult/43ec6bec090061e4","status":"passed","time":{"start":1704050362856,"stop":1704050384359,"duration":21503}},{"uid":"31e65935ba5c9c52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1325//#testresult/31e65935ba5c9c52","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5643dc32cf83 <unknown>\n#1 0x5643dbfe5cf7 <unknown>\n#2 0x5643dc03599e <unknown>\n#3 0x5643dc035aa1 <unknown>\n#4 0x5643dc080d64 <unknown>\n#5 0x5643dc05f0dd <unknown>\n#6 0x5643dc07e006 <unknown>\n#7 0x5643dc05ee53 <unknown>\n#8 0x5643dc026dd4 <unknown>\n#9 0x5643dc0281de <unknown>\n#10 0x5643dc2f1531 <unknown>\n#11 0x5643dc2f5455 <unknown>\n#12 0x5643dc2ddf55 <unknown>\n#13 0x5643dc2f60ef <unknown>\n#14 0x5643dc2c199f <unknown>\n#15 0x5643dc31a008 <unknown>\n#16 0x5643dc31a1d7 <unknown>\n#17 0x5643dc32c124 <unknown>\n#18 0x7f3c7a294ac3 <unknown>","time":{"start":1704043846967,"stop":1704043921168,"duration":74201}},{"uid":"f4ec96dd2ece9989","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1320//#testresult/f4ec96dd2ece9989","status":"passed","time":{"start":1703985727701,"stop":1703985746766,"duration":19065}},{"uid":"21d14a63ace840d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1316//#testresult/21d14a63ace840d4","status":"passed","time":{"start":1703898883818,"stop":1703898902200,"duration":18382}},{"uid":"c1639045bc380446","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1314//#testresult/c1639045bc380446","status":"passed","time":{"start":1703853436289,"stop":1703853457137,"duration":20848}},{"uid":"3f8a8d1fbc7d6820","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1311//#testresult/3f8a8d1fbc7d6820","status":"passed","time":{"start":1703851051893,"stop":1703851069811,"duration":17918}},{"uid":"f246996eb53bdc62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1309//#testresult/f246996eb53bdc62","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55d81b894f83 <unknown>\n#1 0x55d81b54db2b <unknown>\n#2 0x55d81b596eff <unknown>\n#3 0x55d81b5951a0 <unknown>\n#4 0x55d81b5c70b2 <unknown>\n#5 0x55d81b590b49 <unknown>\n#6 0x55d81b5c74ce <unknown>\n#7 0x55d81b5e6006 <unknown>\n#8 0x55d81b5c6e53 <unknown>\n#9 0x55d81b58edd4 <unknown>\n#10 0x55d81b5901de <unknown>\n#11 0x55d81b859531 <unknown>\n#12 0x55d81b85d455 <unknown>\n#13 0x55d81b845f55 <unknown>\n#14 0x55d81b85e0ef <unknown>\n#15 0x55d81b82999f <unknown>\n#16 0x55d81b882008 <unknown>\n#17 0x55d81b8821d7 <unknown>\n#18 0x55d81b894124 <unknown>\n#19 0x7f85d8094ac3 <unknown>","time":{"start":1703811998883,"stop":1703812016853,"duration":17970}}]},"tags":[]},"source":"43fce05be0f7ad34.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}