{"uid":"85e143a08a7a548b","name":"Validate Council Output [SalfordCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"46bdc81110002bd93542f111d9af2812","time":{"start":1698178620664,"stop":1698178623709,"duration":3045},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7ff6268a72e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SalfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff619171a50>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7ff619171a50>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7ff6268a72e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SalfordCityCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff619171a50>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7ff619171a50>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","steps":[{"name":"Given the council: SalfordCityCouncil","time":{"start":1698178620665,"stop":1698178620665,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from SalfordCityCouncil","time":{"start":1698178620666,"stop":1698178623704,"duration":3038},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698178623704,"stop":1698178623704,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698178623704,"stop":1698178623709,"duration":5},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az262-182"},{"name":"thread","value":"2131-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SalfordCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":140,"unknown":0,"total":151},"items":[{"uid":"b1b9c61942456a38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1047//#testresult/b1b9c61942456a38","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178335083,"stop":1698178337632,"duration":2549}},{"uid":"1339d16d31247f56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1046//#testresult/1339d16d31247f56","status":"passed","time":{"start":1698110420955,"stop":1698110423138,"duration":2183}},{"uid":"bd7b9aa8ca07c0e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1044//#testresult/bd7b9aa8ca07c0e7","status":"passed","time":{"start":1698065050428,"stop":1698065054308,"duration":3880}},{"uid":"b68977ffa3b8f58e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1042//#testresult/b68977ffa3b8f58e","status":"passed","time":{"start":1698023955478,"stop":1698023958450,"duration":2972}},{"uid":"f4a98767997478a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1040//#testresult/f4a98767997478a7","status":"passed","time":{"start":1697937804399,"stop":1697937806958,"duration":2559}},{"uid":"6b3913b25125a766","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1039//#testresult/6b3913b25125a766","status":"passed","time":{"start":1697850988827,"stop":1697850990932,"duration":2105}},{"uid":"a8f997e3db0030b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1037//#testresult/a8f997e3db0030b6","status":"passed","time":{"start":1697790449042,"stop":1697790451797,"duration":2755}},{"uid":"81fcfa893d27fd55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1034//#testresult/81fcfa893d27fd55","status":"passed","time":{"start":1697764552637,"stop":1697764554940,"duration":2303}},{"uid":"d5d782cbe56c7e07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1033//#testresult/d5d782cbe56c7e07","status":"passed","time":{"start":1697706678765,"stop":1697706681425,"duration":2660}},{"uid":"12cfa85af3e1913e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1032//#testresult/12cfa85af3e1913e","status":"passed","time":{"start":1697706625698,"stop":1697706627894,"duration":2196}},{"uid":"faafdd541ef734fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1030//#testresult/faafdd541ef734fb","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","time":{"start":1697702045718,"stop":1697702045719,"duration":1}},{"uid":"fcb1c81c9221b679","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/fcb1c81c9221b679","status":"passed","time":{"start":1697696353057,"stop":1697696355910,"duration":2853}},{"uid":"1e22d824f5f24f23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/1e22d824f5f24f23","status":"passed","time":{"start":1697678349938,"stop":1697678352280,"duration":2342}},{"uid":"c9a1b4870eefdf8e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/c9a1b4870eefdf8e","status":"passed","time":{"start":1697666726275,"stop":1697666727881,"duration":1606}},{"uid":"f685dadfd0e900ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/f685dadfd0e900ac","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1697657022083,"stop":1697657027552,"duration":5469}},{"uid":"3b0084983a39f4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/3b0084983a39f4b","status":"passed","time":{"start":1697650207493,"stop":1697650211347,"duration":3854}},{"uid":"3c60c218b5fd59cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/3c60c218b5fd59cf","status":"passed","time":{"start":1697618475068,"stop":1697618478943,"duration":3875}},{"uid":"e44f460f70b52578","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/e44f460f70b52578","status":"passed","time":{"start":1697591924373,"stop":1697591926372,"duration":1999}},{"uid":"d479e23234e45377","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/d479e23234e45377","status":"passed","time":{"start":1697542748503,"stop":1697542751377,"duration":2874}},{"uid":"e534d3da185f7b96","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/e534d3da185f7b96","status":"passed","time":{"start":1697505546669,"stop":1697505549496,"duration":2827}}]},"tags":[]},"source":"85e143a08a7a548b.json","parameterValues":["SalfordCityCouncil"]}