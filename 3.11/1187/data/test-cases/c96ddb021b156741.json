{"uid":"c96ddb021b156741","name":"Validate Council Output [TorridgeDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"da903249529007ec357275ac5f075b6c","time":{"start":1701714456769,"stop":1701714459190,"duration":2421},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb851e1c860>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb83c0c44d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb83c0c44d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb851e1c860>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb83c0c44d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb83c0c44d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1701714456769,"stop":1701714456770,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from TorridgeDistrictCouncil using None and the None is set","time":{"start":1701714456770,"stop":1701714459188,"duration":2418},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701714459189,"stop":1701714459189,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701714459189,"stop":1701714459190,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az529-31"},{"name":"thread","value":"2966-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":34,"unknown":0,"total":48},"items":[{"uid":"79763dca86c04aca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1184//#testresult/79763dca86c04aca","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701652853828,"stop":1701652856542,"duration":2714}},{"uid":"324c1a423bd4525c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1183//#testresult/324c1a423bd4525c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701566727271,"stop":1701566730299,"duration":3028}},{"uid":"7a74686bbb45ba8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1182//#testresult/7a74686bbb45ba8","status":"passed","time":{"start":1701479972759,"stop":1701479975448,"duration":2689}},{"uid":"84c6e400380c548","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1179//#testresult/84c6e400380c548","status":"passed","time":{"start":1701419105252,"stop":1701419110443,"duration":5191}},{"uid":"3b5ce8e9ccdd51ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1181//#testresult/3b5ce8e9ccdd51ea","status":"passed","time":{"start":1701419154566,"stop":1701419157374,"duration":2808}},{"uid":"89a70e330a6d98c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1180//#testresult/89a70e330a6d98c6","status":"passed","time":{"start":1701419107249,"stop":1701419111561,"duration":4312}},{"uid":"7c5d4faf5f7ea8df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1176//#testresult/7c5d4faf5f7ea8df","status":"passed","time":{"start":1701418998379,"stop":1701419003016,"duration":4637}},{"uid":"e26314eb80081f17","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1177//#testresult/e26314eb80081f17","status":"passed","time":{"start":1701419006781,"stop":1701419009476,"duration":2695}},{"uid":"7521b6f997a5da09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1175//#testresult/7521b6f997a5da09","status":"passed","time":{"start":1701414409133,"stop":1701414411486,"duration":2353}},{"uid":"272cbb80a555fbde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1173//#testresult/272cbb80a555fbde","status":"passed","time":{"start":1701394086918,"stop":1701394089837,"duration":2919}},{"uid":"6ce6d667e96a8654","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1169//#testresult/6ce6d667e96a8654","status":"passed","time":{"start":1701353410715,"stop":1701353413157,"duration":2442}},{"uid":"c6d93aa200cfb9a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1170//#testresult/c6d93aa200cfb9a2","status":"passed","time":{"start":1701353482248,"stop":1701353484859,"duration":2611}},{"uid":"57dba7283464a56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1163//#testresult/57dba7283464a56","status":"passed","time":{"start":1701307169053,"stop":1701307171628,"duration":2575}},{"uid":"32abec5437e10bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1161//#testresult/32abec5437e10bc","status":"passed","time":{"start":1701279423210,"stop":1701279426000,"duration":2790}},{"uid":"6196be814300c8ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1156//#testresult/6196be814300c8ed","status":"passed","time":{"start":1701220828630,"stop":1701220831479,"duration":2849}},{"uid":"3867d443a9593c05","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1155//#testresult/3867d443a9593c05","status":"passed","time":{"start":1701134560863,"stop":1701134563740,"duration":2877}},{"uid":"5c1253d135a899a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1152//#testresult/5c1253d135a899a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701048108583,"stop":1701048111537,"duration":2954}},{"uid":"2d4d5b08617244e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1151//#testresult/2d4d5b08617244e9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036410572,"stop":1701036413236,"duration":2664}},{"uid":"84c352e7ef323edf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1150//#testresult/84c352e7ef323edf","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036341299,"stop":1701036343869,"duration":2570}},{"uid":"468cebcfaa8ede92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1148//#testresult/468cebcfaa8ede92","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700961981562,"stop":1700961984345,"duration":2783}}]},"tags":[]},"source":"c96ddb021b156741.json","parameterValues":["TorridgeDistrictCouncil","None","None"]}