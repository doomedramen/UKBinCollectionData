{"uid":"6a5199e735904f9e","name":"Validate Council Output [BarnetCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cae1315fb7beebce62becdf5abb57d74","time":{"start":1716251272388,"stop":1716251389534,"duration":117146},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 975)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55a1606a5eca <unknown>\n#1 0x55a16038f45c <unknown>\n#2 0x55a1603e2336 <unknown>\n#3 0x55a1603e0176 <unknown>\n#4 0x55a1603ddb57 <unknown>\n#5 0x55a1603dc97c <unknown>\n#6 0x55a1603d00ff <unknown>\n#7 0x55a1603fe4b2 <unknown>\n#8 0x55a1603cfa79 <unknown>\n#9 0x55a1603fe67e <unknown>\n#10 0x55a16041d2cc <unknown>\n#11 0x55a1603fe253 <unknown>\n#12 0x55a1603ce1c7 <unknown>\n#13 0x55a1603ceb3e <unknown>\n#14 0x55a16066c30b <unknown>\n#15 0x55a1606703b7 <unknown>\n#16 0x55a160658e3e <unknown>\n#17 0x55a160670e82 <unknown>\n#18 0x55a16063d7df <unknown>\n#19 0x55a1606951b8 <unknown>\n#20 0x55a16069538b <unknown>\n#21 0x55a1606a4ffc <unknown>\n#22 0x7fc532005ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f2c1bb32340>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2c1b6613d0>, 'council': 'BarnetCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:91: in parse_data\n    find_address_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2c1b665490>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55a16069538b \\\\u003Cunknown>\\\\n#21 0x55a1606a4ffc \\\\u003Cunknown>\\\\n#22 0x7fc532005ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 975)\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x55a1606a5eca <unknown>\nE       #1 0x55a16038f45c <unknown>\nE       #2 0x55a1603e2336 <unknown>\nE       #3 0x55a1603e0176 <unknown>\nE       #4 0x55a1603ddb57 <unknown>\nE       #5 0x55a1603dc97c <unknown>\nE       #6 0x55a1603d00ff <unknown>\nE       #7 0x55a1603fe4b2 <unknown>\nE       #8 0x55a1603cfa79 <unknown>\nE       #9 0x55a1603fe67e <unknown>\nE       #10 0x55a16041d2cc <unknown>\nE       #11 0x55a1603fe253 <unknown>\nE       #12 0x55a1603ce1c7 <unknown>\nE       #13 0x55a1603ceb3e <unknown>\nE       #14 0x55a16066c30b <unknown>\nE       #15 0x55a1606703b7 <unknown>\nE       #16 0x55a160658e3e <unknown>\nE       #17 0x55a160670e82 <unknown>\nE       #18 0x55a16063d7df <unknown>\nE       #19 0x55a1606951b8 <unknown>\nE       #20 0x55a16069538b <unknown>\nE       #21 0x55a1606a4ffc <unknown>\nE       #22 0x7fc532005ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 975)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55a1606a5eca <unknown>\n#1 0x55a16038f45c <unknown>\n#2 0x55a1603e2336 <unknown>\n#3 0x55a1603e0176 <unknown>\n#4 0x55a1603ddb57 <unknown>\n#5 0x55a1603dc97c <unknown>\n#6 0x55a1603d00ff <unknown>\n#7 0x55a1603fe4b2 <unknown>\n#8 0x55a1603cfa79 <unknown>\n#9 0x55a1603fe67e <unknown>\n#10 0x55a16041d2cc <unknown>\n#11 0x55a1603fe253 <unknown>\n#12 0x55a1603ce1c7 <unknown>\n#13 0x55a1603ceb3e <unknown>\n#14 0x55a16066c30b <unknown>\n#15 0x55a1606703b7 <unknown>\n#16 0x55a160658e3e <unknown>\n#17 0x55a160670e82 <unknown>\n#18 0x55a16063d7df <unknown>\n#19 0x55a1606951b8 <unknown>\n#20 0x55a16069538b <unknown>\n#21 0x55a1606a4ffc <unknown>\n#22 0x7fc532005ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f2c1bb32340>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2c1b6613d0>, 'council': 'BarnetCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:91: in parse_data\n    find_address_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2c1b665490>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55a16069538b \\\\u003Cunknown>\\\\n#21 0x55a1606a4ffc \\\\u003Cunknown>\\\\n#22 0x7fc532005ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 975)\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x55a1606a5eca <unknown>\nE       #1 0x55a16038f45c <unknown>\nE       #2 0x55a1603e2336 <unknown>\nE       #3 0x55a1603e0176 <unknown>\nE       #4 0x55a1603ddb57 <unknown>\nE       #5 0x55a1603dc97c <unknown>\nE       #6 0x55a1603d00ff <unknown>\nE       #7 0x55a1603fe4b2 <unknown>\nE       #8 0x55a1603cfa79 <unknown>\nE       #9 0x55a1603fe67e <unknown>\nE       #10 0x55a16041d2cc <unknown>\nE       #11 0x55a1603fe253 <unknown>\nE       #12 0x55a1603ce1c7 <unknown>\nE       #13 0x55a1603ceb3e <unknown>\nE       #14 0x55a16066c30b <unknown>\nE       #15 0x55a1606703b7 <unknown>\nE       #16 0x55a160658e3e <unknown>\nE       #17 0x55a160670e82 <unknown>\nE       #18 0x55a16063d7df <unknown>\nE       #19 0x55a1606951b8 <unknown>\nE       #20 0x55a16069538b <unknown>\nE       #21 0x55a1606a4ffc <unknown>\nE       #22 0x7fc532005ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council: BarnetCouncil","time":{"start":1716251272388,"stop":1716251272388,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BarnetCouncil","time":{"start":1716251272389,"stop":1716251389534,"duration":117145},"status":"failed","statusMessage":"Message: element click intercepted: Element is not clickable at point (69, 975)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55a1606a5eca <unknown>\n#1 0x55a16038f45c <unknown>\n#2 0x55a1603e2336 <unknown>\n#3 0x55a1603e0176 <unknown>\n#4 0x55a1603ddb57 <unknown>\n#5 0x55a1603dc97c <unknown>\n#6 0x55a1603d00ff <unknown>\n#7 0x55a1603fe4b2 <unknown>\n#8 0x55a1603cfa79 <unknown>\n#9 0x55a1603fe67e <unknown>\n#10 0x55a16041d2cc <unknown>\n#11 0x55a1603fe253 <unknown>\n#12 0x55a1603ce1c7 <unknown>\n#13 0x55a1603ceb3e <unknown>\n#14 0x55a16066c30b <unknown>\n#15 0x55a1606703b7 <unknown>\n#16 0x55a160658e3e <unknown>\n#17 0x55a160670e82 <unknown>\n#18 0x55a16063d7df <unknown>\n#19 0x55a1606951b8 <unknown>\n#20 0x55a16069538b <unknown>\n#21 0x55a1606a4ffc <unknown>\n#22 0x7fc532005ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 975)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55a1606a5eca <unknown>\n#1 0x55a16038f45c <unknown>\n#2 0x55a1603e2336 <unknown>\n#3 0x55a1603e0176 <unknown>\n#4 0x55a1603ddb57 <unknown>\n#5 0x55a1603dc97c <unknown>\n#6 0x55a1603d00ff <unknown>\n#7 0x55a1603fe4b2 <unknown>\n#8 0x55a1603cfa79 <unknown>\n#9 0x55a1603fe67e <unknown>\n#10 0x55a16041d2cc <unknown>\n#11 0x55a1603fe253 <unknown>\n#12 0x55a1603ce1c7 <unknown>\n#13 0x55a1603ceb3e <unknown>\n#14 0x55a16066c30b <unknown>\n#15 0x55a1606703b7 <unknown>\n#16 0x55a160658e3e <unknown>\n#17 0x55a160670e82 <unknown>\n#18 0x55a16063d7df <unknown>\n#19 0x55a1606951b8 <unknown>\n#20 0x55a16069538b <unknown>\n#21 0x55a1606a4ffc <unknown>\n#22 0x7fc532005ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"500629e203bdaaed","name":"stdout","source":"500629e203bdaaed.txt","type":"text/plain","size":823}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az914-828"},{"name":"thread","value":"2774-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BarnetCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"3202a299b9982431","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1852//#testresult/3202a299b9982431","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 1536)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x56123915feca <unknown>\n#1 0x561238e4945c <unknown>\n#2 0x561238e9c336 <unknown>\n#3 0x561238e9a176 <unknown>\n#4 0x561238e97b57 <unknown>\n#5 0x561238e9697c <unknown>\n#6 0x561238e8a0ff <unknown>\n#7 0x561238eb84b2 <unknown>\n#8 0x561238e89a79 <unknown>\n#9 0x561238eb867e <unknown>\n#10 0x561238ed72cc <unknown>\n#11 0x561238eb8253 <unknown>\n#12 0x561238e881c7 <unknown>\n#13 0x561238e88b3e <unknown>\n#14 0x56123912630b <unknown>\n#15 0x56123912a3b7 <unknown>\n#16 0x561239112e3e <unknown>\n#17 0x56123912ae82 <unknown>\n#18 0x5612390f77df <unknown>\n#19 0x56123914f1b8 <unknown>\n#20 0x56123914f38b <unknown>\n#21 0x56123915effc <unknown>\n#22 0x7f27622dfac3 <unknown>","time":{"start":1716164881486,"stop":1716164936248,"duration":54762}},{"uid":"2f6120b6c7efc3c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1851//#testresult/2f6120b6c7efc3c2","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 976)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x564f28b62eca <unknown>\n#1 0x564f2884c45c <unknown>\n#2 0x564f2889f336 <unknown>\n#3 0x564f2889d176 <unknown>\n#4 0x564f2889ab57 <unknown>\n#5 0x564f2889997c <unknown>\n#6 0x564f2888d0ff <unknown>\n#7 0x564f288bb4b2 <unknown>\n#8 0x564f2888ca79 <unknown>\n#9 0x564f288bb67e <unknown>\n#10 0x564f288da2cc <unknown>\n#11 0x564f288bb253 <unknown>\n#12 0x564f2888b1c7 <unknown>\n#13 0x564f2888bb3e <unknown>\n#14 0x564f28b2930b <unknown>\n#15 0x564f28b2d3b7 <unknown>\n#16 0x564f28b15e3e <unknown>\n#17 0x564f28b2de82 <unknown>\n#18 0x564f28afa7df <unknown>\n#19 0x564f28b521b8 <unknown>\n#20 0x564f28b5238b <unknown>\n#21 0x564f28b61ffc <unknown>\n#22 0x7fae8b0daac3 <unknown>","time":{"start":1716154917108,"stop":1716154939143,"duration":22035}},{"uid":"e64b1c0bcd95fdee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1849//#testresult/e64b1c0bcd95fdee","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 1536)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x563b341d9eca <unknown>\n#1 0x563b33ec345c <unknown>\n#2 0x563b33f16336 <unknown>\n#3 0x563b33f14176 <unknown>\n#4 0x563b33f11b57 <unknown>\n#5 0x563b33f1097c <unknown>\n#6 0x563b33f040ff <unknown>\n#7 0x563b33f324b2 <unknown>\n#8 0x563b33f03a79 <unknown>\n#9 0x563b33f3267e <unknown>\n#10 0x563b33f512cc <unknown>\n#11 0x563b33f32253 <unknown>\n#12 0x563b33f021c7 <unknown>\n#13 0x563b33f02b3e <unknown>\n#14 0x563b341a030b <unknown>\n#15 0x563b341a43b7 <unknown>\n#16 0x563b3418ce3e <unknown>\n#17 0x563b341a4e82 <unknown>\n#18 0x563b341717df <unknown>\n#19 0x563b341c91b8 <unknown>\n#20 0x563b341c938b <unknown>\n#21 0x563b341d8ffc <unknown>\n#22 0x7f4f580ecac3 <unknown>","time":{"start":1716152412043,"stop":1716152436960,"duration":24917}},{"uid":"d7b5ccd7122930b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1846//#testresult/d7b5ccd7122930b5","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 975)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55fb5f990eca <unknown>\n#1 0x55fb5f67a45c <unknown>\n#2 0x55fb5f6cd336 <unknown>\n#3 0x55fb5f6cb176 <unknown>\n#4 0x55fb5f6c8b57 <unknown>\n#5 0x55fb5f6c797c <unknown>\n#6 0x55fb5f6bb0ff <unknown>\n#7 0x55fb5f6e94b2 <unknown>\n#8 0x55fb5f6baa79 <unknown>\n#9 0x55fb5f6e967e <unknown>\n#10 0x55fb5f7082cc <unknown>\n#11 0x55fb5f6e9253 <unknown>\n#12 0x55fb5f6b91c7 <unknown>\n#13 0x55fb5f6b9b3e <unknown>\n#14 0x55fb5f95730b <unknown>\n#15 0x55fb5f95b3b7 <unknown>\n#16 0x55fb5f943e3e <unknown>\n#17 0x55fb5f95be82 <unknown>\n#18 0x55fb5f9287df <unknown>\n#19 0x55fb5f9801b8 <unknown>\n#20 0x55fb5f98038b <unknown>\n#21 0x55fb5f98fffc <unknown>\n#22 0x7f92cd7eaac3 <unknown>","time":{"start":1716078633492,"stop":1716078745368,"duration":111876}},{"uid":"5148e389efab1eef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1842//#testresult/5148e389efab1eef","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 1536)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x56439bcbeeca <unknown>\n#1 0x56439b9a845c <unknown>\n#2 0x56439b9fb336 <unknown>\n#3 0x56439b9f9176 <unknown>\n#4 0x56439b9f6b57 <unknown>\n#5 0x56439b9f597c <unknown>\n#6 0x56439b9e90ff <unknown>\n#7 0x56439ba174b2 <unknown>\n#8 0x56439b9e8a79 <unknown>\n#9 0x56439ba1767e <unknown>\n#10 0x56439ba362cc <unknown>\n#11 0x56439ba17253 <unknown>\n#12 0x56439b9e71c7 <unknown>\n#13 0x56439b9e7b3e <unknown>\n#14 0x56439bc8530b <unknown>\n#15 0x56439bc893b7 <unknown>\n#16 0x56439bc71e3e <unknown>\n#17 0x56439bc89e82 <unknown>\n#18 0x56439bc567df <unknown>\n#19 0x56439bcae1b8 <unknown>\n#20 0x56439bcae38b <unknown>\n#21 0x56439bcbdffc <unknown>\n#22 0x7f8437b0bac3 <unknown>","time":{"start":1715992047637,"stop":1715992093101,"duration":45464}},{"uid":"4a37190a7915226c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1839//#testresult/4a37190a7915226c","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 976)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x5633cffa9eca <unknown>\n#1 0x5633cfc9345c <unknown>\n#2 0x5633cfce6336 <unknown>\n#3 0x5633cfce4176 <unknown>\n#4 0x5633cfce1b57 <unknown>\n#5 0x5633cfce097c <unknown>\n#6 0x5633cfcd40ff <unknown>\n#7 0x5633cfd024b2 <unknown>\n#8 0x5633cfcd3a79 <unknown>\n#9 0x5633cfd0267e <unknown>\n#10 0x5633cfd212cc <unknown>\n#11 0x5633cfd02253 <unknown>\n#12 0x5633cfcd21c7 <unknown>\n#13 0x5633cfcd2b3e <unknown>\n#14 0x5633cff7030b <unknown>\n#15 0x5633cff743b7 <unknown>\n#16 0x5633cff5ce3e <unknown>\n#17 0x5633cff74e82 <unknown>\n#18 0x5633cff417df <unknown>\n#19 0x5633cff991b8 <unknown>\n#20 0x5633cff9938b <unknown>\n#21 0x5633cffa8ffc <unknown>\n#22 0x7fd42efceac3 <unknown>","time":{"start":1715983189987,"stop":1715983245435,"duration":55448}},{"uid":"47dea24c35f701d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1834//#testresult/47dea24c35f701d5","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (69, 976)\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x559a70284eca <unknown>\n#1 0x559a6ff6e45c <unknown>\n#2 0x559a6ffc1336 <unknown>\n#3 0x559a6ffbf176 <unknown>\n#4 0x559a6ffbcb57 <unknown>\n#5 0x559a6ffbb97c <unknown>\n#6 0x559a6ffaf0ff <unknown>\n#7 0x559a6ffdd4b2 <unknown>\n#8 0x559a6ffaea79 <unknown>\n#9 0x559a6ffdd67e <unknown>\n#10 0x559a6fffc2cc <unknown>\n#11 0x559a6ffdd253 <unknown>\n#12 0x559a6ffad1c7 <unknown>\n#13 0x559a6ffadb3e <unknown>\n#14 0x559a7024b30b <unknown>\n#15 0x559a7024f3b7 <unknown>\n#16 0x559a70237e3e <unknown>\n#17 0x559a7024fe82 <unknown>\n#18 0x559a7021c7df <unknown>\n#19 0x559a702741b8 <unknown>\n#20 0x559a7027438b <unknown>\n#21 0x559a70283ffc <unknown>\n#22 0x7f2f07e79ac3 <unknown>","time":{"start":1715973614872,"stop":1715973663092,"duration":48220}}]},"tags":[]},"source":"6a5199e735904f9e.json","parameterValues":["BarnetCouncil"]}