{"uid":"56bc7e6c97a01171","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1700874967152,"stop":1700874997762,"duration":30610},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f290cf21080>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f28faaa9a10>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f290dcb3f90>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f290cf21080>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f28faaa9a10>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f290dcb3f90>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1700874967152,"stop":1700874967153,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1700874967153,"stop":1700874997762,"duration":30609},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1543-991"},{"name":"thread","value":"2836-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":26,"unknown":0,"total":27},"items":[{"uid":"8b34ae1b2537ccda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1146//#testresult/8b34ae1b2537ccda","status":"passed","time":{"start":1700788603079,"stop":1700788604327,"duration":1248}},{"uid":"7ab7751edb9f839","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1145//#testresult/7ab7751edb9f839","status":"passed","time":{"start":1700702336793,"stop":1700702337763,"duration":970}},{"uid":"dd66d787bfa88f42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1143//#testresult/dd66d787bfa88f42","status":"passed","time":{"start":1700646390523,"stop":1700646391163,"duration":640}},{"uid":"dabdff0353e9d6d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1144//#testresult/dabdff0353e9d6d1","status":"passed","time":{"start":1700646431808,"stop":1700646432668,"duration":860}},{"uid":"61059eb2eb8ff710","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1141//#testresult/61059eb2eb8ff710","status":"passed","time":{"start":1700616081830,"stop":1700616082796,"duration":966}},{"uid":"7db6fe914d8ed1bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1136//#testresult/7db6fe914d8ed1bf","status":"passed","time":{"start":1700529728682,"stop":1700529729659,"duration":977}},{"uid":"43fc46eb3afab5d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1135//#testresult/43fc46eb3afab5d2","status":"passed","time":{"start":1700443214799,"stop":1700443215745,"duration":946}},{"uid":"b8a2d571a8a8b764","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1134//#testresult/b8a2d571a8a8b764","status":"passed","time":{"start":1700357015520,"stop":1700357016273,"duration":753}},{"uid":"6b9b5233deaa1952","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1133//#testresult/6b9b5233deaa1952","status":"passed","time":{"start":1700270288208,"stop":1700270309601,"duration":21393}},{"uid":"5200e3e24481a0b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1132//#testresult/5200e3e24481a0b3","status":"passed","time":{"start":1700183934695,"stop":1700183937037,"duration":2342}},{"uid":"c0fa7474423a56f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1131//#testresult/c0fa7474423a56f2","status":"passed","time":{"start":1700097590298,"stop":1700097591248,"duration":950}},{"uid":"a8625fcf5cf46c1e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1129//#testresult/a8625fcf5cf46c1e","status":"passed","time":{"start":1700011117788,"stop":1700011118674,"duration":886}},{"uid":"e19d17259ba8192b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1128//#testresult/e19d17259ba8192b","status":"passed","time":{"start":1699924755473,"stop":1699924756984,"duration":1511}},{"uid":"9b86cb7c7573f61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1127//#testresult/9b86cb7c7573f61","status":"passed","time":{"start":1699838326944,"stop":1699838328543,"duration":1599}},{"uid":"fdce76852e4f0ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1126//#testresult/fdce76852e4f0ba","status":"passed","time":{"start":1699752091728,"stop":1699752093112,"duration":1384}},{"uid":"398deea8b518c5aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/398deea8b518c5aa","status":"passed","time":{"start":1699669051330,"stop":1699669056258,"duration":4928}},{"uid":"162c101c33327f2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/162c101c33327f2c","status":"passed","time":{"start":1699578966688,"stop":1699578971459,"duration":4771}},{"uid":"989427a7223fe10d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/989427a7223fe10d","status":"passed","time":{"start":1699492657924,"stop":1699492659273,"duration":1349}},{"uid":"c1cffb8f73514ef8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/c1cffb8f73514ef8","status":"passed","time":{"start":1699481386737,"stop":1699481387935,"duration":1198}},{"uid":"cf57124db0b62427","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/cf57124db0b62427","status":"passed","time":{"start":1699481388303,"stop":1699481389043,"duration":740}}]},"tags":[]},"source":"56bc7e6c97a01171.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}