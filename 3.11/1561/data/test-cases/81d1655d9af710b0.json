{"uid":"81d1655d9af710b0","name":"Validate Council Output [MaldonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d7ae259690887cdb3dd06225c666392f","time":{"start":1707870385869,"stop":1707870407385,"duration":21516},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7fd7e7d74220>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd7e7523a10>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7fd7e7353910>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7fd7e7d74220>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd7e7523a10>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7fd7e7353910>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council: MaldonDistrictCouncil","time":{"start":1707870385869,"stop":1707870385869,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MaldonDistrictCouncil using None and the None is set","time":{"start":1707870385869,"stop":1707870407385,"duration":21516},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1016-637"},{"name":"thread","value":"2788-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":186,"unknown":0,"total":195},"items":[{"uid":"b80c9c81264b5ae0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1560//#testresult/b80c9c81264b5ae0","status":"passed","time":{"start":1707784053130,"stop":1707784062563,"duration":9433}},{"uid":"bac6d14b43f19645","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1559//#testresult/bac6d14b43f19645","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1707697666408,"stop":1707697698228,"duration":31820}},{"uid":"9aa753c9ce3d9268","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1556//#testresult/9aa753c9ce3d9268","status":"passed","time":{"start":1707611368657,"stop":1707611372649,"duration":3992}},{"uid":"ed3431258577cce9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1554//#testresult/ed3431258577cce9","status":"passed","time":{"start":1707524766172,"stop":1707524777500,"duration":11328}},{"uid":"c2976456e6d553bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1553//#testresult/c2976456e6d553bb","status":"passed","time":{"start":1707438373654,"stop":1707438382530,"duration":8876}},{"uid":"7c5ff8a5e2e7b2a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1552//#testresult/7c5ff8a5e2e7b2a9","status":"passed","time":{"start":1707352022299,"stop":1707352029557,"duration":7258}},{"uid":"340845c5696b161c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1551//#testresult/340845c5696b161c","status":"passed","time":{"start":1707265577827,"stop":1707265578793,"duration":966}},{"uid":"6124b14a0ee4d8c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1549//#testresult/6124b14a0ee4d8c5","status":"passed","time":{"start":1707179222716,"stop":1707179232864,"duration":10148}},{"uid":"7ff92495597be855","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1548//#testresult/7ff92495597be855","status":"passed","time":{"start":1707092914214,"stop":1707092920243,"duration":6029}},{"uid":"847cbee2b1c13fee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1547//#testresult/847cbee2b1c13fee","status":"passed","time":{"start":1707006591432,"stop":1707006592527,"duration":1095}},{"uid":"fb37e84134fc960b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1545//#testresult/fb37e84134fc960b","status":"passed","time":{"start":1706941914800,"stop":1706941915787,"duration":987}},{"uid":"eaa07998800a0b2d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1544//#testresult/eaa07998800a0b2d","status":"passed","time":{"start":1706939005845,"stop":1706939006859,"duration":1014}},{"uid":"76fbc47abc0f1861","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1542//#testresult/76fbc47abc0f1861","status":"passed","time":{"start":1706938506983,"stop":1706938519339,"duration":12356}},{"uid":"2b89877abc62b8e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1541//#testresult/2b89877abc62b8e4","status":"passed","time":{"start":1706920058180,"stop":1706920061193,"duration":3013}},{"uid":"d63030b41cf15209","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1540//#testresult/d63030b41cf15209","status":"passed","time":{"start":1706833608379,"stop":1706833618557,"duration":10178}},{"uid":"67b6f463776a90e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1538//#testresult/67b6f463776a90e3","status":"passed","time":{"start":1706747294399,"stop":1706747303331,"duration":8932}},{"uid":"dbb452188e5e25ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1537//#testresult/dbb452188e5e25ed","status":"passed","time":{"start":1706660866267,"stop":1706660870359,"duration":4092}},{"uid":"af4f4f8dd304b846","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1535//#testresult/af4f4f8dd304b846","status":"passed","time":{"start":1706574395086,"stop":1706574402735,"duration":7649}},{"uid":"f5b2fe61ea343bfc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1534//#testresult/f5b2fe61ea343bfc","status":"passed","time":{"start":1706488096318,"stop":1706488097542,"duration":1224}},{"uid":"8f21f268f86860f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1531//#testresult/8f21f268f86860f0","status":"passed","time":{"start":1706401752729,"stop":1706401764239,"duration":11510}}]},"tags":[]},"source":"81d1655d9af710b0.json","parameterValues":["MaldonDistrictCouncil","None","None"]}