{"uid":"dbde59ac6019e700","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1701652729357,"stop":1701652730327,"duration":970},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f76ac370400>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f76986c5190>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f76986c5190>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f76ac370400>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f76986c5190>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f76986c5190>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1701652729357,"stop":1701652729357,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1701652729358,"stop":1701652730325,"duration":967},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701652730325,"stop":1701652730326,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701652730326,"stop":1701652730327,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1498-239"},{"name":"thread","value":"2754-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":37,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":47},"items":[{"uid":"620ada5b7550464a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1183//#testresult/620ada5b7550464a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701566540421,"stop":1701566541263,"duration":842}},{"uid":"766fe793ac3d1fd6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1182//#testresult/766fe793ac3d1fd6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701479703366,"stop":1701479704086,"duration":720}},{"uid":"93f6757abf7fca20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1179//#testresult/93f6757abf7fca20","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418960595,"stop":1701418961303,"duration":708}},{"uid":"208d7b7f84732a11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1181//#testresult/208d7b7f84732a11","status":"passed","time":{"start":1701419077319,"stop":1701419079193,"duration":1874}},{"uid":"e793da52a6dc0b14","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1180//#testresult/e793da52a6dc0b14","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701419024772,"stop":1701419026180,"duration":1408}},{"uid":"8c6cd3d0e9b373b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1176//#testresult/8c6cd3d0e9b373b2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418876192,"stop":1701418877025,"duration":833}},{"uid":"5c255882f0a263e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1177//#testresult/5c255882f0a263e2","status":"passed","time":{"start":1701418916663,"stop":1701418918493,"duration":1830}},{"uid":"2118133f7c746071","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1175//#testresult/2118133f7c746071","status":"passed","time":{"start":1701414328664,"stop":1701414330388,"duration":1724}},{"uid":"e0e866468db3339e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1173//#testresult/e0e866468db3339e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701393891431,"stop":1701393892312,"duration":881}},{"uid":"38bab6f5969918f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1169//#testresult/38bab6f5969918f0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701353331547,"stop":1701353332260,"duration":713}},{"uid":"20b93378a7bdd0b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1170//#testresult/20b93378a7bdd0b7","status":"passed","time":{"start":1701353356583,"stop":1701353358032,"duration":1449}},{"uid":"704be0c9582b56e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1163//#testresult/704be0c9582b56e0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701307091747,"stop":1701307092406,"duration":659}},{"uid":"42dad3a77253bf9a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1161//#testresult/42dad3a77253bf9a","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 29 November\\n              \\n              (In progress) 2023' does not match format '%A, %d %B %Y'","time":{"start":1701279309356,"stop":1701279314010,"duration":4654}},{"uid":"ef887cf0f5aaa85a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1156//#testresult/ef887cf0f5aaa85a","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 29 November\\n              \\n              (In progress) 2023' does not match format '%A, %d %B %Y'","time":{"start":1701220739292,"stop":1701220741015,"duration":1723}},{"uid":"bd9ce8c72d988069","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1155//#testresult/bd9ce8c72d988069","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701134349080,"stop":1701134349721,"duration":641}},{"uid":"a6581e086f206939","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1152//#testresult/a6581e086f206939","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701047921420,"stop":1701047922384,"duration":964}},{"uid":"83839edf34850f06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1151//#testresult/83839edf34850f06","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036156310,"stop":1701036156861,"duration":551}},{"uid":"d0efb57fd93480f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1150//#testresult/d0efb57fd93480f8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036122161,"stop":1701036123190,"duration":1029}},{"uid":"739a93d9ffb69862","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1148//#testresult/739a93d9ffb69862","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700961722523,"stop":1700961723093,"duration":570}},{"uid":"227bbe946fbc304a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1147//#testresult/227bbe946fbc304a","status":"passed","time":{"start":1700874902410,"stop":1700874904039,"duration":1629}}]},"tags":[]},"source":"dbde59ac6019e700.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}