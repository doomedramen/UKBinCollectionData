{"uid":"7826eab619003d4c","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1704398758495,"stop":1704398759131,"duration":636},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f6191661440>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f61915ec2d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f61915ec2d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f6191661440>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f61915ec2d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f61915ec2d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1704398758495,"stop":1704398758496,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1704398758496,"stop":1704398759129,"duration":633},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704398759129,"stop":1704398759129,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704398759130,"stop":1704398759131,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az837-394"},{"name":"thread","value":"2627-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":115,"broken":0,"skipped":0,"passed":17,"unknown":0,"total":132},"items":[{"uid":"2104d028f26a7fcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1373//#testresult/2104d028f26a7fcd","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704388317653,"stop":1704388318803,"duration":1150}},{"uid":"c760280707cdd3cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1369//#testresult/c760280707cdd3cb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704378335980,"stop":1704378336768,"duration":788}},{"uid":"c0b04ffb58c1b20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1367//#testresult/c0b04ffb58c1b20","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704378049613,"stop":1704378050727,"duration":1114}},{"uid":"5c01ae81d17ed976","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1366//#testresult/5c01ae81d17ed976","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704375868193,"stop":1704375868973,"duration":780}},{"uid":"b5fb5c71c3012440","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1363//#testresult/b5fb5c71c3012440","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704356768780,"stop":1704356769793,"duration":1013}},{"uid":"9ab7f7c826d538e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1361//#testresult/9ab7f7c826d538e9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704355949822,"stop":1704355950463,"duration":641}},{"uid":"b27050c8c04e6091","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1359//#testresult/b27050c8c04e6091","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704331101427,"stop":1704331102250,"duration":823}},{"uid":"347b74ac43191ba4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1355//#testresult/347b74ac43191ba4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704303728771,"stop":1704303729701,"duration":930}},{"uid":"82c0217736252c65","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1352//#testresult/82c0217736252c65","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2024' does not match format '%A, %d %B %Y'","time":{"start":1704301406266,"stop":1704301408013,"duration":1747}},{"uid":"affde424658a4327","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1349//#testresult/affde424658a4327","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704244733351,"stop":1704244734118,"duration":767}},{"uid":"f4bb82c714e33436","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1348//#testresult/f4bb82c714e33436","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704180250291,"stop":1704180251207,"duration":916}},{"uid":"c89fad94e32c9aa6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1346//#testresult/c89fad94e32c9aa6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704158286112,"stop":1704158286956,"duration":844}},{"uid":"c7269f7e5bbde079","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1345//#testresult/c7269f7e5bbde079","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704114623352,"stop":1704114624689,"duration":1337}},{"uid":"d98961f046fd9190","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1343//#testresult/d98961f046fd9190","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704113735832,"stop":1704113736736,"duration":904}},{"uid":"831d3b0ac1b23363","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1342//#testresult/831d3b0ac1b23363","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2024' does not match format '%A, %d %B %Y'","time":{"start":1704113672450,"stop":1704113674227,"duration":1777}},{"uid":"c73ee57fdd2ab46d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1341//#testresult/c73ee57fdd2ab46d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112249892,"stop":1704112250514,"duration":622}},{"uid":"cf3dbfa1043763a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1339//#testresult/cf3dbfa1043763a4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112106679,"stop":1704112107554,"duration":875}},{"uid":"918f259deea0772","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1336//#testresult/918f259deea0772","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704111868787,"stop":1704111869660,"duration":873}},{"uid":"19d4475d4bf074c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1337//#testresult/19d4475d4bf074c1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704111868289,"stop":1704111869363,"duration":1074}},{"uid":"27abaaca5fe9d2a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1335//#testresult/27abaaca5fe9d2a1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704111503251,"stop":1704111504028,"duration":777}}]},"tags":[]},"source":"7826eab619003d4c.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}