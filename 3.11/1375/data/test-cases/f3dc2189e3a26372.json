{"uid":"f3dc2189e3a26372","name":"Validate Council Output [BristolCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"12cd5cff5f0b60d5399f518f476399d9","time":{"start":1704398753177,"stop":1704398756083,"duration":2906},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f08e02e56c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BristolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f08e034fad0>, 'council': 'BristolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BristolCityCouncil.CouncilClass object at 0x7f08df9b8910>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '137547', 'url': 'https://bristolcouncil.powerappsportals.com/completedynamicformunauth/?servicetypeid=7dce896c-b3ba-ea11-a812-000d3a7f1cdc', ...}\nuser_uprn = '137547', s = <requests.sessions.Session object at 0x7f08e059bb50>\nservice_type_headers = {'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8', 'Accept-Language': 'en-GB,en;q=0.9', 'Cache-Control': 'max-age=0', 'Connection': 'keep-alive', ...}\nservice_type_params = {'servicetypeid': '7dce896c-b3ba-ea11-a812-000d3a7f1cdc'}\nresponse = <Response [200]>\nllpg_headers = {'Accept': '*/*', 'Accept-Language': 'en-GB,en;q=0.9', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '47ffd667d69c4a858f92fc38dc24b150', ...}\nllpg_uprn = 'UPRN137547'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n    \n        service_type_headers = {\n            \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,\"\n            \"image/webp,image/apng,*/*;q=0.8\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Cache-Control\": \"max-age=0\",\n            \"Connection\": \"keep-alive\",\n            \"Referer\": \"https://www.bristol.gov.uk/\",\n            \"Sec-Fetch-Dest\": \"document\",\n            \"Sec-Fetch-Mode\": \"navigate\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-Fetch-User\": \"?1\",\n            \"Sec-GPC\": \"1\",\n            \"Upgrade-Insecure-Requests\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, \"\n            \"like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        service_type_params = {\n            \"servicetypeid\": \"7dce896c-b3ba-ea11-a812-000d3a7f1cdc\",\n        }\n        response = s.get(\n            \"https://bristolcouncil.powerappsportals.com/completedynamicformunauth/\",\n            params=service_type_params,\n            headers=service_type_headers,\n        )\n    \n        llpg_headers = {\n            \"Accept\": \"*/*\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Connection\": \"keep-alive\",\n            \"Ocp-Apim-Subscription-Key\": \"47ffd667d69c4a858f92fc38dc24b150\",\n            \"Ocp-Apim-Trace\": \"true\",\n            \"Origin\": \"https://bristolcouncil.powerappsportals.com\",\n            \"Referer\": \"https://bristolcouncil.powerappsportals.com/\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, \"\n            \"like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        llpg_uprn = \"UPRN\" + user_uprn\n        llpg_json_data = {\n            \"Uprn\": llpg_uprn,\n        }\n        response = s.post(\n            \"https://bcprdapidyna002.azure-api.net/bcprdfundyna001-llpg/DetailedLLPG\",\n            headers=llpg_headers,\n            json=llpg_json_data,\n        )\n    \n        headers = {\n            \"Accept\": \"*/*\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Connection\": \"keep-alive\",\n            # Already added when you pass json=\n            # 'Content-Type': 'application/json',\n            \"Ocp-Apim-Subscription-Key\": \"47ffd667d69c4a858f92fc38dc24b150\",\n            \"Ocp-Apim-Trace\": \"true\",\n            \"Origin\": \"https://bristolcouncil.powerappsportals.com\",\n            \"Referer\": \"https://bristolcouncil.powerappsportals.com/\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        json_data = {\n            \"uprn\": user_uprn,\n        }\n        response = s.post(\n            \"https://bcprdapidyna002.azure-api.net/bcprdfundyna001-alloy/NextCollectionDates\",\n            headers=headers,\n            json=json_data,\n        )\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Soup returns API response rather than HTML, so parse those strings\n        string_data = soup.text.split(\"data\")[1]\n        collection_data = string_data.split(\"]}\")\n    \n        # Remove the spare ] and , characters at the of each list element\n        fixed_data = [i[1:] for i in collection_data]\n    \n        # Remove the last list element since it's garbage (funny since this is a bin project)\n        fixed_data.pop()\n        collection_data.clear()\n    \n        # Make some more changes:\n        idx = 0\n        for i in fixed_data:\n            if idx == 0:\n                # Remove two extra characters if it's the first element\n                i = i[2:]\n            # Append some characters to the end of each line to make to dict\n            i = i + \"]}\"\n            idx += 1\n            # Reuse the collection_data list to make a list of dictionaries - one for each bin\n            collection_data.append(ast.literal_eval(i))\n    \n        collections = []\n        for bin in collection_data:\n            bin_type = bin[\"containerName\"]\n            next_collection = datetime.strptime(\n>               bin[\"collection\"][0][\"nextCollectionDate\"], \"%Y-%m-%dT%H:%M:%S\"\n            ).strftime(date_format)\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/BristolCityCouncil.py:130: IndexError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f08e02e56c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BristolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f08e034fad0>, 'council': 'BristolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BristolCityCouncil.CouncilClass object at 0x7f08df9b8910>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '137547', 'url': 'https://bristolcouncil.powerappsportals.com/completedynamicformunauth/?servicetypeid=7dce896c-b3ba-ea11-a812-000d3a7f1cdc', ...}\nuser_uprn = '137547', s = <requests.sessions.Session object at 0x7f08e059bb50>\nservice_type_headers = {'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8', 'Accept-Language': 'en-GB,en;q=0.9', 'Cache-Control': 'max-age=0', 'Connection': 'keep-alive', ...}\nservice_type_params = {'servicetypeid': '7dce896c-b3ba-ea11-a812-000d3a7f1cdc'}\nresponse = <Response [200]>\nllpg_headers = {'Accept': '*/*', 'Accept-Language': 'en-GB,en;q=0.9', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '47ffd667d69c4a858f92fc38dc24b150', ...}\nllpg_uprn = 'UPRN137547'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n    \n        service_type_headers = {\n            \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,\"\n            \"image/webp,image/apng,*/*;q=0.8\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Cache-Control\": \"max-age=0\",\n            \"Connection\": \"keep-alive\",\n            \"Referer\": \"https://www.bristol.gov.uk/\",\n            \"Sec-Fetch-Dest\": \"document\",\n            \"Sec-Fetch-Mode\": \"navigate\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-Fetch-User\": \"?1\",\n            \"Sec-GPC\": \"1\",\n            \"Upgrade-Insecure-Requests\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, \"\n            \"like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        service_type_params = {\n            \"servicetypeid\": \"7dce896c-b3ba-ea11-a812-000d3a7f1cdc\",\n        }\n        response = s.get(\n            \"https://bristolcouncil.powerappsportals.com/completedynamicformunauth/\",\n            params=service_type_params,\n            headers=service_type_headers,\n        )\n    \n        llpg_headers = {\n            \"Accept\": \"*/*\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Connection\": \"keep-alive\",\n            \"Ocp-Apim-Subscription-Key\": \"47ffd667d69c4a858f92fc38dc24b150\",\n            \"Ocp-Apim-Trace\": \"true\",\n            \"Origin\": \"https://bristolcouncil.powerappsportals.com\",\n            \"Referer\": \"https://bristolcouncil.powerappsportals.com/\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, \"\n            \"like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        llpg_uprn = \"UPRN\" + user_uprn\n        llpg_json_data = {\n            \"Uprn\": llpg_uprn,\n        }\n        response = s.post(\n            \"https://bcprdapidyna002.azure-api.net/bcprdfundyna001-llpg/DetailedLLPG\",\n            headers=llpg_headers,\n            json=llpg_json_data,\n        )\n    \n        headers = {\n            \"Accept\": \"*/*\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Connection\": \"keep-alive\",\n            # Already added when you pass json=\n            # 'Content-Type': 'application/json',\n            \"Ocp-Apim-Subscription-Key\": \"47ffd667d69c4a858f92fc38dc24b150\",\n            \"Ocp-Apim-Trace\": \"true\",\n            \"Origin\": \"https://bristolcouncil.powerappsportals.com\",\n            \"Referer\": \"https://bristolcouncil.powerappsportals.com/\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        json_data = {\n            \"uprn\": user_uprn,\n        }\n        response = s.post(\n            \"https://bcprdapidyna002.azure-api.net/bcprdfundyna001-alloy/NextCollectionDates\",\n            headers=headers,\n            json=json_data,\n        )\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Soup returns API response rather than HTML, so parse those strings\n        string_data = soup.text.split(\"data\")[1]\n        collection_data = string_data.split(\"]}\")\n    \n        # Remove the spare ] and , characters at the of each list element\n        fixed_data = [i[1:] for i in collection_data]\n    \n        # Remove the last list element since it's garbage (funny since this is a bin project)\n        fixed_data.pop()\n        collection_data.clear()\n    \n        # Make some more changes:\n        idx = 0\n        for i in fixed_data:\n            if idx == 0:\n                # Remove two extra characters if it's the first element\n                i = i[2:]\n            # Append some characters to the end of each line to make to dict\n            i = i + \"]}\"\n            idx += 1\n            # Reuse the collection_data list to make a list of dictionaries - one for each bin\n            collection_data.append(ast.literal_eval(i))\n    \n        collections = []\n        for bin in collection_data:\n            bin_type = bin[\"containerName\"]\n            next_collection = datetime.strptime(\n>               bin[\"collection\"][0][\"nextCollectionDate\"], \"%Y-%m-%dT%H:%M:%S\"\n            ).strftime(date_format)\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/BristolCityCouncil.py:130: IndexError","steps":[{"name":"Given the council: BristolCityCouncil","time":{"start":1704398753177,"stop":1704398753178,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BristolCityCouncil using None and the None is set","time":{"start":1704398753178,"stop":1704398756083,"duration":2905},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az837-394"},{"name":"thread","value":"2624-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BristolCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":128,"unknown":0,"total":132},"items":[{"uid":"8f005b1a4c249785","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1373//#testresult/8f005b1a4c249785","status":"passed","time":{"start":1704388305689,"stop":1704388311658,"duration":5969}},{"uid":"4401b7eda12e70a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1369//#testresult/4401b7eda12e70a1","status":"passed","time":{"start":1704378382462,"stop":1704378389095,"duration":6633}},{"uid":"dd61f2bbc251e174","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1367//#testresult/dd61f2bbc251e174","status":"passed","time":{"start":1704378030353,"stop":1704378036814,"duration":6461}},{"uid":"95a9abc8f099610","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1366//#testresult/95a9abc8f099610","status":"passed","time":{"start":1704375851324,"stop":1704375857244,"duration":5920}},{"uid":"fd26782b8f47da88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1363//#testresult/fd26782b8f47da88","status":"passed","time":{"start":1704356756407,"stop":1704356762139,"duration":5732}},{"uid":"6425ee8629f55367","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1361//#testresult/6425ee8629f55367","status":"passed","time":{"start":1704355894542,"stop":1704355901709,"duration":7167}},{"uid":"8d02ef9fe0d4e1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1359//#testresult/8d02ef9fe0d4e1c","status":"passed","time":{"start":1704331063968,"stop":1704331069272,"duration":5304}},{"uid":"e2b722bfd8ddb153","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1355//#testresult/e2b722bfd8ddb153","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1704303705687,"stop":1704303707489,"duration":1802}},{"uid":"a1294b687f791cf3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1352//#testresult/a1294b687f791cf3","status":"passed","time":{"start":1704301386860,"stop":1704301394115,"duration":7255}},{"uid":"f4e8d4994a710e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1349//#testresult/f4e8d4994a710e6","status":"passed","time":{"start":1704244630673,"stop":1704244635995,"duration":5322}},{"uid":"c8854571671ac42c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1348//#testresult/c8854571671ac42c","status":"passed","time":{"start":1704180207096,"stop":1704180212047,"duration":4951}},{"uid":"1f416640d8bd578e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1346//#testresult/1f416640d8bd578e","status":"passed","time":{"start":1704158244063,"stop":1704158248384,"duration":4321}},{"uid":"a6bc8665d3258ef0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1345//#testresult/a6bc8665d3258ef0","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1704114603629,"stop":1704114607995,"duration":4366}},{"uid":"22d8fd36f0fa99d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1343//#testresult/22d8fd36f0fa99d8","status":"passed","time":{"start":1704113712270,"stop":1704113717436,"duration":5166}},{"uid":"a047990fa24ff11a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1342//#testresult/a047990fa24ff11a","status":"passed","time":{"start":1704113656694,"stop":1704113661120,"duration":4426}},{"uid":"b480d9d25ee29a49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1341//#testresult/b480d9d25ee29a49","status":"passed","time":{"start":1704112233249,"stop":1704112237759,"duration":4510}},{"uid":"1d520517ff651374","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1339//#testresult/1d520517ff651374","status":"passed","time":{"start":1704112088297,"stop":1704112093083,"duration":4786}},{"uid":"722cd77cf3937eab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1336//#testresult/722cd77cf3937eab","status":"passed","time":{"start":1704111850391,"stop":1704111855541,"duration":5150}},{"uid":"af2fe100214f910a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1337//#testresult/af2fe100214f910a","status":"passed","time":{"start":1704111848410,"stop":1704111853356,"duration":4946}},{"uid":"3387c11c5f1056cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1335//#testresult/3387c11c5f1056cf","status":"passed","time":{"start":1704111489420,"stop":1704111494144,"duration":4724}}]},"tags":[]},"source":"f3dc2189e3a26372.json","parameterValues":["BristolCityCouncil","None","None"]}