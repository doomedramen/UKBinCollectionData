{"uid":"c7d1954ea19cbefa","name":"Validate Council Output [LondonBoroughHounslow-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2d5d41f2f80a2dfc213e6858543e98d5","time":{"start":1701904958188,"stop":1701904960930,"duration":2742},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fbf21754ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fbf1edd2450>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fbf1edd2450>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fbf21754ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fbf1edd2450>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fbf1edd2450>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1701904958188,"stop":1701904958188,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from LondonBoroughHounslow using None and the None is set","time":{"start":1701904958189,"stop":1701904960927,"duration":2738},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1701904960927,"stop":1701904960927,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1701904960927,"stop":1701904960930,"duration":3},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1024-288"},{"name":"thread","value":"2752-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":57,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":57},"items":[{"uid":"d9920b40beaf2080","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1201//#testresult/d9920b40beaf2080","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701882724355,"stop":1701882727416,"duration":3061}},{"uid":"78f46f18369e4d15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1202//#testresult/78f46f18369e4d15","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701882782374,"stop":1701882785087,"duration":2713}},{"uid":"f33cc49ee93e7a6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1199//#testresult/f33cc49ee93e7a6b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701825688582,"stop":1701825692003,"duration":3421}},{"uid":"b033c2e93e8f97e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1198//#testresult/b033c2e93e8f97e3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701795659221,"stop":1701795662007,"duration":2786}},{"uid":"ef918bfe4a4dfa04","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1197//#testresult/ef918bfe4a4dfa04","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701795655140,"stop":1701795657548,"duration":2408}},{"uid":"ba9c7dc3c1b5f2d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1193//#testresult/ba9c7dc3c1b5f2d2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701758721161,"stop":1701758724289,"duration":3128}},{"uid":"64d1b30088d9bd50","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1192//#testresult/64d1b30088d9bd50","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701758608745,"stop":1701758611527,"duration":2782}},{"uid":"38e4e31b48e9a2e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1191//#testresult/38e4e31b48e9a2e5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701739165496,"stop":1701739168391,"duration":2895}},{"uid":"1838ec7040bbf922","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1187//#testresult/1838ec7040bbf922","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701714345013,"stop":1701714347635,"duration":2622}},{"uid":"4c72dec777c9825","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1184//#testresult/4c72dec777c9825","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701652855116,"stop":1701652857944,"duration":2828}},{"uid":"2b980b4f8544adcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1183//#testresult/2b980b4f8544adcd","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701566548634,"stop":1701566552450,"duration":3816}},{"uid":"69a64c92da4cb753","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1182//#testresult/69a64c92da4cb753","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701479829835,"stop":1701479835092,"duration":5257}},{"uid":"440c5866907cd3e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1179//#testresult/440c5866907cd3e7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418970596,"stop":1701418973668,"duration":3072}},{"uid":"6e81fbd490a9851a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1181//#testresult/6e81fbd490a9851a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701419089109,"stop":1701419092091,"duration":2982}},{"uid":"cc72e1c4863df4a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1180//#testresult/cc72e1c4863df4a4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701419150193,"stop":1701419152610,"duration":2417}},{"uid":"4366bf61eeebca18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1176//#testresult/4366bf61eeebca18","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418884697,"stop":1701418887792,"duration":3095}},{"uid":"138dcb84ac0a27dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1177//#testresult/138dcb84ac0a27dd","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418931160,"stop":1701418934341,"duration":3181}},{"uid":"50f834f5db8ef7d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1175//#testresult/50f834f5db8ef7d8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701414356813,"stop":1701414359331,"duration":2518}},{"uid":"d579cb4b810d1272","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1173//#testresult/d579cb4b810d1272","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701393909317,"stop":1701393913422,"duration":4105}},{"uid":"bf718fd277b73aee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1169//#testresult/bf718fd277b73aee","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701353353820,"stop":1701353357757,"duration":3937}}]},"tags":[]},"source":"c7d1954ea19cbefa.json","parameterValues":["LondonBoroughHounslow","None","None"]}