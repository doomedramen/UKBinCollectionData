{"uid":"a538f2a6cd6e120e","name":"Validate Council Output [NorthNorthamptonshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"92c0f84b87cb9703264ef6f7bea152ee","time":{"start":1726273234509,"stop":1726273265084,"duration":30575},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7f0087759300>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f00875d9790>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7f0086b74b90>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', dateforurl = '2024-09-14'\ndateforurl2 = '2024-10-26'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN..","statusTrace":"fixturefunc = <function scrape_step at 0x7f0087759300>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f00875d9790>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthNorthamptonshireCouncil.CouncilClass object at 0x7f0086b74b90>\npage = ''\nkwargs = {'council_module_str': 'NorthNorthamptonshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100031021317', dateforurl = '2024-09-14'\ndateforurl2 = '2024-10-26'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n        today = int(datetime.now().timestamp()) * 1000\n        dateforurl = datetime.now().strftime(\"%Y-%m-%d\")\n        dateforurl2 = (datetime.now() + timedelta(days=42)).strftime(\"%Y-%m-%d\")\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\",\n        }\n        requests.packages.urllib3.disable_warnings()\n    \n        # Get variables for workings\n        response = requests.get(\n            f\"https://cms.northnorthants.gov.uk/bin-collection-search/calendarevents/{uprn}/{dateforurl}/{dateforurl2}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN..\")\nE           ValueError: No bin data found for provided UPRN..\n\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:39: ValueError","steps":[{"name":"Given the council","time":{"start":1726273234509,"stop":1726273234510,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1726273234510,"stop":1726273265084,"duration":30574},"status":"failed","statusMessage":"No bin data found for provided UPRN..","statusTrace":"ValueError: No bin data found for provided UPRN..\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d0141107ae41fb33","name":"stdout","source":"d0141107ae41fb33.txt","type":"text/plain","size":55}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1487-913"},{"name":"thread","value":"2782-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":141,"unknown":0,"total":149},"items":[{"uid":"970a4a71f3cdc910","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2113//#testresult/970a4a71f3cdc910","status":"passed","time":{"start":1726186804918,"stop":1726186805583,"duration":665}},{"uid":"9a73a02c2e416994","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2112//#testresult/9a73a02c2e416994","status":"passed","time":{"start":1726100351026,"stop":1726100358816,"duration":7790}},{"uid":"f46cef75a22d9865","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2111//#testresult/f46cef75a22d9865","status":"passed","time":{"start":1726014023625,"stop":1726014031397,"duration":7772}},{"uid":"37669cf8f8517151","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2109//#testresult/37669cf8f8517151","status":"passed","time":{"start":1725955772699,"stop":1725955774858,"duration":2159}},{"uid":"a5d529383bead7c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2107//#testresult/a5d529383bead7c8","status":"passed","time":{"start":1725927490310,"stop":1725927494559,"duration":4249}},{"uid":"80d31675fa6f7d32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2095//#testresult/80d31675fa6f7d32","status":"passed","time":{"start":1725841205786,"stop":1725841212099,"duration":6313}},{"uid":"819f6d6c329a80f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2093//#testresult/819f6d6c329a80f6","status":"passed","time":{"start":1725754710004,"stop":1725754723891,"duration":13887}},{"uid":"2d6eeadb43f5b3fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2092//#testresult/2d6eeadb43f5b3fb","status":"passed","time":{"start":1725668387179,"stop":1725668388121,"duration":942}},{"uid":"73f0a18fe93eddab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2088//#testresult/73f0a18fe93eddab","status":"passed","time":{"start":1725581937000,"stop":1725581937860,"duration":860}},{"uid":"bb2d70a80d2e4a82","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2086//#testresult/bb2d70a80d2e4a82","status":"passed","time":{"start":1725569763461,"stop":1725569764281,"duration":820}},{"uid":"e2a98cd811417a22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2083//#testresult/e2a98cd811417a22","status":"passed","time":{"start":1725495606631,"stop":1725495612972,"duration":6341}},{"uid":"11082f67013464fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/11082f67013464fd","status":"passed","time":{"start":1725430635347,"stop":1725430636322,"duration":975}},{"uid":"a4b6c2c24ad11086","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/a4b6c2c24ad11086","status":"passed","time":{"start":1725409313353,"stop":1725409314376,"duration":1023}},{"uid":"fea314262c22101d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2080//#testresult/fea314262c22101d","status":"passed","time":{"start":1725404193390,"stop":1725404194083,"duration":693}},{"uid":"794e72d0dc439586","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2073//#testresult/794e72d0dc439586","status":"passed","time":{"start":1725385195593,"stop":1725385196249,"duration":656}},{"uid":"481d716e5d2039d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2070//#testresult/481d716e5d2039d3","status":"passed","time":{"start":1725347437590,"stop":1725347438321,"duration":731}},{"uid":"c3ebddfc3b158b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2069//#testresult/c3ebddfc3b158b3","status":"passed","time":{"start":1725322779252,"stop":1725322787548,"duration":8296}},{"uid":"1a1f947e251ab6bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2068//#testresult/1a1f947e251ab6bd","status":"passed","time":{"start":1725316537671,"stop":1725316538447,"duration":776}},{"uid":"f8581652f6717aa0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2066//#testresult/f8581652f6717aa0","status":"passed","time":{"start":1725313293338,"stop":1725313294081,"duration":743}},{"uid":"fbc06697e05e06c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2064//#testresult/fbc06697e05e06c6","status":"passed","time":{"start":1725311122069,"stop":1725311122779,"duration":710}}]},"tags":[]},"source":"a538f2a6cd6e120e.json","parameterValues":["NorthNorthamptonshireCouncil"]}