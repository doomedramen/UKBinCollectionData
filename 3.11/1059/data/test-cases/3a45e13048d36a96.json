{"uid":"3a45e13048d36a96","name":"Validate Council Output [WiganBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d724d8b9a4d0593a99f53e95b03e558b","time":{"start":1698615259506,"stop":1698615262853,"duration":3347},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f8845156020>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f88378a6ed0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f88378a6ed0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f8845156020>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f88378a6ed0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f88378a6ed0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","steps":[{"name":"Given the council: WiganBoroughCouncil","time":{"start":1698615259507,"stop":1698615259507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WiganBoroughCouncil","time":{"start":1698615259507,"stop":1698615262850,"duration":3343},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698615262850,"stop":1698615262851,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698615262851,"stop":1698615262853,"duration":2},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az402-157"},{"name":"thread","value":"2256-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiganBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":81,"broken":0,"skipped":0,"passed":76,"unknown":0,"total":157},"items":[{"uid":"84ec49ff8043da6f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1054//#testresult/84ec49ff8043da6f","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698542639985,"stop":1698542644055,"duration":4070}},{"uid":"5e8715ca06d7aead","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1053//#testresult/5e8715ca06d7aead","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698455902256,"stop":1698455905714,"duration":3458}},{"uid":"ef531267ce8fb532","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1051//#testresult/ef531267ce8fb532","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698369625958,"stop":1698369630935,"duration":4977}},{"uid":"928034901dc77222","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1050//#testresult/928034901dc77222","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698283240043,"stop":1698283243987,"duration":3944}},{"uid":"cd31aa44d9530302","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1049//#testresult/cd31aa44d9530302","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698196769844,"stop":1698196773531,"duration":3687}},{"uid":"e5d14ecaa208437b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1048//#testresult/e5d14ecaa208437b","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178462457,"stop":1698178466827,"duration":4370}},{"uid":"b631d46b1d77c757","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1047//#testresult/b631d46b1d77c757","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178448912,"stop":1698178452287,"duration":3375}},{"uid":"12368fb182fce3a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1046//#testresult/12368fb182fce3a0","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698110344860,"stop":1698110348773,"duration":3913}},{"uid":"fee071e3e5b5ba5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1044//#testresult/fee071e3e5b5ba5e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698065187664,"stop":1698065195245,"duration":7581}},{"uid":"f0651b5041935f92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1042//#testresult/f0651b5041935f92","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698024042794,"stop":1698024049879,"duration":7085}},{"uid":"440064360369f238","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1040//#testresult/440064360369f238","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697937840614,"stop":1697937846191,"duration":5577}},{"uid":"15734605c8b9e508","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1039//#testresult/15734605c8b9e508","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697851021310,"stop":1697851027809,"duration":6499}},{"uid":"8ded335ab822f1e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1037//#testresult/8ded335ab822f1e3","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697790624348,"stop":1697790635715,"duration":11367}},{"uid":"58d73f14db1307fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1034//#testresult/58d73f14db1307fe","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697764784227,"stop":1697764788559,"duration":4332}},{"uid":"761a2aa2cf567506","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1033//#testresult/761a2aa2cf567506","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697706883276,"stop":1697706887304,"duration":4028}},{"uid":"13f7e61d4d96d604","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1032//#testresult/13f7e61d4d96d604","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697706808292,"stop":1697706811689,"duration":3397}},{"uid":"7b9211e50d0aad69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1030//#testresult/7b9211e50d0aad69","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","time":{"start":1697702046397,"stop":1697702046398,"duration":1}},{"uid":"fec255d142fd3c41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/fec255d142fd3c41","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697696407013,"stop":1697696410578,"duration":3565}},{"uid":"c6c54aaa5ddf3565","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/c6c54aaa5ddf3565","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697678401860,"stop":1697678406231,"duration":4371}},{"uid":"15b8549f3a32e788","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/15b8549f3a32e788","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697666780617,"stop":1697666784016,"duration":3399}}]},"tags":[]},"source":"3a45e13048d36a96.json","parameterValues":["WiganBoroughCouncil"]}