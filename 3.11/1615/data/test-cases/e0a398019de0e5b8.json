{"uid":"e0a398019de0e5b8","name":"Validate Council Output [BedfordshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"205f76a3eddc8da4816de8fdd2c7974e","time":{"start":1710807968760,"stop":1710807999689,"duration":30929},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x70e9209d8e00>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x70e91fda2850>, 'council': 'BedfordshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BedfordshireCouncil.py:21: in parse_data\n    check_postcode(user_postcode)\nuk_bin_collection/uk_bin_collection/common.py:43: in check_postcode\n    val_error = json.loads(postcode_api_response.text)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x70e93494e310>\ns = '<!DOCTYPE html>\\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\\n<!--[if IE 7]>    <html ...istener(\"DOMContentLoaded\",d)})();</script>\\n</div><!-- /.error-footer -->\\n\\n\\n    </div>\\n</div>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x70e9209d8e00>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x70e91fda2850>, 'council': 'BedfordshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BedfordshireCouncil.py:21: in parse_data\n    check_postcode(user_postcode)\nuk_bin_collection/uk_bin_collection/common.py:43: in check_postcode\n    val_error = json.loads(postcode_api_response.text)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x70e93494e310>\ns = '<!DOCTYPE html>\\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\\n<!--[if IE 7]>    <html ...istener(\"DOMContentLoaded\",d)})();</script>\\n</div><!-- /.error-footer -->\\n\\n\\n    </div>\\n</div>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: BedfordshireCouncil","time":{"start":1710807968761,"stop":1710807968761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BedfordshireCouncil using None and the None is set","time":{"start":1710807968761,"stop":1710807999689,"duration":30928},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az532-440"},{"name":"thread","value":"2726-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BedfordshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":156,"unknown":0,"total":160},"items":[{"uid":"bb60d7ce3bda5736","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1609//#testresult/bb60d7ce3bda5736","status":"passed","time":{"start":1710721673705,"stop":1710721675307,"duration":1602}},{"uid":"a3bfe2982fa03c9a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1608//#testresult/a3bfe2982fa03c9a","status":"passed","time":{"start":1710635304836,"stop":1710635306226,"duration":1390}},{"uid":"61b4eb033605e73f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1607//#testresult/61b4eb033605e73f","status":"passed","time":{"start":1710548662234,"stop":1710548663996,"duration":1762}},{"uid":"5de1e53644b01ef0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1605//#testresult/5de1e53644b01ef0","status":"passed","time":{"start":1710462335917,"stop":1710462338340,"duration":2423}},{"uid":"dffc0e41cd937e62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1604//#testresult/dffc0e41cd937e62","status":"passed","time":{"start":1710452811196,"stop":1710452812983,"duration":1787}},{"uid":"c7e2faeb06d839bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1602//#testresult/c7e2faeb06d839bc","status":"passed","time":{"start":1710375927081,"stop":1710375929227,"duration":2146}},{"uid":"156b889f07e988ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1601//#testresult/156b889f07e988ee","status":"passed","time":{"start":1710289519626,"stop":1710289521052,"duration":1426}},{"uid":"f0da46310ec6506e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1600//#testresult/f0da46310ec6506e","status":"passed","time":{"start":1710203141344,"stop":1710203142712,"duration":1368}},{"uid":"5182688dad335079","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1599//#testresult/5182688dad335079","status":"passed","time":{"start":1710116839457,"stop":1710116841175,"duration":1718}},{"uid":"90efd4b8c21be7d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1598//#testresult/90efd4b8c21be7d0","status":"passed","time":{"start":1710030507290,"stop":1710030508937,"duration":1647}},{"uid":"b46f9b3d37b4ef06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1597//#testresult/b46f9b3d37b4ef06","status":"passed","time":{"start":1709943905532,"stop":1709943907721,"duration":2189}},{"uid":"deb96a8acb9be26b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1596//#testresult/deb96a8acb9be26b","status":"passed","time":{"start":1709857569856,"stop":1709857572151,"duration":2295}},{"uid":"31326b4a6cdb0a64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1595//#testresult/31326b4a6cdb0a64","status":"passed","time":{"start":1709770849507,"stop":1709770851919,"duration":2412}},{"uid":"1373a8544e835801","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1594//#testresult/1373a8544e835801","status":"passed","time":{"start":1709684760237,"stop":1709684761590,"duration":1353}},{"uid":"c465af6ee0acdbe3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1593//#testresult/c465af6ee0acdbe3","status":"passed","time":{"start":1709598311644,"stop":1709598313550,"duration":1906}},{"uid":"63609e2ad3a9647f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1592//#testresult/63609e2ad3a9647f","status":"passed","time":{"start":1709511993762,"stop":1709511995333,"duration":1571}},{"uid":"7828a749d87baef9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1572//#testresult/7828a749d87baef9","status":"passed","time":{"start":1708561542203,"stop":1708561543619,"duration":1416}},{"uid":"5cae79064e0a051","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1570//#testresult/5cae79064e0a051","status":"passed","time":{"start":1708475137628,"stop":1708475138874,"duration":1246}},{"uid":"bbf64f5dccd4c2d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1569//#testresult/bbf64f5dccd4c2d5","status":"passed","time":{"start":1708388748556,"stop":1708388751076,"duration":2520}},{"uid":"53216d5234bc7699","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1568//#testresult/53216d5234bc7699","status":"passed","time":{"start":1708302483871,"stop":1708302487447,"duration":3576}}]},"tags":[]},"source":"e0a398019de0e5b8.json","parameterValues":["BedfordshireCouncil","None","None"]}