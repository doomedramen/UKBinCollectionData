{"uid":"739613b044cd262b","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1701418871905,"stop":1701419176349,"duration":304444},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=119.0.6045.159)\nStacktrace:\n#0 0x5595e59c45e3 <unknown>\n#1 0x5595e56870b7 <unknown>\n#2 0x5595e566d23a <unknown>\n#3 0x5595e566d0a9 <unknown>\n#4 0x5595e566b481 <unknown>\n#5 0x5595e566be39 <unknown>\n#6 0x5595e567c8ac <unknown>\n#7 0x5595e56944c1 <unknown>\n#8 0x5595e569a13b <unknown>\n#9 0x5595e566c5ce <unknown>\n#10 0x5595e56942c4 <unknown>\n#11 0x5595e5717d42 <unknown>\n#12 0x5595e56fbcc3 <unknown>\n#13 0x5595e56c70e4 <unknown>\n#14 0x5595e56c80ae <unknown>\n#15 0x5595e598ace1 <unknown>\n#16 0x5595e598eb7e <unknown>\n#17 0x5595e59784b5 <unknown>\n#18 0x5595e598f7d6 <unknown>\n#19 0x5595e595bdbf <unknown>\n#20 0x5595e59b2748 <unknown>\n#21 0x5595e59b2917 <unknown>\n#22 0x5595e59c3773 <unknown>\n#23 0x7fb096894ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7ff9982c93a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff984434f90>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:49: in parse_data\n    ))).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff9937a2f50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x5595e59b2917 \\\\u003Cunknown>\\\\n#22 0x5595e59c3773 \\\\u003Cunknown>\\\\n#23 0x7fb096894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: headless chrome=119.0.6045.159)\nE       Stacktrace:\nE       #0 0x5595e59c45e3 <unknown>\nE       #1 0x5595e56870b7 <unknown>\nE       #2 0x5595e566d23a <unknown>\nE       #3 0x5595e566d0a9 <unknown>\nE       #4 0x5595e566b481 <unknown>\nE       #5 0x5595e566be39 <unknown>\nE       #6 0x5595e567c8ac <unknown>\nE       #7 0x5595e56944c1 <unknown>\nE       #8 0x5595e569a13b <unknown>\nE       #9 0x5595e566c5ce <unknown>\nE       #10 0x5595e56942c4 <unknown>\nE       #11 0x5595e5717d42 <unknown>\nE       #12 0x5595e56fbcc3 <unknown>\nE       #13 0x5595e56c70e4 <unknown>\nE       #14 0x5595e56c80ae <unknown>\nE       #15 0x5595e598ace1 <unknown>\nE       #16 0x5595e598eb7e <unknown>\nE       #17 0x5595e59784b5 <unknown>\nE       #18 0x5595e598f7d6 <unknown>\nE       #19 0x5595e595bdbf <unknown>\nE       #20 0x5595e59b2748 <unknown>\nE       #21 0x5595e59b2917 <unknown>\nE       #22 0x5595e59c3773 <unknown>\nE       #23 0x7fb096894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=119.0.6045.159)\nStacktrace:\n#0 0x5595e59c45e3 <unknown>\n#1 0x5595e56870b7 <unknown>\n#2 0x5595e566d23a <unknown>\n#3 0x5595e566d0a9 <unknown>\n#4 0x5595e566b481 <unknown>\n#5 0x5595e566be39 <unknown>\n#6 0x5595e567c8ac <unknown>\n#7 0x5595e56944c1 <unknown>\n#8 0x5595e569a13b <unknown>\n#9 0x5595e566c5ce <unknown>\n#10 0x5595e56942c4 <unknown>\n#11 0x5595e5717d42 <unknown>\n#12 0x5595e56fbcc3 <unknown>\n#13 0x5595e56c70e4 <unknown>\n#14 0x5595e56c80ae <unknown>\n#15 0x5595e598ace1 <unknown>\n#16 0x5595e598eb7e <unknown>\n#17 0x5595e59784b5 <unknown>\n#18 0x5595e598f7d6 <unknown>\n#19 0x5595e595bdbf <unknown>\n#20 0x5595e59b2748 <unknown>\n#21 0x5595e59b2917 <unknown>\n#22 0x5595e59c3773 <unknown>\n#23 0x7fb096894ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7ff9982c93a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff984434f90>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:49: in parse_data\n    ))).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff9937a2f50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x5595e59b2917 \\\\u003Cunknown>\\\\n#22 0x5595e59c3773 \\\\u003Cunknown>\\\\n#23 0x7fb096894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: headless chrome=119.0.6045.159)\nE       Stacktrace:\nE       #0 0x5595e59c45e3 <unknown>\nE       #1 0x5595e56870b7 <unknown>\nE       #2 0x5595e566d23a <unknown>\nE       #3 0x5595e566d0a9 <unknown>\nE       #4 0x5595e566b481 <unknown>\nE       #5 0x5595e566be39 <unknown>\nE       #6 0x5595e567c8ac <unknown>\nE       #7 0x5595e56944c1 <unknown>\nE       #8 0x5595e569a13b <unknown>\nE       #9 0x5595e566c5ce <unknown>\nE       #10 0x5595e56942c4 <unknown>\nE       #11 0x5595e5717d42 <unknown>\nE       #12 0x5595e56fbcc3 <unknown>\nE       #13 0x5595e56c70e4 <unknown>\nE       #14 0x5595e56c80ae <unknown>\nE       #15 0x5595e598ace1 <unknown>\nE       #16 0x5595e598eb7e <unknown>\nE       #17 0x5595e59784b5 <unknown>\nE       #18 0x5595e598f7d6 <unknown>\nE       #19 0x5595e595bdbf <unknown>\nE       #20 0x5595e59b2748 <unknown>\nE       #21 0x5595e59b2917 <unknown>\nE       #22 0x5595e59c3773 <unknown>\nE       #23 0x7fb096894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1701418871905,"stop":1701418871906,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1701418871906,"stop":1701419176349,"duration":304443},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=119.0.6045.159)\nStacktrace:\n#0 0x5595e59c45e3 <unknown>\n#1 0x5595e56870b7 <unknown>\n#2 0x5595e566d23a <unknown>\n#3 0x5595e566d0a9 <unknown>\n#4 0x5595e566b481 <unknown>\n#5 0x5595e566be39 <unknown>\n#6 0x5595e567c8ac <unknown>\n#7 0x5595e56944c1 <unknown>\n#8 0x5595e569a13b <unknown>\n#9 0x5595e566c5ce <unknown>\n#10 0x5595e56942c4 <unknown>\n#11 0x5595e5717d42 <unknown>\n#12 0x5595e56fbcc3 <unknown>\n#13 0x5595e56c70e4 <unknown>\n#14 0x5595e56c80ae <unknown>\n#15 0x5595e598ace1 <unknown>\n#16 0x5595e598eb7e <unknown>\n#17 0x5595e59784b5 <unknown>\n#18 0x5595e598f7d6 <unknown>\n#19 0x5595e595bdbf <unknown>\n#20 0x5595e59b2748 <unknown>\n#21 0x5595e59b2917 <unknown>\n#22 0x5595e59c3773 <unknown>\n#23 0x7fb096894ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=119.0.6045.159)\nStacktrace:\n#0 0x5595e59c45e3 <unknown>\n#1 0x5595e56870b7 <unknown>\n#2 0x5595e566d23a <unknown>\n#3 0x5595e566d0a9 <unknown>\n#4 0x5595e566b481 <unknown>\n#5 0x5595e566be39 <unknown>\n#6 0x5595e567c8ac <unknown>\n#7 0x5595e56944c1 <unknown>\n#8 0x5595e569a13b <unknown>\n#9 0x5595e566c5ce <unknown>\n#10 0x5595e56942c4 <unknown>\n#11 0x5595e5717d42 <unknown>\n#12 0x5595e56fbcc3 <unknown>\n#13 0x5595e56c70e4 <unknown>\n#14 0x5595e56c80ae <unknown>\n#15 0x5595e598ace1 <unknown>\n#16 0x5595e598eb7e <unknown>\n#17 0x5595e59784b5 <unknown>\n#18 0x5595e598f7d6 <unknown>\n#19 0x5595e595bdbf <unknown>\n#20 0x5595e59b2748 <unknown>\n#21 0x5595e59b2917 <unknown>\n#22 0x5595e59c3773 <unknown>\n#23 0x7fb096894ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1210-273"},{"name":"thread","value":"2758-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":36,"unknown":0,"total":41},"items":[{"uid":"7dfa9b0ad8897810","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1177//#testresult/7dfa9b0ad8897810","status":"passed","time":{"start":1701418916491,"stop":1701418927012,"duration":10521}},{"uid":"77cc5dee66fdb16c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1175//#testresult/77cc5dee66fdb16c","status":"passed","time":{"start":1701414332207,"stop":1701414340653,"duration":8446}},{"uid":"2785793cd0213e19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1173//#testresult/2785793cd0213e19","status":"passed","time":{"start":1701394080859,"stop":1701394090034,"duration":9175}},{"uid":"fd7e41660ee7b284","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1169//#testresult/fd7e41660ee7b284","status":"passed","time":{"start":1701353331153,"stop":1701353341066,"duration":9913}},{"uid":"5bfe5463e624e926","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1170//#testresult/5bfe5463e624e926","status":"passed","time":{"start":1701353365447,"stop":1701353373023,"duration":7576}},{"uid":"2d0552530ceb4a5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1163//#testresult/2d0552530ceb4a5c","status":"passed","time":{"start":1701307092781,"stop":1701307101108,"duration":8327}},{"uid":"623d82087cee5657","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1161//#testresult/623d82087cee5657","status":"passed","time":{"start":1701279319217,"stop":1701279328433,"duration":9216}},{"uid":"af229cfd5bc4c939","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1156//#testresult/af229cfd5bc4c939","status":"passed","time":{"start":1701220738077,"stop":1701220749177,"duration":11100}},{"uid":"6b23080d25b878b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1155//#testresult/6b23080d25b878b6","status":"passed","time":{"start":1701134361895,"stop":1701134372563,"duration":10668}},{"uid":"bd80a4ed908634d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1152//#testresult/bd80a4ed908634d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=119.0.6045.159)\nStacktrace:\n#0 0x557992f045e3 <unknown>\n#1 0x557992bc70b7 <unknown>\n#2 0x557992bad23a <unknown>\n#3 0x557992bad0a9 <unknown>\n#4 0x557992bab481 <unknown>\n#5 0x557992babe39 <unknown>\n#6 0x557992bbc8ac <unknown>\n#7 0x557992bd44c1 <unknown>\n#8 0x557992bda13b <unknown>\n#9 0x557992bac5ce <unknown>\n#10 0x557992bd42c4 <unknown>\n#11 0x557992c57d42 <unknown>\n#12 0x557992c3bcc3 <unknown>\n#13 0x557992c070e4 <unknown>\n#14 0x557992c080ae <unknown>\n#15 0x557992ecace1 <unknown>\n#16 0x557992eceb7e <unknown>\n#17 0x557992eb84b5 <unknown>\n#18 0x557992ecf7d6 <unknown>\n#19 0x557992e9bdbf <unknown>\n#20 0x557992ef2748 <unknown>\n#21 0x557992ef2917 <unknown>\n#22 0x557992f03773 <unknown>\n#23 0x7f02d9494ac3 <unknown>","time":{"start":1701047898311,"stop":1701048203919,"duration":305608}},{"uid":"98b1e029fa8a4e9c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1151//#testresult/98b1e029fa8a4e9c","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=119.0.6045.159)\nStacktrace:\n#0 0x56263c0bd5e3 <unknown>\n#1 0x56263bd800b7 <unknown>\n#2 0x56263bd6623a <unknown>\n#3 0x56263bd660a9 <unknown>\n#4 0x56263bd64481 <unknown>\n#5 0x56263bd64e39 <unknown>\n#6 0x56263bd758ac <unknown>\n#7 0x56263bd8d4c1 <unknown>\n#8 0x56263bd9313b <unknown>\n#9 0x56263bd655ce <unknown>\n#10 0x56263bd8d2c4 <unknown>\n#11 0x56263be10d42 <unknown>\n#12 0x56263bdf4cc3 <unknown>\n#13 0x56263bdc00e4 <unknown>\n#14 0x56263bdc10ae <unknown>\n#15 0x56263c083ce1 <unknown>\n#16 0x56263c087b7e <unknown>\n#17 0x56263c0714b5 <unknown>\n#18 0x56263c0887d6 <unknown>\n#19 0x56263c054dbf <unknown>\n#20 0x56263c0ab748 <unknown>\n#21 0x56263c0ab917 <unknown>\n#22 0x56263c0bc773 <unknown>\n#23 0x7fbefb094ac3 <unknown>","time":{"start":1701036161519,"stop":1701036468034,"duration":306515}},{"uid":"bc6abb8f5667707b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1150//#testresult/bc6abb8f5667707b","status":"passed","time":{"start":1701036102127,"stop":1701036123142,"duration":21015}},{"uid":"2770fbee3710bc14","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1148//#testresult/2770fbee3710bc14","status":"passed","time":{"start":1700961905758,"stop":1700961914351,"duration":8593}},{"uid":"98750ab6a5f0ddb8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1147//#testresult/98750ab6a5f0ddb8","status":"passed","time":{"start":1700874916969,"stop":1700874924804,"duration":7835}},{"uid":"3ed04a4c1944f4c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1146//#testresult/3ed04a4c1944f4c6","status":"passed","time":{"start":1700788562734,"stop":1700788571201,"duration":8467}},{"uid":"7a37191f3dcb2c48","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1145//#testresult/7a37191f3dcb2c48","status":"passed","time":{"start":1700702282567,"stop":1700702292284,"duration":9717}},{"uid":"2a269d5f9d5126ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1143//#testresult/2a269d5f9d5126ac","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=119.0.6045.159)\nStacktrace:\n#0 0x55abf642a5e3 <unknown>\n#1 0x55abf60ed0b7 <unknown>\n#2 0x55abf60d323a <unknown>\n#3 0x55abf60d30a9 <unknown>\n#4 0x55abf60d1481 <unknown>\n#5 0x55abf60d1e39 <unknown>\n#6 0x55abf60e28ac <unknown>\n#7 0x55abf60fa4c1 <unknown>\n#8 0x55abf610013b <unknown>\n#9 0x55abf60d25ce <unknown>\n#10 0x55abf60fa2c4 <unknown>\n#11 0x55abf617dd42 <unknown>\n#12 0x55abf6161cc3 <unknown>\n#13 0x55abf612d0e4 <unknown>\n#14 0x55abf612e0ae <unknown>\n#15 0x55abf63f0ce1 <unknown>\n#16 0x55abf63f4b7e <unknown>\n#17 0x55abf63de4b5 <unknown>\n#18 0x55abf63f57d6 <unknown>\n#19 0x55abf63c1dbf <unknown>\n#20 0x55abf6418748 <unknown>\n#21 0x55abf6418917 <unknown>\n#22 0x55abf6429773 <unknown>\n#23 0x7f3040294ac3 <unknown>","time":{"start":1700646352445,"stop":1700646657192,"duration":304747}},{"uid":"15e1399fba666d88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1144//#testresult/15e1399fba666d88","status":"passed","time":{"start":1700646398215,"stop":1700646406285,"duration":8070}},{"uid":"a6ff886bf3ba5161","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1141//#testresult/a6ff886bf3ba5161","status":"passed","time":{"start":1700616032905,"stop":1700616044348,"duration":11443}},{"uid":"cc2fd011dc0a3b06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1136//#testresult/cc2fd011dc0a3b06","status":"passed","time":{"start":1700529861128,"stop":1700529871130,"duration":10002}}]},"tags":[]},"source":"739613b044cd262b.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}