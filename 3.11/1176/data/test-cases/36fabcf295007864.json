{"uid":"36fabcf295007864","name":"Validate Council Output [EastLindseyDistrictCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"eb374edb17b4c377c221232fbb03cdfe","time":{"start":1701418876843,"stop":1701418882575,"duration":5732},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f25fbc8d080>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f25ec2b2ed0>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7f25ec4f1cd0>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': [{'collectionDate': '15/12/2023', 'type': 'Domestic Waste (Black Bin)'}]}\nuser_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY', web_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6c405ca1d362a6c312ba15506c24ef1d\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"6c405ca1d362a6c312ba15506c24ef1d\", element=\"AC62C12DCC873C90D535EA7477B5187F_element_8\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"6c405ca1d362a6c312ba15506c24ef1d\", element=\"AC62C12DCC873C90D535EA7477B5187F_element_10\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f25fbc8d080>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f25ec2b2ed0>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7f25ec4f1cd0>\npage = ''\nkwargs = {'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, 'url': 'https://www.e-lindsey.gov.uk/', ...}\ndata = {'bins': [{'collectionDate': '15/12/2023', 'type': 'Domestic Waste (Black Bin)'}]}\nuser_paon = 'Raf Coningsby', user_postcode = 'LN4 4SY', web_driver = None\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6c405ca1d362a6c312ba15506c24ef1d\")>\ninputElement_postcode = <selenium.webdriver.remote.webelement.WebElement (session=\"6c405ca1d362a6c312ba15506c24ef1d\", element=\"AC62C12DCC873C90D535EA7477B5187F_element_8\")>\nfindAddress = <selenium.webdriver.remote.webelement.WebElement (session=\"6c405ca1d362a6c312ba15506c24ef1d\", element=\"AC62C12DCC873C90D535EA7477B5187F_element_10\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        web_driver = kwargs.get(\"web_driver\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Create Selenium webdriver\n        driver = create_webdriver(web_driver)\n        driver.get(\"https://www.e-lindsey.gov.uk/article/6714/Your-Waste-Collection-Days\")\n    \n        # Wait for the postcode field to appear then populate it\n        inputElement_postcode = WebDriverWait(driver, 30).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPPOSTCODE\"))\n        )\n        inputElement_postcode.send_keys(user_postcode)\n    \n        # Click search button\n        findAddress = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPSEARCH\"))\n        )\n        findAddress.click()\n    \n        # Wait for the 'Select address' dropdown to appear and select option matching the house name/number\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((\n            By.XPATH,\n            \"//select[@id='WASTECOLLECTIONDAYS202324_LOOKUP_ADDRESSLOOKUPADDRESS']//option[contains(., '\" + user_paon + \"')]\"\n        ))).click()\n    \n        # Wait for the submit button to appear, then click it to get the collection dates\n        submit = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.ID, \"WASTECOLLECTIONDAYS202324_LOOKUP_FIELD2_NEXT\"))\n        )\n        submit.click()\n    \n        # Wait for the collections table to appear\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \".waste-results\")))\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        # Quit Selenium webdriver to release session\n        driver.quit()\n    \n        # Get collections\n        for collection in soup.find_all(\"div\", {\"class\": \"waste-result\"}):\n            ptags = collection.find_all(\"p\")\n            dict_data = {\n                \"type\": collection.find(\"h3\").get_text(strip=True),\n                \"collectionDate\": datetime.strptime(\n                    remove_ordinal_indicator_from_date_string(\n>                       ptags[1].get_text().replace(\"The date of your next collection is\", \"\").replace(\".\", \"\").strip()\n                    ),\n                    \"%A %d %B %Y\"\n                ).strftime(date_format)\n            }\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:73: IndexError","steps":[{"name":"Given the council: EastLindseyDistrictCouncil","time":{"start":1701418876844,"stop":1701418876844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"When we scrape the data from EastLindseyDistrictCouncil using local and the http://selenium:4444 is set","time":{"start":1701418876844,"stop":1701418882575,"duration":5731},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1210-273"},{"name":"thread","value":"2752-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastLindseyDistrictCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":27,"unknown":0,"total":41},"items":[{"uid":"72d979af6ed65e59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1177//#testresult/72d979af6ed65e59","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701418907280,"stop":1701418915419,"duration":8139}},{"uid":"2bebdcc76bdee683","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1175//#testresult/2bebdcc76bdee683","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701414329561,"stop":1701414335829,"duration":6268}},{"uid":"e542d3e7c7e2dd71","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1173//#testresult/e542d3e7c7e2dd71","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701393881851,"stop":1701393889103,"duration":7252}},{"uid":"e14be431aee805cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1169//#testresult/e14be431aee805cf","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701353320911,"stop":1701353329532,"duration":8621}},{"uid":"ad422e1f3909c6f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1170//#testresult/ad422e1f3909c6f7","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701353356262,"stop":1701353362496,"duration":6234}},{"uid":"223f160170177cf4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1163//#testresult/223f160170177cf4","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701307086043,"stop":1701307092068,"duration":6025}},{"uid":"52e3d234859df8e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1161//#testresult/52e3d234859df8e","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701279304442,"stop":1701279310998,"duration":6556}},{"uid":"836b5634d43465d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1156//#testresult/836b5634d43465d8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701220760402,"stop":1701220769209,"duration":8807}},{"uid":"2c1bca5c029c68b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1155//#testresult/2c1bca5c029c68b2","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701134341417,"stop":1701134347934,"duration":6517}},{"uid":"a8b409a5ae82368b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1152//#testresult/a8b409a5ae82368b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701047891376,"stop":1701047901313,"duration":9937}},{"uid":"c88247276dbeb9b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1151//#testresult/c88247276dbeb9b5","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701036139294,"stop":1701036154537,"duration":15243}},{"uid":"1d7dd3b165cb0e6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1150//#testresult/1d7dd3b165cb0e6b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1701036097037,"stop":1701036134568,"duration":37531}},{"uid":"fb3593e347f1615","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1148//#testresult/fb3593e347f1615","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1700961707638,"stop":1700961720424,"duration":12786}},{"uid":"7e7aadc3bb53919a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1147//#testresult/7e7aadc3bb53919a","status":"passed","time":{"start":1700874894257,"stop":1700874900135,"duration":5878}},{"uid":"74b5809238aed9ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1146//#testresult/74b5809238aed9ac","status":"passed","time":{"start":1700788547704,"stop":1700788553705,"duration":6001}},{"uid":"a85bde7fb9e57806","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1145//#testresult/a85bde7fb9e57806","status":"passed","time":{"start":1700702260637,"stop":1700702267565,"duration":6928}},{"uid":"11ccddc521f7f8fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1143//#testresult/11ccddc521f7f8fc","status":"passed","time":{"start":1700646345812,"stop":1700646351217,"duration":5405}},{"uid":"9b42f3822c4a8b82","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1144//#testresult/9b42f3822c4a8b82","status":"passed","time":{"start":1700646393119,"stop":1700646398965,"duration":5846}},{"uid":"47847fad75436db1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1141//#testresult/47847fad75436db1","status":"passed","time":{"start":1700616023481,"stop":1700616038038,"duration":14557}},{"uid":"b13d5d02695654ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1136//#testresult/b13d5d02695654ac","status":"passed","time":{"start":1700529659429,"stop":1700529667687,"duration":8258}}]},"tags":[]},"source":"36fabcf295007864.json","parameterValues":["EastLindseyDistrictCouncil","local","http://selenium:4444"]}