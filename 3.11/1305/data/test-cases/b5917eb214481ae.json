{"uid":"b5917eb214481ae","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1703726153705,"stop":1703726154440,"duration":735},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f35f1d6c400>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f35f14fc2d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f35f14fc2d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f35f1d6c400>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f35f14fc2d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f35f14fc2d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1703726153706,"stop":1703726153706,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1703726153706,"stop":1703726154438,"duration":732},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1703726154438,"stop":1703726154438,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1703726154438,"stop":1703726154440,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1435-110"},{"name":"thread","value":"2711-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":83,"broken":0,"skipped":0,"passed":17,"unknown":0,"total":100},"items":[{"uid":"b69f9a4d77d47799","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1304//#testresult/b69f9a4d77d47799","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2023' does not match format '%A, %d %B %Y'","time":{"start":1703717327907,"stop":1703717329481,"duration":1574}},{"uid":"f9f686474078bce8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1303//#testresult/f9f686474078bce8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703717287729,"stop":1703717288529,"duration":800}},{"uid":"15aabfa26f7c252d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1301//#testresult/15aabfa26f7c252d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703639744782,"stop":1703639745551,"duration":769}},{"uid":"1251f6343e4eb3df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1300//#testresult/1251f6343e4eb3df","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703553334507,"stop":1703553335060,"duration":553}},{"uid":"8f0eeba5d7dabf8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1298//#testresult/8f0eeba5d7dabf8b","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2023' does not match format '%A, %d %B %Y'","time":{"start":1703541131079,"stop":1703541132437,"duration":1358}},{"uid":"17c424162421df74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1295//#testresult/17c424162421df74","status":"failed","statusDetails":"ValueError: time data 'Friday, 5 January\\n              (this collection has been adjusted from its usual time) 2023' does not match format '%A, %d %B %Y'","time":{"start":1703467109543,"stop":1703467110846,"duration":1303}},{"uid":"e454c4b85ed74b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1292//#testresult/e454c4b85ed74b3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703416412614,"stop":1703416413419,"duration":805}},{"uid":"7a84856ec7f4b7ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1291//#testresult/7a84856ec7f4b7ae","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703416377082,"stop":1703416378005,"duration":923}},{"uid":"274a13df56991ed9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1289//#testresult/274a13df56991ed9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703380930788,"stop":1703380931765,"duration":977}},{"uid":"2c5d3cec52802432","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1287//#testresult/2c5d3cec52802432","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703294053676,"stop":1703294055696,"duration":2020}},{"uid":"a7c8b1e59ee0188f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1282//#testresult/a7c8b1e59ee0188f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703207788802,"stop":1703207789668,"duration":866}},{"uid":"cf48ccaf4ae280b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1281//#testresult/cf48ccaf4ae280b9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703121428748,"stop":1703121429672,"duration":924}},{"uid":"a9f2ad2bc634ca70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1280//#testresult/a9f2ad2bc634ca70","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703034253514,"stop":1703034254424,"duration":910}},{"uid":"c35d73132da001d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1279//#testresult/c35d73132da001d8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703024896135,"stop":1703024897219,"duration":1084}},{"uid":"ca4415a3c5be7abf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1278//#testresult/ca4415a3c5be7abf","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703024868174,"stop":1703024869161,"duration":987}},{"uid":"dfcec38f357e1d2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1276//#testresult/dfcec38f357e1d2f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702948684807,"stop":1702948685655,"duration":848}},{"uid":"1b11690b72fa697","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1275//#testresult/1b11690b72fa697","status":"passed","time":{"start":1702862348217,"stop":1702862349953,"duration":1736}},{"uid":"15c692d110866b15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/15c692d110866b15","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702859995379,"stop":1702859995945,"duration":566}},{"uid":"186c025c86771d4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/186c025c86771d4a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702843561058,"stop":1702843561919,"duration":861}},{"uid":"d9f95ea5a1876444","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/d9f95ea5a1876444","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702809371036,"stop":1702809372473,"duration":1437}}]},"tags":[]},"source":"b5917eb214481ae.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}