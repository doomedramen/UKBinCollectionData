{"uid":"276c55e149f7e0c4","name":"Validate Council Output [StokeOnTrentCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"17b62d612f29f2bda9703e241b337994","time":{"start":1706941995731,"stop":1706941996223,"duration":492},"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7fb1680082c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb16731a8d0>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7fb167f23250>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': None, ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\",\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:49: ConnectionAbortedError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7fb1680082c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb16731a8d0>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7fb167f23250>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': None, ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\",\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:49: ConnectionAbortedError","steps":[{"name":"Given the council: StokeOnTrentCityCouncil","time":{"start":1706941995731,"stop":1706941995732,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from StokeOnTrentCityCouncil using None and the None is set","time":{"start":1706941995732,"stop":1706941996223,"duration":491},"status":"failed","statusMessage":"Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az736-156"},{"name":"thread","value":"2730-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StokeOnTrentCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":0,"skipped":0,"passed":121,"unknown":0,"total":142},"items":[{"uid":"238422aa8d5f3b3e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1544//#testresult/238422aa8d5f3b3e","status":"passed","time":{"start":1706939066616,"stop":1706939067734,"duration":1118}},{"uid":"1fd2e1862a3f39ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1542//#testresult/1fd2e1862a3f39ba","status":"passed","time":{"start":1706938564192,"stop":1706938566617,"duration":2425}},{"uid":"3b19fc413510ed56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1541//#testresult/3b19fc413510ed56","status":"passed","time":{"start":1706920159051,"stop":1706920161166,"duration":2115}},{"uid":"ef4ac09f18529ba6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1540//#testresult/ef4ac09f18529ba6","status":"passed","time":{"start":1706833668919,"stop":1706833670296,"duration":1377}},{"uid":"be77c7ccca5eb411","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1538//#testresult/be77c7ccca5eb411","status":"passed","time":{"start":1706747395225,"stop":1706747396729,"duration":1504}},{"uid":"6dcf0b8620b31087","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1537//#testresult/6dcf0b8620b31087","status":"passed","time":{"start":1706660940275,"stop":1706660942334,"duration":2059}},{"uid":"1a13819a929ecc7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1535//#testresult/1a13819a929ecc7e","status":"passed","time":{"start":1706574466688,"stop":1706574469336,"duration":2648}},{"uid":"a446314ddfc2890","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1534//#testresult/a446314ddfc2890","status":"passed","time":{"start":1706488175320,"stop":1706488176754,"duration":1434}},{"uid":"a32ad6ce2af3a10b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1531//#testresult/a32ad6ce2af3a10b","status":"passed","time":{"start":1706401838543,"stop":1706401844958,"duration":6415}},{"uid":"86b56696f857a45e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1529//#testresult/86b56696f857a45e","status":"passed","time":{"start":1706315315897,"stop":1706315318146,"duration":2249}},{"uid":"3a1171d342f2bf1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1528//#testresult/3a1171d342f2bf1","status":"passed","time":{"start":1706228942587,"stop":1706228944704,"duration":2117}},{"uid":"b7b65aae4c3988ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1523//#testresult/b7b65aae4c3988ba","status":"passed","time":{"start":1706142642034,"stop":1706142648794,"duration":6760}},{"uid":"a9ab45be6657c575","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1522//#testresult/a9ab45be6657c575","status":"passed","time":{"start":1706056242989,"stop":1706056254861,"duration":11872}},{"uid":"1bdff0126b684626","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1521//#testresult/1bdff0126b684626","status":"passed","time":{"start":1705969845169,"stop":1705969847853,"duration":2684}},{"uid":"81ec5390c561ea8d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1520//#testresult/81ec5390c561ea8d","status":"passed","time":{"start":1705883530129,"stop":1705883542727,"duration":12598}},{"uid":"437fc6818344e1e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1519//#testresult/437fc6818344e1e","status":"passed","time":{"start":1705797183090,"stop":1705797189697,"duration":6607}},{"uid":"b325a91c4d294569","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1515//#testresult/b325a91c4d294569","status":"passed","time":{"start":1705710590018,"stop":1705710592220,"duration":2202}},{"uid":"58222b5b7d3581d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1511//#testresult/58222b5b7d3581d","status":"passed","time":{"start":1705624253195,"stop":1705624256662,"duration":3467}},{"uid":"e6b6fbc263699d29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/e6b6fbc263699d29","status":"passed","time":{"start":1705537765336,"stop":1705537766749,"duration":1413}},{"uid":"6a553620dea26310","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/6a553620dea26310","status":"passed","time":{"start":1705451395057,"stop":1705451397025,"duration":1968}}]},"tags":[]},"source":"276c55e149f7e0c4.json","parameterValues":["StokeOnTrentCityCouncil","None","None"]}