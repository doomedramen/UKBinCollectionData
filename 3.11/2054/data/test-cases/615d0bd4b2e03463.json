{"uid":"615d0bd4b2e03463","name":"Validate Council Output [SouthKestevenDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2a7001e5e46e0082211a729ea73e7cc2","time":{"start":1725236378156,"stop":1725236685822,"duration":307666},"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: Unable to route (DELETE) /session/04b5a7d623df7a52e2929e44ec076486","statusTrace":"self = <SouthKestevenDistrictCouncil.CouncilClass object at 0x7fd284677910>\npage = 'https://pre.southkesteven.gov.uk/BinSearch.aspx'\nkwargs = {'council_module_str': 'SouthKestevenDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"04b5a7d623df7a52e2929e44ec076486\")>\nuser_postcode = 'PE68BL', user_uprn = None, web_driver = 'http://localhost:4444'\nheadless = True, house_number = '2 Althorpe Close, Market Deeping, PE6 8BL'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            # Make a BS4 object\n    \n            page = \"https://pre.southkesteven.gov.uk/BinSearch.aspx\"\n    \n            user_postcode = kwargs.get(\"postcode\")\n            user_uprn = kwargs.get(\"uprn\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            house_number = kwargs.get(\"paon\")\n    \n            driver = create_webdriver(web_driver, headless, None, __name__)\n>           driver.get(page)\n\nuk_bin_collection/uk_bin_collection/councils/SouthKestevenDistrictCouncil.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd2844fdad0>\nresponse = {'status': 500, 'value': '{\\n  \"value\": {\\n    \"stacktrace\": \"java.lang.RuntimeException: Unable to execute request fo...025-azure\\', java.version: \\'17.0.12\\'\\\\nDriver info: driver.version: unknown\",\\n    \"error\": \"unknown error\"\\n  }\\n}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Unable to execute request for an existing session: java.util.concurrent.TimeoutException\nE       Build info: version: '4.24.0', revision: '748ffc9bc3'\nE       System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.5.0-1025-azure', java.version: '17.0.12'\nE       Driver info: driver.version: unknown\nE       Stacktrace:\nE       java.lang.RuntimeException: Unable to execute request for an existing session: java.util.concurrent.TimeoutException\nE       Build info: version: '4.24.0', revision: '748ffc9bc3'\nE       System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.5.0-1025-azure', java.version: '17.0.12'\nE       Driver info: driver.version: unknown\nE       \tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:208)\nE       \tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:397)\nE       \tat org.openqa.selenium.remote.http.Route.execute(Route.java:69)\nE       \tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:360)\nE       \tat org.openqa.selenium.remote.http.Route.execute(Route.java:69)\nE       \tat org.openqa.selenium.grid.router.Router.execute(Router.java:87)\nE       \tat org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\nE       \tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:63)\nE       \tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:360)\nE       \tat org.openqa.selenium.remote.http.Route.execute(Route.java:69)\nE       \tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\nE       \tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\nE       \tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:63)\nE       \tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\nE       \tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:63)\nE       \tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\nE       \tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\nE       \tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\nE       \tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\nE       \tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\nE       \tat java.base/java.lang.Thread.run(Thread.java:840)\nE       Caused by: java.util.concurrent.TimeoutException\nE       \tat java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)\nE       \tat java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)\nE       \tat org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:401)\nE       \tat org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)\nE       \tat org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)\nE       \tat org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:374)\nE       \tat org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:54)\nE       \tat org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:90)\nE       \tat org.openqa.selenium.grid.node.DefaultActiveSession.execute(DefaultActiveSession.java:62)\nE       \tat org.openqa.selenium.grid.node.local.SessionSlot.execute(SessionSlot.java:126)\nE       \tat org.openqa.selenium.grid.node.local.LocalNode.executeWebDriverCommand(LocalNode.java:633)\nE       \tat org.openqa.selenium.grid.node.ForwardWebDriverCommand.execute(ForwardWebDriverCommand.java:35)\nE       \tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:397)\nE       \tat org.openqa.selenium.remote.http.Route.execute(Route.java:69)\nE       \tat org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:87)\nE       \tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:63)\nE       \tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:360)\nE       \tat org.openqa.selenium.remote.http.Route.execute(Route.java:69)\nE       \tat org.openqa.selenium.grid.node.Node.execute(Node.java:270)\nE       \tat org.openqa.selenium.grid.web.CombinedHandler.execute(CombinedHandler.java:55)\nE       \tat org.openqa.selenium.grid.web.RoutableHttpClientFactory$1.execute(RoutableHttpClientFactory.java:71)\nE       \tat org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:90)\nE       \tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:181)\nE       \t... 20 more\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException\n\nDuring handling of the above exception, another exception occurred:\n\nfixturefunc = <function scrape_step at 0x7fd28527b560>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthKestevenDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd28510ce50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SouthKestevenDistrictCouncil.py:150: in parse_data\n    driver.quit()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:476: in quit\n    self.execute(Command.QUIT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd2844fdad0>\nresponse = {'status': 404, 'value': '{\\n  \"value\": \"\\\\u002fsession\\\\u002f04b5a7d623df7a52e2929e44ec076486\",\\n  \"message\": \"Unable...002fsession\\\\u002f04b5a7d623df7a52e2929e44ec076486\",\\n  \"error\": \"org.openqa.selenium.UnsupportedCommandException\"\\n}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Unable to route (DELETE) /session/04b5a7d623df7a52e2929e44ec076486\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: Unable to route (DELETE) /session/04b5a7d623df7a52e2929e44ec076486","statusTrace":"self = <SouthKestevenDistrictCouncil.CouncilClass object at 0x7fd284677910>\npage = 'https://pre.southkesteven.gov.uk/BinSearch.aspx'\nkwargs = {'council_module_str': 'SouthKestevenDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"04b5a7d623df7a52e2929e44ec076486\")>\nuser_postcode = 'PE68BL', user_uprn = None, web_driver = 'http://localhost:4444'\nheadless = True, house_number = '2 Althorpe Close, Market Deeping, PE6 8BL'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            # Make a BS4 object\n    \n            page = \"https://pre.southkesteven.gov.uk/BinSearch.aspx\"\n    \n            user_postcode = kwargs.get(\"postcode\")\n            user_uprn = kwargs.get(\"uprn\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            house_number = kwargs.get(\"paon\")\n    \n            driver = create_webdriver(web_driver, headless, None, __name__)\n>           driver.get(page)\n\nuk_bin_collection/uk_bin_collection/councils/SouthKestevenDistrictCouncil.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd2844fdad0>\nresponse = {'status': 500, 'value': '{\\n  \"value\": {\\n    \"stacktrace\": \"java.lang.RuntimeException: Unable to execute request fo...025-azure\\', java.version: \\'17.0.12\\'\\\\nDriver info: driver.version: unknown\",\\n    \"error\": \"unknown error\"\\n  }\\n}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Unable to execute request for an existing session: java.util.concurrent.TimeoutException\nE       Build info: version: '4.24.0', revision: '748ffc9bc3'\nE       System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.5.0-1025-azure', java.version: '17.0.12'\nE       Driver info: driver.version: unknown\nE       Stacktrace:\nE       java.lang.RuntimeException: Unable to execute request for an existing session: java.util.concurrent.TimeoutException\nE       Build info: version: '4.24.0', revision: '748ffc9bc3'\nE       System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.5.0-1025-azure', java.version: '17.0.12'\nE       Driver info: driver.version: unknown\nE       \tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:208)\nE       \tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:397)\nE       \tat org.openqa.selenium.remote.http.Route.execute(Route.java:69)\nE       \tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:360)\nE       \tat org.openqa.selenium.remote.http.Route.execute(Route.java:69)\nE       \tat org.openqa.selenium.grid.router.Router.execute(Router.java:87)\nE       \tat org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\nE       \tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:63)\nE       \tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:360)\nE       \tat org.openqa.selenium.remote.http.Route.execute(Route.java:69)\nE       \tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\nE       \tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\nE       \tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:63)\nE       \tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\nE       \tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:63)\nE       \tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\nE       \tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\nE       \tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\nE       \tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\nE       \tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\nE       \tat java.base/java.lang.Thread.run(Thread.java:840)\nE       Caused by: java.util.concurrent.TimeoutException\nE       \tat java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)\nE       \tat java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)\nE       \tat org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:401)\nE       \tat org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)\nE       \tat org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)\nE       \tat org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:374)\nE       \tat org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:54)\nE       \tat org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:90)\nE       \tat org.openqa.selenium.grid.node.DefaultActiveSession.execute(DefaultActiveSession.java:62)\nE       \tat org.openqa.selenium.grid.node.local.SessionSlot.execute(SessionSlot.java:126)\nE       \tat org.openqa.selenium.grid.node.local.LocalNode.executeWebDriverCommand(LocalNode.java:633)\nE       \tat org.openqa.selenium.grid.node.ForwardWebDriverCommand.execute(ForwardWebDriverCommand.java:35)\nE       \tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:397)\nE       \tat org.openqa.selenium.remote.http.Route.execute(Route.java:69)\nE       \tat org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:87)\nE       \tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:63)\nE       \tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:360)\nE       \tat org.openqa.selenium.remote.http.Route.execute(Route.java:69)\nE       \tat org.openqa.selenium.grid.node.Node.execute(Node.java:270)\nE       \tat org.openqa.selenium.grid.web.CombinedHandler.execute(CombinedHandler.java:55)\nE       \tat org.openqa.selenium.grid.web.RoutableHttpClientFactory$1.execute(RoutableHttpClientFactory.java:71)\nE       \tat org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:90)\nE       \tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:181)\nE       \t... 20 more\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException\n\nDuring handling of the above exception, another exception occurred:\n\nfixturefunc = <function scrape_step at 0x7fd28527b560>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthKestevenDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd28510ce50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SouthKestevenDistrictCouncil.py:150: in parse_data\n    driver.quit()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:476: in quit\n    self.execute(Command.QUIT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd2844fdad0>\nresponse = {'status': 404, 'value': '{\\n  \"value\": \"\\\\u002fsession\\\\u002f04b5a7d623df7a52e2929e44ec076486\",\\n  \"message\": \"Unable...002fsession\\\\u002f04b5a7d623df7a52e2929e44ec076486\",\\n  \"error\": \"org.openqa.selenium.UnsupportedCommandException\"\\n}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Unable to route (DELETE) /session/04b5a7d623df7a52e2929e44ec076486\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","steps":[{"name":"Given the council","time":{"start":1725236378156,"stop":1725236378157,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725236378157,"stop":1725236685822,"duration":307665},"status":"failed","statusMessage":"Message: Unable to route (DELETE) /session/04b5a7d623df7a52e2929e44ec076486\n","statusTrace":"selenium.common.exceptions.WebDriverException: Message: Unable to route (DELETE) /session/04b5a7d623df7a52e2929e44ec076486\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"461248075f00fee8","name":"stdout","source":"461248075f00fee8.txt","type":"text/plain","size":4391}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1106-163"},{"name":"thread","value":"2773-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthKestevenDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":98,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":98},"items":[{"uid":"379025dd3ae4096e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2053//#testresult/379025dd3ae4096e","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: Unable to route (DELETE) /session/47de4a2fd861ebbce3f1e44918f6eadf","time":{"start":1725150362312,"stop":1725150687394,"duration":325082}},{"uid":"457bf0e5239f34f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2052//#testresult/457bf0e5239f34f7","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: Unable to route (DELETE) /session/acb28530973cda439998d1da36f9f346","time":{"start":1725063685752,"stop":1725063993697,"duration":307945}},{"uid":"bb00abf7a46a3e66","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2051//#testresult/bb00abf7a46a3e66","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: Unable to route (DELETE) /session/5c07a91873fb98022d0615abc55f9669","time":{"start":1724977500037,"stop":1724977817563,"duration":317526}},{"uid":"4704ea226a7c21f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2049//#testresult/4704ea226a7c21f","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55a822c1c6ca <unknown>\n#1 0x55a8228ed600 <unknown>\n#2 0x55a8228e5631 <unknown>\n#3 0x55a8228d5839 <unknown>\n#4 0x55a8228d75c4 <unknown>\n#5 0x55a8228d5b05 <unknown>\n#6 0x55a8228d535f <unknown>\n#7 0x55a8228d5252 <unknown>\n#8 0x55a8228d356c <unknown>\n#9 0x55a8228d38ea <unknown>\n#10 0x55a8228eff21 <unknown>\n#11 0x55a82297eb45 <unknown>\n#12 0x55a82295f8a2 <unknown>\n#13 0x55a82297e04a <unknown>\n#14 0x55a82295f643 <unknown>\n#15 0x55a82292fd31 <unknown>\n#16 0x55a82293079e <unknown>\n#17 0x55a822be425b <unknown>\n#18 0x55a822be81f2 <unknown>\n#19 0x55a822bd1615 <unknown>\n#20 0x55a822be8d82 <unknown>\n#21 0x55a822bb625f <unknown>\n#22 0x55a822c0be68 <unknown>\n#23 0x55a822c0c040 <unknown>\n#24 0x55a822c1b49c <unknown>\n#25 0x7f5f7331da94 <unknown>\n#26 0x7f5f733aaa34 __clone","time":{"start":1724890792768,"stop":1724891061520,"duration":268752}},{"uid":"9a97b13bde15df59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2048//#testresult/9a97b13bde15df59","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55d0dd3286ca <unknown>\n#1 0x55d0dcff9600 <unknown>\n#2 0x55d0dcff1631 <unknown>\n#3 0x55d0dcfe1839 <unknown>\n#4 0x55d0dcfe35c4 <unknown>\n#5 0x55d0dcfe1b05 <unknown>\n#6 0x55d0dcfe135f <unknown>\n#7 0x55d0dcfe1252 <unknown>\n#8 0x55d0dcfdf56c <unknown>\n#9 0x55d0dcfdf8ea <unknown>\n#10 0x55d0dcffbf21 <unknown>\n#11 0x55d0dd08ab45 <unknown>\n#12 0x55d0dd06b8a2 <unknown>\n#13 0x55d0dd08a04a <unknown>\n#14 0x55d0dd06b643 <unknown>\n#15 0x55d0dd03bd31 <unknown>\n#16 0x55d0dd03c79e <unknown>\n#17 0x55d0dd2f025b <unknown>\n#18 0x55d0dd2f41f2 <unknown>\n#19 0x55d0dd2dd615 <unknown>\n#20 0x55d0dd2f4d82 <unknown>\n#21 0x55d0dd2c225f <unknown>\n#22 0x55d0dd317e68 <unknown>\n#23 0x55d0dd318040 <unknown>\n#24 0x55d0dd32749c <unknown>\n#25 0x7f09d9471a94 <unknown>\n#26 0x7f09d94fea34 __clone","time":{"start":1724804471968,"stop":1724804616819,"duration":144851}},{"uid":"f19b54498bbf6607","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2043//#testresult/f19b54498bbf6607","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x556d805ac6ca <unknown>\n#1 0x556d8027d600 <unknown>\n#2 0x556d80275631 <unknown>\n#3 0x556d80265839 <unknown>\n#4 0x556d802675c4 <unknown>\n#5 0x556d80265b05 <unknown>\n#6 0x556d8026535f <unknown>\n#7 0x556d80265252 <unknown>\n#8 0x556d8026356c <unknown>\n#9 0x556d802638ea <unknown>\n#10 0x556d8027ff21 <unknown>\n#11 0x556d8030eb45 <unknown>\n#12 0x556d802ef8a2 <unknown>\n#13 0x556d8030e04a <unknown>\n#14 0x556d802ef643 <unknown>\n#15 0x556d802bfd31 <unknown>\n#16 0x556d802c079e <unknown>\n#17 0x556d8057425b <unknown>\n#18 0x556d805781f2 <unknown>\n#19 0x556d80561615 <unknown>\n#20 0x556d80578d82 <unknown>\n#21 0x556d8054625f <unknown>\n#22 0x556d8059be68 <unknown>\n#23 0x556d8059c040 <unknown>\n#24 0x556d805ab49c <unknown>\n#25 0x7f5858ce8a94 <unknown>\n#26 0x7f5858d75a34 __clone","time":{"start":1724717937534,"stop":1724718187799,"duration":250265}},{"uid":"308fb9678196ece6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2039//#testresult/308fb9678196ece6","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x559b6ef006ca <unknown>\n#1 0x559b6ebd1600 <unknown>\n#2 0x559b6ebc9631 <unknown>\n#3 0x559b6ebb9839 <unknown>\n#4 0x559b6ebbb5c4 <unknown>\n#5 0x559b6ebb9b05 <unknown>\n#6 0x559b6ebb935f <unknown>\n#7 0x559b6ebb9252 <unknown>\n#8 0x559b6ebb756c <unknown>\n#9 0x559b6ebb78ea <unknown>\n#10 0x559b6ebd3f21 <unknown>\n#11 0x559b6ec62b45 <unknown>\n#12 0x559b6ec438a2 <unknown>\n#13 0x559b6ec6204a <unknown>\n#14 0x559b6ec43643 <unknown>\n#15 0x559b6ec13d31 <unknown>\n#16 0x559b6ec1479e <unknown>\n#17 0x559b6eec825b <unknown>\n#18 0x559b6eecc1f2 <unknown>\n#19 0x559b6eeb5615 <unknown>\n#20 0x559b6eeccd82 <unknown>\n#21 0x559b6ee9a25f <unknown>\n#22 0x559b6eeefe68 <unknown>\n#23 0x559b6eef0040 <unknown>\n#24 0x559b6eeff49c <unknown>\n#25 0x7f7c0a73ba94 <unknown>\n#26 0x7f7c0a7c8a34 __clone","time":{"start":1724631564026,"stop":1724631836127,"duration":272101}},{"uid":"ec6cfcd233c45387","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2038//#testresult/ec6cfcd233c45387","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55f8350816ca <unknown>\n#1 0x55f834d52600 <unknown>\n#2 0x55f834d4a631 <unknown>\n#3 0x55f834d3a839 <unknown>\n#4 0x55f834d3c5c4 <unknown>\n#5 0x55f834d3ab05 <unknown>\n#6 0x55f834d3a35f <unknown>\n#7 0x55f834d3a252 <unknown>\n#8 0x55f834d3856c <unknown>\n#9 0x55f834d388ea <unknown>\n#10 0x55f834d54f21 <unknown>\n#11 0x55f834de3b45 <unknown>\n#12 0x55f834dc48a2 <unknown>\n#13 0x55f834de304a <unknown>\n#14 0x55f834dc4643 <unknown>\n#15 0x55f834d94d31 <unknown>\n#16 0x55f834d9579e <unknown>\n#17 0x55f83504925b <unknown>\n#18 0x55f83504d1f2 <unknown>\n#19 0x55f835036615 <unknown>\n#20 0x55f83504dd82 <unknown>\n#21 0x55f83501b25f <unknown>\n#22 0x55f835070e68 <unknown>\n#23 0x55f835071040 <unknown>\n#24 0x55f83508049c <unknown>\n#25 0x7f9151e1ca94 <unknown>\n#26 0x7f9151ea9a34 __clone","time":{"start":1724545245019,"stop":1724545394331,"duration":149312}},{"uid":"e5f47a9c3739fa36","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2037//#testresult/e5f47a9c3739fa36","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55ef321c96ca <unknown>\n#1 0x55ef31e9a600 <unknown>\n#2 0x55ef31e92631 <unknown>\n#3 0x55ef31e82839 <unknown>\n#4 0x55ef31e845c4 <unknown>\n#5 0x55ef31e82b05 <unknown>\n#6 0x55ef31e8235f <unknown>\n#7 0x55ef31e82252 <unknown>\n#8 0x55ef31e8056c <unknown>\n#9 0x55ef31e808ea <unknown>\n#10 0x55ef31e9cf21 <unknown>\n#11 0x55ef31f2bb45 <unknown>\n#12 0x55ef31f0c8a2 <unknown>\n#13 0x55ef31f2b04a <unknown>\n#14 0x55ef31f0c643 <unknown>\n#15 0x55ef31edcd31 <unknown>\n#16 0x55ef31edd79e <unknown>\n#17 0x55ef3219125b <unknown>\n#18 0x55ef321951f2 <unknown>\n#19 0x55ef3217e615 <unknown>\n#20 0x55ef32195d82 <unknown>\n#21 0x55ef3216325f <unknown>\n#22 0x55ef321b8e68 <unknown>\n#23 0x55ef321b9040 <unknown>\n#24 0x55ef321c849c <unknown>\n#25 0x7fd79b0b4a94 <unknown>\n#26 0x7fd79b141a34 __clone","time":{"start":1724458889162,"stop":1724459054383,"duration":165221}},{"uid":"2120bd504f437e39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2036//#testresult/2120bd504f437e39","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x5585039f36ca <unknown>\n#1 0x5585036c4600 <unknown>\n#2 0x5585036bc631 <unknown>\n#3 0x5585036ac839 <unknown>\n#4 0x5585036ae5c4 <unknown>\n#5 0x5585036acb05 <unknown>\n#6 0x5585036ac35f <unknown>\n#7 0x5585036ac252 <unknown>\n#8 0x5585036aa56c <unknown>\n#9 0x5585036aa8ea <unknown>\n#10 0x5585036c6f21 <unknown>\n#11 0x558503755b45 <unknown>\n#12 0x5585037368a2 <unknown>\n#13 0x55850375504a <unknown>\n#14 0x558503736643 <unknown>\n#15 0x558503706d31 <unknown>\n#16 0x55850370779e <unknown>\n#17 0x5585039bb25b <unknown>\n#18 0x5585039bf1f2 <unknown>\n#19 0x5585039a8615 <unknown>\n#20 0x5585039bfd82 <unknown>\n#21 0x55850398d25f <unknown>\n#22 0x5585039e2e68 <unknown>\n#23 0x5585039e3040 <unknown>\n#24 0x5585039f249c <unknown>\n#25 0x7f19c81f4a94 <unknown>\n#26 0x7f19c8281a34 __clone","time":{"start":1724372509355,"stop":1724372645900,"duration":136545}},{"uid":"b57a6bb0a87e5594","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2034//#testresult/b57a6bb0a87e5594","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55c4d4a206ca <unknown>\n#1 0x55c4d46f1600 <unknown>\n#2 0x55c4d46e9631 <unknown>\n#3 0x55c4d46d9839 <unknown>\n#4 0x55c4d46db5c4 <unknown>\n#5 0x55c4d46d9b05 <unknown>\n#6 0x55c4d46d935f <unknown>\n#7 0x55c4d46d9252 <unknown>\n#8 0x55c4d46d756c <unknown>\n#9 0x55c4d46d78ea <unknown>\n#10 0x55c4d46f3f21 <unknown>\n#11 0x55c4d4782b45 <unknown>\n#12 0x55c4d47638a2 <unknown>\n#13 0x55c4d478204a <unknown>\n#14 0x55c4d4763643 <unknown>\n#15 0x55c4d4733d31 <unknown>\n#16 0x55c4d473479e <unknown>\n#17 0x55c4d49e825b <unknown>\n#18 0x55c4d49ec1f2 <unknown>\n#19 0x55c4d49d5615 <unknown>\n#20 0x55c4d49ecd82 <unknown>\n#21 0x55c4d49ba25f <unknown>\n#22 0x55c4d4a0fe68 <unknown>\n#23 0x55c4d4a10040 <unknown>\n#24 0x55c4d4a1f49c <unknown>\n#25 0x7fca14115a94 <unknown>\n#26 0x7fca141a2a34 __clone","time":{"start":1724285891036,"stop":1724286163049,"duration":272013}},{"uid":"840e59146d55bc72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2033//#testresult/840e59146d55bc72","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x560e535616ca <unknown>\n#1 0x560e53232600 <unknown>\n#2 0x560e5322a631 <unknown>\n#3 0x560e5321a839 <unknown>\n#4 0x560e5321c5c4 <unknown>\n#5 0x560e5321ab05 <unknown>\n#6 0x560e5321a35f <unknown>\n#7 0x560e5321a252 <unknown>\n#8 0x560e5321856c <unknown>\n#9 0x560e532188ea <unknown>\n#10 0x560e53234f21 <unknown>\n#11 0x560e532c3b45 <unknown>\n#12 0x560e532a48a2 <unknown>\n#13 0x560e532c304a <unknown>\n#14 0x560e532a4643 <unknown>\n#15 0x560e53274d31 <unknown>\n#16 0x560e5327579e <unknown>\n#17 0x560e5352925b <unknown>\n#18 0x560e5352d1f2 <unknown>\n#19 0x560e53516615 <unknown>\n#20 0x560e5352dd82 <unknown>\n#21 0x560e534fb25f <unknown>\n#22 0x560e53550e68 <unknown>\n#23 0x560e53551040 <unknown>\n#24 0x560e5356049c <unknown>\n#25 0x7f34773c7a94 <unknown>\n#26 0x7f3477454a34 __clone","time":{"start":1724199678993,"stop":1724199823424,"duration":144431}},{"uid":"15a3e819e74e0678","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2032//#testresult/15a3e819e74e0678","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.99)\nStacktrace:\n#0 0x560714cb86aa <unknown>\n#1 0x560714989600 <unknown>\n#2 0x560714981631 <unknown>\n#3 0x560714971839 <unknown>\n#4 0x5607149735c4 <unknown>\n#5 0x560714971b05 <unknown>\n#6 0x56071497135f <unknown>\n#7 0x560714971252 <unknown>\n#8 0x56071496f56c <unknown>\n#9 0x56071496f8ea <unknown>\n#10 0x56071498bf21 <unknown>\n#11 0x560714a1ab45 <unknown>\n#12 0x5607149fb8a2 <unknown>\n#13 0x560714a1a04a <unknown>\n#14 0x5607149fb643 <unknown>\n#15 0x5607149cbd31 <unknown>\n#16 0x5607149cc79e <unknown>\n#17 0x560714c8023b <unknown>\n#18 0x560714c841d2 <unknown>\n#19 0x560714c6d5f5 <unknown>\n#20 0x560714c84d62 <unknown>\n#21 0x560714c5223f <unknown>\n#22 0x560714ca7e48 <unknown>\n#23 0x560714ca8020 <unknown>\n#24 0x560714cb747c <unknown>\n#25 0x7f1e1ce27a94 <unknown>\n#26 0x7f1e1ceb4a34 __clone","time":{"start":1724113305622,"stop":1724113441015,"duration":135393}},{"uid":"7ce976a011c2b6f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2031//#testresult/7ce976a011c2b6f","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.99)\nStacktrace:\n#0 0x555fbf1df6aa <unknown>\n#1 0x555fbeeb0600 <unknown>\n#2 0x555fbeea8631 <unknown>\n#3 0x555fbee98839 <unknown>\n#4 0x555fbee9a5c4 <unknown>\n#5 0x555fbee98b05 <unknown>\n#6 0x555fbee9835f <unknown>\n#7 0x555fbee98252 <unknown>\n#8 0x555fbee9656c <unknown>\n#9 0x555fbee968ea <unknown>\n#10 0x555fbeeb2f21 <unknown>\n#11 0x555fbef41b45 <unknown>\n#12 0x555fbef228a2 <unknown>\n#13 0x555fbef4104a <unknown>\n#14 0x555fbef22643 <unknown>\n#15 0x555fbeef2d31 <unknown>\n#16 0x555fbeef379e <unknown>\n#17 0x555fbf1a723b <unknown>\n#18 0x555fbf1ab1d2 <unknown>\n#19 0x555fbf1945f5 <unknown>\n#20 0x555fbf1abd62 <unknown>\n#21 0x555fbf17923f <unknown>\n#22 0x555fbf1cee48 <unknown>\n#23 0x555fbf1cf020 <unknown>\n#24 0x555fbf1de47c <unknown>\n#25 0x7f02ac44ea94 <unknown>\n#26 0x7f02ac4dba34 __clone","time":{"start":1724026842157,"stop":1724026987877,"duration":145720}},{"uid":"5ee2c19b36ba23f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2030//#testresult/5ee2c19b36ba23f8","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.99)\nStacktrace:\n#0 0x5631efcf26aa <unknown>\n#1 0x5631ef9c3600 <unknown>\n#2 0x5631ef9bb631 <unknown>\n#3 0x5631ef9ab839 <unknown>\n#4 0x5631ef9ad5c4 <unknown>\n#5 0x5631ef9abb05 <unknown>\n#6 0x5631ef9ab35f <unknown>\n#7 0x5631ef9ab252 <unknown>\n#8 0x5631ef9a956c <unknown>\n#9 0x5631ef9a98ea <unknown>\n#10 0x5631ef9c5f21 <unknown>\n#11 0x5631efa54b45 <unknown>\n#12 0x5631efa358a2 <unknown>\n#13 0x5631efa5404a <unknown>\n#14 0x5631efa35643 <unknown>\n#15 0x5631efa05d31 <unknown>\n#16 0x5631efa0679e <unknown>\n#17 0x5631efcba23b <unknown>\n#18 0x5631efcbe1d2 <unknown>\n#19 0x5631efca75f5 <unknown>\n#20 0x5631efcbed62 <unknown>\n#21 0x5631efc8c23f <unknown>\n#22 0x5631efce1e48 <unknown>\n#23 0x5631efce2020 <unknown>\n#24 0x5631efcf147c <unknown>\n#25 0x7f6aecb10a94 <unknown>\n#26 0x7f6aecb9da34 __clone","time":{"start":1723940492065,"stop":1723940637212,"duration":145147}},{"uid":"486f9fd61d3b53b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2029//#testresult/486f9fd61d3b53b1","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.99)\nStacktrace:\n#0 0x55851990e6aa <unknown>\n#1 0x5585195df600 <unknown>\n#2 0x5585195d7631 <unknown>\n#3 0x5585195c7839 <unknown>\n#4 0x5585195c95c4 <unknown>\n#5 0x5585195c7b05 <unknown>\n#6 0x5585195c735f <unknown>\n#7 0x5585195c7252 <unknown>\n#8 0x5585195c556c <unknown>\n#9 0x5585195c58ea <unknown>\n#10 0x5585195e1f21 <unknown>\n#11 0x558519670b45 <unknown>\n#12 0x5585196518a2 <unknown>\n#13 0x55851967004a <unknown>\n#14 0x558519651643 <unknown>\n#15 0x558519621d31 <unknown>\n#16 0x55851962279e <unknown>\n#17 0x5585198d623b <unknown>\n#18 0x5585198da1d2 <unknown>\n#19 0x5585198c35f5 <unknown>\n#20 0x5585198dad62 <unknown>\n#21 0x5585198a823f <unknown>\n#22 0x5585198fde48 <unknown>\n#23 0x5585198fe020 <unknown>\n#24 0x55851990d47c <unknown>\n#25 0x7f96ae96da94 <unknown>\n#26 0x7f96ae9faa34 __clone","time":{"start":1723853974613,"stop":1723854246886,"duration":272273}},{"uid":"f3e21d1c46057070","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2028//#testresult/f3e21d1c46057070","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.99)\nStacktrace:\n#0 0x559aa87806aa <unknown>\n#1 0x559aa8451600 <unknown>\n#2 0x559aa8449631 <unknown>\n#3 0x559aa8439839 <unknown>\n#4 0x559aa843b5c4 <unknown>\n#5 0x559aa8439b05 <unknown>\n#6 0x559aa843935f <unknown>\n#7 0x559aa8439252 <unknown>\n#8 0x559aa843756c <unknown>\n#9 0x559aa84378ea <unknown>\n#10 0x559aa8453f21 <unknown>\n#11 0x559aa84e2b45 <unknown>\n#12 0x559aa84c38a2 <unknown>\n#13 0x559aa84e204a <unknown>\n#14 0x559aa84c3643 <unknown>\n#15 0x559aa8493d31 <unknown>\n#16 0x559aa849479e <unknown>\n#17 0x559aa874823b <unknown>\n#18 0x559aa874c1d2 <unknown>\n#19 0x559aa87355f5 <unknown>\n#20 0x559aa874cd62 <unknown>\n#21 0x559aa871a23f <unknown>\n#22 0x559aa876fe48 <unknown>\n#23 0x559aa8770020 <unknown>\n#24 0x559aa877f47c <unknown>\n#25 0x7fa332f22a94 <unknown>\n#26 0x7fa332fafa34 __clone","time":{"start":1723767644867,"stop":1723767793521,"duration":148654}},{"uid":"4bbf437258f32988","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2027//#testresult/4bbf437258f32988","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.99)\nStacktrace:\n#0 0x563853e646aa <unknown>\n#1 0x563853b35600 <unknown>\n#2 0x563853b2d631 <unknown>\n#3 0x563853b1d839 <unknown>\n#4 0x563853b1f5c4 <unknown>\n#5 0x563853b1db05 <unknown>\n#6 0x563853b1d35f <unknown>\n#7 0x563853b1d252 <unknown>\n#8 0x563853b1b56c <unknown>\n#9 0x563853b1b8ea <unknown>\n#10 0x563853b37f21 <unknown>\n#11 0x563853bc6b45 <unknown>\n#12 0x563853ba78a2 <unknown>\n#13 0x563853bc604a <unknown>\n#14 0x563853ba7643 <unknown>\n#15 0x563853b77d31 <unknown>\n#16 0x563853b7879e <unknown>\n#17 0x563853e2c23b <unknown>\n#18 0x563853e301d2 <unknown>\n#19 0x563853e195f5 <unknown>\n#20 0x563853e30d62 <unknown>\n#21 0x563853dfe23f <unknown>\n#22 0x563853e53e48 <unknown>\n#23 0x563853e54020 <unknown>\n#24 0x563853e6347c <unknown>\n#25 0x7f8bf95d8a94 <unknown>\n#26 0x7f8bf9665a34 __clone","time":{"start":1723680779519,"stop":1723680925015,"duration":145496}},{"uid":"b90dbd47dcf0e866","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2026//#testresult/b90dbd47dcf0e866","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.99)\nStacktrace:\n#0 0x55774c63f6aa <unknown>\n#1 0x55774c310600 <unknown>\n#2 0x55774c308631 <unknown>\n#3 0x55774c2f8839 <unknown>\n#4 0x55774c2fa5c4 <unknown>\n#5 0x55774c2f8b05 <unknown>\n#6 0x55774c2f835f <unknown>\n#7 0x55774c2f8252 <unknown>\n#8 0x55774c2f656c <unknown>\n#9 0x55774c2f68ea <unknown>\n#10 0x55774c312f21 <unknown>\n#11 0x55774c3a1b45 <unknown>\n#12 0x55774c3828a2 <unknown>\n#13 0x55774c3a104a <unknown>\n#14 0x55774c382643 <unknown>\n#15 0x55774c352d31 <unknown>\n#16 0x55774c35379e <unknown>\n#17 0x55774c60723b <unknown>\n#18 0x55774c60b1d2 <unknown>\n#19 0x55774c5f45f5 <unknown>\n#20 0x55774c60bd62 <unknown>\n#21 0x55774c5d923f <unknown>\n#22 0x55774c62ee48 <unknown>\n#23 0x55774c62f020 <unknown>\n#24 0x55774c63e47c <unknown>\n#25 0x7f9ecffeea94 <unknown>\n#26 0x7f9ed007ba34 __clone","time":{"start":1723594893590,"stop":1723595029106,"duration":135516}},{"uid":"e62735fd7dec5204","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2025//#testresult/e62735fd7dec5204","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=127.0.6533.99)\nStacktrace:\n#0 0x55fbe5c906aa <unknown>\n#1 0x55fbe5961600 <unknown>\n#2 0x55fbe5959631 <unknown>\n#3 0x55fbe5949839 <unknown>\n#4 0x55fbe594b5c4 <unknown>\n#5 0x55fbe5949b05 <unknown>\n#6 0x55fbe594935f <unknown>\n#7 0x55fbe5949252 <unknown>\n#8 0x55fbe594756c <unknown>\n#9 0x55fbe59478ea <unknown>\n#10 0x55fbe5963f21 <unknown>\n#11 0x55fbe59f2b45 <unknown>\n#12 0x55fbe59d38a2 <unknown>\n#13 0x55fbe59f204a <unknown>\n#14 0x55fbe59d3643 <unknown>\n#15 0x55fbe59a3d31 <unknown>\n#16 0x55fbe59a479e <unknown>\n#17 0x55fbe5c5823b <unknown>\n#18 0x55fbe5c5c1d2 <unknown>\n#19 0x55fbe5c455f5 <unknown>\n#20 0x55fbe5c5cd62 <unknown>\n#21 0x55fbe5c2a23f <unknown>\n#22 0x55fbe5c7fe48 <unknown>\n#23 0x55fbe5c80020 <unknown>\n#24 0x55fbe5c8f47c <unknown>\n#25 0x7fbfc53dea94 <unknown>\n#26 0x7fbfc546ba34 __clone","time":{"start":1723508611701,"stop":1723508768154,"duration":156453}}]},"tags":[]},"source":"615d0bd4b2e03463.json","parameterValues":["SouthKestevenDistrictCouncil"]}