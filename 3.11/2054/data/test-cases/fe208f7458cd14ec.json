{"uid":"fe208f7458cd14ec","name":"Validate Council Output [MaldonDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"53c5720a05c261e2bad5904bb33e19b7","time":{"start":1725236320439,"stop":1725236351711,"duration":31272},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7fe0748d0040>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fe07474c910>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7fe073ad2f90>, page = ''\nkwargs = {'council_module_str': 'MaldonDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7fe0748d0040>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fe07474c910>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7fe073ad2f90>, page = ''\nkwargs = {'council_module_str': 'MaldonDistrictCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council","time":{"start":1725236320439,"stop":1725236320439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725236320439,"stop":1725236351711,"duration":31272},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"771f1a8e44b4618e","name":"stdout","source":"771f1a8e44b4618e.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1106-163"},{"name":"thread","value":"2776-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":281,"unknown":0,"total":295},"items":[{"uid":"ddf3d0da3b276e2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2053//#testresult/ddf3d0da3b276e2b","status":"passed","time":{"start":1725150017400,"stop":1725150018495,"duration":1095}},{"uid":"9f8e3c50b79ffdd9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2052//#testresult/9f8e3c50b79ffdd9","status":"passed","time":{"start":1725063575839,"stop":1725063581296,"duration":5457}},{"uid":"3359cf513270c0b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2051//#testresult/3359cf513270c0b4","status":"passed","time":{"start":1724977059485,"stop":1724977062131,"duration":2646}},{"uid":"53c3972724558c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2049//#testresult/53c3972724558c1","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1724890419256,"stop":1724890450129,"duration":30873}},{"uid":"c38c762042310d48","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2048//#testresult/c38c762042310d48","status":"passed","time":{"start":1724804222105,"stop":1724804234244,"duration":12139}},{"uid":"dc93f2c54f631f98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2043//#testresult/dc93f2c54f631f98","status":"passed","time":{"start":1724717794367,"stop":1724717805172,"duration":10805}},{"uid":"e6bafa5cfa3a5582","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2039//#testresult/e6bafa5cfa3a5582","status":"passed","time":{"start":1724631510499,"stop":1724631526397,"duration":15898}},{"uid":"ec4d7683f748a187","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2038//#testresult/ec4d7683f748a187","status":"passed","time":{"start":1724544957365,"stop":1724544983333,"duration":25968}},{"uid":"c1bae6913943ab0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2037//#testresult/c1bae6913943ab0","status":"passed","time":{"start":1724458625849,"stop":1724458631943,"duration":6094}},{"uid":"926f74d559099a7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2036//#testresult/926f74d559099a7e","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1724372171167,"stop":1724372202610,"duration":31443}},{"uid":"8f34384493696e5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2034//#testresult/8f34384493696e5e","status":"passed","time":{"start":1724285808826,"stop":1724285819364,"duration":10538}},{"uid":"bfa786c0a1eda37b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2033//#testresult/bfa786c0a1eda37b","status":"passed","time":{"start":1724199409379,"stop":1724199420950,"duration":11571}},{"uid":"2cede66245eda68d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2032//#testresult/2cede66245eda68d","status":"passed","time":{"start":1724113004417,"stop":1724113005476,"duration":1059}},{"uid":"d4b802265ad91e29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2031//#testresult/d4b802265ad91e29","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1724026586249,"stop":1724026617645,"duration":31396}},{"uid":"42ec3af5bd7fb555","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2030//#testresult/42ec3af5bd7fb555","status":"passed","time":{"start":1723940205532,"stop":1723940235388,"duration":29856}},{"uid":"38b567427e3ed182","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2029//#testresult/38b567427e3ed182","status":"passed","time":{"start":1723853925773,"stop":1723853932332,"duration":6559}},{"uid":"dea7a6af5ffe5da1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2028//#testresult/dea7a6af5ffe5da1","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1723767387986,"stop":1723767418637,"duration":30651}},{"uid":"be6222a9c3a925d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2027//#testresult/be6222a9c3a925d3","status":"passed","time":{"start":1723680455904,"stop":1723680486473,"duration":30569}},{"uid":"8dd0e308c4b21d95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2026//#testresult/8dd0e308c4b21d95","status":"passed","time":{"start":1723594630602,"stop":1723594633258,"duration":2656}},{"uid":"71de9027dafe3956","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2025//#testresult/71de9027dafe3956","status":"passed","time":{"start":1723508429914,"stop":1723508435578,"duration":5664}}]},"tags":[]},"source":"fe208f7458cd14ec.json","parameterValues":["MaldonDistrictCouncil"]}