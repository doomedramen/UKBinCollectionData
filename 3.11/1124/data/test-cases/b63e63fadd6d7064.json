{"uid":"b63e63fadd6d7064","name":"Validate Council Output [RushmoorCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9e9824bacc749482fde9fb74bc6e375c","time":{"start":1699578976764,"stop":1699578977470,"duration":706},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7efcc4cc44a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7efcb118b590>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7efcb118b590>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7efcc4cc44a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7efcb118b590>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7efcb118b590>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: RushmoorCouncil","time":{"start":1699578976764,"stop":1699578976765,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from RushmoorCouncil using None and the None is set","time":{"start":1699578976765,"stop":1699578977467,"duration":702},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699578977468,"stop":1699578977468,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699578977468,"stop":1699578977470,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1210-362"},{"name":"thread","value":"2703-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RushmoorCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":10},"items":[{"uid":"9df2ea9faec11663","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/9df2ea9faec11663","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699492693848,"stop":1699492694676,"duration":828}},{"uid":"ef73918e00331b96","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/ef73918e00331b96","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699481550908,"stop":1699481551868,"duration":960}},{"uid":"baa14f7e3be09b78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/baa14f7e3be09b78","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699481544320,"stop":1699481544879,"duration":559}},{"uid":"d29989b7159e019","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/d29989b7159e019","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699445115278,"stop":1699445115976,"duration":698}},{"uid":"7d440c1a291d11cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1115//#testresult/7d440c1a291d11cf","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699406212572,"stop":1699406213135,"duration":563}},{"uid":"20f0d1b32160baa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1114//#testresult/20f0d1b32160baa","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699320110085,"stop":1699320110721,"duration":636}},{"uid":"a59849f7f13b845f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1113//#testresult/a59849f7f13b845f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699233770307,"stop":1699233771109,"duration":802}},{"uid":"44eb2743fb700e64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1111//#testresult/44eb2743fb700e64","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699171222657,"stop":1699171223699,"duration":1042}},{"uid":"45b4a6fc5d6e4ece","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1112//#testresult/45b4a6fc5d6e4ece","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699170946782,"stop":1699170947409,"duration":627}}]},"tags":[]},"source":"b63e63fadd6d7064.json","parameterValues":["RushmoorCouncil","None","None"]}