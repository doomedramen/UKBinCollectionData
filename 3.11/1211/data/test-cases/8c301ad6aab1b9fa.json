{"uid":"8c301ad6aab1b9fa","name":"Validate Council Output [NewcastleCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a63cb1391c4aa4a9ce00ac5e7dcb85fb","time":{"start":1701911986960,"stop":1701912019067,"duration":32107},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f674c3e0f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f674c42fe50>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f674c42fe50>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f674c3e0f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f674c42fe50>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f674c42fe50>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1701911986960,"stop":1701911986961,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NewcastleCityCouncil using None and the None is set","time":{"start":1701911986961,"stop":1701912019066,"duration":32105},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1701912019066,"stop":1701912019066,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1701912019066,"stop":1701912019067,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1148-419"},{"name":"thread","value":"2734-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":58},"items":[{"uid":"b183f6a1dfa4b695","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1209//#testresult/b183f6a1dfa4b695","status":"passed","time":{"start":1701904873850,"stop":1701904890175,"duration":16325}},{"uid":"688cfd24ae615b31","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1201//#testresult/688cfd24ae615b31","status":"passed","time":{"start":1701882550063,"stop":1701882567943,"duration":17880}},{"uid":"9ba4d53fa4e1aac7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1202//#testresult/9ba4d53fa4e1aac7","status":"passed","time":{"start":1701882584337,"stop":1701882595877,"duration":11540}},{"uid":"448da945001670de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1199//#testresult/448da945001670de","status":"passed","time":{"start":1701825564470,"stop":1701825585757,"duration":21287}},{"uid":"ccd83497c2e42deb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1198//#testresult/ccd83497c2e42deb","status":"passed","time":{"start":1701795540111,"stop":1701795552538,"duration":12427}},{"uid":"49d0b5fb09e4316c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1197//#testresult/49d0b5fb09e4316c","status":"passed","time":{"start":1701795534645,"stop":1701795546931,"duration":12286}},{"uid":"bebdceecf87cdc37","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1193//#testresult/bebdceecf87cdc37","status":"passed","time":{"start":1701758539802,"stop":1701758565473,"duration":25671}},{"uid":"6b9943b917c246f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1192//#testresult/6b9943b917c246f9","status":"passed","time":{"start":1701758515857,"stop":1701758533890,"duration":18033}},{"uid":"55e4e5122b96f1f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1191//#testresult/55e4e5122b96f1f8","status":"passed","time":{"start":1701739177821,"stop":1701739198202,"duration":20381}},{"uid":"ef519a9009b36833","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1187//#testresult/ef519a9009b36833","status":"passed","time":{"start":1701714350326,"stop":1701714361624,"duration":11298}},{"uid":"887840d3f8f87938","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1184//#testresult/887840d3f8f87938","status":"passed","time":{"start":1701652755430,"stop":1701652776852,"duration":21422}},{"uid":"459151a12f9b3c2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1183//#testresult/459151a12f9b3c2b","status":"passed","time":{"start":1701566557568,"stop":1701566606421,"duration":48853}},{"uid":"29339ede51b27462","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1182//#testresult/29339ede51b27462","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701479806712,"stop":1701479837151,"duration":30439}},{"uid":"6dd34b2ed6fd8758","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1179//#testresult/6dd34b2ed6fd8758","status":"passed","time":{"start":1701418977765,"stop":1701418993691,"duration":15926}},{"uid":"562f2adf816ce064","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1181//#testresult/562f2adf816ce064","status":"passed","time":{"start":1701419096585,"stop":1701419114975,"duration":18390}},{"uid":"1c2286abd0c38455","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1180//#testresult/1c2286abd0c38455","status":"passed","time":{"start":1701419049091,"stop":1701419073300,"duration":24209}},{"uid":"b1670851bcd5283e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1176//#testresult/b1670851bcd5283e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418916937,"stop":1701418977382,"duration":60445}},{"uid":"2d81f8b327253bbf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1177//#testresult/2d81f8b327253bbf","status":"passed","time":{"start":1701418942186,"stop":1701418977648,"duration":35462}},{"uid":"6c28fbfbc0d9533c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1175//#testresult/6c28fbfbc0d9533c","status":"passed","time":{"start":1701414358145,"stop":1701414374375,"duration":16230}},{"uid":"a1c7e630aba715d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1173//#testresult/a1c7e630aba715d4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701393916387,"stop":1701393977028,"duration":60641}}]},"tags":[]},"source":"8c301ad6aab1b9fa.json","parameterValues":["NewcastleCityCouncil","None","None"]}