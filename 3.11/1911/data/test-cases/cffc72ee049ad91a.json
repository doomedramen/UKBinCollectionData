{"uid":"cffc72ee049ad91a","name":"Validate Council Output [RushmoorCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9700dde83050a915705bb73b0a95103e","time":{"start":1717316662955,"stop":1717316663482,"duration":527},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fd0b450da80>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd0b6230150>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:68: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/RushmoorCouncil.py:24: in parse_data\n    json_data = json.loads(result)[\"NextCollection\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd0c81a8790>\ns = 'mbraco failed to boot, if you are the owner of the website please see the log file for more details'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fd0b450da80>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd0b6230150>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:68: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/RushmoorCouncil.py:24: in parse_data\n    json_data = json.loads(result)[\"NextCollection\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd0c81a8790>\ns = 'mbraco failed to boot, if you are the owner of the website please see the log file for more details'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council","time":{"start":1717316662955,"stop":1717316662956,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1717316662956,"stop":1717316663482,"duration":526},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4cb808b69cc18c66","name":"stdout","source":"4cb808b69cc18c66.txt","type":"text/plain","size":42}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1984-224"},{"name":"thread","value":"2677-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RushmoorCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":17,"broken":0,"skipped":0,"passed":187,"unknown":0,"total":204},"items":[{"uid":"e4e2845b5e5f1329","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1908//#testresult/e4e2845b5e5f1329","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1717288895999,"stop":1717288896537,"duration":538}},{"uid":"f7f8cb101c4cdde2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1905//#testresult/f7f8cb101c4cdde2","status":"passed","time":{"start":1717202483213,"stop":1717202483848,"duration":635}},{"uid":"cf0dd96014563f36","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1904//#testresult/cf0dd96014563f36","status":"passed","time":{"start":1717116004334,"stop":1717116004950,"duration":616}},{"uid":"ff6f5dfe5813bfcb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1903//#testresult/ff6f5dfe5813bfcb","status":"passed","time":{"start":1717029656834,"stop":1717029657481,"duration":647}},{"uid":"49c00ac282b7d88e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1898//#testresult/49c00ac282b7d88e","status":"passed","time":{"start":1716943409778,"stop":1716943410404,"duration":626}},{"uid":"5e7af33942ec852c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1893//#testresult/5e7af33942ec852c","status":"passed","time":{"start":1716856838676,"stop":1716856839708,"duration":1032}},{"uid":"ad6809e6e8c154e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1883//#testresult/ad6809e6e8c154e4","status":"passed","time":{"start":1716770384916,"stop":1716770385952,"duration":1036}},{"uid":"f77bae037c0a7fad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1881//#testresult/f77bae037c0a7fad","status":"passed","time":{"start":1716753548667,"stop":1716753549286,"duration":619}},{"uid":"abfa164252d2ecf8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1877//#testresult/abfa164252d2ecf8","status":"passed","time":{"start":1716743563097,"stop":1716743563667,"duration":570}},{"uid":"1cb07faf2322d8c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1871//#testresult/1cb07faf2322d8c6","status":"passed","time":{"start":1716710168626,"stop":1716710169216,"duration":590}},{"uid":"3f18e98212ae8006","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1866//#testresult/3f18e98212ae8006","status":"passed","time":{"start":1716705461211,"stop":1716705463670,"duration":2459}},{"uid":"3544831e74e89036","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1865//#testresult/3544831e74e89036","status":"passed","time":{"start":1716684015686,"stop":1716684016434,"duration":748}},{"uid":"93b35b6e39d25692","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1863//#testresult/93b35b6e39d25692","status":"passed","time":{"start":1716625190395,"stop":1716625190962,"duration":567}},{"uid":"6b19bdf7f1711b92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1862//#testresult/6b19bdf7f1711b92","status":"passed","time":{"start":1716597432078,"stop":1716597432821,"duration":743}},{"uid":"7b1d0a443311cbfc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1856//#testresult/7b1d0a443311cbfc","status":"passed","time":{"start":1716511219994,"stop":1716511220694,"duration":700}},{"uid":"fe79a02ee462e7e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1855//#testresult/fe79a02ee462e7e9","status":"passed","time":{"start":1716424890646,"stop":1716424891345,"duration":699}},{"uid":"819cdeaec6f2e86a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1854//#testresult/819cdeaec6f2e86a","status":"passed","time":{"start":1716338173757,"stop":1716338174347,"duration":590}},{"uid":"baf637a747b038a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1853//#testresult/baf637a747b038a5","status":"passed","time":{"start":1716251938700,"stop":1716251939670,"duration":970}},{"uid":"f5f7bd03215a8710","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1852//#testresult/f5f7bd03215a8710","status":"passed","time":{"start":1716165586439,"stop":1716165587030,"duration":591}},{"uid":"985b857ee876868a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1851//#testresult/985b857ee876868a","status":"passed","time":{"start":1716155300625,"stop":1716155301519,"duration":894}}]},"tags":[]},"source":"cffc72ee049ad91a.json","parameterValues":["RushmoorCouncil"]}