{"uid":"9cdbd409b0319045","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1710376049866,"stop":1710376080919,"duration":31053},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7c50950e8900>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7c509407a890>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7c50a8cec710>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7c50950e8900>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7c509407a890>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7c50a8cec710>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1710376049867,"stop":1710376049867,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1710376049867,"stop":1710376080919,"duration":31052},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1247-578"},{"name":"thread","value":"2784-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":199,"unknown":0,"total":214},"items":[{"uid":"7abeb319b4f1fd29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1601//#testresult/7abeb319b4f1fd29","status":"passed","time":{"start":1710289646025,"stop":1710289650494,"duration":4469}},{"uid":"2582cae128e1a625","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1600//#testresult/2582cae128e1a625","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710203267734,"stop":1710203298381,"duration":30647}},{"uid":"8604b7ce28798fe2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1599//#testresult/8604b7ce28798fe2","status":"passed","time":{"start":1710117031794,"stop":1710117052112,"duration":20318}},{"uid":"4ee3d1bb41a44b48","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1598//#testresult/4ee3d1bb41a44b48","status":"passed","time":{"start":1710030662306,"stop":1710030678820,"duration":16514}},{"uid":"57d54df7129cc322","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1597//#testresult/57d54df7129cc322","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1709944108832,"stop":1709944139957,"duration":31125}},{"uid":"5dba0adb524c722f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1596//#testresult/5dba0adb524c722f","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1709857696926,"stop":1709857727867,"duration":30941}},{"uid":"90553051daacbfde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1595//#testresult/90553051daacbfde","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1709770950034,"stop":1709770981201,"duration":31167}},{"uid":"68eb16e5ea13111a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1594//#testresult/68eb16e5ea13111a","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1709684889041,"stop":1709684919705,"duration":30664}},{"uid":"fc12b3c14cd005bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1593//#testresult/fc12b3c14cd005bc","status":"passed","time":{"start":1709598452214,"stop":1709598454133,"duration":1919}},{"uid":"1637c551a3732f08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1592//#testresult/1637c551a3732f08","status":"passed","time":{"start":1709512138018,"stop":1709512146399,"duration":8381}},{"uid":"3974c37f058b11ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1572//#testresult/3974c37f058b11ad","status":"passed","time":{"start":1708561623948,"stop":1708561628995,"duration":5047}},{"uid":"e8dd6755dfbdd39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1570//#testresult/e8dd6755dfbdd39","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1708475228442,"stop":1708475259049,"duration":30607}},{"uid":"7ec6531b8c1e2894","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1569//#testresult/7ec6531b8c1e2894","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1708388839872,"stop":1708388870574,"duration":30702}},{"uid":"3c709cbf991c72bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1568//#testresult/3c709cbf991c72bb","status":"passed","time":{"start":1708302567383,"stop":1708302568503,"duration":1120}},{"uid":"60e1b2dfe6c4a019","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1567//#testresult/60e1b2dfe6c4a019","status":"passed","time":{"start":1708216170588,"stop":1708216172175,"duration":1587}},{"uid":"5cd67b0fc350a829","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1566//#testresult/5cd67b0fc350a829","status":"passed","time":{"start":1708129635222,"stop":1708129637574,"duration":2352}},{"uid":"129e752f50037a27","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1563//#testresult/129e752f50037a27","status":"passed","time":{"start":1708043227466,"stop":1708043228467,"duration":1001}},{"uid":"c01a7890803fb397","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1562//#testresult/c01a7890803fb397","status":"passed","time":{"start":1707956830411,"stop":1707956833540,"duration":3129}},{"uid":"a0264f5daf7cb0ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1561//#testresult/a0264f5daf7cb0ff","status":"passed","time":{"start":1707870480199,"stop":1707870480880,"duration":681}},{"uid":"1e4af23bbda1c1dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1560//#testresult/1e4af23bbda1c1dc","status":"passed","time":{"start":1707784084603,"stop":1707784089660,"duration":5057}}]},"tags":[]},"source":"9cdbd409b0319045.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}