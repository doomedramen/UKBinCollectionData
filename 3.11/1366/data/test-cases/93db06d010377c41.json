{"uid":"93db06d010377c41","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1704375827114,"stop":1704375838050,"duration":10936},"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5615c521cf83 <unknown>\n#1 0x5615c4ed5b2b <unknown>\n#2 0x5615c4f1eeff <unknown>\n#3 0x5615c4f1d1a0 <unknown>\n#4 0x5615c4f4f0b2 <unknown>\n#5 0x5615c4f18b49 <unknown>\n#6 0x5615c4f4f4ce <unknown>\n#7 0x5615c4f6e006 <unknown>\n#8 0x5615c4f4ee53 <unknown>\n#9 0x5615c4f16dd4 <unknown>\n#10 0x5615c4f181de <unknown>\n#11 0x5615c51e1531 <unknown>\n#12 0x5615c51e5455 <unknown>\n#13 0x5615c51cdf55 <unknown>\n#14 0x5615c51e60ef <unknown>\n#15 0x5615c51b199f <unknown>\n#16 0x5615c520a008 <unknown>\n#17 0x5615c520a1d7 <unknown>\n#18 0x5615c521c124 <unknown>\n#19 0x7fcedbe94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fddcd1994e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fddcd200350>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:76: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fddcc88a490>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x5615c520a1d7 \\\\u003Cunknown>\\\\n#18 0x5615c521c124 \\\\u003Cunknown>\\\\n#19 0x7fcedbe94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x5615c521cf83 <unknown>\nE       #1 0x5615c4ed5b2b <unknown>\nE       #2 0x5615c4f1eeff <unknown>\nE       #3 0x5615c4f1d1a0 <unknown>\nE       #4 0x5615c4f4f0b2 <unknown>\nE       #5 0x5615c4f18b49 <unknown>\nE       #6 0x5615c4f4f4ce <unknown>\nE       #7 0x5615c4f6e006 <unknown>\nE       #8 0x5615c4f4ee53 <unknown>\nE       #9 0x5615c4f16dd4 <unknown>\nE       #10 0x5615c4f181de <unknown>\nE       #11 0x5615c51e1531 <unknown>\nE       #12 0x5615c51e5455 <unknown>\nE       #13 0x5615c51cdf55 <unknown>\nE       #14 0x5615c51e60ef <unknown>\nE       #15 0x5615c51b199f <unknown>\nE       #16 0x5615c520a008 <unknown>\nE       #17 0x5615c520a1d7 <unknown>\nE       #18 0x5615c521c124 <unknown>\nE       #19 0x7fcedbe94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5615c521cf83 <unknown>\n#1 0x5615c4ed5b2b <unknown>\n#2 0x5615c4f1eeff <unknown>\n#3 0x5615c4f1d1a0 <unknown>\n#4 0x5615c4f4f0b2 <unknown>\n#5 0x5615c4f18b49 <unknown>\n#6 0x5615c4f4f4ce <unknown>\n#7 0x5615c4f6e006 <unknown>\n#8 0x5615c4f4ee53 <unknown>\n#9 0x5615c4f16dd4 <unknown>\n#10 0x5615c4f181de <unknown>\n#11 0x5615c51e1531 <unknown>\n#12 0x5615c51e5455 <unknown>\n#13 0x5615c51cdf55 <unknown>\n#14 0x5615c51e60ef <unknown>\n#15 0x5615c51b199f <unknown>\n#16 0x5615c520a008 <unknown>\n#17 0x5615c520a1d7 <unknown>\n#18 0x5615c521c124 <unknown>\n#19 0x7fcedbe94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fddcd1994e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fddcd200350>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:76: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fddcc88a490>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x5615c520a1d7 \\\\u003Cunknown>\\\\n#18 0x5615c521c124 \\\\u003Cunknown>\\\\n#19 0x7fcedbe94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x5615c521cf83 <unknown>\nE       #1 0x5615c4ed5b2b <unknown>\nE       #2 0x5615c4f1eeff <unknown>\nE       #3 0x5615c4f1d1a0 <unknown>\nE       #4 0x5615c4f4f0b2 <unknown>\nE       #5 0x5615c4f18b49 <unknown>\nE       #6 0x5615c4f4f4ce <unknown>\nE       #7 0x5615c4f6e006 <unknown>\nE       #8 0x5615c4f4ee53 <unknown>\nE       #9 0x5615c4f16dd4 <unknown>\nE       #10 0x5615c4f181de <unknown>\nE       #11 0x5615c51e1531 <unknown>\nE       #12 0x5615c51e5455 <unknown>\nE       #13 0x5615c51cdf55 <unknown>\nE       #14 0x5615c51e60ef <unknown>\nE       #15 0x5615c51b199f <unknown>\nE       #16 0x5615c520a008 <unknown>\nE       #17 0x5615c520a1d7 <unknown>\nE       #18 0x5615c521c124 <unknown>\nE       #19 0x7fcedbe94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1704375827114,"stop":1704375827115,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1704375827115,"stop":1704375838050,"duration":10935},"status":"failed","statusMessage":"Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5615c521cf83 <unknown>\n#1 0x5615c4ed5b2b <unknown>\n#2 0x5615c4f1eeff <unknown>\n#3 0x5615c4f1d1a0 <unknown>\n#4 0x5615c4f4f0b2 <unknown>\n#5 0x5615c4f18b49 <unknown>\n#6 0x5615c4f4f4ce <unknown>\n#7 0x5615c4f6e006 <unknown>\n#8 0x5615c4f4ee53 <unknown>\n#9 0x5615c4f16dd4 <unknown>\n#10 0x5615c4f181de <unknown>\n#11 0x5615c51e1531 <unknown>\n#12 0x5615c51e5455 <unknown>\n#13 0x5615c51cdf55 <unknown>\n#14 0x5615c51e60ef <unknown>\n#15 0x5615c51b199f <unknown>\n#16 0x5615c520a008 <unknown>\n#17 0x5615c520a1d7 <unknown>\n#18 0x5615c521c124 <unknown>\n#19 0x7fcedbe94ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5615c521cf83 <unknown>\n#1 0x5615c4ed5b2b <unknown>\n#2 0x5615c4f1eeff <unknown>\n#3 0x5615c4f1d1a0 <unknown>\n#4 0x5615c4f4f0b2 <unknown>\n#5 0x5615c4f18b49 <unknown>\n#6 0x5615c4f4f4ce <unknown>\n#7 0x5615c4f6e006 <unknown>\n#8 0x5615c4f4ee53 <unknown>\n#9 0x5615c4f16dd4 <unknown>\n#10 0x5615c4f181de <unknown>\n#11 0x5615c51e1531 <unknown>\n#12 0x5615c51e5455 <unknown>\n#13 0x5615c51cdf55 <unknown>\n#14 0x5615c51e60ef <unknown>\n#15 0x5615c51b199f <unknown>\n#16 0x5615c520a008 <unknown>\n#17 0x5615c520a1d7 <unknown>\n#18 0x5615c521c124 <unknown>\n#19 0x7fcedbe94ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az847-406"},{"name":"thread","value":"2677-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":26,"unknown":0,"total":37},"items":[{"uid":"aa8dc41d639c493f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1363//#testresult/aa8dc41d639c493f","status":"passed","time":{"start":1704356741752,"stop":1704356763047,"duration":21295}},{"uid":"de750d2fbfb2118a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1361//#testresult/de750d2fbfb2118a","status":"passed","time":{"start":1704355887768,"stop":1704355902931,"duration":15163}},{"uid":"f55f0caadca6765e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1359//#testresult/f55f0caadca6765e","status":"passed","time":{"start":1704331059041,"stop":1704331075146,"duration":16105}},{"uid":"3dbcb9df62b9c4f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1355//#testresult/3dbcb9df62b9c4f7","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1704303697900,"stop":1704303721301,"duration":23401}},{"uid":"6fb493d7f223ed7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1352//#testresult/6fb493d7f223ed7e","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1704301380190,"stop":1704301396136,"duration":15946}},{"uid":"43fce05be0f7ad34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1349//#testresult/43fce05be0f7ad34","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1704244624563,"stop":1704244639040,"duration":14477}},{"uid":"53b7227285a57567","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1348//#testresult/53b7227285a57567","status":"passed","time":{"start":1704180199538,"stop":1704180220267,"duration":20729}},{"uid":"e8006003e1ed035f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1346//#testresult/e8006003e1ed035f","status":"passed","time":{"start":1704158220168,"stop":1704158243939,"duration":23771}},{"uid":"11b60b6ddc2e8014","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1345//#testresult/11b60b6ddc2e8014","status":"passed","time":{"start":1704114596888,"stop":1704114613229,"duration":16341}},{"uid":"6d5e4f28614b7efa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1343//#testresult/6d5e4f28614b7efa","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55fe89603f83 <unknown>\n#1 0x55fe892bcb2b <unknown>\n#2 0x55fe89305eff <unknown>\n#3 0x55fe893041a0 <unknown>\n#4 0x55fe893360b2 <unknown>\n#5 0x55fe892ffb49 <unknown>\n#6 0x55fe893364ce <unknown>\n#7 0x55fe89355006 <unknown>\n#8 0x55fe89335e53 <unknown>\n#9 0x55fe892fddd4 <unknown>\n#10 0x55fe892ff1de <unknown>\n#11 0x55fe895c8531 <unknown>\n#12 0x55fe895cc455 <unknown>\n#13 0x55fe895b4f55 <unknown>\n#14 0x55fe895cd0ef <unknown>\n#15 0x55fe8959899f <unknown>\n#16 0x55fe895f1008 <unknown>\n#17 0x55fe895f11d7 <unknown>\n#18 0x55fe89603124 <unknown>\n#19 0x7f644fa94ac3 <unknown>","time":{"start":1704113693009,"stop":1704113707260,"duration":14251}},{"uid":"689212ec71e1a9a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1342//#testresult/689212ec71e1a9a4","status":"passed","time":{"start":1704113650434,"stop":1704113667504,"duration":17070}},{"uid":"b2a4f6fd3b3d19da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1341//#testresult/b2a4f6fd3b3d19da","status":"passed","time":{"start":1704112220366,"stop":1704112235743,"duration":15377}},{"uid":"17caa5c7c1056eaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1339//#testresult/17caa5c7c1056eaf","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55a59b790f83 <unknown>\n#1 0x55a59b449cf7 <unknown>\n#2 0x55a59b49999e <unknown>\n#3 0x55a59b499aa1 <unknown>\n#4 0x55a59b4e4d64 <unknown>\n#5 0x55a59b4c30dd <unknown>\n#6 0x55a59b4e2006 <unknown>\n#7 0x55a59b4c2e53 <unknown>\n#8 0x55a59b48add4 <unknown>\n#9 0x55a59b48c1de <unknown>\n#10 0x55a59b755531 <unknown>\n#11 0x55a59b759455 <unknown>\n#12 0x55a59b741f55 <unknown>\n#13 0x55a59b75a0ef <unknown>\n#14 0x55a59b72599f <unknown>\n#15 0x55a59b77e008 <unknown>\n#16 0x55a59b77e1d7 <unknown>\n#17 0x55a59b790124 <unknown>\n#18 0x7fb8c9494ac3 <unknown>","time":{"start":1704112076651,"stop":1704112149056,"duration":72405}},{"uid":"fb23147925b48027","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1336//#testresult/fb23147925b48027","status":"passed","time":{"start":1704111818876,"stop":1704111848987,"duration":30111}},{"uid":"8c96348a9bd49d72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1337//#testresult/8c96348a9bd49d72","status":"passed","time":{"start":1704111838766,"stop":1704111855499,"duration":16733}},{"uid":"11f5ddf69dfd82ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1335//#testresult/11f5ddf69dfd82ec","status":"passed","time":{"start":1704111483557,"stop":1704111500664,"duration":17107}},{"uid":"c68f91a3356396e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1332//#testresult/c68f91a3356396e5","status":"passed","time":{"start":1704111317358,"stop":1704111339887,"duration":22529}},{"uid":"c23784162f3eca85","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1330//#testresult/c23784162f3eca85","status":"passed","time":{"start":1704099921012,"stop":1704099940790,"duration":19778}},{"uid":"c06fbef8860fe8a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1329//#testresult/c06fbef8860fe8a7","status":"passed","time":{"start":1704072225288,"stop":1704072244649,"duration":19361}},{"uid":"43ec6bec090061e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1327//#testresult/43ec6bec090061e4","status":"passed","time":{"start":1704050362856,"stop":1704050384359,"duration":21503}}]},"tags":[]},"source":"93db06d010377c41.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}