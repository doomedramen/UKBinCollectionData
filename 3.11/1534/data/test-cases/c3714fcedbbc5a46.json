{"uid":"c3714fcedbbc5a46","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1706488129808,"stop":1706488434242,"duration":304434},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.224)\nStacktrace:\n#0 0x5575ce746f83 <unknown>\n#1 0x5575ce3ffcf7 <unknown>\n#2 0x5575ce3e57a1 <unknown>\n#3 0x5575ce3e544a <unknown>\n#4 0x5575ce3e37e1 <unknown>\n#5 0x5575ce3e418a <unknown>\n#6 0x5575ce3f507c <unknown>\n#7 0x5575ce40d7c1 <unknown>\n#8 0x5575ce4136bb <unknown>\n#9 0x5575ce3e492d <unknown>\n#10 0x5575ce40d5c2 <unknown>\n#11 0x5575ce498204 <unknown>\n#12 0x5575ce478e53 <unknown>\n#13 0x5575ce440dd4 <unknown>\n#14 0x5575ce4421de <unknown>\n#15 0x5575ce70b531 <unknown>\n#16 0x5575ce70f455 <unknown>\n#17 0x5575ce6f7f55 <unknown>\n#18 0x5575ce7100ef <unknown>\n#19 0x5575ce6db99f <unknown>\n#20 0x5575ce734008 <unknown>\n#21 0x5575ce7341d7 <unknown>\n#22 0x5575ce746124 <unknown>\n#23 0x7fa72be94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fd7302fcd60>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd72f990a10>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:61: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd72f63c590>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x5575ce7341d7 \\\\u003Cunknown>\\\\n#22 0x5575ce746124 \\\\u003Cunknown>\\\\n#23 0x7fa72be94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.224)\nE       Stacktrace:\nE       #0 0x5575ce746f83 <unknown>\nE       #1 0x5575ce3ffcf7 <unknown>\nE       #2 0x5575ce3e57a1 <unknown>\nE       #3 0x5575ce3e544a <unknown>\nE       #4 0x5575ce3e37e1 <unknown>\nE       #5 0x5575ce3e418a <unknown>\nE       #6 0x5575ce3f507c <unknown>\nE       #7 0x5575ce40d7c1 <unknown>\nE       #8 0x5575ce4136bb <unknown>\nE       #9 0x5575ce3e492d <unknown>\nE       #10 0x5575ce40d5c2 <unknown>\nE       #11 0x5575ce498204 <unknown>\nE       #12 0x5575ce478e53 <unknown>\nE       #13 0x5575ce440dd4 <unknown>\nE       #14 0x5575ce4421de <unknown>\nE       #15 0x5575ce70b531 <unknown>\nE       #16 0x5575ce70f455 <unknown>\nE       #17 0x5575ce6f7f55 <unknown>\nE       #18 0x5575ce7100ef <unknown>\nE       #19 0x5575ce6db99f <unknown>\nE       #20 0x5575ce734008 <unknown>\nE       #21 0x5575ce7341d7 <unknown>\nE       #22 0x5575ce746124 <unknown>\nE       #23 0x7fa72be94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.224)\nStacktrace:\n#0 0x5575ce746f83 <unknown>\n#1 0x5575ce3ffcf7 <unknown>\n#2 0x5575ce3e57a1 <unknown>\n#3 0x5575ce3e544a <unknown>\n#4 0x5575ce3e37e1 <unknown>\n#5 0x5575ce3e418a <unknown>\n#6 0x5575ce3f507c <unknown>\n#7 0x5575ce40d7c1 <unknown>\n#8 0x5575ce4136bb <unknown>\n#9 0x5575ce3e492d <unknown>\n#10 0x5575ce40d5c2 <unknown>\n#11 0x5575ce498204 <unknown>\n#12 0x5575ce478e53 <unknown>\n#13 0x5575ce440dd4 <unknown>\n#14 0x5575ce4421de <unknown>\n#15 0x5575ce70b531 <unknown>\n#16 0x5575ce70f455 <unknown>\n#17 0x5575ce6f7f55 <unknown>\n#18 0x5575ce7100ef <unknown>\n#19 0x5575ce6db99f <unknown>\n#20 0x5575ce734008 <unknown>\n#21 0x5575ce7341d7 <unknown>\n#22 0x5575ce746124 <unknown>\n#23 0x7fa72be94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fd7302fcd60>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd72f990a10>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:61: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd72f63c590>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x5575ce7341d7 \\\\u003Cunknown>\\\\n#22 0x5575ce746124 \\\\u003Cunknown>\\\\n#23 0x7fa72be94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.224)\nE       Stacktrace:\nE       #0 0x5575ce746f83 <unknown>\nE       #1 0x5575ce3ffcf7 <unknown>\nE       #2 0x5575ce3e57a1 <unknown>\nE       #3 0x5575ce3e544a <unknown>\nE       #4 0x5575ce3e37e1 <unknown>\nE       #5 0x5575ce3e418a <unknown>\nE       #6 0x5575ce3f507c <unknown>\nE       #7 0x5575ce40d7c1 <unknown>\nE       #8 0x5575ce4136bb <unknown>\nE       #9 0x5575ce3e492d <unknown>\nE       #10 0x5575ce40d5c2 <unknown>\nE       #11 0x5575ce498204 <unknown>\nE       #12 0x5575ce478e53 <unknown>\nE       #13 0x5575ce440dd4 <unknown>\nE       #14 0x5575ce4421de <unknown>\nE       #15 0x5575ce70b531 <unknown>\nE       #16 0x5575ce70f455 <unknown>\nE       #17 0x5575ce6f7f55 <unknown>\nE       #18 0x5575ce7100ef <unknown>\nE       #19 0x5575ce6db99f <unknown>\nE       #20 0x5575ce734008 <unknown>\nE       #21 0x5575ce7341d7 <unknown>\nE       #22 0x5575ce746124 <unknown>\nE       #23 0x7fa72be94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1706488129808,"stop":1706488129808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1706488129808,"stop":1706488434242,"duration":304434},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.224)\nStacktrace:\n#0 0x5575ce746f83 <unknown>\n#1 0x5575ce3ffcf7 <unknown>\n#2 0x5575ce3e57a1 <unknown>\n#3 0x5575ce3e544a <unknown>\n#4 0x5575ce3e37e1 <unknown>\n#5 0x5575ce3e418a <unknown>\n#6 0x5575ce3f507c <unknown>\n#7 0x5575ce40d7c1 <unknown>\n#8 0x5575ce4136bb <unknown>\n#9 0x5575ce3e492d <unknown>\n#10 0x5575ce40d5c2 <unknown>\n#11 0x5575ce498204 <unknown>\n#12 0x5575ce478e53 <unknown>\n#13 0x5575ce440dd4 <unknown>\n#14 0x5575ce4421de <unknown>\n#15 0x5575ce70b531 <unknown>\n#16 0x5575ce70f455 <unknown>\n#17 0x5575ce6f7f55 <unknown>\n#18 0x5575ce7100ef <unknown>\n#19 0x5575ce6db99f <unknown>\n#20 0x5575ce734008 <unknown>\n#21 0x5575ce7341d7 <unknown>\n#22 0x5575ce746124 <unknown>\n#23 0x7fa72be94ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.224)\nStacktrace:\n#0 0x5575ce746f83 <unknown>\n#1 0x5575ce3ffcf7 <unknown>\n#2 0x5575ce3e57a1 <unknown>\n#3 0x5575ce3e544a <unknown>\n#4 0x5575ce3e37e1 <unknown>\n#5 0x5575ce3e418a <unknown>\n#6 0x5575ce3f507c <unknown>\n#7 0x5575ce40d7c1 <unknown>\n#8 0x5575ce4136bb <unknown>\n#9 0x5575ce3e492d <unknown>\n#10 0x5575ce40d5c2 <unknown>\n#11 0x5575ce498204 <unknown>\n#12 0x5575ce478e53 <unknown>\n#13 0x5575ce440dd4 <unknown>\n#14 0x5575ce4421de <unknown>\n#15 0x5575ce70b531 <unknown>\n#16 0x5575ce70f455 <unknown>\n#17 0x5575ce6f7f55 <unknown>\n#18 0x5575ce7100ef <unknown>\n#19 0x5575ce6db99f <unknown>\n#20 0x5575ce734008 <unknown>\n#21 0x5575ce7341d7 <unknown>\n#22 0x5575ce746124 <unknown>\n#23 0x7fa72be94ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1200-577"},{"name":"thread","value":"2874-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":37,"broken":0,"skipped":0,"passed":142,"unknown":0,"total":179},"items":[{"uid":"c1424ae8ac3cc756","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1531//#testresult/c1424ae8ac3cc756","status":"passed","time":{"start":1706401786374,"stop":1706401810706,"duration":24332}},{"uid":"26e6cd0e1446db2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1529//#testresult/26e6cd0e1446db2a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55e714310f83 <unknown>\n#1 0x55e713fc9cf7 <unknown>\n#2 0x55e71401999e <unknown>\n#3 0x55e714019aa1 <unknown>\n#4 0x55e714064d64 <unknown>\n#5 0x55e7140430dd <unknown>\n#6 0x55e714062006 <unknown>\n#7 0x55e714042e53 <unknown>\n#8 0x55e71400add4 <unknown>\n#9 0x55e71400c1de <unknown>\n#10 0x55e7142d5531 <unknown>\n#11 0x55e7142d9455 <unknown>\n#12 0x55e7142c1f55 <unknown>\n#13 0x55e7142da0ef <unknown>\n#14 0x55e7142a599f <unknown>\n#15 0x55e7142fe008 <unknown>\n#16 0x55e7142fe1d7 <unknown>\n#17 0x55e714310124 <unknown>\n#18 0x7fee7b094ac3 <unknown>","time":{"start":1706315258823,"stop":1706315365882,"duration":107059}},{"uid":"fd4c3aed2d8edbea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1528//#testresult/fd4c3aed2d8edbea","status":"passed","time":{"start":1706228887356,"stop":1706228896050,"duration":8694}},{"uid":"a2a2f62dacee8b13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1523//#testresult/a2a2f62dacee8b13","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.224)\nStacktrace:\n#0 0x5644ecbb9f83 <unknown>\n#1 0x5644ec872cf7 <unknown>\n#2 0x5644ec8587a1 <unknown>\n#3 0x5644ec85844a <unknown>\n#4 0x5644ec8567e1 <unknown>\n#5 0x5644ec85718a <unknown>\n#6 0x5644ec86807c <unknown>\n#7 0x5644ec8807c1 <unknown>\n#8 0x5644ec8866bb <unknown>\n#9 0x5644ec85792d <unknown>\n#10 0x5644ec8805c2 <unknown>\n#11 0x5644ec90b204 <unknown>\n#12 0x5644ec8ebe53 <unknown>\n#13 0x5644ec8b3dd4 <unknown>\n#14 0x5644ec8b51de <unknown>\n#15 0x5644ecb7e531 <unknown>\n#16 0x5644ecb82455 <unknown>\n#17 0x5644ecb6af55 <unknown>\n#18 0x5644ecb830ef <unknown>\n#19 0x5644ecb4e99f <unknown>\n#20 0x5644ecba7008 <unknown>\n#21 0x5644ecba71d7 <unknown>\n#22 0x5644ecbb9124 <unknown>\n#23 0x7fb18ce94ac3 <unknown>","time":{"start":1706142580572,"stop":1706142888455,"duration":307883}},{"uid":"1007ba31b1938e93","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1522//#testresult/1007ba31b1938e93","status":"passed","time":{"start":1706056195058,"stop":1706056205233,"duration":10175}},{"uid":"e2b4f98022bd2d06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1521//#testresult/e2b4f98022bd2d06","status":"passed","time":{"start":1705969798529,"stop":1705969808607,"duration":10078}},{"uid":"271ade81fcd51f93","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1520//#testresult/271ade81fcd51f93","status":"passed","time":{"start":1705883452787,"stop":1705883465499,"duration":12712}},{"uid":"adbdb02a137c270f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1519//#testresult/adbdb02a137c270f","status":"passed","time":{"start":1705797155021,"stop":1705797166243,"duration":11222}},{"uid":"b695615a5a33b34d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1515//#testresult/b695615a5a33b34d","status":"passed","time":{"start":1705710542319,"stop":1705710552067,"duration":9748}},{"uid":"a556120025be49c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1511//#testresult/a556120025be49c","status":"passed","time":{"start":1705624277506,"stop":1705624285922,"duration":8416}},{"uid":"3c1c255af2fecf64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/3c1c255af2fecf64","status":"passed","time":{"start":1705537743816,"stop":1705537751457,"duration":7641}},{"uid":"593f37358c8c1785","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/593f37358c8c1785","status":"passed","time":{"start":1705451340999,"stop":1705451349103,"duration":8104}},{"uid":"613abda3e9725ba1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1499//#testresult/613abda3e9725ba1","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.199)\nStacktrace:\n#0 0x55e81c7d9f83 <unknown>\n#1 0x55e81c492cf7 <unknown>\n#2 0x55e81c4787a1 <unknown>\n#3 0x55e81c47844a <unknown>\n#4 0x55e81c4767e1 <unknown>\n#5 0x55e81c47718a <unknown>\n#6 0x55e81c48807c <unknown>\n#7 0x55e81c4a07c1 <unknown>\n#8 0x55e81c4a66bb <unknown>\n#9 0x55e81c47792d <unknown>\n#10 0x55e81c4a05c2 <unknown>\n#11 0x55e81c52b204 <unknown>\n#12 0x55e81c50be53 <unknown>\n#13 0x55e81c4d3dd4 <unknown>\n#14 0x55e81c4d51de <unknown>\n#15 0x55e81c79e531 <unknown>\n#16 0x55e81c7a2455 <unknown>\n#17 0x55e81c78af55 <unknown>\n#18 0x55e81c7a30ef <unknown>\n#19 0x55e81c76e99f <unknown>\n#20 0x55e81c7c7008 <unknown>\n#21 0x55e81c7c71d7 <unknown>\n#22 0x55e81c7d9124 <unknown>\n#23 0x7f723f294ac3 <unknown>","time":{"start":1705364952375,"stop":1705365256865,"duration":304490}},{"uid":"8b9db2ff62086f45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1497//#testresult/8b9db2ff62086f45","status":"passed","time":{"start":1705318503912,"stop":1705318512368,"duration":8456}},{"uid":"98ffd04bf0f619ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1492//#testresult/98ffd04bf0f619ab","status":"passed","time":{"start":1705295709379,"stop":1705295719319,"duration":9940}},{"uid":"d57fe625e0382e5f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1491//#testresult/d57fe625e0382e5f","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705295138944,"stop":1705295139016,"duration":72}},{"uid":"f0e159c586d3e21c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1490//#testresult/f0e159c586d3e21c","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705278544344,"stop":1705278544542,"duration":198}},{"uid":"124b71edd0fd9dc9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1485//#testresult/124b71edd0fd9dc9","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705192217710,"stop":1705192217877,"duration":167}},{"uid":"74b23e00ce1bb1a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1484//#testresult/74b23e00ce1bb1a9","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705105665027,"stop":1705105665114,"duration":87}},{"uid":"4decd334d8cfdc54","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1482//#testresult/4decd334d8cfdc54","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705019250699,"stop":1705019250916,"duration":217}}]},"tags":[]},"source":"c3714fcedbbc5a46.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}