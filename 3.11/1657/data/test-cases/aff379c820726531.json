{"uid":"aff379c820726531","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1712136872592,"stop":1712136891943,"duration":19351},"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f92b82889a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f92b816c350>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f92b82889a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f92b816c350>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1712136872593,"stop":1712136872594,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1712136872595,"stop":1712136891943,"duration":19348},"status":"failed","statusMessage":"time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"ValueError: time data 'Being collected today' does not match format '%A %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1530-585"},{"name":"thread","value":"2804-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":50,"broken":0,"skipped":0,"passed":97,"unknown":0,"total":147},"items":[{"uid":"8f5d87747abf64d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1655//#testresult/8f5d87747abf64d","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1712103935241,"stop":1712103967035,"duration":31794}},{"uid":"66f720cf3cfbdc8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1654//#testresult/66f720cf3cfbdc8a","status":"passed","time":{"start":1712017568408,"stop":1712017607477,"duration":39069}},{"uid":"dc99b9c1c42471ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1653//#testresult/dc99b9c1c42471ba","status":"passed","time":{"start":1711931362488,"stop":1711931384862,"duration":22374}},{"uid":"8f7486cd5d180111","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1652//#testresult/8f7486cd5d180111","status":"passed","time":{"start":1711844952481,"stop":1711844988833,"duration":36352}},{"uid":"704bb405904da693","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1649//#testresult/704bb405904da693","status":"passed","time":{"start":1711671942005,"stop":1711671976694,"duration":34689}},{"uid":"6e443400de1210c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1648//#testresult/6e443400de1210c","status":"passed","time":{"start":1711585588048,"stop":1711585636303,"duration":48255}},{"uid":"2d0bc6b22162c3b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1646//#testresult/2d0bc6b22162c3b1","status":"passed","time":{"start":1711499121983,"stop":1711499148069,"duration":26086}},{"uid":"a8fc3d4c34f8aaaa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1645//#testresult/a8fc3d4c34f8aaaa","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1711412707006,"stop":1711412730239,"duration":23233}},{"uid":"5d78509709fddeb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1641//#testresult/5d78509709fddeb","status":"passed","time":{"start":1711326421927,"stop":1711326446174,"duration":24247}},{"uid":"426ff8c5e443c702","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1634//#testresult/426ff8c5e443c702","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x563633c9ef33 <unknown>\n#1 0x563633996ce6 <unknown>\n#2 0x5636339e1e48 <unknown>\n#3 0x5636339e1f01 <unknown>\n#4 0x563633a253f4 <unknown>\n#5 0x563633a03edd <unknown>\n#6 0x563633a22899 <unknown>\n#7 0x563633a03c53 <unknown>\n#8 0x5636339d4db3 <unknown>\n#9 0x5636339d577e <unknown>\n#10 0x563633c6486b <unknown>\n#11 0x563633c68885 <unknown>\n#12 0x563633c52181 <unknown>\n#13 0x563633c69412 <unknown>\n#14 0x563633c3625f <unknown>\n#15 0x563633c8d528 <unknown>\n#16 0x563633c8d723 <unknown>\n#17 0x563633c9e0e4 <unknown>\n#18 0x7f4ccb694ac3 <unknown>","time":{"start":1711240106795,"stop":1711240187942,"duration":81147}},{"uid":"b979e0eafa263d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1626//#testresult/b979e0eafa263d5","status":"passed","time":{"start":1711153517485,"stop":1711153542267,"duration":24782}},{"uid":"79d8f51edefebdd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1625//#testresult/79d8f51edefebdd","status":"passed","time":{"start":1711067140304,"stop":1711067159914,"duration":19610}},{"uid":"efdb756ce8a32509","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1624//#testresult/efdb756ce8a32509","status":"passed","time":{"start":1710980834109,"stop":1710980850872,"duration":16763}},{"uid":"12cee830a573ae03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1621//#testresult/12cee830a573ae03","status":"passed","time":{"start":1710970919384,"stop":1710970935356,"duration":15972}},{"uid":"8e7130506ec72163","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1619//#testresult/8e7130506ec72163","status":"passed","time":{"start":1710894326101,"stop":1710894342960,"duration":16859}},{"uid":"3e865e4eadf15426","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1615//#testresult/3e865e4eadf15426","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5557eeb9ff33 <unknown>\n#1 0x5557ee897ce6 <unknown>\n#2 0x5557ee8e2e48 <unknown>\n#3 0x5557ee8e2f01 <unknown>\n#4 0x5557ee9263f4 <unknown>\n#5 0x5557ee904edd <unknown>\n#6 0x5557ee923899 <unknown>\n#7 0x5557ee904c53 <unknown>\n#8 0x5557ee8d5db3 <unknown>\n#9 0x5557ee8d677e <unknown>\n#10 0x5557eeb6586b <unknown>\n#11 0x5557eeb69885 <unknown>\n#12 0x5557eeb53181 <unknown>\n#13 0x5557eeb6a412 <unknown>\n#14 0x5557eeb3725f <unknown>\n#15 0x5557eeb8e528 <unknown>\n#16 0x5557eeb8e723 <unknown>\n#17 0x5557eeb9f0e4 <unknown>\n#18 0x7149b8894ac3 <unknown>","time":{"start":1710807999775,"stop":1710808067565,"duration":67790}},{"uid":"710a5261bb8cb18d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1609//#testresult/710a5261bb8cb18d","status":"passed","time":{"start":1710721675309,"stop":1710721689953,"duration":14644}},{"uid":"da75173f6c67f57c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1608//#testresult/da75173f6c67f57c","status":"passed","time":{"start":1710635306229,"stop":1710635323358,"duration":17129}},{"uid":"da15a826439702cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1607//#testresult/da15a826439702cf","status":"passed","time":{"start":1710548663999,"stop":1710548682324,"duration":18325}},{"uid":"2ab4a5a705604abb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1605//#testresult/2ab4a5a705604abb","status":"passed","time":{"start":1710462338343,"stop":1710462354962,"duration":16619}}]},"tags":[]},"source":"aff379c820726531.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}