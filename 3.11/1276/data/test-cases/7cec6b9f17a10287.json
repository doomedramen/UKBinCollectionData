{"uid":"7cec6b9f17a10287","name":"Validate Council Output [EastCambridgeshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"19741dc08361292a845c10bc41e9b6bf","time":{"start":1702948681751,"stop":1702948712875,"duration":31124},"status":"failed","statusMessage":"ValueError: not enough values to unpack (expected 3, got 1)","statusTrace":"fixturefunc = <function scrape_step at 0x7fdc91884a40>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastCambridgeshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fdc90fe9f50>, 'council': 'EastCambridgeshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastCambridgeshireCouncil.CouncilClass object at 0x7fdc915ba650>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': '10002597178', 'url': 'https://www.eastcambs.gov.uk/', ...}\nuprn = '10002597178'\nurl = 'https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn=10002597178'\ns = <requests.sessions.Session object at 0x7fdc915ba490>\nsoup = <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n\n<html>\n<he...\n\r\n    $('#collectionaddress').attr('src', '/fillform/?iframe_id=collectionaddress');\r\n\r\n})();</script></body>\n</html>\n\ndata = {'bins': []}\nbins = <div class=\"row collectionsrow\"><div class=\"col-xs-12 title collectionscell\">\n          \t\t\t\t            Please select an address to view the upcoming collections.\n          \t\t\t\t          </div></div>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        # Check the UPRN is valid\n        check_uprn(uprn)\n    \n        # Request URL\n        url = f\"https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn={uprn}\"\n    \n        # Make Request\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        page = s.get(url)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Form a JSON wrapper\n        data = {\"bins\": []}\n    \n        for bins in soup.find_all(\"div\", {\"class\": \"row collectionsrow\"}):\n            # Find the collection dates\n>           _, bin_type, date = bins.find_all(\"div\")\nE           ValueError: not enough values to unpack (expected 3, got 1)\n\nuk_bin_collection/uk_bin_collection/councils/EastCambridgeshireCouncil.py:37: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: not enough values to unpack (expected 3, got 1)","statusTrace":"fixturefunc = <function scrape_step at 0x7fdc91884a40>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastCambridgeshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fdc90fe9f50>, 'council': 'EastCambridgeshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastCambridgeshireCouncil.CouncilClass object at 0x7fdc915ba650>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': '10002597178', 'url': 'https://www.eastcambs.gov.uk/', ...}\nuprn = '10002597178'\nurl = 'https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn=10002597178'\ns = <requests.sessions.Session object at 0x7fdc915ba490>\nsoup = <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n\n<html>\n<he...\n\r\n    $('#collectionaddress').attr('src', '/fillform/?iframe_id=collectionaddress');\r\n\r\n})();</script></body>\n</html>\n\ndata = {'bins': []}\nbins = <div class=\"row collectionsrow\"><div class=\"col-xs-12 title collectionscell\">\n          \t\t\t\t            Please select an address to view the upcoming collections.\n          \t\t\t\t          </div></div>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        # Check the UPRN is valid\n        check_uprn(uprn)\n    \n        # Request URL\n        url = f\"https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn={uprn}\"\n    \n        # Make Request\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        page = s.get(url)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Form a JSON wrapper\n        data = {\"bins\": []}\n    \n        for bins in soup.find_all(\"div\", {\"class\": \"row collectionsrow\"}):\n            # Find the collection dates\n>           _, bin_type, date = bins.find_all(\"div\")\nE           ValueError: not enough values to unpack (expected 3, got 1)\n\nuk_bin_collection/uk_bin_collection/councils/EastCambridgeshireCouncil.py:37: ValueError","steps":[{"name":"Given the council: EastCambridgeshireCouncil","time":{"start":1702948681751,"stop":1702948681751,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from EastCambridgeshireCouncil using None and the None is set","time":{"start":1702948681751,"stop":1702948712875,"duration":31124},"status":"failed","statusMessage":"not enough values to unpack (expected 3, got 1)","statusTrace":"ValueError: not enough values to unpack (expected 3, got 1)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1456-180"},{"name":"thread","value":"2928-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastCambridgeshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":83,"unknown":0,"total":84},"items":[{"uid":"860e7c8e3ad33ee4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1275//#testresult/860e7c8e3ad33ee4","status":"passed","time":{"start":1702862344693,"stop":1702862346002,"duration":1309}},{"uid":"fa2ddff0095f9239","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/fa2ddff0095f9239","status":"passed","time":{"start":1702859996499,"stop":1702859998142,"duration":1643}},{"uid":"f2820a86790bdc80","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/f2820a86790bdc80","status":"passed","time":{"start":1702843559757,"stop":1702843561137,"duration":1380}},{"uid":"62d7f7005aecb78c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/62d7f7005aecb78c","status":"passed","time":{"start":1702809370268,"stop":1702809371569,"duration":1301}},{"uid":"7f9131516126ba27","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1247//#testresult/7f9131516126ba27","status":"passed","time":{"start":1702657129527,"stop":1702657131153,"duration":1626}},{"uid":"492845924d72108b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1248//#testresult/492845924d72108b","status":"passed","time":{"start":1702657157042,"stop":1702657158281,"duration":1239}},{"uid":"2211847db35ccfeb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1244//#testresult/2211847db35ccfeb","status":"passed","time":{"start":1702603193035,"stop":1702603194233,"duration":1198}},{"uid":"202e2f6103e5730a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1243//#testresult/202e2f6103e5730a","status":"passed","time":{"start":1702540036153,"stop":1702540038487,"duration":2334}},{"uid":"cd14b0aa4896cad7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1241//#testresult/cd14b0aa4896cad7","status":"passed","time":{"start":1702516667724,"stop":1702516669021,"duration":1297}},{"uid":"30c3789357c051fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1238//#testresult/30c3789357c051fa","status":"passed","time":{"start":1702447467552,"stop":1702447468734,"duration":1182}},{"uid":"54814f6cd71ce164","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1236//#testresult/54814f6cd71ce164","status":"passed","time":{"start":1702430331101,"stop":1702430332930,"duration":1829}},{"uid":"153e57f60f499202","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1232//#testresult/153e57f60f499202","status":"passed","time":{"start":1702366482795,"stop":1702366483962,"duration":1167}},{"uid":"93a7bd0b0bec9265","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1231//#testresult/93a7bd0b0bec9265","status":"passed","time":{"start":1702343956613,"stop":1702343960623,"duration":4010}},{"uid":"a180f4286931055d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1229//#testresult/a180f4286931055d","status":"passed","time":{"start":1702257545873,"stop":1702257547038,"duration":1165}},{"uid":"b7c28b2d4c9f52e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1228//#testresult/b7c28b2d4c9f52e8","status":"passed","time":{"start":1702171397770,"stop":1702171401296,"duration":3526}},{"uid":"a6580f712451b54c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1227//#testresult/a6580f712451b54c","status":"passed","time":{"start":1702084632640,"stop":1702084634478,"duration":1838}},{"uid":"bdfc0a81edd77c7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1225//#testresult/bdfc0a81edd77c7a","status":"passed","time":{"start":1702066719448,"stop":1702066721049,"duration":1601}},{"uid":"c0a7084f5664251f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1222//#testresult/c0a7084f5664251f","status":"passed","time":{"start":1702054368129,"stop":1702054372025,"duration":3896}},{"uid":"30d8909a07fc182","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1223//#testresult/30d8909a07fc182","status":"passed","time":{"start":1702054404242,"stop":1702054405552,"duration":1310}},{"uid":"f771e133fd8aca8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1219//#testresult/f771e133fd8aca8a","status":"passed","time":{"start":1701998370594,"stop":1701998372100,"duration":1506}}]},"tags":[]},"source":"7cec6b9f17a10287.json","parameterValues":["EastCambridgeshireCouncil","None","None"]}