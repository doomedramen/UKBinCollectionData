{"uid":"6a054da2c1bf71b4","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1704846470174,"stop":1704846500961,"duration":30787},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f6af9968860>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6af8dfe150>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f6b0d58c890>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f6af9968860>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6af8dfe150>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f6b0d58c890>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1704846470174,"stop":1704846470175,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1704846470175,"stop":1704846500961,"duration":30786},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az702-998"},{"name":"thread","value":"2799-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":153,"unknown":0,"total":155},"items":[{"uid":"6146e30d7ae7783a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1456//#testresult/6146e30d7ae7783a","status":"passed","time":{"start":1704760224595,"stop":1704760230529,"duration":5934}},{"uid":"1dfd7131568b38e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1452//#testresult/1dfd7131568b38e0","status":"passed","time":{"start":1704711565108,"stop":1704711565926,"duration":818}},{"uid":"949745cd50661520","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1450//#testresult/949745cd50661520","status":"passed","time":{"start":1704710805957,"stop":1704710806662,"duration":705}},{"uid":"dec79f9945504368","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1448//#testresult/dec79f9945504368","status":"passed","time":{"start":1704710213835,"stop":1704710214984,"duration":1149}},{"uid":"6413a5e3278b1dc3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1446//#testresult/6413a5e3278b1dc3","status":"passed","time":{"start":1704709701435,"stop":1704709702365,"duration":930}},{"uid":"c299f839e32a6530","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1443//#testresult/c299f839e32a6530","status":"passed","time":{"start":1704704197282,"stop":1704704198343,"duration":1061}},{"uid":"fe7764b1186320f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1441//#testresult/fe7764b1186320f5","status":"passed","time":{"start":1704673843467,"stop":1704673848767,"duration":5300}},{"uid":"cd47562938905a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1426//#testresult/cd47562938905a2","status":"passed","time":{"start":1704615465992,"stop":1704615466669,"duration":677}},{"uid":"c5ccfebeb3ec508e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1423//#testresult/c5ccfebeb3ec508e","status":"passed","time":{"start":1704614871257,"stop":1704614872194,"duration":937}},{"uid":"b2277c2cae2b7793","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1420//#testresult/b2277c2cae2b7793","status":"passed","time":{"start":1704587566037,"stop":1704587570082,"duration":4045}},{"uid":"2996fe344a1fcedd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1413//#testresult/2996fe344a1fcedd","status":"passed","time":{"start":1704542829102,"stop":1704542830733,"duration":1631}},{"uid":"20ae537bfccb6fa7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1408//#testresult/20ae537bfccb6fa7","status":"passed","time":{"start":1704496251767,"stop":1704496252523,"duration":756}},{"uid":"b79d3293de0fc89a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1406//#testresult/b79d3293de0fc89a","status":"passed","time":{"start":1704453509865,"stop":1704453510806,"duration":941}},{"uid":"267b303a9d180245","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1405//#testresult/267b303a9d180245","status":"passed","time":{"start":1704452694658,"stop":1704452695369,"duration":711}},{"uid":"3f37762549ab3fff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1400//#testresult/3f37762549ab3fff","status":"passed","time":{"start":1704443864024,"stop":1704443865241,"duration":1217}},{"uid":"c688e1e4ced37c64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1399//#testresult/c688e1e4ced37c64","status":"passed","time":{"start":1704443415561,"stop":1704443416214,"duration":653}},{"uid":"37bac925ebbdaf33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1397//#testresult/37bac925ebbdaf33","status":"passed","time":{"start":1704442576717,"stop":1704442577579,"duration":862}},{"uid":"ce916bdefcad7fd2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1396//#testresult/ce916bdefcad7fd2","status":"passed","time":{"start":1704442555722,"stop":1704442556681,"duration":959}},{"uid":"31497a538c7d5b1d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1390//#testresult/31497a538c7d5b1d","status":"passed","time":{"start":1704417610317,"stop":1704417611757,"duration":1440}},{"uid":"7c1c1884f93e9780","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1379//#testresult/7c1c1884f93e9780","status":"passed","time":{"start":1704406067313,"stop":1704406068035,"duration":722}}]},"tags":[]},"source":"6a054da2c1bf71b4.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}