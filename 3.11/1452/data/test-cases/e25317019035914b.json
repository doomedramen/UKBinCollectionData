{"uid":"e25317019035914b","name":"Validate Council Output [StokeOnTrentCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"17b62d612f29f2bda9703e241b337994","time":{"start":1704711627310,"stop":1704711627861,"duration":551},"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f143039cd60>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f142f748710>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f142f713e90>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': None, ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\",\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:49: ConnectionAbortedError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f143039cd60>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f142f748710>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f142f713e90>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': None, ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\",\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:49: ConnectionAbortedError","steps":[{"name":"Given the council: StokeOnTrentCityCouncil","time":{"start":1704711627310,"stop":1704711627311,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from StokeOnTrentCityCouncil using None and the None is set","time":{"start":1704711627311,"stop":1704711627861,"duration":550},"status":"failed","statusMessage":"Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az566-498"},{"name":"thread","value":"2699-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StokeOnTrentCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":20,"broken":0,"skipped":0,"passed":91,"unknown":0,"total":111},"items":[{"uid":"1f3f8756d45352c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1450//#testresult/1f3f8756d45352c3","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704710846292,"stop":1704710846838,"duration":546}},{"uid":"d795aeaa72463c44","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1448//#testresult/d795aeaa72463c44","status":"passed","time":{"start":1704710250286,"stop":1704710251813,"duration":1527}},{"uid":"86a13985b68d0c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1446//#testresult/86a13985b68d0c1","status":"passed","time":{"start":1704709725821,"stop":1704709727802,"duration":1981}},{"uid":"884e2c38d6c06200","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1443//#testresult/884e2c38d6c06200","status":"passed","time":{"start":1704704243715,"stop":1704704246175,"duration":2460}},{"uid":"3fb1d37ac2f362d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1441//#testresult/3fb1d37ac2f362d5","status":"passed","time":{"start":1704673886148,"stop":1704673893401,"duration":7253}},{"uid":"9b0c1920dd2e1e29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1426//#testresult/9b0c1920dd2e1e29","status":"passed","time":{"start":1704615515021,"stop":1704615516304,"duration":1283}},{"uid":"6e2b39896f1baffe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1423//#testresult/6e2b39896f1baffe","status":"passed","time":{"start":1704614911065,"stop":1704614912243,"duration":1178}},{"uid":"46480d2506adaea2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1420//#testresult/46480d2506adaea2","status":"passed","time":{"start":1704587606209,"stop":1704587621951,"duration":15742}},{"uid":"6259795925ba09f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1413//#testresult/6259795925ba09f4","status":"passed","time":{"start":1704542884472,"stop":1704542886141,"duration":1669}},{"uid":"d34566f8d5dc1224","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1408//#testresult/d34566f8d5dc1224","status":"passed","time":{"start":1704496317211,"stop":1704496318997,"duration":1786}},{"uid":"631698f4810073e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1406//#testresult/631698f4810073e6","status":"passed","time":{"start":1704453594562,"stop":1704453597089,"duration":2527}},{"uid":"6b99abaad39b5f93","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1405//#testresult/6b99abaad39b5f93","status":"passed","time":{"start":1704452835685,"stop":1704452837071,"duration":1386}},{"uid":"2b358f205a78ca72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1400//#testresult/2b358f205a78ca72","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704443924114,"stop":1704443924912,"duration":798}},{"uid":"e785c384387ee66a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1399//#testresult/e785c384387ee66a","status":"passed","time":{"start":1704443461779,"stop":1704443464814,"duration":3035}},{"uid":"70cda1c687159ccd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1397//#testresult/70cda1c687159ccd","status":"passed","time":{"start":1704442642856,"stop":1704442644467,"duration":1611}},{"uid":"4cb41d4ccffb185f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1396//#testresult/4cb41d4ccffb185f","status":"passed","time":{"start":1704442610224,"stop":1704442612434,"duration":2210}},{"uid":"28d500d666af9416","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1390//#testresult/28d500d666af9416","status":"passed","time":{"start":1704417646512,"stop":1704417648472,"duration":1960}},{"uid":"8161e78b4933207f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1379//#testresult/8161e78b4933207f","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704406163270,"stop":1704406163838,"duration":568}},{"uid":"d2ca0b4f99ba7c19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1378//#testresult/d2ca0b4f99ba7c19","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704406098534,"stop":1704406098943,"duration":409}},{"uid":"a0ec906ffc3b9479","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1376//#testresult/a0ec906ffc3b9479","status":"passed","time":{"start":1704398932314,"stop":1704398934282,"duration":1968}}]},"tags":[]},"source":"e25317019035914b.json","parameterValues":["StokeOnTrentCityCouncil","None","None"]}