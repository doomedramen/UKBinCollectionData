{"uid":"2e559cd503c43b90","name":"Validate Council Output [LondonBoroughHounslow-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2d5d41f2f80a2dfc213e6858543e98d5","time":{"start":1714091276746,"stop":1714091337586,"duration":60840},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f10f4054ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f10f33e86d0>, 'council': 'LondonBoroughHounslow', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LondonBoroughHounslow.CouncilClass object at 0x7f10f35eca50>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100021577765', ...}\napi_url = 'https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder'\nuser_uprn = '100021577765', form_data = {'UPRN': '100021577765'}\nresponse = <Response [504]>\nsoup = <html>\n<head><title>504 Gateway Time-out</title></head>\n<body>\n<center><h1>504 Gateway Time-out</h1></center>\n</body>\n</html>\n\ndata = {'bins': []}, div_element = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder\"\n        user_uprn = kwargs.get(\"uprn\")\n    \n        # Check the UPRN is valid\n        check_uprn(user_uprn)\n    \n        # Create the form data\n        form_data = {\n            \"UPRN\": user_uprn,\n        }\n    \n        # Make a request to the API\n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        # Get the div element\n        div_element = soup.find(\"div\", {\"class\": \"bin_day_main_wrapper\"})\n    \n        # Get all bins with their corresponding dates using list comprehension\n        # This creates a list of tuples, where each tuple contains the bin type and collection date\n        bins_with_dates = [\n            (\n                bin.get_text().strip(),\n                h4.get_text().replace(\"This \", \"\").replace(\"Next \", \"\"),\n            )\n            # This first for loop iterates over each h4 element\n>           for h4 in div_element.find_all(\"h4\")\n            # This nested for loop iterates over each li element within the corresponding ul element\n            for bin in h4.find_next_sibling(\"ul\").find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/LondonBoroughHounslow.py:47: AttributeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f10f4054ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f10f33e86d0>, 'council': 'LondonBoroughHounslow', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LondonBoroughHounslow.CouncilClass object at 0x7f10f35eca50>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100021577765', ...}\napi_url = 'https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder'\nuser_uprn = '100021577765', form_data = {'UPRN': '100021577765'}\nresponse = <Response [504]>\nsoup = <html>\n<head><title>504 Gateway Time-out</title></head>\n<body>\n<center><h1>504 Gateway Time-out</h1></center>\n</body>\n</html>\n\ndata = {'bins': []}, div_element = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder\"\n        user_uprn = kwargs.get(\"uprn\")\n    \n        # Check the UPRN is valid\n        check_uprn(user_uprn)\n    \n        # Create the form data\n        form_data = {\n            \"UPRN\": user_uprn,\n        }\n    \n        # Make a request to the API\n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        # Get the div element\n        div_element = soup.find(\"div\", {\"class\": \"bin_day_main_wrapper\"})\n    \n        # Get all bins with their corresponding dates using list comprehension\n        # This creates a list of tuples, where each tuple contains the bin type and collection date\n        bins_with_dates = [\n            (\n                bin.get_text().strip(),\n                h4.get_text().replace(\"This \", \"\").replace(\"Next \", \"\"),\n            )\n            # This first for loop iterates over each h4 element\n>           for h4 in div_element.find_all(\"h4\")\n            # This nested for loop iterates over each li element within the corresponding ul element\n            for bin in h4.find_next_sibling(\"ul\").find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/LondonBoroughHounslow.py:47: AttributeError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1714091276746,"stop":1714091276747,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from LondonBoroughHounslow using None and the None is set","time":{"start":1714091276747,"stop":1714091337586,"duration":60839},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az570-436"},{"name":"thread","value":"2679-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":227,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":264},"items":[{"uid":"6b80ff6b95a3a06a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1711//#testresult/6b80ff6b95a3a06a","status":"passed","time":{"start":1714006514471,"stop":1714006517094,"duration":2623}},{"uid":"7131fb9fae9999","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1710//#testresult/7131fb9fae9999","status":"passed","time":{"start":1713918506728,"stop":1713918509701,"duration":2973}},{"uid":"61cbc13a1f21f42a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1709//#testresult/61cbc13a1f21f42a","status":"passed","time":{"start":1713832142568,"stop":1713832145225,"duration":2657}},{"uid":"a6e121668bf49c4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1708//#testresult/a6e121668bf49c4d","status":"passed","time":{"start":1713745749394,"stop":1713745752456,"duration":3062}},{"uid":"dac9ff9f24eb7184","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1707//#testresult/dac9ff9f24eb7184","status":"passed","time":{"start":1713659395818,"stop":1713659398240,"duration":2422}},{"uid":"f6a5643b879d9f53","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1706//#testresult/f6a5643b879d9f53","status":"passed","time":{"start":1713572861832,"stop":1713572866315,"duration":4483}},{"uid":"cf13507fb4e51cf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1702//#testresult/cf13507fb4e51cf6","status":"passed","time":{"start":1713486509723,"stop":1713486512651,"duration":2928}},{"uid":"412101b0f3a92cab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1698//#testresult/412101b0f3a92cab","status":"passed","time":{"start":1713400056232,"stop":1713400060542,"duration":4310}},{"uid":"8aefd1f633faa567","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1697//#testresult/8aefd1f633faa567","status":"passed","time":{"start":1713313675454,"stop":1713313677878,"duration":2424}},{"uid":"3f3f787acbd3f9ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1696//#testresult/3f3f787acbd3f9ff","status":"passed","time":{"start":1713252785120,"stop":1713252788334,"duration":3214}},{"uid":"bda0fef3ea52f7e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1695//#testresult/bda0fef3ea52f7e3","status":"passed","time":{"start":1713227206339,"stop":1713227208924,"duration":2585}},{"uid":"b534c5549e710643","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1692//#testresult/b534c5549e710643","status":"passed","time":{"start":1713207801766,"stop":1713207804391,"duration":2625}},{"uid":"a3c82e130f175e26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1683//#testresult/a3c82e130f175e26","status":"passed","time":{"start":1713188336685,"stop":1713188339293,"duration":2608}},{"uid":"fbc1bb87060fa69d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1682//#testresult/fbc1bb87060fa69d","status":"passed","time":{"start":1713149812818,"stop":1713149815430,"duration":2612}},{"uid":"7703437c7563ae0f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1681//#testresult/7703437c7563ae0f","status":"passed","time":{"start":1713053326930,"stop":1713053330327,"duration":3397}},{"uid":"244041b15645a23a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1677//#testresult/244041b15645a23a","status":"passed","time":{"start":1712967840766,"stop":1712967860698,"duration":19932}},{"uid":"3c980da852b2bf3b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1675//#testresult/3c980da852b2bf3b","status":"passed","time":{"start":1712881687220,"stop":1712881690619,"duration":3399}},{"uid":"f34dcc636a51553c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1674//#testresult/f34dcc636a51553c","status":"passed","time":{"start":1712795402718,"stop":1712795405210,"duration":2492}},{"uid":"9bba38a375903f45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1673//#testresult/9bba38a375903f45","status":"passed","time":{"start":1712710403406,"stop":1712710406300,"duration":2894}},{"uid":"3d7f46bb8b557146","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1671//#testresult/3d7f46bb8b557146","status":"passed","time":{"start":1712700397003,"stop":1712700399695,"duration":2692}}]},"tags":[]},"source":"2e559cd503c43b90.json","parameterValues":["LondonBoroughHounslow","None","None"]}