{"uid":"12d711fd89fa1d9e","name":"Validate Council Output [RushmoorCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9e9824bacc749482fde9fb74bc6e375c","time":{"start":1701714309256,"stop":1701714310151,"duration":895},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0df89600e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0de4fb3d90>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f0de4fb3d90>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0df89600e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0de4fb3d90>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f0de4fb3d90>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: RushmoorCouncil","time":{"start":1701714309256,"stop":1701714309256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from RushmoorCouncil using None and the None is set","time":{"start":1701714309256,"stop":1701714310150,"duration":894},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701714310150,"stop":1701714310150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701714310150,"stop":1701714310151,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az532-78"},{"name":"thread","value":"2696-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RushmoorCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":48,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":48},"items":[{"uid":"44332fa18b907498","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1184//#testresult/44332fa18b907498","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701652783335,"stop":1701652784220,"duration":885}},{"uid":"2a7036fa4a826341","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1183//#testresult/2a7036fa4a826341","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701566625937,"stop":1701566627177,"duration":1240}},{"uid":"ca9612392e1beed8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1182//#testresult/ca9612392e1beed8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701479780093,"stop":1701479780951,"duration":858}},{"uid":"4650af217346521a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1179//#testresult/4650af217346521a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701419015466,"stop":1701419016489,"duration":1023}},{"uid":"dd6304629d34b3db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1181//#testresult/dd6304629d34b3db","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701419126454,"stop":1701419127720,"duration":1266}},{"uid":"d10f9274f88b3c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1180//#testresult/d10f9274f88b3c9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701419081869,"stop":1701419082772,"duration":903}},{"uid":"4861fc2a8efeb993","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1176//#testresult/4861fc2a8efeb993","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418937657,"stop":1701418938510,"duration":853}},{"uid":"56552f943a5dc23a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1177//#testresult/56552f943a5dc23a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701418961228,"stop":1701418962758,"duration":1530}},{"uid":"93767081cb0b2f7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1175//#testresult/93767081cb0b2f7a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701414383611,"stop":1701414384613,"duration":1002}},{"uid":"6965ef7f9284b2f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1173//#testresult/6965ef7f9284b2f5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701393996978,"stop":1701393998239,"duration":1261}},{"uid":"e60d1728b7c36cf2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1169//#testresult/e60d1728b7c36cf2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701353381809,"stop":1701353382816,"duration":1007}},{"uid":"8278d4e0dd7eb825","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1170//#testresult/8278d4e0dd7eb825","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701353416412,"stop":1701353417278,"duration":866}},{"uid":"f2cc234cf459d611","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1163//#testresult/f2cc234cf459d611","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701307137290,"stop":1701307138276,"duration":986}},{"uid":"505f54bf3b37df7f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1161//#testresult/505f54bf3b37df7f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701279379734,"stop":1701279380994,"duration":1260}},{"uid":"32f6db291f557424","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1156//#testresult/32f6db291f557424","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701220804170,"stop":1701220805197,"duration":1027}},{"uid":"daf245c75b475ce7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1155//#testresult/daf245c75b475ce7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701134406717,"stop":1701134407699,"duration":982}},{"uid":"88e9f0a5bbeac0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1152//#testresult/88e9f0a5bbeac0a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701047976918,"stop":1701047978142,"duration":1224}},{"uid":"84420865299f76d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1151//#testresult/84420865299f76d7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036220635,"stop":1701036221514,"duration":879}},{"uid":"e6e54fbf24a8972c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1150//#testresult/e6e54fbf24a8972c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036194484,"stop":1701036195342,"duration":858}},{"uid":"326bae9280f98ec5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1148//#testresult/326bae9280f98ec5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700961790311,"stop":1700961791174,"duration":863}}]},"tags":[]},"source":"12d711fd89fa1d9e.json","parameterValues":["RushmoorCouncil","None","None"]}