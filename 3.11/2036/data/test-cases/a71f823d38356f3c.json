{"uid":"a71f823d38356f3c","name":"Validate Council Output [SouthTynesideCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"efde6c2c8e15955ad5fa48845f3c2c06","time":{"start":1724372507094,"stop":1724372509048,"duration":1954},"status":"failed","statusMessage":"KeyError: 'result'","statusTrace":"fixturefunc = <function scrape_step at 0x7f9990568720>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthTynesideCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f99903d4190>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SouthTynesideCouncil.CouncilClass object at 0x7f998f8705d0>, page = ''\nkwargs = {'council_module_str': 'SouthTynesideCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\napi_url = 'https://www.southtyneside.gov.uk/apiserver/ajaxlibrary/'\nuser_postcode = 'NE33 3JW', user_paon = '1', data = {'bins': []}\nuprn = 'S100000325977|1 CANDLISH STREET, SOUTH SHIELDS, SOUTH TYNESIDE, TYNE AND WEAR, NE33 3JW'\npayload = '{\"jsonrpc\": \"2.0\", \"id\": \"1689431609779\", \"method\": \"stc.waste.collections.getDates\", \"params\": {\"addresscode\": \"S100000325977|1 CANDLISH STREET, SOUTH SHIELDS, SOUTH TYNESIDE, TYNE AND WEAR, NE33 3JW\"}}'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        api_url = \"https://www.southtyneside.gov.uk/apiserver/ajaxlibrary/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        data = {\"bins\": []}\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        try:\n            if user_paon is None:\n                raise ValueError(\"Invalid house number\")\n        except Exception as ex:\n            print(f\"Exception encountered: {ex}\")\n            print(\n                \"Please check the provided house number. If this error continues, please first trying setting the \"\n                \"house number manually on line 25 before raising an issue.\"\n            )\n            exit(1)\n    \n        # Get the \"UPRN\" (actually the UPRN + address)\n        uprn = get_address_uprn(user_postcode, user_paon, api_url)\n    \n        # Set up payload and headers, then post to API to get schedule\n        payload = json.dumps(\n            {\n                \"jsonrpc\": \"2.0\",\n                \"id\": \"1689431609779\",\n                \"method\": \"stc.waste.collections.getDates\",\n                \"params\": {\"addresscode\": uprn},\n            }\n        )\n        headers = {\"Content-Type\": \"application/json\"}\n        response = requests.request(\"POST\", api_url, headers=headers, data=payload)\n    \n        # Break down the resulting JSON and load into dictionary\n>       json_result = json.loads(response.text)[\"result\"]\nE       KeyError: 'result'\n\nuk_bin_collection/uk_bin_collection/councils/SouthTynesideCouncil.py:85: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"KeyError: 'result'","statusTrace":"fixturefunc = <function scrape_step at 0x7f9990568720>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthTynesideCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f99903d4190>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SouthTynesideCouncil.CouncilClass object at 0x7f998f8705d0>, page = ''\nkwargs = {'council_module_str': 'SouthTynesideCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\napi_url = 'https://www.southtyneside.gov.uk/apiserver/ajaxlibrary/'\nuser_postcode = 'NE33 3JW', user_paon = '1', data = {'bins': []}\nuprn = 'S100000325977|1 CANDLISH STREET, SOUTH SHIELDS, SOUTH TYNESIDE, TYNE AND WEAR, NE33 3JW'\npayload = '{\"jsonrpc\": \"2.0\", \"id\": \"1689431609779\", \"method\": \"stc.waste.collections.getDates\", \"params\": {\"addresscode\": \"S100000325977|1 CANDLISH STREET, SOUTH SHIELDS, SOUTH TYNESIDE, TYNE AND WEAR, NE33 3JW\"}}'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        api_url = \"https://www.southtyneside.gov.uk/apiserver/ajaxlibrary/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        data = {\"bins\": []}\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        try:\n            if user_paon is None:\n                raise ValueError(\"Invalid house number\")\n        except Exception as ex:\n            print(f\"Exception encountered: {ex}\")\n            print(\n                \"Please check the provided house number. If this error continues, please first trying setting the \"\n                \"house number manually on line 25 before raising an issue.\"\n            )\n            exit(1)\n    \n        # Get the \"UPRN\" (actually the UPRN + address)\n        uprn = get_address_uprn(user_postcode, user_paon, api_url)\n    \n        # Set up payload and headers, then post to API to get schedule\n        payload = json.dumps(\n            {\n                \"jsonrpc\": \"2.0\",\n                \"id\": \"1689431609779\",\n                \"method\": \"stc.waste.collections.getDates\",\n                \"params\": {\"addresscode\": uprn},\n            }\n        )\n        headers = {\"Content-Type\": \"application/json\"}\n        response = requests.request(\"POST\", api_url, headers=headers, data=payload)\n    \n        # Break down the resulting JSON and load into dictionary\n>       json_result = json.loads(response.text)[\"result\"]\nE       KeyError: 'result'\n\nuk_bin_collection/uk_bin_collection/councils/SouthTynesideCouncil.py:85: KeyError","steps":[{"name":"Given the council","time":{"start":1724372507094,"stop":1724372507094,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1724372507094,"stop":1724372509048,"duration":1954},"status":"failed","statusMessage":"'result'","statusTrace":"KeyError: 'result'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"48a22515d8c954f3","name":"stdout","source":"48a22515d8c954f3.txt","type":"text/plain","size":47}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1567-949"},{"name":"thread","value":"2840-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthTynesideCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":174,"broken":0,"skipped":0,"passed":111,"unknown":0,"total":285},"items":[{"uid":"65959500d2fbf96b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2034//#testresult/65959500d2fbf96b","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1724286180772,"stop":1724286182225,"duration":1453}},{"uid":"3a7766a1ef2216c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2033//#testresult/3a7766a1ef2216c0","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1724199684610,"stop":1724199686058,"duration":1448}},{"uid":"f8a28de808f8e0a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2032//#testresult/f8a28de808f8e0a2","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1724113304634,"stop":1724113305833,"duration":1199}},{"uid":"92584ec50053d5db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2031//#testresult/92584ec50053d5db","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1724026847948,"stop":1724026849162,"duration":1214}},{"uid":"5db827ce4215fb0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2030//#testresult/5db827ce4215fb0e","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1723940524472,"stop":1723940525838,"duration":1366}},{"uid":"306207aa6416f20f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2029//#testresult/306207aa6416f20f","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1723854124531,"stop":1723854125948,"duration":1417}},{"uid":"16689b9dceacbb60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2028//#testresult/16689b9dceacbb60","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1723767671025,"stop":1723767672325,"duration":1300}},{"uid":"b04a711147aedf33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2027//#testresult/b04a711147aedf33","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1723680786461,"stop":1723680787639,"duration":1178}},{"uid":"61b6331ec7320fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2026//#testresult/61b6331ec7320fe","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1723594902922,"stop":1723594904278,"duration":1356}},{"uid":"f1654b27763a687c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2025//#testresult/f1654b27763a687c","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1723508628817,"stop":1723508630385,"duration":1568}},{"uid":"e7ec84f2e05cf618","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2024//#testresult/e7ec84f2e05cf618","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1723422256443,"stop":1723422257984,"duration":1541}},{"uid":"ecee21569461c58f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2022//#testresult/ecee21569461c58f","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1723335833828,"stop":1723335836066,"duration":2238}},{"uid":"67a6e5841f408da9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2020//#testresult/67a6e5841f408da9","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1723249439799,"stop":1723249440996,"duration":1197}},{"uid":"1bee0175e11a00bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2019//#testresult/1bee0175e11a00bd","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1723163047544,"stop":1723163049447,"duration":1903}},{"uid":"d356b42265f6f3b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2014//#testresult/d356b42265f6f3b4","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1723076580858,"stop":1723076582116,"duration":1258}},{"uid":"8a13e67e29ba8baf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2012//#testresult/8a13e67e29ba8baf","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1722990001741,"stop":1722990003052,"duration":1311}},{"uid":"aee6766ae2d594dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2007//#testresult/aee6766ae2d594dd","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1722903748800,"stop":1722903749339,"duration":539}},{"uid":"24e6fe3654632021","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2006//#testresult/24e6fe3654632021","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1722817503933,"stop":1722817505331,"duration":1398}},{"uid":"43162ebdfdc7a23d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2005//#testresult/43162ebdfdc7a23d","status":"failed","statusDetails":"KeyError: 'result'","time":{"start":1722730979937,"stop":1722730981506,"duration":1569}},{"uid":"16a373def21cbeb5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2004//#testresult/16a373def21cbeb5","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1722644469839,"stop":1722644470196,"duration":357}}]},"tags":[]},"source":"a71f823d38356f3c.json","parameterValues":["SouthTynesideCouncil"]}