{"uid":"186c025c86771d4a","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1702843561058,"stop":1702843561919,"duration":861},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa58bcdd800>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa58b207890>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa58b207890>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa58bcdd800>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa58b207890>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa58b207890>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1702843561058,"stop":1702843561059,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1702843561059,"stop":1702843561917,"duration":858},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1702843561918,"stop":1702843561918,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1702843561918,"stop":1702843561919,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az568-808"},{"name":"thread","value":"2791-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":65,"broken":0,"skipped":0,"passed":16,"unknown":0,"total":81},"items":[{"uid":"d9f95ea5a1876444","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/d9f95ea5a1876444","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702809371036,"stop":1702809372473,"duration":1437}},{"uid":"bd30dfd6521705b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1247//#testresult/bd30dfd6521705b0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702657133523,"stop":1702657134630,"duration":1107}},{"uid":"97f18275c06a9933","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1248//#testresult/97f18275c06a9933","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702657153830,"stop":1702657154470,"duration":640}},{"uid":"a027caf6dd2090f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1244//#testresult/a027caf6dd2090f6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702603203603,"stop":1702603204118,"duration":515}},{"uid":"697dc9aa80abf1d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1243//#testresult/697dc9aa80abf1d9","status":"passed","time":{"start":1702540037641,"stop":1702540039257,"duration":1616}},{"uid":"14e0a5b3ba079a8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1241//#testresult/14e0a5b3ba079a8a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702516674886,"stop":1702516675575,"duration":689}},{"uid":"fa2fc71c78c26849","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1238//#testresult/fa2fc71c78c26849","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702447470259,"stop":1702447470821,"duration":562}},{"uid":"6686e1ce5ba6bd73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1236//#testresult/6686e1ce5ba6bd73","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 13 December\\n              \\n              (In progress) 2023' does not match format '%A, %d %B %Y'","time":{"start":1702430337555,"stop":1702430339011,"duration":1456}},{"uid":"abe9742b120530c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1232//#testresult/abe9742b120530c8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702366498103,"stop":1702366498847,"duration":744}},{"uid":"c238c4e2a7d6193c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1231//#testresult/c238c4e2a7d6193c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702343976824,"stop":1702343977362,"duration":538}},{"uid":"23f925a8d74b3fac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1229//#testresult/23f925a8d74b3fac","status":"passed","time":{"start":1702257552402,"stop":1702257554354,"duration":1952}},{"uid":"e87916db12ca16d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1228//#testresult/e87916db12ca16d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702171419535,"stop":1702171420263,"duration":728}},{"uid":"b1c054e3866a744a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1227//#testresult/b1c054e3866a744a","status":"passed","time":{"start":1702084687467,"stop":1702084689104,"duration":1637}},{"uid":"618185d980d1653c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1225//#testresult/618185d980d1653c","status":"passed","time":{"start":1702066732931,"stop":1702066734521,"duration":1590}},{"uid":"5f43010ad55a96ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1222//#testresult/5f43010ad55a96ac","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702054376150,"stop":1702054377039,"duration":889}},{"uid":"e831eacb0aec524e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1223//#testresult/e831eacb0aec524e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702054402481,"stop":1702054403072,"duration":591}},{"uid":"aeb27f67f2f7a6fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1219//#testresult/aeb27f67f2f7a6fd","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701998388692,"stop":1701998389513,"duration":821}},{"uid":"92dcbb55388250f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1218//#testresult/92dcbb55388250f7","status":"passed","time":{"start":1701990379185,"stop":1701990381159,"duration":1974}},{"uid":"8d34a24a93b086a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1217//#testresult/8d34a24a93b086a9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701990354823,"stop":1701990355376,"duration":553}},{"uid":"9f36d605c703584f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1215//#testresult/9f36d605c703584f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701942803409,"stop":1701942804267,"duration":858}}]},"tags":[]},"source":"186c025c86771d4a.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}