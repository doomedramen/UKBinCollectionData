{"uid":"ecf5d4b8bf06b5b3","name":"Validate Council Output [WealdenDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b3ddf98c8383031d63a6bd27b361f868","time":{"start":1702843688239,"stop":1702843690265,"duration":2026},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f67fd4eaac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f67fc6f7490>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f67fc6f7490>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f67fd4eaac0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f67fc6f7490>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f67fc6f7490>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: WealdenDistrictCouncil","time":{"start":1702843688239,"stop":1702843688240,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WealdenDistrictCouncil using None and the None is set","time":{"start":1702843688240,"stop":1702843690263,"duration":2023},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1702843690263,"stop":1702843690263,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1702843690264,"stop":1702843690265,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az568-808"},{"name":"thread","value":"2782-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WealdenDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":74,"unknown":0,"total":81},"items":[{"uid":"1e22850be49cd988","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/1e22850be49cd988","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702809631906,"stop":1702809633578,"duration":1672}},{"uid":"8598de8f05636944","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1247//#testresult/8598de8f05636944","status":"passed","time":{"start":1702657378361,"stop":1702657380249,"duration":1888}},{"uid":"e760ebac4b9fd736","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1248//#testresult/e760ebac4b9fd736","status":"passed","time":{"start":1702657500666,"stop":1702657502148,"duration":1482}},{"uid":"8d4ca77fa1ae8bfc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1244//#testresult/8d4ca77fa1ae8bfc","status":"passed","time":{"start":1702603305963,"stop":1702603308384,"duration":2421}},{"uid":"c63aa5449d9dab06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1243//#testresult/c63aa5449d9dab06","status":"passed","time":{"start":1702540185262,"stop":1702540187032,"duration":1770}},{"uid":"e3ebaef08da3df88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1241//#testresult/e3ebaef08da3df88","status":"passed","time":{"start":1702516924941,"stop":1702516926892,"duration":1951}},{"uid":"46b4207ef92b7516","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1238//#testresult/46b4207ef92b7516","status":"passed","time":{"start":1702447684524,"stop":1702447685872,"duration":1348}},{"uid":"8a52a7b358e4888d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1236//#testresult/8a52a7b358e4888d","status":"passed","time":{"start":1702430455375,"stop":1702430457823,"duration":2448}},{"uid":"2f3b25962ea4aaec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1232//#testresult/2f3b25962ea4aaec","status":"passed","time":{"start":1702366590124,"stop":1702366591632,"duration":1508}},{"uid":"bfbc4564e35f51f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1231//#testresult/bfbc4564e35f51f4","status":"passed","time":{"start":1702344065531,"stop":1702344067156,"duration":1625}},{"uid":"e4050a514e23762e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1229//#testresult/e4050a514e23762e","status":"passed","time":{"start":1702257641823,"stop":1702257643283,"duration":1460}},{"uid":"9de4c7f4a3b8c448","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1228//#testresult/9de4c7f4a3b8c448","status":"passed","time":{"start":1702171606848,"stop":1702171608932,"duration":2084}},{"uid":"a52f74e29f1382d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1227//#testresult/a52f74e29f1382d7","status":"passed","time":{"start":1702084775321,"stop":1702084777991,"duration":2670}},{"uid":"28d6c2952b4e9e85","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1225//#testresult/28d6c2952b4e9e85","status":"passed","time":{"start":1702066843019,"stop":1702066844636,"duration":1617}},{"uid":"9efa42fa3ee2132a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1222//#testresult/9efa42fa3ee2132a","status":"passed","time":{"start":1702054493002,"stop":1702054495033,"duration":2031}},{"uid":"28068706b849b8e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1223//#testresult/28068706b849b8e2","status":"passed","time":{"start":1702054522370,"stop":1702054524204,"duration":1834}},{"uid":"55931a52520fb8e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1219//#testresult/55931a52520fb8e0","status":"passed","time":{"start":1701998519126,"stop":1701998521477,"duration":2351}},{"uid":"4091eef1e9e069d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1218//#testresult/4091eef1e9e069d7","status":"passed","time":{"start":1701990477038,"stop":1701990478948,"duration":1910}},{"uid":"914afb449cfcb343","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1217//#testresult/914afb449cfcb343","status":"passed","time":{"start":1701990445283,"stop":1701990446748,"duration":1465}},{"uid":"fb527c5fc4794fec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1215//#testresult/fb527c5fc4794fec","status":"passed","time":{"start":1701942897821,"stop":1701942900094,"duration":2273}}]},"tags":[]},"source":"ecf5d4b8bf06b5b3.json","parameterValues":["WealdenDistrictCouncil","None","None"]}