{"uid":"dfb35d8b0e3bdb64","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1712967929000,"stop":1712967959625,"duration":30625},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fd86b184ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd86a79bfd0>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd87edb4750>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fd86b184ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd86a79bfd0>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fd87edb4750>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1712967929000,"stop":1712967929001,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1712967929001,"stop":1712967959625,"duration":30624},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1242-903"},{"name":"thread","value":"2757-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":0,"skipped":0,"passed":229,"unknown":0,"total":247},"items":[{"uid":"b6d39e805a33ff7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1675//#testresult/b6d39e805a33ff7a","status":"passed","time":{"start":1712881763290,"stop":1712881765135,"duration":1845}},{"uid":"15a0bfd806e18e6e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1674//#testresult/15a0bfd806e18e6e","status":"passed","time":{"start":1712795469212,"stop":1712795470244,"duration":1032}},{"uid":"3dca530de15b89e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1673//#testresult/3dca530de15b89e0","status":"passed","time":{"start":1712710444044,"stop":1712710444815,"duration":771}},{"uid":"ae0172bb82e74b29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1671//#testresult/ae0172bb82e74b29","status":"passed","time":{"start":1712700477568,"stop":1712700478427,"duration":859}},{"uid":"9ebc0ac2059f7372","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1668//#testresult/9ebc0ac2059f7372","status":"passed","time":{"start":1712622608222,"stop":1712622609178,"duration":956}},{"uid":"b5e4a5e9c1b9bc9f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1667//#testresult/b5e4a5e9c1b9bc9f","status":"passed","time":{"start":1712536188347,"stop":1712536189312,"duration":965}},{"uid":"783cb1c7ac051eb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1666//#testresult/783cb1c7ac051eb9","status":"passed","time":{"start":1712449938574,"stop":1712449939550,"duration":976}},{"uid":"47d7331bd4e907d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1665//#testresult/47d7331bd4e907d","status":"passed","time":{"start":1712363370393,"stop":1712363373762,"duration":3369}},{"uid":"2cb9c95fd614f05b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1664//#testresult/2cb9c95fd614f05b","status":"passed","time":{"start":1712276928556,"stop":1712276929491,"duration":935}},{"uid":"1268f0e89aa14bc2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1660//#testresult/1268f0e89aa14bc2","status":"passed","time":{"start":1712190562717,"stop":1712190563827,"duration":1110}},{"uid":"d4b1c358f42a56d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1657//#testresult/d4b1c358f42a56d1","status":"passed","time":{"start":1712137009352,"stop":1712137010106,"duration":754}},{"uid":"db0494e08202a6c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1655//#testresult/db0494e08202a6c1","status":"passed","time":{"start":1712104084085,"stop":1712104084957,"duration":872}},{"uid":"62e2fa1a9dc53c3d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1654//#testresult/62e2fa1a9dc53c3d","status":"passed","time":{"start":1712017734650,"stop":1712017735504,"duration":854}},{"uid":"43b723dcf3fd6cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1653//#testresult/43b723dcf3fd6cc","status":"passed","time":{"start":1711931527224,"stop":1711931528409,"duration":1185}},{"uid":"e3d10e8f70907d24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1652//#testresult/e3d10e8f70907d24","status":"passed","time":{"start":1711845093895,"stop":1711845102666,"duration":8771}},{"uid":"86826f4338ab27c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1649//#testresult/86826f4338ab27c1","status":"passed","time":{"start":1711672113524,"stop":1711672123137,"duration":9613}},{"uid":"b193599e77eb085f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1648//#testresult/b193599e77eb085f","status":"passed","time":{"start":1711585744128,"stop":1711585744929,"duration":801}},{"uid":"84761b7567c40150","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1646//#testresult/84761b7567c40150","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1711499308959,"stop":1711499339917,"duration":30958}},{"uid":"50c991956650033b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1645//#testresult/50c991956650033b","status":"passed","time":{"start":1711412872729,"stop":1711412874595,"duration":1866}},{"uid":"73129516101fd639","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1641//#testresult/73129516101fd639","status":"passed","time":{"start":1711326584600,"stop":1711326586189,"duration":1589}}]},"tags":[]},"source":"dfb35d8b0e3bdb64.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}