{"uid":"132e63c36a2cd5d9","name":"Validate Council Output [RenfrewshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"21c77c05ec171f4a60a68c21bf3d0b55","time":{"start":1724631856431,"stop":1724631876764,"duration":20333},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55cd2783b6ca <unknown>\n#1 0x55cd2750c600 <unknown>\n#2 0x55cd275628e6 <unknown>\n#3 0x55cd275607f6 <unknown>\n#4 0x55cd2755e277 <unknown>\n#5 0x55cd2755d11c <unknown>\n#6 0x55cd27550be6 <unknown>\n#7 0x55cd2757e8a2 <unknown>\n#8 0x55cd27550599 <unknown>\n#9 0x55cd2757ea6e <unknown>\n#10 0x55cd2759d04a <unknown>\n#11 0x55cd2757e643 <unknown>\n#12 0x55cd2754ed31 <unknown>\n#13 0x55cd2754f79e <unknown>\n#14 0x55cd2780325b <unknown>\n#15 0x55cd278071f2 <unknown>\n#16 0x55cd277f0615 <unknown>\n#17 0x55cd27807d82 <unknown>\n#18 0x55cd277d525f <unknown>\n#19 0x55cd2782ae68 <unknown>\n#20 0x55cd2782b040 <unknown>\n#21 0x55cd2783a49c <unknown>\n#22 0x7fe6ff2b8a94 <unknown>\n#23 0x7fe6ff345a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb7cf140400>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb7ceface50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb7ce4b2d10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x55cd2783a49c \\\\u003Cunknown>\\\\n#22 0x7fe6ff2b8a94 \\\\u003Cunknown>\\\\n#23 0x7fe6ff345a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\nE         (Session info: chrome-headless-shell=127.0.6533.119)\nE       Stacktrace:\nE       #0 0x55cd2783b6ca <unknown>\nE       #1 0x55cd2750c600 <unknown>\nE       #2 0x55cd275628e6 <unknown>\nE       #3 0x55cd275607f6 <unknown>\nE       #4 0x55cd2755e277 <unknown>\nE       #5 0x55cd2755d11c <unknown>\nE       #6 0x55cd27550be6 <unknown>\nE       #7 0x55cd2757e8a2 <unknown>\nE       #8 0x55cd27550599 <unknown>\nE       #9 0x55cd2757ea6e <unknown>\nE       #10 0x55cd2759d04a <unknown>\nE       #11 0x55cd2757e643 <unknown>\nE       #12 0x55cd2754ed31 <unknown>\nE       #13 0x55cd2754f79e <unknown>\nE       #14 0x55cd2780325b <unknown>\nE       #15 0x55cd278071f2 <unknown>\nE       #16 0x55cd277f0615 <unknown>\nE       #17 0x55cd27807d82 <unknown>\nE       #18 0x55cd277d525f <unknown>\nE       #19 0x55cd2782ae68 <unknown>\nE       #20 0x55cd2782b040 <unknown>\nE       #21 0x55cd2783a49c <unknown>\nE       #22 0x7fe6ff2b8a94 <unknown>\nE       #23 0x7fe6ff345a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55cd2783b6ca <unknown>\n#1 0x55cd2750c600 <unknown>\n#2 0x55cd275628e6 <unknown>\n#3 0x55cd275607f6 <unknown>\n#4 0x55cd2755e277 <unknown>\n#5 0x55cd2755d11c <unknown>\n#6 0x55cd27550be6 <unknown>\n#7 0x55cd2757e8a2 <unknown>\n#8 0x55cd27550599 <unknown>\n#9 0x55cd2757ea6e <unknown>\n#10 0x55cd2759d04a <unknown>\n#11 0x55cd2757e643 <unknown>\n#12 0x55cd2754ed31 <unknown>\n#13 0x55cd2754f79e <unknown>\n#14 0x55cd2780325b <unknown>\n#15 0x55cd278071f2 <unknown>\n#16 0x55cd277f0615 <unknown>\n#17 0x55cd27807d82 <unknown>\n#18 0x55cd277d525f <unknown>\n#19 0x55cd2782ae68 <unknown>\n#20 0x55cd2782b040 <unknown>\n#21 0x55cd2783a49c <unknown>\n#22 0x7fe6ff2b8a94 <unknown>\n#23 0x7fe6ff345a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7fb7cf140400>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb7ceface50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb7ce4b2d10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x55cd2783a49c \\\\u003Cunknown>\\\\n#22 0x7fe6ff2b8a94 \\\\u003Cunknown>\\\\n#23 0x7fe6ff345a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\nE         (Session info: chrome-headless-shell=127.0.6533.119)\nE       Stacktrace:\nE       #0 0x55cd2783b6ca <unknown>\nE       #1 0x55cd2750c600 <unknown>\nE       #2 0x55cd275628e6 <unknown>\nE       #3 0x55cd275607f6 <unknown>\nE       #4 0x55cd2755e277 <unknown>\nE       #5 0x55cd2755d11c <unknown>\nE       #6 0x55cd27550be6 <unknown>\nE       #7 0x55cd2757e8a2 <unknown>\nE       #8 0x55cd27550599 <unknown>\nE       #9 0x55cd2757ea6e <unknown>\nE       #10 0x55cd2759d04a <unknown>\nE       #11 0x55cd2757e643 <unknown>\nE       #12 0x55cd2754ed31 <unknown>\nE       #13 0x55cd2754f79e <unknown>\nE       #14 0x55cd2780325b <unknown>\nE       #15 0x55cd278071f2 <unknown>\nE       #16 0x55cd277f0615 <unknown>\nE       #17 0x55cd27807d82 <unknown>\nE       #18 0x55cd277d525f <unknown>\nE       #19 0x55cd2782ae68 <unknown>\nE       #20 0x55cd2782b040 <unknown>\nE       #21 0x55cd2783a49c <unknown>\nE       #22 0x7fe6ff2b8a94 <unknown>\nE       #23 0x7fe6ff345a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1724631856431,"stop":1724631856431,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1724631856431,"stop":1724631876764,"duration":20333},"status":"failed","statusMessage":"Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55cd2783b6ca <unknown>\n#1 0x55cd2750c600 <unknown>\n#2 0x55cd275628e6 <unknown>\n#3 0x55cd275607f6 <unknown>\n#4 0x55cd2755e277 <unknown>\n#5 0x55cd2755d11c <unknown>\n#6 0x55cd27550be6 <unknown>\n#7 0x55cd2757e8a2 <unknown>\n#8 0x55cd27550599 <unknown>\n#9 0x55cd2757ea6e <unknown>\n#10 0x55cd2759d04a <unknown>\n#11 0x55cd2757e643 <unknown>\n#12 0x55cd2754ed31 <unknown>\n#13 0x55cd2754f79e <unknown>\n#14 0x55cd2780325b <unknown>\n#15 0x55cd278071f2 <unknown>\n#16 0x55cd277f0615 <unknown>\n#17 0x55cd27807d82 <unknown>\n#18 0x55cd277d525f <unknown>\n#19 0x55cd2782ae68 <unknown>\n#20 0x55cd2782b040 <unknown>\n#21 0x55cd2783a49c <unknown>\n#22 0x7fe6ff2b8a94 <unknown>\n#23 0x7fe6ff345a34 __clone\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55cd2783b6ca <unknown>\n#1 0x55cd2750c600 <unknown>\n#2 0x55cd275628e6 <unknown>\n#3 0x55cd275607f6 <unknown>\n#4 0x55cd2755e277 <unknown>\n#5 0x55cd2755d11c <unknown>\n#6 0x55cd27550be6 <unknown>\n#7 0x55cd2757e8a2 <unknown>\n#8 0x55cd27550599 <unknown>\n#9 0x55cd2757ea6e <unknown>\n#10 0x55cd2759d04a <unknown>\n#11 0x55cd2757e643 <unknown>\n#12 0x55cd2754ed31 <unknown>\n#13 0x55cd2754f79e <unknown>\n#14 0x55cd2780325b <unknown>\n#15 0x55cd278071f2 <unknown>\n#16 0x55cd277f0615 <unknown>\n#17 0x55cd27807d82 <unknown>\n#18 0x55cd277d525f <unknown>\n#19 0x55cd2782ae68 <unknown>\n#20 0x55cd2782b040 <unknown>\n#21 0x55cd2783a49c <unknown>\n#22 0x7fe6ff2b8a94 <unknown>\n#23 0x7fe6ff345a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"58d636b247025ddc","name":"stdout","source":"58d636b247025ddc.txt","type":"text/plain","size":898}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1148-120"},{"name":"thread","value":"2891-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RenfrewshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":0,"skipped":0,"passed":88,"unknown":0,"total":110},"items":[{"uid":"fdc92809cdad7974","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2038//#testresult/fdc92809cdad7974","status":"passed","time":{"start":1724545247095,"stop":1724545401777,"duration":154682}},{"uid":"71eb1689762e8526","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2037//#testresult/71eb1689762e8526","status":"passed","time":{"start":1724458914956,"stop":1724459090367,"duration":175411}},{"uid":"c62586bf321df34f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2036//#testresult/c62586bf321df34f","status":"passed","time":{"start":1724372494684,"stop":1724372505639,"duration":10955}},{"uid":"cc271e38c637bc1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2034//#testresult/cc271e38c637bc1a","status":"passed","time":{"start":1724286170046,"stop":1724286189610,"duration":19564}},{"uid":"b5c0630be6cd99f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2033//#testresult/b5c0630be6cd99f8","status":"passed","time":{"start":1724199669210,"stop":1724199687795,"duration":18585}},{"uid":"512282fc10ea1370","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2032//#testresult/512282fc10ea1370","status":"passed","time":{"start":1724113292533,"stop":1724113304653,"duration":12120}},{"uid":"e7158365124b0803","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2031//#testresult/e7158365124b0803","status":"passed","time":{"start":1724026846200,"stop":1724026994099,"duration":147899}},{"uid":"df6058980cf3bb6d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2030//#testresult/df6058980cf3bb6d","status":"passed","time":{"start":1723940499014,"stop":1723940644407,"duration":145393}},{"uid":"4c037da34b6e6371","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2029//#testresult/4c037da34b6e6371","status":"passed","time":{"start":1723854271758,"stop":1723854296366,"duration":24608}},{"uid":"c7ebfae489b980b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2028//#testresult/c7ebfae489b980b9","status":"passed","time":{"start":1723767655030,"stop":1723767801210,"duration":146180}},{"uid":"3215f9f16a34145f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2027//#testresult/3215f9f16a34145f","status":"passed","time":{"start":1723680790918,"stop":1723680932495,"duration":141577}},{"uid":"971b1656f00e2aa3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2026//#testresult/971b1656f00e2aa3","status":"passed","time":{"start":1723594880999,"stop":1723594893780,"duration":12781}},{"uid":"c949f9f578d9d274","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2025//#testresult/c949f9f578d9d274","status":"passed","time":{"start":1723508632764,"stop":1723508776651,"duration":143887}},{"uid":"be9cbd4563bf33b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2024//#testresult/be9cbd4563bf33b9","status":"passed","time":{"start":1723422264658,"stop":1723422423379,"duration":158721}},{"uid":"ef2a0dd32cd4033d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2022//#testresult/ef2a0dd32cd4033d","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55609f60a6ba <unknown>\n#1 0x55609f2da730 <unknown>\n#2 0x55609f330a96 <unknown>\n#3 0x55609f32e9ad <unknown>\n#4 0x55609f32c447 <unknown>\n#5 0x55609f32b30e <unknown>\n#6 0x55609f31ed66 <unknown>\n#7 0x55609f34ca52 <unknown>\n#8 0x55609f31e719 <unknown>\n#9 0x55609f34cc1e <unknown>\n#10 0x55609f36b1ca <unknown>\n#11 0x55609f34c7f3 <unknown>\n#12 0x55609f31cec9 <unknown>\n#13 0x55609f31d91e <unknown>\n#14 0x55609f5d09eb <unknown>\n#15 0x55609f5d4972 <unknown>\n#16 0x55609f5bde15 <unknown>\n#17 0x55609f5d5502 <unknown>\n#18 0x55609f5a2d2f <unknown>\n#19 0x55609f5f9578 <unknown>\n#20 0x55609f5f9750 <unknown>\n#21 0x55609f60948c <unknown>\n#22 0x7f7985b5ba94 <unknown>\n#23 0x7f7985be8a34 __clone","time":{"start":1723335814657,"stop":1723335827656,"duration":12999}},{"uid":"fb480614183f53c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2020//#testresult/fb480614183f53c0","status":"passed","time":{"start":1723249427300,"stop":1723249440585,"duration":13285}},{"uid":"170b779f66239789","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2019//#testresult/170b779f66239789","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55a8ae80e6ba <unknown>\n#1 0x55a8ae4de730 <unknown>\n#2 0x55a8ae534a96 <unknown>\n#3 0x55a8ae5329ad <unknown>\n#4 0x55a8ae530447 <unknown>\n#5 0x55a8ae52f30e <unknown>\n#6 0x55a8ae522d66 <unknown>\n#7 0x55a8ae550a52 <unknown>\n#8 0x55a8ae522719 <unknown>\n#9 0x55a8ae550c1e <unknown>\n#10 0x55a8ae56f1ca <unknown>\n#11 0x55a8ae5507f3 <unknown>\n#12 0x55a8ae520ec9 <unknown>\n#13 0x55a8ae52191e <unknown>\n#14 0x55a8ae7d49eb <unknown>\n#15 0x55a8ae7d8972 <unknown>\n#16 0x55a8ae7c1e15 <unknown>\n#17 0x55a8ae7d9502 <unknown>\n#18 0x55a8ae7a6d2f <unknown>\n#19 0x55a8ae7fd578 <unknown>\n#20 0x55a8ae7fd750 <unknown>\n#21 0x55a8ae80d48c <unknown>\n#22 0x7f855a795a94 <unknown>\n#23 0x7f855a822a34 __clone","time":{"start":1723163027486,"stop":1723163175881,"duration":148395}},{"uid":"6a01059796dbfc27","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2014//#testresult/6a01059796dbfc27","status":"passed","time":{"start":1723076556401,"stop":1723076568060,"duration":11659}},{"uid":"b42d86dc551edf7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2012//#testresult/b42d86dc551edf7b","status":"passed","time":{"start":1722990276526,"stop":1722990292812,"duration":16286}},{"uid":"9ce877b90598a2e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2007//#testresult/9ce877b90598a2e7","status":"passed","time":{"start":1722903901612,"stop":1722903925242,"duration":23630}}]},"tags":[]},"source":"132e63c36a2cd5d9.json","parameterValues":["RenfrewshireCouncil"]}