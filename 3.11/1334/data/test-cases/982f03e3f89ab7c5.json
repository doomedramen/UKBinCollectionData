{"uid":"982f03e3f89ab7c5","name":"Validate Council Output [StokeOnTrentCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"17b62d612f29f2bda9703e241b337994","time":{"start":1704111613418,"stop":1704111613895,"duration":477},"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f1013891da0>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f1012a27610>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f1012e246d0>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\",\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:49: ConnectionAbortedError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f1013891da0>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f1012a27610>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f1012e246d0>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\",\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:49: ConnectionAbortedError","steps":[{"name":"Given the council: StokeOnTrentCityCouncil","time":{"start":1704111613418,"stop":1704111613418,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"When we scrape the data from StokeOnTrentCityCouncil using None and the None is set","time":{"start":1704111613418,"stop":1704111613895,"duration":477},"status":"failed","statusMessage":"Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1116-506"},{"name":"thread","value":"2683-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StokeOnTrentCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":66,"unknown":0,"total":70},"items":[{"uid":"c325c8135a730acb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1332//#testresult/c325c8135a730acb","status":"passed","time":{"start":1704111517424,"stop":1704111518768,"duration":1344}},{"uid":"46bcd019932122d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1330//#testresult/46bcd019932122d7","status":"passed","time":{"start":1704100116454,"stop":1704100117791,"duration":1337}},{"uid":"6c16a7cc8f410a60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1329//#testresult/6c16a7cc8f410a60","status":"passed","time":{"start":1704072507204,"stop":1704072508299,"duration":1095}},{"uid":"1b9df7abb4d23a86","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1327//#testresult/1b9df7abb4d23a86","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1704050641981,"stop":1704050642808,"duration":827}},{"uid":"88bbee96fcc4ab37","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1325//#testresult/88bbee96fcc4ab37","status":"passed","time":{"start":1704044073832,"stop":1704044076094,"duration":2262}},{"uid":"9be231e01e013f5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1320//#testresult/9be231e01e013f5d","status":"passed","time":{"start":1703985988615,"stop":1703985990399,"duration":1784}},{"uid":"2affc89410d15c37","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1316//#testresult/2affc89410d15c37","status":"passed","time":{"start":1703899125711,"stop":1703899127343,"duration":1632}},{"uid":"f5fed813c136281","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1314//#testresult/f5fed813c136281","status":"failed","statusDetails":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","time":{"start":1703853615359,"stop":1703853616177,"duration":818}},{"uid":"b55648d8219c3296","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1311//#testresult/b55648d8219c3296","status":"passed","time":{"start":1703851231219,"stop":1703851234475,"duration":3256}},{"uid":"c28ede81cdedf533","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1309//#testresult/c28ede81cdedf533","status":"passed","time":{"start":1703812175652,"stop":1703812177217,"duration":1565}},{"uid":"ad3c08dc590a9419","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1306//#testresult/ad3c08dc590a9419","status":"passed","time":{"start":1703756338018,"stop":1703756339697,"duration":1679}},{"uid":"6e7afaea76f84e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1305//#testresult/6e7afaea76f84e9","status":"passed","time":{"start":1703726303158,"stop":1703726304591,"duration":1433}},{"uid":"ad68bc496a1bb73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1304//#testresult/ad68bc496a1bb73","status":"passed","time":{"start":1703717474047,"stop":1703717475262,"duration":1215}},{"uid":"941c640f4e9f3707","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1303//#testresult/941c640f4e9f3707","status":"passed","time":{"start":1703717441181,"stop":1703717442194,"duration":1013}},{"uid":"76ab7a4d9c9e0db4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1301//#testresult/76ab7a4d9c9e0db4","status":"passed","time":{"start":1703639864338,"stop":1703639865460,"duration":1122}},{"uid":"bca0bfb058c26ba2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1300//#testresult/bca0bfb058c26ba2","status":"passed","time":{"start":1703553469910,"stop":1703553471014,"duration":1104}},{"uid":"bd70b16dd609c25c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1298//#testresult/bd70b16dd609c25c","status":"passed","time":{"start":1703541240649,"stop":1703541242113,"duration":1464}},{"uid":"46adff368c260ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1295//#testresult/46adff368c260ff","status":"passed","time":{"start":1703467249623,"stop":1703467250795,"duration":1172}},{"uid":"e0e411448cf5c69f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1292//#testresult/e0e411448cf5c69f","status":"passed","time":{"start":1703416557118,"stop":1703416558769,"duration":1651}},{"uid":"6bd2a9ac982ad953","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1291//#testresult/6bd2a9ac982ad953","status":"passed","time":{"start":1703416497947,"stop":1703416499595,"duration":1648}}]},"tags":[]},"source":"982f03e3f89ab7c5.json","parameterValues":["StokeOnTrentCityCouncil","None","None"]}