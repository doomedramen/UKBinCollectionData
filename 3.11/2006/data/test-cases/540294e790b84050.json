{"uid":"540294e790b84050","name":"Validate Council Output [RenfrewshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"21c77c05ec171f4a60a68c21bf3d0b55","time":{"start":1722817785662,"stop":1722817809188,"duration":23526},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 612)\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55c6b73366ba <unknown>\n#1 0x55c6b7006730 <unknown>\n#2 0x55c6b705ca96 <unknown>\n#3 0x55c6b705a9ad <unknown>\n#4 0x55c6b7058447 <unknown>\n#5 0x55c6b705730e <unknown>\n#6 0x55c6b704ad66 <unknown>\n#7 0x55c6b7078a52 <unknown>\n#8 0x55c6b704a719 <unknown>\n#9 0x55c6b7078c1e <unknown>\n#10 0x55c6b70971ca <unknown>\n#11 0x55c6b70787f3 <unknown>\n#12 0x55c6b7048ec9 <unknown>\n#13 0x55c6b704991e <unknown>\n#14 0x55c6b72fc9eb <unknown>\n#15 0x55c6b7300972 <unknown>\n#16 0x55c6b72e9e15 <unknown>\n#17 0x55c6b7301502 <unknown>\n#18 0x55c6b72ced2f <unknown>\n#19 0x55c6b7325578 <unknown>\n#20 0x55c6b7325750 <unknown>\n#21 0x55c6b733548c <unknown>\n#22 0x7fcb776f4a94 <unknown>\n#23 0x7fcb77781a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7faf11b4b920>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7faf119d6750>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7faf11b92510>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x55c6b733548c \\\\u003Cunknown>\\\\n#22 0x7fcb776f4a94 \\\\u003Cunknown>\\\\n#23 0x7fcb77781a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 612)\nE         (Session info: chrome-headless-shell=127.0.6533.72)\nE       Stacktrace:\nE       #0 0x55c6b73366ba <unknown>\nE       #1 0x55c6b7006730 <unknown>\nE       #2 0x55c6b705ca96 <unknown>\nE       #3 0x55c6b705a9ad <unknown>\nE       #4 0x55c6b7058447 <unknown>\nE       #5 0x55c6b705730e <unknown>\nE       #6 0x55c6b704ad66 <unknown>\nE       #7 0x55c6b7078a52 <unknown>\nE       #8 0x55c6b704a719 <unknown>\nE       #9 0x55c6b7078c1e <unknown>\nE       #10 0x55c6b70971ca <unknown>\nE       #11 0x55c6b70787f3 <unknown>\nE       #12 0x55c6b7048ec9 <unknown>\nE       #13 0x55c6b704991e <unknown>\nE       #14 0x55c6b72fc9eb <unknown>\nE       #15 0x55c6b7300972 <unknown>\nE       #16 0x55c6b72e9e15 <unknown>\nE       #17 0x55c6b7301502 <unknown>\nE       #18 0x55c6b72ced2f <unknown>\nE       #19 0x55c6b7325578 <unknown>\nE       #20 0x55c6b7325750 <unknown>\nE       #21 0x55c6b733548c <unknown>\nE       #22 0x7fcb776f4a94 <unknown>\nE       #23 0x7fcb77781a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 612)\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55c6b73366ba <unknown>\n#1 0x55c6b7006730 <unknown>\n#2 0x55c6b705ca96 <unknown>\n#3 0x55c6b705a9ad <unknown>\n#4 0x55c6b7058447 <unknown>\n#5 0x55c6b705730e <unknown>\n#6 0x55c6b704ad66 <unknown>\n#7 0x55c6b7078a52 <unknown>\n#8 0x55c6b704a719 <unknown>\n#9 0x55c6b7078c1e <unknown>\n#10 0x55c6b70971ca <unknown>\n#11 0x55c6b70787f3 <unknown>\n#12 0x55c6b7048ec9 <unknown>\n#13 0x55c6b704991e <unknown>\n#14 0x55c6b72fc9eb <unknown>\n#15 0x55c6b7300972 <unknown>\n#16 0x55c6b72e9e15 <unknown>\n#17 0x55c6b7301502 <unknown>\n#18 0x55c6b72ced2f <unknown>\n#19 0x55c6b7325578 <unknown>\n#20 0x55c6b7325750 <unknown>\n#21 0x55c6b733548c <unknown>\n#22 0x7fcb776f4a94 <unknown>\n#23 0x7fcb77781a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7faf11b4b920>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7faf119d6750>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7faf11b92510>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x55c6b733548c \\\\u003Cunknown>\\\\n#22 0x7fcb776f4a94 \\\\u003Cunknown>\\\\n#23 0x7fcb77781a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 612)\nE         (Session info: chrome-headless-shell=127.0.6533.72)\nE       Stacktrace:\nE       #0 0x55c6b73366ba <unknown>\nE       #1 0x55c6b7006730 <unknown>\nE       #2 0x55c6b705ca96 <unknown>\nE       #3 0x55c6b705a9ad <unknown>\nE       #4 0x55c6b7058447 <unknown>\nE       #5 0x55c6b705730e <unknown>\nE       #6 0x55c6b704ad66 <unknown>\nE       #7 0x55c6b7078a52 <unknown>\nE       #8 0x55c6b704a719 <unknown>\nE       #9 0x55c6b7078c1e <unknown>\nE       #10 0x55c6b70971ca <unknown>\nE       #11 0x55c6b70787f3 <unknown>\nE       #12 0x55c6b7048ec9 <unknown>\nE       #13 0x55c6b704991e <unknown>\nE       #14 0x55c6b72fc9eb <unknown>\nE       #15 0x55c6b7300972 <unknown>\nE       #16 0x55c6b72e9e15 <unknown>\nE       #17 0x55c6b7301502 <unknown>\nE       #18 0x55c6b72ced2f <unknown>\nE       #19 0x55c6b7325578 <unknown>\nE       #20 0x55c6b7325750 <unknown>\nE       #21 0x55c6b733548c <unknown>\nE       #22 0x7fcb776f4a94 <unknown>\nE       #23 0x7fcb77781a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1722817785663,"stop":1722817785663,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1722817785663,"stop":1722817809188,"duration":23525},"status":"failed","statusMessage":"Message: element click intercepted: Element is not clickable at point (141, 612)\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55c6b73366ba <unknown>\n#1 0x55c6b7006730 <unknown>\n#2 0x55c6b705ca96 <unknown>\n#3 0x55c6b705a9ad <unknown>\n#4 0x55c6b7058447 <unknown>\n#5 0x55c6b705730e <unknown>\n#6 0x55c6b704ad66 <unknown>\n#7 0x55c6b7078a52 <unknown>\n#8 0x55c6b704a719 <unknown>\n#9 0x55c6b7078c1e <unknown>\n#10 0x55c6b70971ca <unknown>\n#11 0x55c6b70787f3 <unknown>\n#12 0x55c6b7048ec9 <unknown>\n#13 0x55c6b704991e <unknown>\n#14 0x55c6b72fc9eb <unknown>\n#15 0x55c6b7300972 <unknown>\n#16 0x55c6b72e9e15 <unknown>\n#17 0x55c6b7301502 <unknown>\n#18 0x55c6b72ced2f <unknown>\n#19 0x55c6b7325578 <unknown>\n#20 0x55c6b7325750 <unknown>\n#21 0x55c6b733548c <unknown>\n#22 0x7fcb776f4a94 <unknown>\n#23 0x7fcb77781a34 __clone\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 612)\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x55c6b73366ba <unknown>\n#1 0x55c6b7006730 <unknown>\n#2 0x55c6b705ca96 <unknown>\n#3 0x55c6b705a9ad <unknown>\n#4 0x55c6b7058447 <unknown>\n#5 0x55c6b705730e <unknown>\n#6 0x55c6b704ad66 <unknown>\n#7 0x55c6b7078a52 <unknown>\n#8 0x55c6b704a719 <unknown>\n#9 0x55c6b7078c1e <unknown>\n#10 0x55c6b70971ca <unknown>\n#11 0x55c6b70787f3 <unknown>\n#12 0x55c6b7048ec9 <unknown>\n#13 0x55c6b704991e <unknown>\n#14 0x55c6b72fc9eb <unknown>\n#15 0x55c6b7300972 <unknown>\n#16 0x55c6b72e9e15 <unknown>\n#17 0x55c6b7301502 <unknown>\n#18 0x55c6b72ced2f <unknown>\n#19 0x55c6b7325578 <unknown>\n#20 0x55c6b7325750 <unknown>\n#21 0x55c6b733548c <unknown>\n#22 0x7fcb776f4a94 <unknown>\n#23 0x7fcb77781a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e24ba821bb1c09c9","name":"stdout","source":"e24ba821bb1c09c9.txt","type":"text/plain","size":897}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1269-709"},{"name":"thread","value":"2776-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RenfrewshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":0,"skipped":0,"passed":70,"unknown":0,"total":89},"items":[{"uid":"ffaaf8430417e4c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2005//#testresult/ffaaf8430417e4c6","status":"passed","time":{"start":1722731121845,"stop":1722731147185,"duration":25340}},{"uid":"be780fdb3075fc83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2004//#testresult/be780fdb3075fc83","status":"passed","time":{"start":1722644808401,"stop":1722644827558,"duration":19157}},{"uid":"f4c09cc65d2c012a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2003//#testresult/f4c09cc65d2c012a","status":"passed","time":{"start":1722558358451,"stop":1722558375129,"duration":16678}},{"uid":"31a160f107391989","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2002//#testresult/31a160f107391989","status":"passed","time":{"start":1722471818138,"stop":1722471830980,"duration":12842}},{"uid":"412a9bf0f97f4be7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1998//#testresult/412a9bf0f97f4be7","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 601)\n  (Session info: chrome-headless-shell=127.0.6533.72)\nStacktrace:\n#0 0x560e47b2f6ba <unknown>\n#1 0x560e477ff730 <unknown>\n#2 0x560e47855a96 <unknown>\n#3 0x560e478539ad <unknown>\n#4 0x560e47851447 <unknown>\n#5 0x560e4785030e <unknown>\n#6 0x560e47843d66 <unknown>\n#7 0x560e47871a52 <unknown>\n#8 0x560e47843719 <unknown>\n#9 0x560e47871c1e <unknown>\n#10 0x560e478901ca <unknown>\n#11 0x560e478717f3 <unknown>\n#12 0x560e47841ec9 <unknown>\n#13 0x560e4784291e <unknown>\n#14 0x560e47af59eb <unknown>\n#15 0x560e47af9972 <unknown>\n#16 0x560e47ae2e15 <unknown>\n#17 0x560e47afa502 <unknown>\n#18 0x560e47ac7d2f <unknown>\n#19 0x560e47b1e578 <unknown>\n#20 0x560e47b1e750 <unknown>\n#21 0x560e47b2e48c <unknown>\n#22 0x7fe338044a94 <unknown>\n#23 0x7fe3380d1a34 __clone","time":{"start":1722385344540,"stop":1722385498648,"duration":154108}},{"uid":"6743689e8da800b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1997//#testresult/6743689e8da800b0","status":"passed","time":{"start":1722298867828,"stop":1722299029765,"duration":161937}},{"uid":"6d8fd3943765bd41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1996//#testresult/6d8fd3943765bd41","status":"passed","time":{"start":1722212472246,"stop":1722212616447,"duration":144201}},{"uid":"f8369e0e3aed48c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1995//#testresult/f8369e0e3aed48c5","status":"passed","time":{"start":1722125974072,"stop":1722126141338,"duration":167266}},{"uid":"b47b2b7adfe8d506","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1994//#testresult/b47b2b7adfe8d506","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55895460669a <unknown>\n#1 0x5589542e90dc <unknown>\n#2 0x55895433c6c6 <unknown>\n#3 0x55895433a516 <unknown>\n#4 0x558954337ef7 <unknown>\n#5 0x558954336d2c <unknown>\n#6 0x55895432a40f <unknown>\n#7 0x558954358872 <unknown>\n#8 0x558954329d89 <unknown>\n#9 0x558954358a3e <unknown>\n#10 0x5589543775c3 <unknown>\n#11 0x558954358613 <unknown>\n#12 0x5589543284f7 <unknown>\n#13 0x558954328e4e <unknown>\n#14 0x5589545cc86b <unknown>\n#15 0x5589545d0911 <unknown>\n#16 0x5589545b835e <unknown>\n#17 0x5589545d1472 <unknown>\n#18 0x55895459ccbf <unknown>\n#19 0x5589545f6098 <unknown>\n#20 0x5589545f6270 <unknown>\n#21 0x5589546057cc <unknown>\n#22 0x7f3911753ac3 <unknown>","time":{"start":1722039733149,"stop":1722039763801,"duration":30652}},{"uid":"d51d78c59ad51898","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1993//#testresult/d51d78c59ad51898","status":"passed","time":{"start":1721953303322,"stop":1721953321392,"duration":18070}},{"uid":"7f978653f78e981b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1992//#testresult/7f978653f78e981b","status":"passed","time":{"start":1721867063342,"stop":1721867076342,"duration":13000}},{"uid":"c580b971b9134a7d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1991//#testresult/c580b971b9134a7d","status":"passed","time":{"start":1721780478274,"stop":1721780496461,"duration":18187}},{"uid":"3deef436063f93af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1990//#testresult/3deef436063f93af","status":"passed","time":{"start":1721694032650,"stop":1721694179109,"duration":146459}},{"uid":"2acbb763e55e8af2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1989//#testresult/2acbb763e55e8af2","status":"passed","time":{"start":1721607621099,"stop":1721607781828,"duration":160729}},{"uid":"dbc793047452ea20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1988//#testresult/dbc793047452ea20","status":"passed","time":{"start":1721521209275,"stop":1721521367770,"duration":158495}},{"uid":"763a09cfb989506a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1987//#testresult/763a09cfb989506a","status":"passed","time":{"start":1721434702919,"stop":1721434715570,"duration":12651}},{"uid":"2c5fced1d6acac45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1986//#testresult/2c5fced1d6acac45","status":"passed","time":{"start":1721372898320,"stop":1721372928465,"duration":30145}},{"uid":"f5dd9de97bc6cd9e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1985//#testresult/f5dd9de97bc6cd9e","status":"passed","time":{"start":1721263885703,"stop":1721263903295,"duration":17592}},{"uid":"e4b2d71023b26135","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1984//#testresult/e4b2d71023b26135","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x558ae5f9269a <unknown>\n#1 0x558ae5c750dc <unknown>\n#2 0x558ae5cc86c6 <unknown>\n#3 0x558ae5cc6516 <unknown>\n#4 0x558ae5cc3ef7 <unknown>\n#5 0x558ae5cc2d2c <unknown>\n#6 0x558ae5cb640f <unknown>\n#7 0x558ae5ce4872 <unknown>\n#8 0x558ae5cb5d89 <unknown>\n#9 0x558ae5ce4a3e <unknown>\n#10 0x558ae5d035c3 <unknown>\n#11 0x558ae5ce4613 <unknown>\n#12 0x558ae5cb44f7 <unknown>\n#13 0x558ae5cb4e4e <unknown>\n#14 0x558ae5f5886b <unknown>\n#15 0x558ae5f5c911 <unknown>\n#16 0x558ae5f4435e <unknown>\n#17 0x558ae5f5d472 <unknown>\n#18 0x558ae5f28cbf <unknown>\n#19 0x558ae5f82098 <unknown>\n#20 0x558ae5f82270 <unknown>\n#21 0x558ae5f917cc <unknown>\n#22 0x7fe8e3528ac3 <unknown>","time":{"start":1721177343957,"stop":1721177507572,"duration":163615}},{"uid":"3eeeb0541001c06f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1983//#testresult/3eeeb0541001c06f","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55db63d4a69a <unknown>\n#1 0x55db63a2d0dc <unknown>\n#2 0x55db63a806c6 <unknown>\n#3 0x55db63a7e516 <unknown>\n#4 0x55db63a7bef7 <unknown>\n#5 0x55db63a7ad2c <unknown>\n#6 0x55db63a6e40f <unknown>\n#7 0x55db63a9c872 <unknown>\n#8 0x55db63a6dd89 <unknown>\n#9 0x55db63a9ca3e <unknown>\n#10 0x55db63abb5c3 <unknown>\n#11 0x55db63a9c613 <unknown>\n#12 0x55db63a6c4f7 <unknown>\n#13 0x55db63a6ce4e <unknown>\n#14 0x55db63d1086b <unknown>\n#15 0x55db63d14911 <unknown>\n#16 0x55db63cfc35e <unknown>\n#17 0x55db63d15472 <unknown>\n#18 0x55db63ce0cbf <unknown>\n#19 0x55db63d3a098 <unknown>\n#20 0x55db63d3a270 <unknown>\n#21 0x55db63d497cc <unknown>\n#22 0x7f78a346eac3 <unknown>","time":{"start":1721090904727,"stop":1721090921751,"duration":17024}}]},"tags":[]},"source":"540294e790b84050.json","parameterValues":["RenfrewshireCouncil"]}