{"uid":"f2c6a073f42ef46f","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1715646432365,"stop":1715646471851,"duration":39486},"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7ffbae680f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ffbae52bb50>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7ffbae680f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ffbae52bb50>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1715646432365,"stop":1715646432365,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1715646432365,"stop":1715646471851,"duration":39486},"status":"failed","statusMessage":"time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"ValueError: time data 'Being collected today' does not match format '%A %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1393-708"},{"name":"thread","value":"2671-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":68,"broken":0,"skipped":0,"passed":126,"unknown":0,"total":194},"items":[{"uid":"a8f962f8a2ff4f15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1765//#testresult/a8f962f8a2ff4f15","status":"passed","time":{"start":1715560106201,"stop":1715560132714,"duration":26513}},{"uid":"3d004a90233f99f1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1764//#testresult/3d004a90233f99f1","status":"passed","time":{"start":1715473780679,"stop":1715473797692,"duration":17013}},{"uid":"6a2e6f3337c30ecb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1763//#testresult/6a2e6f3337c30ecb","status":"passed","time":{"start":1715387188883,"stop":1715387208898,"duration":20015}},{"uid":"22599a4597577b6e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1762//#testresult/22599a4597577b6e","status":"passed","time":{"start":1715300804244,"stop":1715300820603,"duration":16359}},{"uid":"ce17023e823773eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1760//#testresult/ce17023e823773eb","status":"passed","time":{"start":1715285074884,"stop":1715285088992,"duration":14108}},{"uid":"d5bb42d9a95ea239","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1756//#testresult/d5bb42d9a95ea239","status":"passed","time":{"start":1715214395548,"stop":1715214415818,"duration":20270}},{"uid":"e5b01278b14178a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1743//#testresult/e5b01278b14178a8","status":"passed","time":{"start":1715041593227,"stop":1715041616358,"duration":23131}},{"uid":"9edc89f19534a8c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1742//#testresult/9edc89f19534a8c0","status":"passed","time":{"start":1714955258207,"stop":1714955278000,"duration":19793}},{"uid":"ee21dfe51fc0296c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1741//#testresult/ee21dfe51fc0296c","status":"passed","time":{"start":1714868925808,"stop":1714868941929,"duration":16121}},{"uid":"862d3e249000daaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1740//#testresult/862d3e249000daaf","status":"passed","time":{"start":1714782354501,"stop":1714782380547,"duration":26046}},{"uid":"975f1ec19e76b147","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1739//#testresult/975f1ec19e76b147","status":"passed","time":{"start":1714695992715,"stop":1714696015010,"duration":22295}},{"uid":"ee604c5897b4c9d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1738//#testresult/ee604c5897b4c9d5","status":"passed","time":{"start":1714609569549,"stop":1714609598063,"duration":28514}},{"uid":"6e756a1ecfed6f60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1735//#testresult/6e756a1ecfed6f60","status":"passed","time":{"start":1714523300091,"stop":1714523315529,"duration":15438}},{"uid":"e7dc6522efe82e94","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1734//#testresult/e7dc6522efe82e94","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1714436736078,"stop":1714436752313,"duration":16235}},{"uid":"abee1eca6fe7593c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1732//#testresult/abee1eca6fe7593c","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d828801cb3 <unknown>\n#1 0x55d8284f04a7 <unknown>\n#2 0x55d82853b31d <unknown>\n#3 0x55d82853b3d1 <unknown>\n#4 0x55d82857e734 <unknown>\n#5 0x55d82855d43d <unknown>\n#6 0x55d82857bbe9 <unknown>\n#7 0x55d82855d1b3 <unknown>\n#8 0x55d82852e24a <unknown>\n#9 0x55d82852ec1e <unknown>\n#10 0x55d8287c5fdb <unknown>\n#11 0x55d8287c9f2b <unknown>\n#12 0x55d8287b20f1 <unknown>\n#13 0x55d8287caa92 <unknown>\n#14 0x55d828796faf <unknown>\n#15 0x55d8287f0e08 <unknown>\n#16 0x55d8287f0fe0 <unknown>\n#17 0x55d828800e04 <unknown>\n#18 0x7ff41ac94ac3 <unknown>","time":{"start":1714350451344,"stop":1714350549384,"duration":98040}},{"uid":"b7a9d3576bca4ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1724//#testresult/b7a9d3576bca4ca","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ecd1f4fcb3 <unknown>\n#1 0x55ecd1c3e4a7 <unknown>\n#2 0x55ecd1c8931d <unknown>\n#3 0x55ecd1c893d1 <unknown>\n#4 0x55ecd1ccc734 <unknown>\n#5 0x55ecd1cab43d <unknown>\n#6 0x55ecd1cc9be9 <unknown>\n#7 0x55ecd1cab1b3 <unknown>\n#8 0x55ecd1c7c24a <unknown>\n#9 0x55ecd1c7cc1e <unknown>\n#10 0x55ecd1f13fdb <unknown>\n#11 0x55ecd1f17f2b <unknown>\n#12 0x55ecd1f000f1 <unknown>\n#13 0x55ecd1f18a92 <unknown>\n#14 0x55ecd1ee4faf <unknown>\n#15 0x55ecd1f3ee08 <unknown>\n#16 0x55ecd1f3efe0 <unknown>\n#17 0x55ecd1f4ee04 <unknown>\n#18 0x7f1807294ac3 <unknown>","time":{"start":1714264163635,"stop":1714264238870,"duration":75235}},{"uid":"fd6ab03f6f801bed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1722//#testresult/fd6ab03f6f801bed","status":"passed","time":{"start":1714234149729,"stop":1714234182685,"duration":32956}},{"uid":"2d4649d8560e4668","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1714//#testresult/2d4649d8560e4668","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55ca0411bcb3 <unknown>\n#1 0x55ca03e0a2f7 <unknown>\n#2 0x55ca03e4f40f <unknown>\n#3 0x55ca03e4d846 <unknown>\n#4 0x55ca03e77412 <unknown>\n#5 0x55ca03e49b58 <unknown>\n#6 0x55ca03e775de <unknown>\n#7 0x55ca03e95be9 <unknown>\n#8 0x55ca03e771b3 <unknown>\n#9 0x55ca03e4824a <unknown>\n#10 0x55ca03e48c1e <unknown>\n#11 0x55ca040dffdb <unknown>\n#12 0x55ca040e3f2b <unknown>\n#13 0x55ca040cc0f1 <unknown>\n#14 0x55ca040e4a92 <unknown>\n#15 0x55ca040b0faf <unknown>\n#16 0x55ca0410ae08 <unknown>\n#17 0x55ca0410afe0 <unknown>\n#18 0x55ca0411ae04 <unknown>\n#19 0x7ff70d294ac3 <unknown>","time":{"start":1714232691496,"stop":1714232702359,"duration":10863}},{"uid":"547adf5e15ce3dc2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1713//#testresult/547adf5e15ce3dc2","status":"passed","time":{"start":1714177555717,"stop":1714177596362,"duration":40645}},{"uid":"5544ef240f81e56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1712//#testresult/5544ef240f81e56","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5649ad002cb3 <unknown>\n#1 0x5649accf14a7 <unknown>\n#2 0x5649acd3c31d <unknown>\n#3 0x5649acd3c3d1 <unknown>\n#4 0x5649acd7f734 <unknown>\n#5 0x5649acd5e43d <unknown>\n#6 0x5649acd7cbe9 <unknown>\n#7 0x5649acd5e1b3 <unknown>\n#8 0x5649acd2f24a <unknown>\n#9 0x5649acd2fc1e <unknown>\n#10 0x5649acfc6fdb <unknown>\n#11 0x5649acfcaf2b <unknown>\n#12 0x5649acfb30f1 <unknown>\n#13 0x5649acfcba92 <unknown>\n#14 0x5649acf97faf <unknown>\n#15 0x5649acff1e08 <unknown>\n#16 0x5649acff1fe0 <unknown>\n#17 0x5649ad001e04 <unknown>\n#18 0x7ff955294ac3 <unknown>","time":{"start":1714091181767,"stop":1714091255846,"duration":74079}}]},"tags":[]},"source":"f2c6a073f42ef46f.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}