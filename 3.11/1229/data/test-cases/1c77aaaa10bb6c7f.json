{"uid":"1c77aaaa10bb6c7f","name":"Validate Council Output [NorthWestLeicestershire-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"636da600d3c2f6211f4c406b74efac78","time":{"start":1702257570568,"stop":1702257581099,"duration":10531},"status":"failed","statusMessage":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7fb899df0e00>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthWestLeicestershire-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb8995d8550>, 'council': 'NorthWestLeicestershire', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthWestLeicestershire.py:85: in parse_data\n    \"collectionDate\": datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'December 2023', format = '%d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'December 2023' does not match format '%d %B %Y'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7fb899df0e00>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthWestLeicestershire-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb8995d8550>, 'council': 'NorthWestLeicestershire', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthWestLeicestershire.py:85: in parse_data\n    \"collectionDate\": datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'December 2023', format = '%d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'December 2023' does not match format '%d %B %Y'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: NorthWestLeicestershire","time":{"start":1702257570568,"stop":1702257570568,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthWestLeicestershire using local and the http://selenium:4444 is set","time":{"start":1702257570568,"stop":1702257581099,"duration":10531},"status":"failed","statusMessage":"time data 'December 2023' does not match format '%d %B %Y'","statusTrace":"ValueError: time data 'December 2023' does not match format '%d %B %Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1536-631"},{"name":"thread","value":"2713-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthWestLeicestershire"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":16},"items":[{"uid":"cc317e3dd5ad7605","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1228//#testresult/cc317e3dd5ad7605","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1702171514869,"stop":1702171524312,"duration":9443}},{"uid":"58080ad7bed77c49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1227//#testresult/58080ad7bed77c49","status":"failed","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=119.0.6045.199); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55bb3c3b25e3 <unknown>\n#1 0x55bb3c0750b7 <unknown>\n#2 0x55bb3c07b2b5 <unknown>\n#3 0x55bb3c07d5c6 <unknown>\n#4 0x55bb3c07d6fc <unknown>\n#5 0x55bb3c0bd480 <unknown>\n#6 0x55bb3c0e9ef2 <unknown>\n#7 0x55bb3c0b6a02 <unknown>\n#8 0x55bb3c0ea0be <unknown>\n#9 0x55bb3c105b3d <unknown>\n#10 0x55bb3c0e9cc3 <unknown>\n#11 0x55bb3c0b50e4 <unknown>\n#12 0x55bb3c0b60ae <unknown>\n#13 0x55bb3c378ce1 <unknown>\n#14 0x55bb3c37cb7e <unknown>\n#15 0x55bb3c3664b5 <unknown>\n#16 0x55bb3c37d7d6 <unknown>\n#17 0x55bb3c349dbf <unknown>\n#18 0x55bb3c3a0748 <unknown>\n#19 0x55bb3c3a0917 <unknown>\n#20 0x55bb3c3b1773 <unknown>\n#21 0x7f8c5d694ac3 <unknown>","time":{"start":1702084696682,"stop":1702084701918,"duration":5236}},{"uid":"c359b73e2e4a732c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1225//#testresult/c359b73e2e4a732c","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1702066763782,"stop":1702066778208,"duration":14426}},{"uid":"b16db8f4b87b8567","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1222//#testresult/b16db8f4b87b8567","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1702054415137,"stop":1702054427564,"duration":12427}},{"uid":"4d9f9ef90c3c9f61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1223//#testresult/4d9f9ef90c3c9f61","status":"failed","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=119.0.6045.199); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5634148445e3 <unknown>\n#1 0x5634145070b7 <unknown>\n#2 0x56341450d2b5 <unknown>\n#3 0x56341450f5c6 <unknown>\n#4 0x56341450f6fc <unknown>\n#5 0x563414559492 <unknown>\n#6 0x563414549b64 <unknown>\n#7 0x56341457bef2 <unknown>\n#8 0x563414548a02 <unknown>\n#9 0x56341457c0be <unknown>\n#10 0x563414597b3d <unknown>\n#11 0x56341457bcc3 <unknown>\n#12 0x5634145470e4 <unknown>\n#13 0x5634145480ae <unknown>\n#14 0x56341480ace1 <unknown>\n#15 0x56341480eb7e <unknown>\n#16 0x5634147f84b5 <unknown>\n#17 0x56341480f7d6 <unknown>\n#18 0x5634147dbdbf <unknown>\n#19 0x563414832748 <unknown>\n#20 0x563414832917 <unknown>\n#21 0x563414843773 <unknown>\n#22 0x7f40b7694ac3 <unknown>","time":{"start":1702054436549,"stop":1702054444061,"duration":7512}},{"uid":"d265a53db000176c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1219//#testresult/d265a53db000176c","status":"failed","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=119.0.6045.159); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55b51747b5e3 <unknown>\n#1 0x55b51713e0b7 <unknown>\n#2 0x55b5171442b5 <unknown>\n#3 0x55b5171465c6 <unknown>\n#4 0x55b5171466fc <unknown>\n#5 0x55b51718e013 <unknown>\n#6 0x55b517180021 <unknown>\n#7 0x55b5171b2ef2 <unknown>\n#8 0x55b51717fa02 <unknown>\n#9 0x55b5171b30be <unknown>\n#10 0x55b5171ceb3d <unknown>\n#11 0x55b5171b2cc3 <unknown>\n#12 0x55b51717e0e4 <unknown>\n#13 0x55b51717f0ae <unknown>\n#14 0x55b517441ce1 <unknown>\n#15 0x55b517445b7e <unknown>\n#16 0x55b51742f4b5 <unknown>\n#17 0x55b5174467d6 <unknown>\n#18 0x55b517412dbf <unknown>\n#19 0x55b517469748 <unknown>\n#20 0x55b517469917 <unknown>\n#21 0x55b51747a773 <unknown>\n#22 0x7f8e8fa94ac3 <unknown>","time":{"start":1701998436231,"stop":1701998446210,"duration":9979}},{"uid":"f35127b6586492f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1218//#testresult/f35127b6586492f8","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1701990420728,"stop":1701990432092,"duration":11364}},{"uid":"ec8b43e44957aec2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1217//#testresult/ec8b43e44957aec2","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1701990380018,"stop":1701990389103,"duration":9085}},{"uid":"56fc9d6e028e5df4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1215//#testresult/56fc9d6e028e5df4","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1701942828172,"stop":1701942841443,"duration":13271}},{"uid":"a811033d9842c52e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1214//#testresult/a811033d9842c52e","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1701936578247,"stop":1701936587950,"duration":9703}},{"uid":"ce428118f7ea1985","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1213//#testresult/ce428118f7ea1985","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1701936533460,"stop":1701936542633,"duration":9173}},{"uid":"791d69380b79a832","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1211//#testresult/791d69380b79a832","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1701912017547,"stop":1701912031171,"duration":13624}},{"uid":"656eb720baeb3b5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1209//#testresult/656eb720baeb3b5d","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1701904896761,"stop":1701904907052,"duration":10291}},{"uid":"a625d27b94adcac8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1201//#testresult/a625d27b94adcac8","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1701882576532,"stop":1701882592767,"duration":16235}},{"uid":"aca44f9bbe238e4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1202//#testresult/aca44f9bbe238e4a","status":"failed","statusDetails":"ValueError: time data 'December 2023' does not match format '%d %B %Y'","time":{"start":1701882589436,"stop":1701882601828,"duration":12392}}]},"tags":[]},"source":"1c77aaaa10bb6c7f.json","parameterValues":["NorthWestLeicestershire","local","http://selenium:4444"]}