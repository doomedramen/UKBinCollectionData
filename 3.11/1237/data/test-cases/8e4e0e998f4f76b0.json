{"uid":"8e4e0e998f4f76b0","name":"Validate Council Output [MalvernHillsDC-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aa5bb0fc8895f376e02d5eea8573242b","time":{"start":1702447447349,"stop":1702447448317,"duration":968},"status":"failed","statusMessage":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f559b43f4c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f559b046450>, 'council': 'MalvernHillsDC', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MalvernHillsDC.py:51: in parse_data\n    date = datetime.strptime(thisCollection[1], \"%A %d/%m/%Y\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Please refer to the  christmas collection calendar.'\nformat = '%A %d/%m/%Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f559b43f4c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f559b046450>, 'council': 'MalvernHillsDC', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MalvernHillsDC.py:51: in parse_data\n    date = datetime.strptime(thisCollection[1], \"%A %d/%m/%Y\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Please refer to the  christmas collection calendar.'\nformat = '%A %d/%m/%Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: MalvernHillsDC","time":{"start":1702447447349,"stop":1702447447349,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MalvernHillsDC using None and the None is set","time":{"start":1702447447349,"stop":1702447448317,"duration":968},"status":"failed","statusMessage":"time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az975-308"},{"name":"thread","value":"2757-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MalvernHillsDC"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":17,"broken":0,"skipped":0,"passed":57,"unknown":0,"total":74},"items":[{"uid":"f0d5278234aedee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1236//#testresult/f0d5278234aedee","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702430342104,"stop":1702430343256,"duration":1152}},{"uid":"5ae0c325cdae652d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1232//#testresult/5ae0c325cdae652d","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702366494930,"stop":1702366496058,"duration":1128}},{"uid":"89bd51a8a8a993ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1231//#testresult/89bd51a8a8a993ec","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702343972185,"stop":1702343973097,"duration":912}},{"uid":"89986d37d91a2d74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1229//#testresult/89986d37d91a2d74","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702257549966,"stop":1702257550969,"duration":1003}},{"uid":"c473fdce3cb949e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1228//#testresult/c473fdce3cb949e5","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702171443807,"stop":1702171444801,"duration":994}},{"uid":"d608c3870abd9945","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1227//#testresult/d608c3870abd9945","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702084671891,"stop":1702084672833,"duration":942}},{"uid":"62817c4c0e687f7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1225//#testresult/62817c4c0e687f7e","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702066738011,"stop":1702066739061,"duration":1050}},{"uid":"9f5880621016b274","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1222//#testresult/9f5880621016b274","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702054381955,"stop":1702054383215,"duration":1260}},{"uid":"643b67d26d882ed2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1223//#testresult/643b67d26d882ed2","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702054416941,"stop":1702054417900,"duration":959}},{"uid":"80629c51974c141a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1219//#testresult/80629c51974c141a","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1701998386028,"stop":1701998387075,"duration":1047}},{"uid":"7dabdac294e25464","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1218//#testresult/7dabdac294e25464","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1701990383826,"stop":1701990385388,"duration":1562}},{"uid":"5c5eb3d698293da0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1217//#testresult/5c5eb3d698293da0","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1701990351413,"stop":1701990352385,"duration":972}},{"uid":"56fea6ed52d0de9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1215//#testresult/56fea6ed52d0de9b","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1701942789155,"stop":1701942790463,"duration":1308}},{"uid":"3d0beadfb74e8fa0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1214//#testresult/3d0beadfb74e8fa0","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1701936520924,"stop":1701936522268,"duration":1344}},{"uid":"eeb8da7a6905904e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1213//#testresult/eeb8da7a6905904e","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1701936473405,"stop":1701936474491,"duration":1086}},{"uid":"a7c26f351a75aebb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1211//#testresult/a7c26f351a75aebb","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1701911955777,"stop":1701911957220,"duration":1443}},{"uid":"e1fcb49f01c36f60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1209//#testresult/e1fcb49f01c36f60","status":"passed","time":{"start":1701904885374,"stop":1701904886325,"duration":951}},{"uid":"e3557ca00e751911","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1201//#testresult/e3557ca00e751911","status":"passed","time":{"start":1701882520869,"stop":1701882522276,"duration":1407}},{"uid":"c56618e88f06a33d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1202//#testresult/c56618e88f06a33d","status":"passed","time":{"start":1701882553591,"stop":1701882555030,"duration":1439}},{"uid":"dbae6504914207ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1199//#testresult/dbae6504914207ae","status":"passed","time":{"start":1701825566449,"stop":1701825567523,"duration":1074}}]},"tags":[]},"source":"8e4e0e998f4f76b0.json","parameterValues":["MalvernHillsDC","None","None"]}