{"uid":"58a8b457d73b32ba","name":"Validate Council Output [SunderlandCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1a7ab024f39f9d5f723a6a4b1c23ccbf","time":{"start":1723767681371,"stop":1723767877319,"duration":195948},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_text'","statusTrace":"fixturefunc = <function scrape_step at 0x7f099d54b4c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f099d3d1fd0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SunderlandCityCouncil.CouncilClass object at 0x7f099cb1ae50>, page = ''\nkwargs = {'council_module_str': 'SunderlandCityCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"1b2c16f00b2d0c58650f45ddd71b6bf3\")>\ndata = {'bins': []}, collections = [], user_paon = '13'\nuser_postcode = 'SR4 6BJ', web_driver = 'http://localhost:4444', headless = True\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            collections = []\n    \n            user_paon = kwargs.get(\"paon\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_paon(user_paon)\n            check_postcode(user_postcode)\n    \n            driver = create_webdriver(web_driver, headless, None, __name__)\n            driver.get(\n                \"https://webapps.sunderland.gov.uk/WEBAPPS/WSS/Sunderland_Portal/Forms/bindaychecker.aspx\"\n            )\n    \n            inputElement_postcode = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_tbPostCode_controltext\")\n                )\n            )\n            inputElement_postcode.send_keys(user_postcode)\n    \n            inputElement_submit_button = WebDriverWait(driver, 30).until(\n                EC.element_to_be_clickable((By.ID, \"ContentPlaceHolder1_btnLLPG\"))\n            )\n            inputElement_submit_button.click()\n    \n            addressList = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_ddlAddresses\")\n                )\n            )\n            selected_addressList = Select(addressList)\n            for idx, addr_option in enumerate(selected_addressList.options):\n                option_name = addr_option.accessible_name[0 : len(user_paon)]\n                if option_name == user_paon:\n                    break\n            selected_addressList.select_by_index(idx)\n    \n            # Make a BS4 object\n            soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n            soup.prettify()\n    \n            household_bin_date = datetime.strptime(\n>               soup.find(\"span\", {\"id\": \"ContentPlaceHolder1_LabelHouse\"}).get_text(\n                    strip=True\n                ),\n                \"%A %d %B %Y\",\n            )\nE           AttributeError: 'NoneType' object has no attribute 'get_text'\n\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:66: AttributeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_text'","statusTrace":"fixturefunc = <function scrape_step at 0x7f099d54b4c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f099d3d1fd0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SunderlandCityCouncil.CouncilClass object at 0x7f099cb1ae50>, page = ''\nkwargs = {'council_module_str': 'SunderlandCityCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"1b2c16f00b2d0c58650f45ddd71b6bf3\")>\ndata = {'bins': []}, collections = [], user_paon = '13'\nuser_postcode = 'SR4 6BJ', web_driver = 'http://localhost:4444', headless = True\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            collections = []\n    \n            user_paon = kwargs.get(\"paon\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_paon(user_paon)\n            check_postcode(user_postcode)\n    \n            driver = create_webdriver(web_driver, headless, None, __name__)\n            driver.get(\n                \"https://webapps.sunderland.gov.uk/WEBAPPS/WSS/Sunderland_Portal/Forms/bindaychecker.aspx\"\n            )\n    \n            inputElement_postcode = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_tbPostCode_controltext\")\n                )\n            )\n            inputElement_postcode.send_keys(user_postcode)\n    \n            inputElement_submit_button = WebDriverWait(driver, 30).until(\n                EC.element_to_be_clickable((By.ID, \"ContentPlaceHolder1_btnLLPG\"))\n            )\n            inputElement_submit_button.click()\n    \n            addressList = WebDriverWait(driver, 30).until(\n                EC.presence_of_element_located(\n                    (By.ID, \"ContentPlaceHolder1_ddlAddresses\")\n                )\n            )\n            selected_addressList = Select(addressList)\n            for idx, addr_option in enumerate(selected_addressList.options):\n                option_name = addr_option.accessible_name[0 : len(user_paon)]\n                if option_name == user_paon:\n                    break\n            selected_addressList.select_by_index(idx)\n    \n            # Make a BS4 object\n            soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n            soup.prettify()\n    \n            household_bin_date = datetime.strptime(\n>               soup.find(\"span\", {\"id\": \"ContentPlaceHolder1_LabelHouse\"}).get_text(\n                    strip=True\n                ),\n                \"%A %d %B %Y\",\n            )\nE           AttributeError: 'NoneType' object has no attribute 'get_text'\n\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:66: AttributeError","steps":[{"name":"Given the council","time":{"start":1723767681371,"stop":1723767681372,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1723767681372,"stop":1723767877319,"duration":195947},"status":"failed","statusMessage":"'NoneType' object has no attribute 'get_text'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'get_text'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3845063291727967","name":"stdout","source":"3845063291727967.txt","type":"text/plain","size":113}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az700-999"},{"name":"thread","value":"2764-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SunderlandCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":97,"unknown":0,"total":100},"items":[{"uid":"21c6f657ebaf3c42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2027//#testresult/21c6f657ebaf3c42","status":"passed","time":{"start":1723680806865,"stop":1723680945979,"duration":139114}},{"uid":"d3b7455bdd0c4657","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2026//#testresult/d3b7455bdd0c4657","status":"passed","time":{"start":1723594911123,"stop":1723595041318,"duration":130195}},{"uid":"f82c882bd6a0c8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2025//#testresult/f82c882bd6a0c8f","status":"passed","time":{"start":1723508769896,"stop":1723508795401,"duration":25505}},{"uid":"3fad221f66893084","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2024//#testresult/3fad221f66893084","status":"passed","time":{"start":1723422274469,"stop":1723422426603,"duration":152134}},{"uid":"9ac9913c1720ffbb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2022//#testresult/9ac9913c1720ffbb","status":"passed","time":{"start":1723335840363,"stop":1723335980512,"duration":140149}},{"uid":"c2a6d66c01807b63","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2020//#testresult/c2a6d66c01807b63","status":"passed","time":{"start":1723249442026,"stop":1723249598966,"duration":156940}},{"uid":"53f29af164425697","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2019//#testresult/53f29af164425697","status":"passed","time":{"start":1723163059610,"stop":1723163193794,"duration":134184}},{"uid":"62ab4a114de307b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2014//#testresult/62ab4a114de307b3","status":"passed","time":{"start":1723076575984,"stop":1723076713679,"duration":137695}},{"uid":"ff9da5cfa8b990dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2012//#testresult/ff9da5cfa8b990dd","status":"passed","time":{"start":1722990009378,"stop":1722990269637,"duration":260259}},{"uid":"689520581e139d7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2007//#testresult/689520581e139d7c","status":"passed","time":{"start":1722903884302,"stop":1722903919112,"duration":34810}},{"uid":"808a5724c6454592","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2006//#testresult/808a5724c6454592","status":"passed","time":{"start":1722817516907,"stop":1722817776541,"duration":259634}},{"uid":"8d781f17153caaae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2005//#testresult/8d781f17153caaae","status":"passed","time":{"start":1722730989217,"stop":1722731130325,"duration":141108}},{"uid":"9f0a03bff1f504a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2004//#testresult/9f0a03bff1f504a3","status":"passed","time":{"start":1722644598207,"stop":1722644797289,"duration":199082}},{"uid":"d85b7caacfbb789c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2003//#testresult/d85b7caacfbb789c","status":"passed","time":{"start":1722558097319,"stop":1722558348979,"duration":251660}},{"uid":"5b626b99e7c8bf27","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2002//#testresult/5b626b99e7c8bf27","status":"passed","time":{"start":1722471587597,"stop":1722471810001,"duration":222404}},{"uid":"755516c71a1e3be6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1998//#testresult/755516c71a1e3be6","status":"passed","time":{"start":1722385325922,"stop":1722385494084,"duration":168162}},{"uid":"a90cd01c2b94f8ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1997//#testresult/a90cd01c2b94f8ad","status":"passed","time":{"start":1722298925098,"stop":1722299043680,"duration":118582}},{"uid":"c167d4f48d4adc4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1996//#testresult/c167d4f48d4adc4b","status":"passed","time":{"start":1722212629116,"stop":1722212645022,"duration":15906}},{"uid":"223d472b9f4ad34d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1995//#testresult/223d472b9f4ad34d","status":"passed","time":{"start":1722126032449,"stop":1722126158122,"duration":125673}},{"uid":"fb2827d84010eb26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1994//#testresult/fb2827d84010eb26","status":"passed","time":{"start":1722039771743,"stop":1722039923472,"duration":151729}}]},"tags":[]},"source":"58a8b457d73b32ba.json","parameterValues":["SunderlandCityCouncil"]}