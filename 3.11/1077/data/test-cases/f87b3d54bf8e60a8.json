{"uid":"f87b3d54bf8e60a8","name":"Validate Council Output [WiganBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d724d8b9a4d0593a99f53e95b03e558b","time":{"start":1698715261726,"stop":1698715265785,"duration":4059},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb568dc2020>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb558a7a7d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb558a7a7d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb568dc2020>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb558a7a7d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb558a7a7d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","steps":[{"name":"Given the council: WiganBoroughCouncil","time":{"start":1698715261726,"stop":1698715261726,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WiganBoroughCouncil","time":{"start":1698715261727,"stop":1698715265781,"duration":4054},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698715265781,"stop":1698715265782,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698715265782,"stop":1698715265785,"duration":3},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az565-617"},{"name":"thread","value":"2135-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiganBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":91,"broken":0,"skipped":0,"passed":76,"unknown":0,"total":167},"items":[{"uid":"3a05533e4af3a924","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/3a05533e4af3a924","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698701595015,"stop":1698701598703,"duration":3688}},{"uid":"a28af657b605aa20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/a28af657b605aa20","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698700498087,"stop":1698700502293,"duration":4206}},{"uid":"b6ae7074d096830a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/b6ae7074d096830a","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698693235711,"stop":1698693239432,"duration":3721}},{"uid":"b4a7ef09070b5222","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/b4a7ef09070b5222","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698693022581,"stop":1698693026529,"duration":3948}},{"uid":"885f46996caf3c43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/885f46996caf3c43","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698646613895,"stop":1698646617594,"duration":3699}},{"uid":"8e7673b97ab714d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/8e7673b97ab714d7","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698646586390,"stop":1698646594303,"duration":7913}},{"uid":"a64efc9139002fbe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/a64efc9139002fbe","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698628839161,"stop":1698628842775,"duration":3614}},{"uid":"4cacf3064e3d9c32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/4cacf3064e3d9c32","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698615549107,"stop":1698615552689,"duration":3582}},{"uid":"d092382e3b1f9337","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1063//#testresult/d092382e3b1f9337","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698615474591,"stop":1698615478352,"duration":3761}},{"uid":"df52dd458f9b8bde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1061//#testresult/df52dd458f9b8bde","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698615419534,"stop":1698615423850,"duration":4316}},{"uid":"84ec49ff8043da6f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1054//#testresult/84ec49ff8043da6f","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698542639985,"stop":1698542644055,"duration":4070}},{"uid":"5e8715ca06d7aead","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1053//#testresult/5e8715ca06d7aead","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698455902256,"stop":1698455905714,"duration":3458}},{"uid":"ef531267ce8fb532","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1051//#testresult/ef531267ce8fb532","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698369625958,"stop":1698369630935,"duration":4977}},{"uid":"928034901dc77222","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1050//#testresult/928034901dc77222","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698283240043,"stop":1698283243987,"duration":3944}},{"uid":"cd31aa44d9530302","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1049//#testresult/cd31aa44d9530302","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698196769844,"stop":1698196773531,"duration":3687}},{"uid":"e5d14ecaa208437b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1048//#testresult/e5d14ecaa208437b","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178462457,"stop":1698178466827,"duration":4370}},{"uid":"b631d46b1d77c757","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1047//#testresult/b631d46b1d77c757","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698178448912,"stop":1698178452287,"duration":3375}},{"uid":"12368fb182fce3a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1046//#testresult/12368fb182fce3a0","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698110344860,"stop":1698110348773,"duration":3913}},{"uid":"fee071e3e5b5ba5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1044//#testresult/fee071e3e5b5ba5e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698065187664,"stop":1698065195245,"duration":7581}},{"uid":"f0651b5041935f92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1042//#testresult/f0651b5041935f92","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698024042794,"stop":1698024049879,"duration":7085}}]},"tags":[]},"source":"f87b3d54bf8e60a8.json","parameterValues":["WiganBoroughCouncil"]}