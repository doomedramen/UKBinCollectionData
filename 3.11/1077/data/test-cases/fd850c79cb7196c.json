{"uid":"fd850c79cb7196c","name":"Validate Council Output [ConwyCountyBorough]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"8186cc541d41d38034a9211a23d0bbe2","time":{"start":1698714915878,"stop":1698714917169,"duration":1291},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f5c4f6d3240>\nrequest = <FixtureRequest for <Function test_scenario_outline[ConwyCountyBorough]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5c45d8df10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f5c45d8df10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f5c4f6d3240>\nrequest = <FixtureRequest for <Function test_scenario_outline[ConwyCountyBorough]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5c45d8df10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f5c45d8df10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","steps":[{"name":"Given the council: ConwyCountyBorough","time":{"start":1698714915878,"stop":1698714915879,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from ConwyCountyBorough","time":{"start":1698714915879,"stop":1698714917166,"duration":1287},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698714917166,"stop":1698714917166,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698714917166,"stop":1698714917169,"duration":3},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az565-617"},{"name":"thread","value":"2138-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ConwyCountyBorough"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"1f49a0d65b38494e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/1f49a0d65b38494e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698701293255,"stop":1698701294066,"duration":811}},{"uid":"a0a53c0c216d07d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/a0a53c0c216d07d5","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698700170643,"stop":1698700171561,"duration":918}},{"uid":"9e12fa0cf2e20a54","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/9e12fa0cf2e20a54","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698692729400,"stop":1698692730588,"duration":1188}},{"uid":"16584232490d1e20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/16584232490d1e20","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698692685196,"stop":1698692686438,"duration":1242}}]},"tags":[]},"source":"fd850c79cb7196c.json","parameterValues":["ConwyCountyBorough"]}