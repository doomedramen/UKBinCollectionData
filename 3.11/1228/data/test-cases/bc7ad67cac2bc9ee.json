{"uid":"bc7ad67cac2bc9ee","name":"Validate Council Output [TorridgeDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"da903249529007ec357275ac5f075b6c","time":{"start":1702171585463,"stop":1702171591485,"duration":6022},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fe48b7b39c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe48ae67410>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fe48ae67410>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fe48b7b39c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe48ae67410>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fe48ae67410>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1702171585464,"stop":1702171585464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from TorridgeDistrictCouncil using None and the None is set","time":{"start":1702171585464,"stop":1702171591483,"duration":6019},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1702171591483,"stop":1702171591483,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1702171591483,"stop":1702171591485,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1251-511"},{"name":"thread","value":"2745-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":54,"unknown":0,"total":69},"items":[{"uid":"cf26ff46ba515d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1227//#testresult/cf26ff46ba515d","status":"passed","time":{"start":1702084872884,"stop":1702084875538,"duration":2654}},{"uid":"368f092f341d3127","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1225//#testresult/368f092f341d3127","status":"passed","time":{"start":1702066814213,"stop":1702066817652,"duration":3439}},{"uid":"cc7612caee5922c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1222//#testresult/cc7612caee5922c5","status":"passed","time":{"start":1702054474790,"stop":1702054477628,"duration":2838}},{"uid":"a50c1011c328209c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1223//#testresult/a50c1011c328209c","status":"passed","time":{"start":1702054505599,"stop":1702054508226,"duration":2627}},{"uid":"bf22ce658d66b5dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1219//#testresult/bf22ce658d66b5dc","status":"passed","time":{"start":1701998497810,"stop":1701998500457,"duration":2647}},{"uid":"59549ae5799b9fe3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1218//#testresult/59549ae5799b9fe3","status":"passed","time":{"start":1701990457919,"stop":1701990460728,"duration":2809}},{"uid":"4e5e89db02200c88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1217//#testresult/4e5e89db02200c88","status":"passed","time":{"start":1701990548947,"stop":1701990551674,"duration":2727}},{"uid":"9d7b3b762dae8665","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1215//#testresult/9d7b3b762dae8665","status":"passed","time":{"start":1701942880432,"stop":1701942883112,"duration":2680}},{"uid":"b359ee483483eba6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1214//#testresult/b359ee483483eba6","status":"passed","time":{"start":1701936625362,"stop":1701936628126,"duration":2764}},{"uid":"2558d6257f9cbb81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1213//#testresult/2558d6257f9cbb81","status":"passed","time":{"start":1701936584229,"stop":1701936586806,"duration":2577}},{"uid":"49fa830836f69ee6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1211//#testresult/49fa830836f69ee6","status":"passed","time":{"start":1701912076854,"stop":1701912079641,"duration":2787}},{"uid":"9a34cbb967a01f19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1209//#testresult/9a34cbb967a01f19","status":"passed","time":{"start":1701905069190,"stop":1701905072722,"duration":3532}},{"uid":"676631795ee8a9b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1201//#testresult/676631795ee8a9b5","status":"passed","time":{"start":1701882715307,"stop":1701882718007,"duration":2700}},{"uid":"298d9d037bdd1451","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1202//#testresult/298d9d037bdd1451","status":"passed","time":{"start":1701882639773,"stop":1701882644054,"duration":4281}},{"uid":"630bb5971b2ffca3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1199//#testresult/630bb5971b2ffca3","status":"passed","time":{"start":1701825753599,"stop":1701825756380,"duration":2781}},{"uid":"ea556e77827f0bf2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1198//#testresult/ea556e77827f0bf2","status":"passed","time":{"start":1701795663201,"stop":1701795665881,"duration":2680}},{"uid":"a374e769dbbd5401","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1197//#testresult/a374e769dbbd5401","status":"passed","time":{"start":1701795587912,"stop":1701795590375,"duration":2463}},{"uid":"932a20ba8811d03a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1193//#testresult/932a20ba8811d03a","status":"passed","time":{"start":1701758604788,"stop":1701758608029,"duration":3241}},{"uid":"35f82844574c272b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1192//#testresult/35f82844574c272b","status":"passed","time":{"start":1701758613180,"stop":1701758615732,"duration":2552}},{"uid":"5abf7b7c9a466d1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1191//#testresult/5abf7b7c9a466d1a","status":"passed","time":{"start":1701739287549,"stop":1701739290501,"duration":2952}}]},"tags":[]},"source":"bc7ad67cac2bc9ee.json","parameterValues":["TorridgeDistrictCouncil","None","None"]}