{"uid":"e87916db12ca16d","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1702171419535,"stop":1702171420263,"duration":728},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc667fb1080>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc6676a4510>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc6676a4510>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc667fb1080>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc6676a4510>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc6676a4510>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1702171419535,"stop":1702171419535,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1702171419536,"stop":1702171420261,"duration":725},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1702171420261,"stop":1702171420262,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1702171420262,"stop":1702171420263,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1251-511"},{"name":"thread","value":"2739-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":55,"broken":0,"skipped":0,"passed":14,"unknown":0,"total":69},"items":[{"uid":"b1c054e3866a744a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1227//#testresult/b1c054e3866a744a","status":"passed","time":{"start":1702084687467,"stop":1702084689104,"duration":1637}},{"uid":"618185d980d1653c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1225//#testresult/618185d980d1653c","status":"passed","time":{"start":1702066732931,"stop":1702066734521,"duration":1590}},{"uid":"5f43010ad55a96ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1222//#testresult/5f43010ad55a96ac","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702054376150,"stop":1702054377039,"duration":889}},{"uid":"e831eacb0aec524e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1223//#testresult/e831eacb0aec524e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702054402481,"stop":1702054403072,"duration":591}},{"uid":"aeb27f67f2f7a6fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1219//#testresult/aeb27f67f2f7a6fd","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701998388692,"stop":1701998389513,"duration":821}},{"uid":"92dcbb55388250f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1218//#testresult/92dcbb55388250f7","status":"passed","time":{"start":1701990379185,"stop":1701990381159,"duration":1974}},{"uid":"8d34a24a93b086a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1217//#testresult/8d34a24a93b086a9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701990354823,"stop":1701990355376,"duration":553}},{"uid":"9f36d605c703584f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1215//#testresult/9f36d605c703584f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701942803409,"stop":1701942804267,"duration":858}},{"uid":"2237c9177f9ad40c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1214//#testresult/2237c9177f9ad40c","status":"passed","time":{"start":1701936491496,"stop":1701936493170,"duration":1674}},{"uid":"41451472be4398e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1213//#testresult/41451472be4398e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701936463811,"stop":1701936464397,"duration":586}},{"uid":"8cbe87b398c06c07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1211//#testresult/8cbe87b398c06c07","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701911946097,"stop":1701911947203,"duration":1106}},{"uid":"f2ee933adee03a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1209//#testresult/f2ee933adee03a0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701904867786,"stop":1701904868377,"duration":591}},{"uid":"73c7bfd13ce20f87","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1201//#testresult/73c7bfd13ce20f87","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701882535122,"stop":1701882535914,"duration":792}},{"uid":"6e08fb21d5cdeb30","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1202//#testresult/6e08fb21d5cdeb30","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701882565919,"stop":1701882566878,"duration":959}},{"uid":"dd4a0014d8b627e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1199//#testresult/dd4a0014d8b627e2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701825566880,"stop":1701825567704,"duration":824}},{"uid":"6fb23d0962bce023","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1198//#testresult/6fb23d0962bce023","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701795535991,"stop":1701795536859,"duration":868}},{"uid":"52832930e1ebbffa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1197//#testresult/52832930e1ebbffa","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701795533638,"stop":1701795534211,"duration":573}},{"uid":"6b6e7e213d2d9849","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1193//#testresult/6b6e7e213d2d9849","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701758512980,"stop":1701758513942,"duration":962}},{"uid":"aa69a2e0bbdda79d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1192//#testresult/aa69a2e0bbdda79d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701758487702,"stop":1701758488542,"duration":840}},{"uid":"c61063c76c84bd3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1191//#testresult/c61063c76c84bd3a","status":"failed","statusDetails":"ValueError: time data 'None 2023' does not match format '%A, %d %B %Y'","time":{"start":1701739159275,"stop":1701739160783,"duration":1508}}]},"tags":[]},"source":"e87916db12ca16d.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}