{"uid":"d795c45be5ca0c89","name":"Validate Council Output [WestSuffolkCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"446a4369fb450b9e3ee2f74bbf8ed65b","time":{"start":1709944186579,"stop":1709944198874,"duration":12295},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7efec5de07c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7efec4b23710>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9fa8d8cb020f4aa2d60248838e93bf68\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7efec52e56c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7efec5de07c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7efec4b23710>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9fa8d8cb020f4aa2d60248838e93bf68\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7efec52e56c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Given the council: WestSuffolkCouncil","time":{"start":1709944186579,"stop":1709944186579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestSuffolkCouncil using local and the http://selenium:4444 is set","time":{"start":1709944186579,"stop":1709944198874,"duration":12295},"status":"failed","statusMessage":"Message: \n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az915-834"},{"name":"thread","value":"2833-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":176,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":176},"items":[{"uid":"203c70b56f11b0ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1596//#testresult/203c70b56f11b0ef","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1709857767817,"stop":1709857781833,"duration":14016}},{"uid":"6583ab4fa248876d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1595//#testresult/6583ab4fa248876d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1709771064437,"stop":1709771080620,"duration":16183}},{"uid":"d24368df03735e47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1594//#testresult/d24368df03735e47","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1709684952275,"stop":1709684966833,"duration":14558}},{"uid":"750b1a4be7bc3924","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1593//#testresult/750b1a4be7bc3924","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1709598520269,"stop":1709598535940,"duration":15671}},{"uid":"4e29292ae046ef24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1592//#testresult/4e29292ae046ef24","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1709512181966,"stop":1709512192075,"duration":10109}},{"uid":"e5ebf87a59e57a42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1572//#testresult/e5ebf87a59e57a42","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708561713593,"stop":1708561731143,"duration":17550}},{"uid":"70795cbc2bcd030a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1570//#testresult/70795cbc2bcd030a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708475310808,"stop":1708475326109,"duration":15301}},{"uid":"dfd1302c88f31948","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1569//#testresult/dfd1302c88f31948","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708388899777,"stop":1708388913029,"duration":13252}},{"uid":"f977dbbd89b125aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1568//#testresult/f977dbbd89b125aa","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708302669136,"stop":1708302682747,"duration":13611}},{"uid":"ae9fa83e943ae0a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1567//#testresult/ae9fa83e943ae0a0","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708216274786,"stop":1708216288228,"duration":13442}},{"uid":"ed92128cd56cebf2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1566//#testresult/ed92128cd56cebf2","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708129727046,"stop":1708129738847,"duration":11801}},{"uid":"fe34176ed389bb15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1563//#testresult/fe34176ed389bb15","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1708043319428,"stop":1708043333489,"duration":14061}},{"uid":"90d0a3e36f41680f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1562//#testresult/90d0a3e36f41680f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707956927875,"stop":1707956940949,"duration":13074}},{"uid":"4c585097eced3f69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1561//#testresult/4c585097eced3f69","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707870538118,"stop":1707870552679,"duration":14561}},{"uid":"cfc7a3e1ab764599","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1560//#testresult/cfc7a3e1ab764599","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707784183719,"stop":1707784195886,"duration":12167}},{"uid":"3adb8acb13bca63f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1559//#testresult/3adb8acb13bca63f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707697801900,"stop":1707697816769,"duration":14869}},{"uid":"7cdede21996bbba4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1556//#testresult/7cdede21996bbba4","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707611477120,"stop":1707611489736,"duration":12616}},{"uid":"2dcef9d70abb984f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1554//#testresult/2dcef9d70abb984f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707524881507,"stop":1707524893542,"duration":12035}},{"uid":"8e5d8fde0e545ce0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1553//#testresult/8e5d8fde0e545ce0","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707438494911,"stop":1707438509477,"duration":14566}},{"uid":"ba4e2c72e8e86d40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1552//#testresult/ba4e2c72e8e86d40","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1707352134530,"stop":1707352148797,"duration":14267}}]},"tags":[]},"source":"d795c45be5ca0c89.json","parameterValues":["WestSuffolkCouncil","local","http://selenium:4444"]}