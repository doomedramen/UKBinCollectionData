{"uid":"b4ca13d7ee8438b6","name":"Validate Council Output [GuildfordCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"316f6b3276320661fa68609de6296157","time":{"start":1698628562192,"stop":1698628563370,"duration":1178},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7faef8c099e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GuildfordCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faef8ed0250>, 'council': 'GuildfordCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GuildfordCouncil.py:45: in parse_data\n    results = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7faef96dba90>\ns = '*/{\"event\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"eventDef\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"t\"...tual: MlRqRU5YT3pjWFRNenJranFOMWFjQXlMaWFpdmxPSTZWeEo0bWtiN0hsaXcyNDQuMjAuNC0yLjQxLjQ\",\"exceptionEvent\":true}/*ERROR*/'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7faef8c099e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GuildfordCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faef8ed0250>, 'council': 'GuildfordCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GuildfordCouncil.py:45: in parse_data\n    results = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7faef96dba90>\ns = '*/{\"event\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"eventDef\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"t\"...tual: MlRqRU5YT3pjWFRNenJranFOMWFjQXlMaWFpdmxPSTZWeEo0bWtiN0hsaXcyNDQuMjAuNC0yLjQxLjQ\",\"exceptionEvent\":true}/*ERROR*/'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: GuildfordCouncil","time":{"start":1698628562192,"stop":1698628562193,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from GuildfordCouncil","time":{"start":1698628562193,"stop":1698628563370,"duration":1177},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az585-810"},{"name":"thread","value":"2246-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GuildfordCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":39,"broken":0,"skipped":0,"passed":84,"unknown":0,"total":123},"items":[{"uid":"c777bce013a0de63","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/c777bce013a0de63","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698615478592,"stop":1698615480173,"duration":1581}},{"uid":"c05dd28cd15595a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1063//#testresult/c05dd28cd15595a4","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698615244373,"stop":1698615245906,"duration":1533}},{"uid":"3dd93962269f7de7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1061//#testresult/3dd93962269f7de7","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698615120797,"stop":1698615122924,"duration":2127}},{"uid":"ccad36c7b3e754fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1054//#testresult/ccad36c7b3e754fe","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698542361732,"stop":1698542363823,"duration":2091}},{"uid":"7ce3423c765fd823","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1053//#testresult/7ce3423c765fd823","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698455549220,"stop":1698455550603,"duration":1383}},{"uid":"8cab196c5e919292","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1051//#testresult/8cab196c5e919292","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698369238729,"stop":1698369240289,"duration":1560}},{"uid":"1afc73f3515fe053","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1050//#testresult/1afc73f3515fe053","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698282840128,"stop":1698282842661,"duration":2533}},{"uid":"dfd3e56b624909e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1049//#testresult/dfd3e56b624909e8","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698196518359,"stop":1698196521255,"duration":2896}},{"uid":"dde2942f42665e9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1048//#testresult/dde2942f42665e9d","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698178217302,"stop":1698178218781,"duration":1479}},{"uid":"d4528ffe729a4494","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1047//#testresult/d4528ffe729a4494","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698178204927,"stop":1698178205910,"duration":983}},{"uid":"9f37ea6729f25209","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1046//#testresult/9f37ea6729f25209","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698110092323,"stop":1698110093764,"duration":1441}},{"uid":"a3d29a5506412220","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1044//#testresult/a3d29a5506412220","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698064872185,"stop":1698064873931,"duration":1746}},{"uid":"ba4540f63611ec3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1042//#testresult/ba4540f63611ec3a","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1698023737670,"stop":1698023740400,"duration":2730}},{"uid":"799327ec8ff4e5fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1040//#testresult/799327ec8ff4e5fa","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1697937602402,"stop":1697937603357,"duration":955}},{"uid":"febd20f8dc1740f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1039//#testresult/febd20f8dc1740f","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1697850788122,"stop":1697850789071,"duration":949}},{"uid":"2f8f41eacccc2f92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1037//#testresult/2f8f41eacccc2f92","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1697790400392,"stop":1697790406403,"duration":6011}},{"uid":"aed358f15c846b32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1034//#testresult/aed358f15c846b32","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1697764514482,"stop":1697764517232,"duration":2750}},{"uid":"83062a2bfcf0152c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1033//#testresult/83062a2bfcf0152c","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1697706520599,"stop":1697706523760,"duration":3161}},{"uid":"654f49f3b7ca1f09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1032//#testresult/654f49f3b7ca1f09","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1697706480552,"stop":1697706482417,"duration":1865}},{"uid":"6aa7763fb9dff43a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1030//#testresult/6aa7763fb9dff43a","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","time":{"start":1697702045117,"stop":1697702045119,"duration":2}}]},"tags":[]},"source":"b4ca13d7ee8438b6.json","parameterValues":["GuildfordCouncil"]}