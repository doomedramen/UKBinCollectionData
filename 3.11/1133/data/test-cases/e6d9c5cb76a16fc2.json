{"uid":"e6d9c5cb76a16fc2","name":"Validate Council Output [NewcastleCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a63cb1391c4aa4a9ce00ac5e7dcb85fb","time":{"start":1700270286625,"stop":1700270323203,"duration":36578},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f880df24540>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f87f9d6b250>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f87f9d6b250>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f880df24540>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f87f9d6b250>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f87f9d6b250>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1700270286625,"stop":1700270286625,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from NewcastleCityCouncil using None and the None is set","time":{"start":1700270286625,"stop":1700270323200,"duration":36575},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1700270323201,"stop":1700270323201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1700270323201,"stop":1700270323202,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1116-853"},{"name":"thread","value":"2750-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":18},"items":[{"uid":"c12653479358295b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1132//#testresult/c12653479358295b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183928118,"stop":1700183978183,"duration":50065}},{"uid":"cc1d524bbc36fd7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1131//#testresult/cc1d524bbc36fd7e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097583518,"stop":1700097614771,"duration":31253}},{"uid":"20789ffb09636e29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1129//#testresult/20789ffb09636e29","status":"passed","time":{"start":1700011085296,"stop":1700011111706,"duration":26410}},{"uid":"99dfc7a4c83a56a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1128//#testresult/99dfc7a4c83a56a6","status":"passed","time":{"start":1699924698458,"stop":1699924736934,"duration":38476}},{"uid":"a9e2806ad0882657","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1127//#testresult/a9e2806ad0882657","status":"passed","time":{"start":1699838312946,"stop":1699838324250,"duration":11304}},{"uid":"91f61b3a98230d29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1126//#testresult/91f61b3a98230d29","status":"passed","time":{"start":1699752318348,"stop":1699752329527,"duration":11179}},{"uid":"751b96846ccc0cbd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/751b96846ccc0cbd","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699669187500,"stop":1699669248190,"duration":60690}},{"uid":"8f6dc5ef3b6bf96c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/8f6dc5ef3b6bf96c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699578960943,"stop":1699579000537,"duration":39594}},{"uid":"315cdd176e83481","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/315cdd176e83481","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699492663169,"stop":1699492693825,"duration":30656}},{"uid":"8f5f3db99a88aaae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/8f5f3db99a88aaae","status":"passed","time":{"start":1699481553345,"stop":1699481564368,"duration":11023}},{"uid":"5307ce2770816640","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/5307ce2770816640","status":"passed","time":{"start":1699481480127,"stop":1699481491452,"duration":11325}},{"uid":"df8a6b565592441f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/df8a6b565592441f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699445116579,"stop":1699445152099,"duration":35520}},{"uid":"3b4c2e0e0d4db045","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1115//#testresult/3b4c2e0e0d4db045","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699406174835,"stop":1699406205267,"duration":30432}},{"uid":"5dd18bcb7102f2c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1114//#testresult/5dd18bcb7102f2c8","status":"passed","time":{"start":1699319888330,"stop":1699319931857,"duration":43527}},{"uid":"e0f930f3eb33e75e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1113//#testresult/e0f930f3eb33e75e","status":"passed","time":{"start":1699233561738,"stop":1699233587810,"duration":26072}},{"uid":"b29a33cf3116065a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1111//#testresult/b29a33cf3116065a","status":"passed","time":{"start":1699171053018,"stop":1699171061828,"duration":8810}},{"uid":"51e9decd2ba2e9cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1112//#testresult/51e9decd2ba2e9cc","status":"passed","time":{"start":1699170757315,"stop":1699170772336,"duration":15021}}]},"tags":[]},"source":"e6d9c5cb76a16fc2.json","parameterValues":["NewcastleCityCouncil","None","None"]}