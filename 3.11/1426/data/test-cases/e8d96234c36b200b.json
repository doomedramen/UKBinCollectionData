{"uid":"e8d96234c36b200b","name":"Validate Council Output [MalvernHillsDC-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aa5bb0fc8895f376e02d5eea8573242b","time":{"start":1704615429748,"stop":1704615431184,"duration":1436},"status":"failed","statusMessage":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7ff70827cd60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff707f43a50>, 'council': 'MalvernHillsDC', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:89: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:95: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:114: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MalvernHillsDC.py:50: in parse_data\n    date = datetime.strptime(thisCollection[1], \"%A %d/%m/%Y\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Please refer to the  christmas collection calendar.'\nformat = '%A %d/%m/%Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7ff70827cd60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff707f43a50>, 'council': 'MalvernHillsDC', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:89: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:95: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:114: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MalvernHillsDC.py:50: in parse_data\n    date = datetime.strptime(thisCollection[1], \"%A %d/%m/%Y\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Please refer to the  christmas collection calendar.'\nformat = '%A %d/%m/%Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: MalvernHillsDC","time":{"start":1704615429748,"stop":1704615429748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MalvernHillsDC using None and the None is set","time":{"start":1704615429748,"stop":1704615431184,"duration":1436},"status":"failed","statusMessage":"time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az530-842"},{"name":"thread","value":"2749-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MalvernHillsDC"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":90,"broken":0,"skipped":0,"passed":57,"unknown":0,"total":147},"items":[{"uid":"144f4ebe13954478","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1423//#testresult/144f4ebe13954478","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704614827997,"stop":1704614829200,"duration":1203}},{"uid":"23c77bd079e7833b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1420//#testresult/23c77bd079e7833b","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704587522437,"stop":1704587523452,"duration":1015}},{"uid":"dba39e668e2b24ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1413//#testresult/dba39e668e2b24ea","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704542783414,"stop":1704542784945,"duration":1531}},{"uid":"6ec27fc20cda84e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1408//#testresult/6ec27fc20cda84e9","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704496208127,"stop":1704496209002,"duration":875}},{"uid":"a8907441e0f03d12","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1406//#testresult/a8907441e0f03d12","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704453460548,"stop":1704453461770,"duration":1222}},{"uid":"7e05da0c92569c9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1405//#testresult/7e05da0c92569c9b","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704452654450,"stop":1704452655492,"duration":1042}},{"uid":"c52d91dde3e41cdd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1400//#testresult/c52d91dde3e41cdd","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704443813393,"stop":1704443814731,"duration":1338}},{"uid":"1eef843b27cb6db1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1399//#testresult/1eef843b27cb6db1","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704443392718,"stop":1704443393945,"duration":1227}},{"uid":"3ad1d9c69ff02a3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1397//#testresult/3ad1d9c69ff02a3c","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704442524210,"stop":1704442525175,"duration":965}},{"uid":"8f84c8b5d0bcf8ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1396//#testresult/8f84c8b5d0bcf8ff","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704442507269,"stop":1704442508616,"duration":1347}},{"uid":"b61e394d032c418a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1390//#testresult/b61e394d032c418a","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704417560944,"stop":1704417561965,"duration":1021}},{"uid":"6a648c58e95c4c2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1379//#testresult/6a648c58e95c4c2f","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704406027247,"stop":1704406028354,"duration":1107}},{"uid":"22d5b222added46f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1378//#testresult/22d5b222added46f","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704405988724,"stop":1704405989618,"duration":894}},{"uid":"19f07964829e7223","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1376//#testresult/19f07964829e7223","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704398825407,"stop":1704398829854,"duration":4447}},{"uid":"df105c0a5cec2ac4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1375//#testresult/df105c0a5cec2ac4","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704398774478,"stop":1704398775509,"duration":1031}},{"uid":"25ab4eb6a860632f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1373//#testresult/25ab4eb6a860632f","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704388330204,"stop":1704388331458,"duration":1254}},{"uid":"70a14d8c74361166","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1369//#testresult/70a14d8c74361166","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704378367766,"stop":1704378368749,"duration":983}},{"uid":"5e502625b63b1088","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1367//#testresult/5e502625b63b1088","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704378055386,"stop":1704378056315,"duration":929}},{"uid":"69c240b75c36a4c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1366//#testresult/69c240b75c36a4c4","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704375878155,"stop":1704375879067,"duration":912}},{"uid":"1672fba8b7988c1d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1363//#testresult/1672fba8b7988c1d","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704356797941,"stop":1704356799014,"duration":1073}}]},"tags":[]},"source":"e8d96234c36b200b.json","parameterValues":["MalvernHillsDC","None","None"]}