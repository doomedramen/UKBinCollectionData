{"uid":"bce440acd55d18c2","name":"Validate Council Output [NorthWestLeicestershire-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"636da600d3c2f6211f4c406b74efac78","time":{"start":1703467155917,"stop":1703467159790,"duration":3873},"status":"failed","statusMessage":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'","statusTrace":"fixturefunc = <function scrape_step at 0x7f06d9137880>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthWestLeicestershire-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f06d80a2c50>, 'council': 'NorthWestLeicestershire', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthWestLeicestershire.py:70: in parse_data\n    parsed_date = datetime.strptime(date, \"%a %dth %b\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tue 2nd Jan', format = '%a %dth %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'","statusTrace":"fixturefunc = <function scrape_step at 0x7f06d9137880>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthWestLeicestershire-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f06d80a2c50>, 'council': 'NorthWestLeicestershire', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthWestLeicestershire.py:70: in parse_data\n    parsed_date = datetime.strptime(date, \"%a %dth %b\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tue 2nd Jan', format = '%a %dth %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: NorthWestLeicestershire","time":{"start":1703467155918,"stop":1703467155918,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthWestLeicestershire using local and the http://selenium:4444 is set","time":{"start":1703467155918,"stop":1703467159790,"duration":3872},"status":"failed","statusMessage":"time data 'Tue 2nd Jan' does not match format '%a %dth %b'","statusTrace":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1024-593"},{"name":"thread","value":"2798-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthWestLeicestershire"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":38,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":40},"items":[{"uid":"80c27ba579ead10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1292//#testresult/80c27ba579ead10","status":"failed","statusDetails":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'","time":{"start":1703416474776,"stop":1703416479526,"duration":4750}},{"uid":"9316a8c79e21ea3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1291//#testresult/9316a8c79e21ea3c","status":"failed","statusDetails":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'","time":{"start":1703416441018,"stop":1703416445999,"duration":4981}},{"uid":"13aa88c466394fd5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1289//#testresult/13aa88c466394fd5","status":"failed","statusDetails":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'","time":{"start":1703381107746,"stop":1703381112081,"duration":4335}},{"uid":"6a0e9c1b7dd91366","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1287//#testresult/6a0e9c1b7dd91366","status":"failed","statusDetails":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'","time":{"start":1703294136846,"stop":1703294141758,"duration":4912}},{"uid":"98ee29507cb41c78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1282//#testresult/98ee29507cb41c78","status":"failed","statusDetails":"ValueError: time data 'Tue 2nd Jan' does not match format '%a %dth %b'","time":{"start":1703207843390,"stop":1703207848463,"duration":5073}},{"uid":"da0c4ec040628de3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1281//#testresult/da0c4ec040628de3","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703121499889,"stop":1703121503722,"duration":3833}},{"uid":"602c7736db00a42c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1280//#testresult/602c7736db00a42c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703034362884,"stop":1703034368059,"duration":5175}},{"uid":"47f7edc301a97c7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1279//#testresult/47f7edc301a97c7a","status":"failed","statusDetails":"ValueError: time data 'Today' does not match format '%a %dth %b'","time":{"start":1703024993727,"stop":1703024997646,"duration":3919}},{"uid":"1e6811b61544e161","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1278//#testresult/1e6811b61544e161","status":"failed","statusDetails":"ValueError: time data 'Today' does not match format '%a %dth %b'","time":{"start":1703024964325,"stop":1703024968263,"duration":3938}},{"uid":"ec2b9855a05543db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1276//#testresult/ec2b9855a05543db","status":"failed","statusDetails":"ValueError: time data 'Today' does not match format '%a %dth %b'","time":{"start":1702948790306,"stop":1702948795095,"duration":4789}},{"uid":"2d70b7fc1ea4fa6d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1275//#testresult/2d70b7fc1ea4fa6d","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %dth %b'","time":{"start":1702862405406,"stop":1702862409515,"duration":4109}},{"uid":"3a443838988f52af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/3a443838988f52af","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %dth %b'","time":{"start":1702860056516,"stop":1702860061532,"duration":5016}},{"uid":"c3b6cca4f0435002","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/c3b6cca4f0435002","status":"passed","time":{"start":1702843624264,"stop":1702843628745,"duration":4481}},{"uid":"1e17784f6e5a46ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/1e17784f6e5a46ca","status":"passed","time":{"start":1702809433364,"stop":1702809437523,"duration":4159}},{"uid":"4eb45287bc49e930","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1247//#testresult/4eb45287bc49e930","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x555f7e2e1d33 <unknown>\n#1 0x555f7df9ef87 <unknown>\n#2 0x555f7dfeec0e <unknown>\n#3 0x555f7dfeed11 <unknown>\n#4 0x555f7e03a004 <unknown>\n#5 0x555f7e01836d <unknown>\n#6 0x555f7e037297 <unknown>\n#7 0x555f7e0180e3 <unknown>\n#8 0x555f7dfe0044 <unknown>\n#9 0x555f7dfe144e <unknown>\n#10 0x555f7e2a6861 <unknown>\n#11 0x555f7e2aa785 <unknown>\n#12 0x555f7e294285 <unknown>\n#13 0x555f7e2ab41f <unknown>\n#14 0x555f7e27820f <unknown>\n#15 0x555f7e2cf028 <unknown>\n#16 0x555f7e2cf1f7 <unknown>\n#17 0x555f7e2e0ed4 <unknown>\n#18 0x7f8116494ac3 <unknown>","time":{"start":1702657244004,"stop":1702657280582,"duration":36578}},{"uid":"611b8b6e4b79a23b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1248//#testresult/611b8b6e4b79a23b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5632260fcd33 <unknown>\n#1 0x563225db9f87 <unknown>\n#2 0x563225e09c0e <unknown>\n#3 0x563225e09d11 <unknown>\n#4 0x563225e55004 <unknown>\n#5 0x563225e3336d <unknown>\n#6 0x563225e52297 <unknown>\n#7 0x563225e330e3 <unknown>\n#8 0x563225dfb044 <unknown>\n#9 0x563225dfc44e <unknown>\n#10 0x5632260c1861 <unknown>\n#11 0x5632260c5785 <unknown>\n#12 0x5632260af285 <unknown>\n#13 0x5632260c641f <unknown>\n#14 0x56322609320f <unknown>\n#15 0x5632260ea028 <unknown>\n#16 0x5632260ea1f7 <unknown>\n#17 0x5632260fbed4 <unknown>\n#18 0x7f3224c94ac3 <unknown>","time":{"start":1702657250781,"stop":1702657284068,"duration":33287}},{"uid":"8a41e8596709bb8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1244//#testresult/8a41e8596709bb8a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561a525d7d33 <unknown>\n#1 0x561a52294f87 <unknown>\n#2 0x561a522e4c0e <unknown>\n#3 0x561a522e4d11 <unknown>\n#4 0x561a52330004 <unknown>\n#5 0x561a5230e36d <unknown>\n#6 0x561a5232d297 <unknown>\n#7 0x561a5230e0e3 <unknown>\n#8 0x561a522d6044 <unknown>\n#9 0x561a522d744e <unknown>\n#10 0x561a5259c861 <unknown>\n#11 0x561a525a0785 <unknown>\n#12 0x561a5258a285 <unknown>\n#13 0x561a525a141f <unknown>\n#14 0x561a5256e20f <unknown>\n#15 0x561a525c5028 <unknown>\n#16 0x561a525c51f7 <unknown>\n#17 0x561a525d6ed4 <unknown>\n#18 0x7f5e7fc94ac3 <unknown>","time":{"start":1702603245587,"stop":1702603279695,"duration":34108}},{"uid":"4d266001b01f1dcf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1243//#testresult/4d266001b01f1dcf","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5626b65935e3 <unknown>\n#1 0x5626b62560b7 <unknown>\n#2 0x5626b62a3f53 <unknown>\n#3 0x5626b62a4051 <unknown>\n#4 0x5626b62e99c4 <unknown>\n#5 0x5626b62caf1d <unknown>\n#6 0x5626b62e6b3d <unknown>\n#7 0x5626b62cacc3 <unknown>\n#8 0x5626b62960e4 <unknown>\n#9 0x5626b62970ae <unknown>\n#10 0x5626b6559ce1 <unknown>\n#11 0x5626b655db7e <unknown>\n#12 0x5626b65474b5 <unknown>\n#13 0x5626b655e7d6 <unknown>\n#14 0x5626b652adbf <unknown>\n#15 0x5626b6581748 <unknown>\n#16 0x5626b6581917 <unknown>\n#17 0x5626b6592773 <unknown>\n#18 0x7fa93a494ac3 <unknown>","time":{"start":1702540097993,"stop":1702540132341,"duration":34348}},{"uid":"5663cebf171f5655","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1241//#testresult/5663cebf171f5655","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56338dc3b5e3 <unknown>\n#1 0x56338d8fe0b7 <unknown>\n#2 0x56338d94bf53 <unknown>\n#3 0x56338d94c051 <unknown>\n#4 0x56338d9919c4 <unknown>\n#5 0x56338d972f1d <unknown>\n#6 0x56338d98eb3d <unknown>\n#7 0x56338d972cc3 <unknown>\n#8 0x56338d93e0e4 <unknown>\n#9 0x56338d93f0ae <unknown>\n#10 0x56338dc01ce1 <unknown>\n#11 0x56338dc05b7e <unknown>\n#12 0x56338dbef4b5 <unknown>\n#13 0x56338dc067d6 <unknown>\n#14 0x56338dbd2dbf <unknown>\n#15 0x56338dc29748 <unknown>\n#16 0x56338dc29917 <unknown>\n#17 0x56338dc3a773 <unknown>\n#18 0x7fbb82094ac3 <unknown>","time":{"start":1702516739735,"stop":1702516775956,"duration":36221}},{"uid":"7cf50d09f9465b56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1238//#testresult/7cf50d09f9465b56","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55fcb50145e3 <unknown>\n#1 0x55fcb4cd70b7 <unknown>\n#2 0x55fcb4d24f53 <unknown>\n#3 0x55fcb4d25051 <unknown>\n#4 0x55fcb4d6a9c4 <unknown>\n#5 0x55fcb4d4bf1d <unknown>\n#6 0x55fcb4d67b3d <unknown>\n#7 0x55fcb4d4bcc3 <unknown>\n#8 0x55fcb4d170e4 <unknown>\n#9 0x55fcb4d180ae <unknown>\n#10 0x55fcb4fdace1 <unknown>\n#11 0x55fcb4fdeb7e <unknown>\n#12 0x55fcb4fc84b5 <unknown>\n#13 0x55fcb4fdf7d6 <unknown>\n#14 0x55fcb4fabdbf <unknown>\n#15 0x55fcb5002748 <unknown>\n#16 0x55fcb5002917 <unknown>\n#17 0x55fcb5013773 <unknown>\n#18 0x7feb31494ac3 <unknown>","time":{"start":1702447510496,"stop":1702447543196,"duration":32700}}]},"tags":[]},"source":"bce440acd55d18c2.json","parameterValues":["NorthWestLeicestershire","local","http://selenium:4444"]}