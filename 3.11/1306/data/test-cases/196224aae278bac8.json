{"uid":"196224aae278bac8","name":"Validate Council Output [SouthOxfordshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7f57931d644fea4dd7a0419f9995c47e","time":{"start":1703756328737,"stop":1703756432422,"duration":103685},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0f5c6cc680>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0f5b612a50>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f0f5b612a50>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0f5c6cc680>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0f5b612a50>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f0f5b612a50>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: SouthOxfordshireCouncil","time":{"start":1703756328737,"stop":1703756328738,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SouthOxfordshireCouncil using None and the None is set","time":{"start":1703756328738,"stop":1703756432421,"duration":103683},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1703756432421,"stop":1703756432421,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1703756432421,"stop":1703756432422,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az801-135"},{"name":"thread","value":"2778-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthOxfordshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":86,"unknown":0,"total":101},"items":[{"uid":"4940cb7be5bfcb9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1305//#testresult/4940cb7be5bfcb9b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703726291111,"stop":1703726394449,"duration":103338}},{"uid":"7698f239255a256e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1304//#testresult/7698f239255a256e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703717438886,"stop":1703717542284,"duration":103398}},{"uid":"6cdaafa202655b88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1303//#testresult/6cdaafa202655b88","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703717407417,"stop":1703717510726,"duration":103309}},{"uid":"e0336ec94f911849","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1301//#testresult/e0336ec94f911849","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703639857542,"stop":1703639862203,"duration":4661}},{"uid":"72372b4c5be2b178","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1300//#testresult/72372b4c5be2b178","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703553453016,"stop":1703553456945,"duration":3929}},{"uid":"aae29df13d7b4de4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1298//#testresult/aae29df13d7b4de4","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703541233998,"stop":1703541237015,"duration":3017}},{"uid":"8fae91a931b1cd8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1295//#testresult/8fae91a931b1cd8a","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703467242771,"stop":1703467246307,"duration":3536}},{"uid":"b059dfbb20f37f96","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1292//#testresult/b059dfbb20f37f96","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703416548007,"stop":1703416552013,"duration":4006}},{"uid":"fa1dcd000941b902","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1291//#testresult/fa1dcd000941b902","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703416480544,"stop":1703416484660,"duration":4116}},{"uid":"e4bfd4ad32846ee3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1289//#testresult/e4bfd4ad32846ee3","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703381176097,"stop":1703381180229,"duration":4132}},{"uid":"1f9c6a2843e85e68","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1287//#testresult/1f9c6a2843e85e68","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703294188799,"stop":1703294193219,"duration":4420}},{"uid":"9a3a68cdced7cfdb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1282//#testresult/9a3a68cdced7cfdb","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703207928230,"stop":1703207932982,"duration":4752}},{"uid":"c625f0c5d5003422","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1281//#testresult/c625f0c5d5003422","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703121581212,"stop":1703121584196,"duration":2984}},{"uid":"2bbaf3252c0d2090","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1280//#testresult/2bbaf3252c0d2090","status":"passed","time":{"start":1703034431130,"stop":1703034435671,"duration":4541}},{"uid":"6a128614322ccf9f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1279//#testresult/6a128614322ccf9f","status":"passed","time":{"start":1703025051885,"stop":1703025055259,"duration":3374}},{"uid":"cfcde4773f639662","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1278//#testresult/cfcde4773f639662","status":"passed","time":{"start":1703025002158,"stop":1703025005508,"duration":3350}},{"uid":"d641028c4dcc0705","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1276//#testresult/d641028c4dcc0705","status":"passed","time":{"start":1702948832223,"stop":1702948836905,"duration":4682}},{"uid":"ba5e9d1b2d3c03af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1275//#testresult/ba5e9d1b2d3c03af","status":"passed","time":{"start":1702862444348,"stop":1702862448101,"duration":3753}},{"uid":"292a582e18da6d66","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/292a582e18da6d66","status":"passed","time":{"start":1702860089507,"stop":1702860092853,"duration":3346}},{"uid":"d7cc32248bbb3896","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/d7cc32248bbb3896","status":"passed","time":{"start":1702843662504,"stop":1702843666759,"duration":4255}}]},"tags":[]},"source":"196224aae278bac8.json","parameterValues":["SouthOxfordshireCouncil","None","None"]}