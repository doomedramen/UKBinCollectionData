{"uid":"54cd037e21b199e","name":"Validate Council Output [NorthKestevenDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cb4ed4fe09e4f8a70aa691776357b0a3","time":{"start":1703756273482,"stop":1703756274300,"duration":818},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0f5c6cc680>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthKestevenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0f5bc9ad50>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f0f5bc9ad50>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f0f5c6cc680>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthKestevenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0f5bc9ad50>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f0f5bc9ad50>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: NorthKestevenDistrictCouncil","time":{"start":1703756273482,"stop":1703756273483,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthKestevenDistrictCouncil using None and the None is set","time":{"start":1703756273483,"stop":1703756274298,"duration":815},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1703756274298,"stop":1703756274298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1703756274298,"stop":1703756274300,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az801-135"},{"name":"thread","value":"2778-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthKestevenDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":100,"unknown":0,"total":101},"items":[{"uid":"134711e422abd59d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1305//#testresult/134711e422abd59d","status":"passed","time":{"start":1703726222894,"stop":1703726227567,"duration":4673}},{"uid":"43ec300dd115a1e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1304//#testresult/43ec300dd115a1e8","status":"passed","time":{"start":1703717399733,"stop":1703717404872,"duration":5139}},{"uid":"d4df1fe5096b0364","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1303//#testresult/d4df1fe5096b0364","status":"passed","time":{"start":1703717368463,"stop":1703717373433,"duration":4970}},{"uid":"7f57c1629a4d0e1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1301//#testresult/7f57c1629a4d0e1a","status":"passed","time":{"start":1703639820957,"stop":1703639826029,"duration":5072}},{"uid":"96faa8928ecec60a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1300//#testresult/96faa8928ecec60a","status":"passed","time":{"start":1703553410129,"stop":1703553415070,"duration":4941}},{"uid":"a4c748a46cfa4a7d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1298//#testresult/a4c748a46cfa4a7d","status":"passed","time":{"start":1703541207655,"stop":1703541212054,"duration":4399}},{"uid":"1e4315faf768b6d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1295//#testresult/1e4315faf768b6d3","status":"passed","time":{"start":1703467204696,"stop":1703467209510,"duration":4814}},{"uid":"4e67d9e617969dd0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1292//#testresult/4e67d9e617969dd0","status":"passed","time":{"start":1703416487296,"stop":1703416492443,"duration":5147}},{"uid":"cf6c87f09c568c50","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1291//#testresult/cf6c87f09c568c50","status":"passed","time":{"start":1703416455376,"stop":1703416460368,"duration":4992}},{"uid":"b51c30430f8fbd6a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1289//#testresult/b51c30430f8fbd6a","status":"passed","time":{"start":1703381114131,"stop":1703381118798,"duration":4667}},{"uid":"1d7018d0171c25cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1287//#testresult/1d7018d0171c25cc","status":"passed","time":{"start":1703294185130,"stop":1703294191751,"duration":6621}},{"uid":"b439bb73015dd959","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1282//#testresult/b439bb73015dd959","status":"passed","time":{"start":1703207918548,"stop":1703207924020,"duration":5472}},{"uid":"fcdc1e4e39801fce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1281//#testresult/fcdc1e4e39801fce","status":"passed","time":{"start":1703121558187,"stop":1703121562952,"duration":4765}},{"uid":"9be2651db2a83521","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1280//#testresult/9be2651db2a83521","status":"passed","time":{"start":1703034349930,"stop":1703034355489,"duration":5559}},{"uid":"e45eef5374b2f81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1279//#testresult/e45eef5374b2f81","status":"passed","time":{"start":1703024973033,"stop":1703024977675,"duration":4642}},{"uid":"e9d6829d34472bfc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1278//#testresult/e9d6829d34472bfc","status":"passed","time":{"start":1703024974279,"stop":1703024978830,"duration":4551}},{"uid":"f0c631478b75ef0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1276//#testresult/f0c631478b75ef0d","status":"passed","time":{"start":1702948771121,"stop":1702948775127,"duration":4006}},{"uid":"6d3b9bf8d5428f61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1275//#testresult/6d3b9bf8d5428f61","status":"passed","time":{"start":1702862395711,"stop":1702862399679,"duration":3968}},{"uid":"534cbf5c48b22e96","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/534cbf5c48b22e96","status":"passed","time":{"start":1702860044574,"stop":1702860050851,"duration":6277}},{"uid":"717e4a7261a6ee4c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/717e4a7261a6ee4c","status":"passed","time":{"start":1702843607301,"stop":1702843611518,"duration":4217}}]},"tags":[]},"source":"54cd037e21b199e.json","parameterValues":["NorthKestevenDistrictCouncil","None","None"]}