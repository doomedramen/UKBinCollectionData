{"uid":"4623c5036b23cef2","name":"Validate Council Output [MidSussexDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"603913cb01d56f40fcd70fa6d1ec6273","time":{"start":1705295142619,"stop":1705295143370,"duration":751},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7f138facc720>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f138ef6f290>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7f138f975290>\npage = ''\nkwargs = {'headless': True, 'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:62: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7f138facc720>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f138ef6f290>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7f138f975290>\npage = ''\nkwargs = {'headless': True, 'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:62: AttributeError","steps":[{"name":"Given the council: MidSussexDistrictCouncil","time":{"start":1705295142619,"stop":1705295142620,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MidSussexDistrictCouncil using None and the None is set","time":{"start":1705295142620,"stop":1705295143370,"duration":750},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all_next'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all_next'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1432-522"},{"name":"thread","value":"2785-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MidSussexDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":161,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":161},"items":[{"uid":"35ce0788ef6134f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1490//#testresult/35ce0788ef6134f7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705278536258,"stop":1705278537628,"duration":1370}},{"uid":"b1636a1f8ad673e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1485//#testresult/b1636a1f8ad673e7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705192254035,"stop":1705192254650,"duration":615}},{"uid":"a173f350dc3b5bbf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1484//#testresult/a173f350dc3b5bbf","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705105680013,"stop":1705105681836,"duration":1823}},{"uid":"6ea217f48dee5a84","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1482//#testresult/6ea217f48dee5a84","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705019314814,"stop":1705019315935,"duration":1121}},{"uid":"c0aba4073c97aaad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1478//#testresult/c0aba4073c97aaad","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704932835642,"stop":1704932836450,"duration":808}},{"uid":"8ac2e345f5e92d4f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1472//#testresult/8ac2e345f5e92d4f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704846446812,"stop":1704846447838,"duration":1026}},{"uid":"6c940be47a3d41c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1456//#testresult/6c940be47a3d41c2","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704760202250,"stop":1704760203341,"duration":1091}},{"uid":"abcb3bc08ff4f5f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1452//#testresult/abcb3bc08ff4f5f9","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704711547267,"stop":1704711547958,"duration":691}},{"uid":"fb08beada1954535","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1450//#testresult/fb08beada1954535","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704710789440,"stop":1704710790038,"duration":598}},{"uid":"e572dad8e2c21bda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1448//#testresult/e572dad8e2c21bda","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704710193596,"stop":1704710194651,"duration":1055}},{"uid":"212d3e88447657d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1446//#testresult/212d3e88447657d","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704709665310,"stop":1704709666521,"duration":1211}},{"uid":"aa2a2120817d472c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1443//#testresult/aa2a2120817d472c","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704704177385,"stop":1704704179031,"duration":1646}},{"uid":"a581e27372fa2a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1441//#testresult/a581e27372fa2a8","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704673853607,"stop":1704673854399,"duration":792}},{"uid":"6bb99b852fe1bea5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1426//#testresult/6bb99b852fe1bea5","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704615451128,"stop":1704615451775,"duration":647}},{"uid":"4dfc13f432b2f5f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1423//#testresult/4dfc13f432b2f5f6","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704614857123,"stop":1704614858329,"duration":1206}},{"uid":"84aa15b92ac8e5f1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1420//#testresult/84aa15b92ac8e5f1","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704587547194,"stop":1704587548173,"duration":979}},{"uid":"bd9d33a9c18b0d4f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1413//#testresult/bd9d33a9c18b0d4f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704542810432,"stop":1704542811351,"duration":919}},{"uid":"990ce6cbde30197b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1408//#testresult/990ce6cbde30197b","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704496234430,"stop":1704496235267,"duration":837}},{"uid":"45b303332b2f45c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1406//#testresult/45b303332b2f45c","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704453488566,"stop":1704453489881,"duration":1315}},{"uid":"a1be8c2742975198","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1405//#testresult/a1be8c2742975198","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1704452678557,"stop":1704452679576,"duration":1019}}]},"tags":[]},"source":"4623c5036b23cef2.json","parameterValues":["MidSussexDistrictCouncil","None","None"]}