{"uid":"1483982fc644141b","name":"Validate Council Output [NottinghamCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d4f72ded7db85dcd7cecf3a5b5fd36e6","time":{"start":1722471507152,"stop":1722471567765,"duration":60613},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f5b7349a840>\nrequest = <FixtureRequest for <Function test_scenario_outline[NottinghamCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f5b86762290>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/NottinghamCityCouncil.py:21: in parse_data\n    json_data = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f5b876ab750>\ns = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\\r\\n<htm...source you are looking for, and it cannot be displayed.</h3>\\r\\n </fieldset></div>\\r\\n</div>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f5b7349a840>\nrequest = <FixtureRequest for <Function test_scenario_outline[NottinghamCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f5b86762290>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/NottinghamCityCouncil.py:21: in parse_data\n    json_data = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f5b876ab750>\ns = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\\r\\n<htm...source you are looking for, and it cannot be displayed.</h3>\\r\\n </fieldset></div>\\r\\n</div>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council","time":{"start":1722471507152,"stop":1722471507153,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1722471507153,"stop":1722471567765,"duration":60612},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a7cb89f3141ea6d","name":"stdout","source":"a7cb89f3141ea6d.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az775-342"},{"name":"thread","value":"2727-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NottinghamCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":83,"unknown":0,"total":84},"items":[{"uid":"b1dd0174a19d6c16","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1998//#testresult/b1dd0174a19d6c16","status":"passed","time":{"start":1722385154887,"stop":1722385158322,"duration":3435}},{"uid":"ae46b9e05f73fdd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1997//#testresult/ae46b9e05f73fdd8","status":"passed","time":{"start":1722298845951,"stop":1722298848060,"duration":2109}},{"uid":"2795e71863d561f1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1996//#testresult/2795e71863d561f1","status":"passed","time":{"start":1722212425965,"stop":1722212435955,"duration":9990}},{"uid":"d4d1c320a32f2f23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1995//#testresult/d4d1c320a32f2f23","status":"passed","time":{"start":1722125953764,"stop":1722125956195,"duration":2431}},{"uid":"51451baf0221abf7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1994//#testresult/51451baf0221abf7","status":"passed","time":{"start":1722039709054,"stop":1722039717293,"duration":8239}},{"uid":"bddaeb917a4fb4c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1993//#testresult/bddaeb917a4fb4c9","status":"passed","time":{"start":1721953312732,"stop":1721953316780,"duration":4048}},{"uid":"8dfb6ec2f2762d51","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1992//#testresult/8dfb6ec2f2762d51","status":"passed","time":{"start":1721866764603,"stop":1721866767586,"duration":2983}},{"uid":"7b8fd2f51560814c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1991//#testresult/7b8fd2f51560814c","status":"passed","time":{"start":1721780487568,"stop":1721780490876,"duration":3308}},{"uid":"7748296b47cc7e70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1990//#testresult/7748296b47cc7e70","status":"passed","time":{"start":1721693830856,"stop":1721693833977,"duration":3121}},{"uid":"bb5cc12475f57ca9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1989//#testresult/bb5cc12475f57ca9","status":"passed","time":{"start":1721607454193,"stop":1721607458571,"duration":4378}},{"uid":"92a0bc24689e706b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1988//#testresult/92a0bc24689e706b","status":"passed","time":{"start":1721521192537,"stop":1721521197009,"duration":4472}},{"uid":"64aaf843a0297d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1987//#testresult/64aaf843a0297d","status":"passed","time":{"start":1721434706555,"stop":1721434720960,"duration":14405}},{"uid":"c1ee55758c4c893a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1986//#testresult/c1ee55758c4c893a","status":"passed","time":{"start":1721372876818,"stop":1721372879992,"duration":3174}},{"uid":"ef50f01e0d62d468","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1985//#testresult/ef50f01e0d62d468","status":"passed","time":{"start":1721263889760,"stop":1721263891595,"duration":1835}},{"uid":"8cd794d94a000dc6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1984//#testresult/8cd794d94a000dc6","status":"passed","time":{"start":1721177321672,"stop":1721177323894,"duration":2222}},{"uid":"151526690a1bb881","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1983//#testresult/151526690a1bb881","status":"passed","time":{"start":1721090909755,"stop":1721090911730,"duration":1975}},{"uid":"8df65cca71b7f5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1982//#testresult/8df65cca71b7f5d","status":"passed","time":{"start":1721004633605,"stop":1721004635479,"duration":1874}},{"uid":"7aa65eeafdebb8a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1981//#testresult/7aa65eeafdebb8a0","status":"passed","time":{"start":1720918150400,"stop":1720918152448,"duration":2048}},{"uid":"d5cabe4989d528fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1980//#testresult/d5cabe4989d528fc","status":"passed","time":{"start":1720831535883,"stop":1720831540224,"duration":4341}},{"uid":"315a04218ca3ff81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1979//#testresult/315a04218ca3ff81","status":"passed","time":{"start":1720745055459,"stop":1720745057240,"duration":1781}}]},"tags":[]},"source":"1483982fc644141b.json","parameterValues":["NottinghamCityCouncil"]}