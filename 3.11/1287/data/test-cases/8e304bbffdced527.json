{"uid":"8e304bbffdced527","name":"Validate Council Output [NewcastleCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a63cb1391c4aa4a9ce00ac5e7dcb85fb","time":{"start":1703294086499,"stop":1703294117529,"duration":31030},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f4ae58d4b80>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4ae4d12d90>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f4ae4d12d90>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f4ae58d4b80>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4ae4d12d90>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f4ae4d12d90>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1703294086499,"stop":1703294086499,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NewcastleCityCouncil using None and the None is set","time":{"start":1703294086499,"stop":1703294117527,"duration":31028},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1703294117528,"stop":1703294117528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1703294117528,"stop":1703294117529,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az914-521"},{"name":"thread","value":"2673-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":25,"broken":0,"skipped":0,"passed":65,"unknown":0,"total":90},"items":[{"uid":"5a2d1296c383bd74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1282//#testresult/5a2d1296c383bd74","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703207815546,"stop":1703207846233,"duration":30687}},{"uid":"50fca2ae01873e0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1281//#testresult/50fca2ae01873e0a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703121459547,"stop":1703121489994,"duration":30447}},{"uid":"572f65dec5c40b49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1280//#testresult/572f65dec5c40b49","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703034303353,"stop":1703034334042,"duration":30689}},{"uid":"fc70e1ca6c8dee49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1279//#testresult/fc70e1ca6c8dee49","status":"passed","time":{"start":1703024948861,"stop":1703024959379,"duration":10518}},{"uid":"ddce06cf561f1699","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1278//#testresult/ddce06cf561f1699","status":"passed","time":{"start":1703024948421,"stop":1703024958937,"duration":10516}},{"uid":"e47397c8f7af27aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1276//#testresult/e47397c8f7af27aa","status":"passed","time":{"start":1702948729643,"stop":1702948751894,"duration":22251}},{"uid":"8b940b64d8bc0e4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1275//#testresult/8b940b64d8bc0e4a","status":"passed","time":{"start":1702862372542,"stop":1702862384573,"duration":12031}},{"uid":"63f49f8832bf86c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/63f49f8832bf86c2","status":"passed","time":{"start":1702860018133,"stop":1702860031447,"duration":13314}},{"uid":"50b6d9521e15a6a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/50b6d9521e15a6a0","status":"passed","time":{"start":1702843584434,"stop":1702843592994,"duration":8560}},{"uid":"d0fccd8bd28cb752","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/d0fccd8bd28cb752","status":"passed","time":{"start":1702809396953,"stop":1702809407742,"duration":10789}},{"uid":"69985bcd306024a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1247//#testresult/69985bcd306024a3","status":"passed","time":{"start":1702657179813,"stop":1702657209825,"duration":30012}},{"uid":"c10af41c84d2f380","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1248//#testresult/c10af41c84d2f380","status":"passed","time":{"start":1702657199259,"stop":1702657216463,"duration":17204}},{"uid":"fa09f1f1e0f5dd70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1244//#testresult/fa09f1f1e0f5dd70","status":"passed","time":{"start":1702603230795,"stop":1702603239488,"duration":8693}},{"uid":"7402398183dbac8d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1243//#testresult/7402398183dbac8d","status":"passed","time":{"start":1702540074541,"stop":1702540084292,"duration":9751}},{"uid":"5445fcdbb6f30d34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1241//#testresult/5445fcdbb6f30d34","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702516718990,"stop":1702516750316,"duration":31326}},{"uid":"5f2c9040807ef470","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1238//#testresult/5f2c9040807ef470","status":"passed","time":{"start":1702447487809,"stop":1702447497465,"duration":9656}},{"uid":"2feb7cf20fa304b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1236//#testresult/2feb7cf20fa304b0","status":"passed","time":{"start":1702430354817,"stop":1702430393606,"duration":38789}},{"uid":"56a4f57b9e271cbe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1232//#testresult/56a4f57b9e271cbe","status":"passed","time":{"start":1702366499873,"stop":1702366511849,"duration":11976}},{"uid":"792c1774e08028e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1231//#testresult/792c1774e08028e9","status":"passed","time":{"start":1702343976186,"stop":1702343986872,"duration":10686}},{"uid":"239eea293783d245","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1229//#testresult/239eea293783d245","status":"passed","time":{"start":1702257576904,"stop":1702257593936,"duration":17032}}]},"tags":[]},"source":"8e304bbffdced527.json","parameterValues":["NewcastleCityCouncil","None","None"]}