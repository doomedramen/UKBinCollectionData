{"uid":"c1212e932039724","name":"Validate Council Output [HuntingdonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c2822894b8c5df9c3b14f6331988dcc1","time":{"start":1703294148094,"stop":1703294149572,"duration":1478},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7feafa2edb20>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7feaf91d2150>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7feaf91d2150>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7feafa2edb20>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7feaf91d2150>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7feaf91d2150>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: HuntingdonDistrictCouncil","time":{"start":1703294148094,"stop":1703294148094,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from HuntingdonDistrictCouncil using None and the None is set","time":{"start":1703294148094,"stop":1703294149570,"duration":1476},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1703294149570,"stop":1703294149571,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1703294149571,"stop":1703294149572,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az914-521"},{"name":"thread","value":"2664-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"HuntingdonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":90,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":90},"items":[{"uid":"50650c893a0ade0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1282//#testresult/50650c893a0ade0d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703207831692,"stop":1703207833790,"duration":2098}},{"uid":"d89d1e84f4c9e85d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1281//#testresult/d89d1e84f4c9e85d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703121458380,"stop":1703121459525,"duration":1145}},{"uid":"dfff3f059bc67f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1280//#testresult/dfff3f059bc67f5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703034347318,"stop":1703034349918,"duration":2600}},{"uid":"bdcea4d3788d3db7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1279//#testresult/bdcea4d3788d3db7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703025223652,"stop":1703025224704,"duration":1052}},{"uid":"92bc42636483f9b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1278//#testresult/92bc42636483f9b5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703024949890,"stop":1703024950886,"duration":996}},{"uid":"ba74940a537dd81b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1276//#testresult/ba74940a537dd81b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702948777739,"stop":1702948779279,"duration":1540}},{"uid":"63e6c670bc632535","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1275//#testresult/63e6c670bc632535","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702862436611,"stop":1702862437825,"duration":1214}},{"uid":"d0c8c891cd18caf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/d0c8c891cd18caf","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702860034159,"stop":1702860035321,"duration":1162}},{"uid":"f0bec66528cd1ccb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/f0bec66528cd1ccb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702843649122,"stop":1702843650812,"duration":1690}},{"uid":"f8f63556e794ac4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/f8f63556e794ac4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702809753736,"stop":1702809755058,"duration":1322}},{"uid":"8361814a1b533817","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1247//#testresult/8361814a1b533817","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702657131798,"stop":1702657133438,"duration":1640}},{"uid":"ad39aba418987253","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1248//#testresult/ad39aba418987253","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702657152092,"stop":1702657153805,"duration":1713}},{"uid":"ba8211d20e6a4cd1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1244//#testresult/ba8211d20e6a4cd1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702603212638,"stop":1702603213799,"duration":1161}},{"uid":"4d6bb46d547c5274","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1243//#testresult/4d6bb46d547c5274","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702540350789,"stop":1702540351785,"duration":996}},{"uid":"6598bb512959d241","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1241//#testresult/6598bb512959d241","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702516984271,"stop":1702516986226,"duration":1955}},{"uid":"ca47503cfb867d86","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1238//#testresult/ca47503cfb867d86","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702447480918,"stop":1702447481937,"duration":1019}},{"uid":"ce067306fdda1379","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1236//#testresult/ce067306fdda1379","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702430336387,"stop":1702430337493,"duration":1106}},{"uid":"b431fd230be84802","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1232//#testresult/b431fd230be84802","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702366497021,"stop":1702366498081,"duration":1060}},{"uid":"ce4a0c2b4d3d25d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1231//#testresult/ce4a0c2b4d3d25d7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702343975833,"stop":1702343976802,"duration":969}},{"uid":"2054ac2bc75cca40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1229//#testresult/2054ac2bc75cca40","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702257551243,"stop":1702257552380,"duration":1137}}]},"tags":[]},"source":"c1212e932039724.json","parameterValues":["HuntingdonDistrictCouncil","None","None"]}