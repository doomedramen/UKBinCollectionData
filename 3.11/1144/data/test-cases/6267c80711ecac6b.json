{"uid":"6267c80711ecac6b","name":"Validate Council Output [BoltonCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f5a0714076fed695e9f92b2c8003a7da","time":{"start":1700646375190,"stop":1700646379156,"duration":3966},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb3c5bb8ae0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BoltonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb3c5c35590>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb3c5c35590>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb3c5bb8ae0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BoltonCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb3c5c35590>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb3c5c35590>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: BoltonCouncil","time":{"start":1700646375191,"stop":1700646375191,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"When we scrape the data from BoltonCouncil using None and the None is set","time":{"start":1700646375192,"stop":1700646379152,"duration":3960},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Then the result is valid json","time":{"start":1700646379153,"stop":1700646379153,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"And the output should validate against the schema","time":{"start":1700646379153,"stop":1700646379156,"duration":3},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"host","value":"fv-az523-17"},{"name":"thread","value":"2714-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BoltonCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":14,"unknown":0,"total":23},"items":[{"uid":"92352a10c56b28fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1141//#testresult/92352a10c56b28fa","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700616006939,"stop":1700616010915,"duration":3976}},{"uid":"94c6d9003ef9ec83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1136//#testresult/94c6d9003ef9ec83","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700529644510,"stop":1700529648549,"duration":4039}},{"uid":"eb81f9367edbc32a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1135//#testresult/eb81f9367edbc32a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443131005,"stop":1700443134936,"duration":3931}},{"uid":"158ee238323f7991","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1134//#testresult/158ee238323f7991","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700356957202,"stop":1700356960321,"duration":3119}},{"uid":"c3356fb560b06b5f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1133//#testresult/c3356fb560b06b5f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270218479,"stop":1700270221984,"duration":3505}},{"uid":"a87d008b7431aa82","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1132//#testresult/a87d008b7431aa82","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183870868,"stop":1700183874412,"duration":3544}},{"uid":"394f2afae4d7dfda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1131//#testresult/394f2afae4d7dfda","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097514988,"stop":1700097519346,"duration":4358}},{"uid":"407f1cbaf45f79a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1129//#testresult/407f1cbaf45f79a7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700011028799,"stop":1700011032106,"duration":3307}},{"uid":"ccfb0e703e818264","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1128//#testresult/ccfb0e703e818264","status":"passed","time":{"start":1699924569267,"stop":1699924573276,"duration":4009}},{"uid":"7c800d1fd2d3a719","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1127//#testresult/7c800d1fd2d3a719","status":"passed","time":{"start":1699838238480,"stop":1699838245283,"duration":6803}},{"uid":"4bc4250d7add5db7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1126//#testresult/4bc4250d7add5db7","status":"passed","time":{"start":1699752011928,"stop":1699752019380,"duration":7452}},{"uid":"382fe172d04e90ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/382fe172d04e90ee","status":"passed","time":{"start":1699668887382,"stop":1699668891327,"duration":3945}},{"uid":"a8721d5d46703310","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/a8721d5d46703310","status":"passed","time":{"start":1699578908281,"stop":1699578916432,"duration":8151}},{"uid":"2a2b9b41a4238f23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/2a2b9b41a4238f23","status":"passed","time":{"start":1699492578080,"stop":1699492585368,"duration":7288}},{"uid":"23e40c23c4c59b8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/23e40c23c4c59b8b","status":"passed","time":{"start":1699481259927,"stop":1699481264520,"duration":4593}},{"uid":"abb266f598371c31","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/abb266f598371c31","status":"passed","time":{"start":1699481283456,"stop":1699481286939,"duration":3483}},{"uid":"f994abed7b82c2ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/f994abed7b82c2ed","status":"passed","time":{"start":1699445045653,"stop":1699445052264,"duration":6611}},{"uid":"6f940e73d52db478","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1115//#testresult/6f940e73d52db478","status":"passed","time":{"start":1699406117001,"stop":1699406124368,"duration":7367}},{"uid":"618f50c3463573f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1114//#testresult/618f50c3463573f6","status":"passed","time":{"start":1699319783972,"stop":1699319787523,"duration":3551}},{"uid":"8bf325a25abbb9f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1113//#testresult/8bf325a25abbb9f7","status":"passed","time":{"start":1699233447529,"stop":1699233450981,"duration":3452}}]},"tags":[]},"source":"6267c80711ecac6b.json","parameterValues":["BoltonCouncil","None","None"]}