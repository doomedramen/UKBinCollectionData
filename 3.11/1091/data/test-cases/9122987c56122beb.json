{"uid":"9122987c56122beb","name":"Validate Council Output [GatesheadCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3a7171e6de629587a3f0d32410302b35","time":{"start":1698887640441,"stop":1698887944898,"duration":304457},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x55bb25608fb3 <unknown>\n#1 0x55bb252dc4a7 <unknown>\n#2 0x55bb252c449e <unknown>\n#3 0x55bb252c42ce <unknown>\n#4 0x55bb252c2ecd <unknown>\n#5 0x55bb252c34cf <unknown>\n#6 0x55bb252d2a04 <unknown>\n#7 0x55bb252e7651 <unknown>\n#8 0x55bb252ec04b <unknown>\n#9 0x55bb252c3bf1 <unknown>\n#10 0x55bb252e7446 <unknown>\n#11 0x55bb2535edfc <unknown>\n#12 0x55bb25345713 <unknown>\n#13 0x55bb2531818b <unknown>\n#14 0x55bb25318f7e <unknown>\n#15 0x55bb255ce8d8 <unknown>\n#16 0x55bb255d2800 <unknown>\n#17 0x55bb255dccfc <unknown>\n#18 0x55bb255d3418 <unknown>\n#19 0x55bb255a042f <unknown>\n#20 0x55bb255f74e8 <unknown>\n#21 0x55bb255f76b4 <unknown>\n#22 0x55bb25608143 <unknown>\n#23 0x7f0bca894ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f483e015260>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f482a5ce750>, 'council': 'GatesheadCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:63: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:59: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:48: in parse_data\n    ))).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f483cb03910>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55bb255f76b4 \\\\u003Cunknown>\\\\n#22 0x55bb25608143 \\\\u003Cunknown>\\\\n#23 0x7f0bca894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: headless chrome=118.0.5993.117)\nE       Stacktrace:\nE       #0 0x55bb25608fb3 <unknown>\nE       #1 0x55bb252dc4a7 <unknown>\nE       #2 0x55bb252c449e <unknown>\nE       #3 0x55bb252c42ce <unknown>\nE       #4 0x55bb252c2ecd <unknown>\nE       #5 0x55bb252c34cf <unknown>\nE       #6 0x55bb252d2a04 <unknown>\nE       #7 0x55bb252e7651 <unknown>\nE       #8 0x55bb252ec04b <unknown>\nE       #9 0x55bb252c3bf1 <unknown>\nE       #10 0x55bb252e7446 <unknown>\nE       #11 0x55bb2535edfc <unknown>\nE       #12 0x55bb25345713 <unknown>\nE       #13 0x55bb2531818b <unknown>\nE       #14 0x55bb25318f7e <unknown>\nE       #15 0x55bb255ce8d8 <unknown>\nE       #16 0x55bb255d2800 <unknown>\nE       #17 0x55bb255dccfc <unknown>\nE       #18 0x55bb255d3418 <unknown>\nE       #19 0x55bb255a042f <unknown>\nE       #20 0x55bb255f74e8 <unknown>\nE       #21 0x55bb255f76b4 <unknown>\nE       #22 0x55bb25608143 <unknown>\nE       #23 0x7f0bca894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x55bb25608fb3 <unknown>\n#1 0x55bb252dc4a7 <unknown>\n#2 0x55bb252c449e <unknown>\n#3 0x55bb252c42ce <unknown>\n#4 0x55bb252c2ecd <unknown>\n#5 0x55bb252c34cf <unknown>\n#6 0x55bb252d2a04 <unknown>\n#7 0x55bb252e7651 <unknown>\n#8 0x55bb252ec04b <unknown>\n#9 0x55bb252c3bf1 <unknown>\n#10 0x55bb252e7446 <unknown>\n#11 0x55bb2535edfc <unknown>\n#12 0x55bb25345713 <unknown>\n#13 0x55bb2531818b <unknown>\n#14 0x55bb25318f7e <unknown>\n#15 0x55bb255ce8d8 <unknown>\n#16 0x55bb255d2800 <unknown>\n#17 0x55bb255dccfc <unknown>\n#18 0x55bb255d3418 <unknown>\n#19 0x55bb255a042f <unknown>\n#20 0x55bb255f74e8 <unknown>\n#21 0x55bb255f76b4 <unknown>\n#22 0x55bb25608143 <unknown>\n#23 0x7f0bca894ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f483e015260>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f482a5ce750>, 'council': 'GatesheadCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:63: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:59: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:48: in parse_data\n    ))).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f483cb03910>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55bb255f76b4 \\\\u003Cunknown>\\\\n#22 0x55bb25608143 \\\\u003Cunknown>\\\\n#23 0x7f0bca894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: headless chrome=118.0.5993.117)\nE       Stacktrace:\nE       #0 0x55bb25608fb3 <unknown>\nE       #1 0x55bb252dc4a7 <unknown>\nE       #2 0x55bb252c449e <unknown>\nE       #3 0x55bb252c42ce <unknown>\nE       #4 0x55bb252c2ecd <unknown>\nE       #5 0x55bb252c34cf <unknown>\nE       #6 0x55bb252d2a04 <unknown>\nE       #7 0x55bb252e7651 <unknown>\nE       #8 0x55bb252ec04b <unknown>\nE       #9 0x55bb252c3bf1 <unknown>\nE       #10 0x55bb252e7446 <unknown>\nE       #11 0x55bb2535edfc <unknown>\nE       #12 0x55bb25345713 <unknown>\nE       #13 0x55bb2531818b <unknown>\nE       #14 0x55bb25318f7e <unknown>\nE       #15 0x55bb255ce8d8 <unknown>\nE       #16 0x55bb255d2800 <unknown>\nE       #17 0x55bb255dccfc <unknown>\nE       #18 0x55bb255d3418 <unknown>\nE       #19 0x55bb255a042f <unknown>\nE       #20 0x55bb255f74e8 <unknown>\nE       #21 0x55bb255f76b4 <unknown>\nE       #22 0x55bb25608143 <unknown>\nE       #23 0x7f0bca894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1698887640441,"stop":1698887640442,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from GatesheadCouncil","time":{"start":1698887640442,"stop":1698887944898,"duration":304456},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x55bb25608fb3 <unknown>\n#1 0x55bb252dc4a7 <unknown>\n#2 0x55bb252c449e <unknown>\n#3 0x55bb252c42ce <unknown>\n#4 0x55bb252c2ecd <unknown>\n#5 0x55bb252c34cf <unknown>\n#6 0x55bb252d2a04 <unknown>\n#7 0x55bb252e7651 <unknown>\n#8 0x55bb252ec04b <unknown>\n#9 0x55bb252c3bf1 <unknown>\n#10 0x55bb252e7446 <unknown>\n#11 0x55bb2535edfc <unknown>\n#12 0x55bb25345713 <unknown>\n#13 0x55bb2531818b <unknown>\n#14 0x55bb25318f7e <unknown>\n#15 0x55bb255ce8d8 <unknown>\n#16 0x55bb255d2800 <unknown>\n#17 0x55bb255dccfc <unknown>\n#18 0x55bb255d3418 <unknown>\n#19 0x55bb255a042f <unknown>\n#20 0x55bb255f74e8 <unknown>\n#21 0x55bb255f76b4 <unknown>\n#22 0x55bb25608143 <unknown>\n#23 0x7f0bca894ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x55bb25608fb3 <unknown>\n#1 0x55bb252dc4a7 <unknown>\n#2 0x55bb252c449e <unknown>\n#3 0x55bb252c42ce <unknown>\n#4 0x55bb252c2ecd <unknown>\n#5 0x55bb252c34cf <unknown>\n#6 0x55bb252d2a04 <unknown>\n#7 0x55bb252e7651 <unknown>\n#8 0x55bb252ec04b <unknown>\n#9 0x55bb252c3bf1 <unknown>\n#10 0x55bb252e7446 <unknown>\n#11 0x55bb2535edfc <unknown>\n#12 0x55bb25345713 <unknown>\n#13 0x55bb2531818b <unknown>\n#14 0x55bb25318f7e <unknown>\n#15 0x55bb255ce8d8 <unknown>\n#16 0x55bb255d2800 <unknown>\n#17 0x55bb255dccfc <unknown>\n#18 0x55bb255d3418 <unknown>\n#19 0x55bb255a042f <unknown>\n#20 0x55bb255f74e8 <unknown>\n#21 0x55bb255f76b4 <unknown>\n#22 0x55bb25608143 <unknown>\n#23 0x7f0bca894ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az887-532"},{"name":"thread","value":"2226-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":21,"unknown":0,"total":26},"items":[{"uid":"9ecb874550dc3906","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1090//#testresult/9ecb874550dc3906","status":"passed","time":{"start":1698878317807,"stop":1698878324708,"duration":6901}},{"uid":"8ac3753ba67d70b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1089//#testresult/8ac3753ba67d70b4","status":"passed","time":{"start":1698878226974,"stop":1698878236400,"duration":9426}},{"uid":"c16467fe0968afef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1086//#testresult/c16467fe0968afef","status":"passed","time":{"start":1698867453990,"stop":1698867463024,"duration":9034}},{"uid":"402dd9daaaa1e939","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1081//#testresult/402dd9daaaa1e939","status":"passed","time":{"start":1698801530927,"stop":1698801538776,"duration":7849}},{"uid":"ab9549598e2e9253","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1079//#testresult/ab9549598e2e9253","status":"passed","time":{"start":1698788506193,"stop":1698788514780,"duration":8587}},{"uid":"dce29117ac1cb906","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1077//#testresult/dce29117ac1cb906","status":"passed","time":{"start":1698714974962,"stop":1698714985326,"duration":10364}},{"uid":"fe26bef473519aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/fe26bef473519aa","status":"passed","time":{"start":1698701338256,"stop":1698701346282,"duration":8026}},{"uid":"d691a9f461783e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/d691a9f461783e2","status":"passed","time":{"start":1698700220754,"stop":1698700229344,"duration":8590}},{"uid":"169ae47981dbbafd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/169ae47981dbbafd","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x55c625a2bfb3 <unknown>\n#1 0x55c6256ff4a7 <unknown>\n#2 0x55c6256e749e <unknown>\n#3 0x55c6256e72ce <unknown>\n#4 0x55c6256e5ecd <unknown>\n#5 0x55c6256e64cf <unknown>\n#6 0x55c6256f5a04 <unknown>\n#7 0x55c62570a651 <unknown>\n#8 0x55c62570f04b <unknown>\n#9 0x55c6256e6bf1 <unknown>\n#10 0x55c62570a446 <unknown>\n#11 0x55c625781dfc <unknown>\n#12 0x55c625768713 <unknown>\n#13 0x55c62573b18b <unknown>\n#14 0x55c62573bf7e <unknown>\n#15 0x55c6259f18d8 <unknown>\n#16 0x55c6259f5800 <unknown>\n#17 0x55c6259ffcfc <unknown>\n#18 0x55c6259f6418 <unknown>\n#19 0x55c6259c342f <unknown>\n#20 0x55c625a1a4e8 <unknown>\n#21 0x55c625a1a6b4 <unknown>\n#22 0x55c625a2b143 <unknown>\n#23 0x7f6e56a94ac3 <unknown>","time":{"start":1698692796222,"stop":1698693102005,"duration":305783}},{"uid":"481c58fa1c2e53d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/481c58fa1c2e53d0","status":"passed","time":{"start":1698692740844,"stop":1698692750431,"duration":9587}},{"uid":"b77d1a2e42d6a7dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/b77d1a2e42d6a7dd","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55f663c0afb3 <unknown>\n#1 0x55f6638de4a7 <unknown>\n#2 0x55f663925dd6 <unknown>\n#3 0x55f663925ec1 <unknown>\n#4 0x55f663963354 <unknown>\n#5 0x55f66394796d <unknown>\n#6 0x55f663960c02 <unknown>\n#7 0x55f663947713 <unknown>\n#8 0x55f66391a18b <unknown>\n#9 0x55f66391af7e <unknown>\n#10 0x55f663bd08d8 <unknown>\n#11 0x55f663bd4800 <unknown>\n#12 0x55f663bdecfc <unknown>\n#13 0x55f663bd5418 <unknown>\n#14 0x55f663ba242f <unknown>\n#15 0x55f663bf94e8 <unknown>\n#16 0x55f663bf96b4 <unknown>\n#17 0x55f663c0a143 <unknown>\n#18 0x7f9e2de94ac3 <unknown>","time":{"start":1698646302752,"stop":1698646326979,"duration":24227}},{"uid":"8a62503caf7dda9a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/8a62503caf7dda9a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56336bc0efb3 <unknown>\n#1 0x56336b8e24a7 <unknown>\n#2 0x56336b929dd6 <unknown>\n#3 0x56336b929ec1 <unknown>\n#4 0x56336b967354 <unknown>\n#5 0x56336b94b96d <unknown>\n#6 0x56336b964c02 <unknown>\n#7 0x56336b94b713 <unknown>\n#8 0x56336b91e18b <unknown>\n#9 0x56336b91ef7e <unknown>\n#10 0x56336bbd48d8 <unknown>\n#11 0x56336bbd8800 <unknown>\n#12 0x56336bbe2cfc <unknown>\n#13 0x56336bbd9418 <unknown>\n#14 0x56336bba642f <unknown>\n#15 0x56336bbfd4e8 <unknown>\n#16 0x56336bbfd6b4 <unknown>\n#17 0x56336bc0e143 <unknown>\n#18 0x7f4d6f894ac3 <unknown>","time":{"start":1698646324063,"stop":1698646338747,"duration":14684}},{"uid":"2eb7ea187a488639","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/2eb7ea187a488639","status":"passed","time":{"start":1698628550830,"stop":1698628559680,"duration":8850}},{"uid":"292030a68d087518","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/292030a68d087518","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x55f026d79fb3 <unknown>\n#1 0x55f026a4d4a7 <unknown>\n#2 0x55f026a3549e <unknown>\n#3 0x55f026a352ce <unknown>\n#4 0x55f026a33ecd <unknown>\n#5 0x55f026a344cf <unknown>\n#6 0x55f026a43a04 <unknown>\n#7 0x55f026a58651 <unknown>\n#8 0x55f026a5d04b <unknown>\n#9 0x55f026a34bf1 <unknown>\n#10 0x55f026a58446 <unknown>\n#11 0x55f026acfdfc <unknown>\n#12 0x55f026ab6713 <unknown>\n#13 0x55f026a8918b <unknown>\n#14 0x55f026a89f7e <unknown>\n#15 0x55f026d3f8d8 <unknown>\n#16 0x55f026d43800 <unknown>\n#17 0x55f026d4dcfc <unknown>\n#18 0x55f026d44418 <unknown>\n#19 0x55f026d1142f <unknown>\n#20 0x55f026d684e8 <unknown>\n#21 0x55f026d686b4 <unknown>\n#22 0x55f026d79143 <unknown>\n#23 0x7effd3694ac3 <unknown>","time":{"start":1698615170833,"stop":1698615476037,"duration":305204}},{"uid":"1e1320d63b41e40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1063//#testresult/1e1320d63b41e40","status":"passed","time":{"start":1698615233501,"stop":1698615241936,"duration":8435}},{"uid":"afa0550e6aa5c025","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1061//#testresult/afa0550e6aa5c025","status":"passed","time":{"start":1698615108709,"stop":1698615118193,"duration":9484}},{"uid":"a81dc7c19d10b39e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1054//#testresult/a81dc7c19d10b39e","status":"passed","time":{"start":1698542350573,"stop":1698542359275,"duration":8702}},{"uid":"82e86c5ce59e0df3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1053//#testresult/82e86c5ce59e0df3","status":"passed","time":{"start":1698455538635,"stop":1698455547072,"duration":8437}},{"uid":"80e7aa15c581c4b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1051//#testresult/80e7aa15c581c4b8","status":"passed","time":{"start":1698369226337,"stop":1698369236059,"duration":9722}},{"uid":"52be0c3c1b002a1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1050//#testresult/52be0c3c1b002a1a","status":"passed","time":{"start":1698282827769,"stop":1698282837580,"duration":9811}}]},"tags":[]},"source":"9122987c56122beb.json","parameterValues":["GatesheadCouncil"]}