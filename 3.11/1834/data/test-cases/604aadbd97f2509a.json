{"uid":"604aadbd97f2509a","name":"Validate Council Output [MertonCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"36e8dead67440054ce559fdfe42912ec","time":{"start":1715973782953,"stop":1715973783683,"duration":730},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7efca4f62660>\nrequest = <FixtureRequest for <Function test_scenario_outline[MertonCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7efca410e750>, 'council': 'MertonCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:68: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MertonCouncil.CouncilClass object at 0x7efca448fcd0>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': None, ...}\nsoup = \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.d...</a>\r\n\t\t| Copyright © 2024 Merton Council and its licensors. All rights reserved.\r\n\t</p>\n</div>\n</div>\n</body>\n</html>\n\ndata = {'bins': []}, collections = []\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Search for the specific bin in the table using BS4\n>       rows = soup.find(\"table\", class_=(\"collectiondays\")).find_all(\n            \"tr\",\n            class_=(\n                \"food-caddy\",\n                \"papercard-wheelie\",\n                \"plastics-boxes\",\n                \"rubbish-wheelie\",\n                \"textiles\",\n                \"batteries\",\n            ),\n        )\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/MertonCouncil.py:24: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7efca4f62660>\nrequest = <FixtureRequest for <Function test_scenario_outline[MertonCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7efca410e750>, 'council': 'MertonCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:68: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MertonCouncil.CouncilClass object at 0x7efca448fcd0>\npage = <Response [200]>\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': None, ...}\nsoup = \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.d...</a>\r\n\t\t| Copyright © 2024 Merton Council and its licensors. All rights reserved.\r\n\t</p>\n</div>\n</div>\n</body>\n</html>\n\ndata = {'bins': []}, collections = []\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Search for the specific bin in the table using BS4\n>       rows = soup.find(\"table\", class_=(\"collectiondays\")).find_all(\n            \"tr\",\n            class_=(\n                \"food-caddy\",\n                \"papercard-wheelie\",\n                \"plastics-boxes\",\n                \"rubbish-wheelie\",\n                \"textiles\",\n                \"batteries\",\n            ),\n        )\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/MertonCouncil.py:24: AttributeError","steps":[{"name":"Given the council: MertonCouncil","time":{"start":1715973782953,"stop":1715973782953,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MertonCouncil","time":{"start":1715973782953,"stop":1715973783683,"duration":730},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1024-967"},{"name":"thread","value":"2734-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MertonCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":139,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":180},"items":[{"uid":"888947fe8498a0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1110//#testresult/888947fe8498a0a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699147459733,"stop":1699147466033,"duration":6300}},{"uid":"f3c0bfdcc4d09d66","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1107//#testresult/f3c0bfdcc4d09d66","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699101663067,"stop":1699101668162,"duration":5095}},{"uid":"99e40b3e6bde8385","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1106//#testresult/99e40b3e6bde8385","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699060679986,"stop":1699060686172,"duration":6186}},{"uid":"52d5d647b96098d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1100//#testresult/52d5d647b96098d6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699007804294,"stop":1699007806210,"duration":1916}},{"uid":"134063fa7345fb13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1095//#testresult/134063fa7345fb13","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698988758196,"stop":1698988763301,"duration":5105}},{"uid":"50c6809d76da2b8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1094//#testresult/50c6809d76da2b8a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698974360605,"stop":1698974362614,"duration":2009}},{"uid":"4ea9af74bd89e0e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1091//#testresult/4ea9af74bd89e0e0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698887662121,"stop":1698887663490,"duration":1369}},{"uid":"941d7fe9e8779091","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1090//#testresult/941d7fe9e8779091","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878466732,"stop":1698878472706,"duration":5974}},{"uid":"d0d70d94df1331c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1089//#testresult/d0d70d94df1331c6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878255956,"stop":1698878257381,"duration":1425}},{"uid":"fe678efea1ab94b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1086//#testresult/fe678efea1ab94b5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867617210,"stop":1698867618676,"duration":1466}},{"uid":"690aca61f70f4380","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1081//#testresult/690aca61f70f4380","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801545602,"stop":1698801547247,"duration":1645}},{"uid":"307d0c502fc280a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1079//#testresult/307d0c502fc280a9","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788706294,"stop":1698788712078,"duration":5784}},{"uid":"4ae8c5b307670e43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1077//#testresult/4ae8c5b307670e43","status":"passed","time":{"start":1698715180662,"stop":1698715182347,"duration":1685}},{"uid":"e7b1cf89671b1c05","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/e7b1cf89671b1c05","status":"passed","time":{"start":1698701508426,"stop":1698701513966,"duration":5540}},{"uid":"60d4a063f061a554","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/60d4a063f061a554","status":"passed","time":{"start":1698700418120,"stop":1698700423929,"duration":5809}},{"uid":"43b81908fb41d5cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/43b81908fb41d5cd","status":"passed","time":{"start":1698692991019,"stop":1698692993156,"duration":2137}},{"uid":"b5f73d2230854327","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/b5f73d2230854327","status":"passed","time":{"start":1698692940632,"stop":1698692942268,"duration":1636}},{"uid":"5679cca5aff7b06b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/5679cca5aff7b06b","status":"passed","time":{"start":1698646557092,"stop":1698646558802,"duration":1710}},{"uid":"f25d6f7063d1101a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/f25d6f7063d1101a","status":"passed","time":{"start":1698646496533,"stop":1698646498107,"duration":1574}},{"uid":"dd06bf3fb6565637","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/dd06bf3fb6565637","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1698628533765,"stop":1698628535474,"duration":1709}}]},"tags":[]},"source":"604aadbd97f2509a.json","parameterValues":["MertonCouncil"]}