{"uid":"ee304a93b7ab2fbb","name":"Validate Council Output [HarrogateBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"559d4a8dd1d1d170c732e9caf90ac443","time":{"start":1705797125725,"stop":1705797156660,"duration":30935},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f6f08464d60>\nrequest = <FixtureRequest for <Function test_scenario_outline[HarrogateBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6f08217090>, 'council': 'HarrogateBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <HarrogateBoroughCouncil.CouncilClass object at 0x7f6f078794d0>\npage = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100050414307', ...}\nuser_uprn = '100050414307', data = {'bins': []}\nheaders = {'accept-language': 'en-GB,en;q=0.9', 'cache-control': 'no-cache'}\nreq_data = {'uprn': '100050414307'}\nurl = 'https://secure.harrogate.gov.uk/inmyarea/Property/?uprn=100050414307'\nresponse = <Response [500]>\nsoup = \n<!DOCTYPE html>\n\n<html>\n<head>\n<meta content=\"width=device-width\" name=\"viewport\"/>\n<title>Error</title>\n</head>\n<body>\n<hgroup>\n<h1>Error.</h1>\n<h2>An error occurred while processing your request.</h2>\n</hgroup>\n</body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        data = {\"bins\": []}\n    \n        headers = {\n            \"accept-language\": \"en-GB,en;q=0.9\",\n            \"cache-control\": \"no-cache\",\n        }\n    \n        req_data = {\n            \"uprn\": user_uprn,\n        }\n    \n        url = f\"https://secure.harrogate.gov.uk/inmyarea/Property/?uprn={user_uprn}\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(url, headers=headers)\n    \n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        collections = []\n    \n        # Find section with bins in\n>       table = soup.find_all(\"table\", {\"class\": \"hbcRounds\"})[1]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/HarrogateBoroughCouncil.py:40: IndexError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f6f08464d60>\nrequest = <FixtureRequest for <Function test_scenario_outline[HarrogateBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6f08217090>, 'council': 'HarrogateBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <HarrogateBoroughCouncil.CouncilClass object at 0x7f6f078794d0>\npage = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100050414307', ...}\nuser_uprn = '100050414307', data = {'bins': []}\nheaders = {'accept-language': 'en-GB,en;q=0.9', 'cache-control': 'no-cache'}\nreq_data = {'uprn': '100050414307'}\nurl = 'https://secure.harrogate.gov.uk/inmyarea/Property/?uprn=100050414307'\nresponse = <Response [500]>\nsoup = \n<!DOCTYPE html>\n\n<html>\n<head>\n<meta content=\"width=device-width\" name=\"viewport\"/>\n<title>Error</title>\n</head>\n<body>\n<hgroup>\n<h1>Error.</h1>\n<h2>An error occurred while processing your request.</h2>\n</hgroup>\n</body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        data = {\"bins\": []}\n    \n        headers = {\n            \"accept-language\": \"en-GB,en;q=0.9\",\n            \"cache-control\": \"no-cache\",\n        }\n    \n        req_data = {\n            \"uprn\": user_uprn,\n        }\n    \n        url = f\"https://secure.harrogate.gov.uk/inmyarea/Property/?uprn={user_uprn}\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(url, headers=headers)\n    \n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        collections = []\n    \n        # Find section with bins in\n>       table = soup.find_all(\"table\", {\"class\": \"hbcRounds\"})[1]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/HarrogateBoroughCouncil.py:40: IndexError","steps":[{"name":"Given the council: HarrogateBoroughCouncil","time":{"start":1705797125725,"stop":1705797125726,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from HarrogateBoroughCouncil using None and the None is set","time":{"start":1705797125726,"stop":1705797156660,"duration":30934},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az585-104"},{"name":"thread","value":"2740-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"HarrogateBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":167,"unknown":0,"total":168},"items":[{"uid":"60b623525a17f4a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1515//#testresult/60b623525a17f4a0","status":"passed","time":{"start":1705710468563,"stop":1705710473080,"duration":4517}},{"uid":"36d0525091cd6761","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1511//#testresult/36d0525091cd6761","status":"passed","time":{"start":1705624101151,"stop":1705624103581,"duration":2430}},{"uid":"4147d18d12707941","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/4147d18d12707941","status":"passed","time":{"start":1705537680474,"stop":1705537683687,"duration":3213}},{"uid":"bf0b2be8d8784a59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/bf0b2be8d8784a59","status":"passed","time":{"start":1705451286815,"stop":1705451289073,"duration":2258}},{"uid":"4fab018ea2158a4f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1499//#testresult/4fab018ea2158a4f","status":"passed","time":{"start":1705364905225,"stop":1705364907261,"duration":2036}},{"uid":"282756e6a955c89e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1492//#testresult/282756e6a955c89e","status":"passed","time":{"start":1705295631669,"stop":1705295634162,"duration":2493}},{"uid":"fefa4368467917d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1491//#testresult/fefa4368467917d7","status":"passed","time":{"start":1705295130322,"stop":1705295133175,"duration":2853}},{"uid":"bb8129681c0e4751","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1490//#testresult/bb8129681c0e4751","status":"passed","time":{"start":1705278533045,"stop":1705278537979,"duration":4934}},{"uid":"b01b7ff79d033e26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1485//#testresult/b01b7ff79d033e26","status":"passed","time":{"start":1705192196563,"stop":1705192199057,"duration":2494}},{"uid":"d994b9e1004c97c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1484//#testresult/d994b9e1004c97c0","status":"passed","time":{"start":1705105708398,"stop":1705105711852,"duration":3454}},{"uid":"42819c50af423788","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1482//#testresult/42819c50af423788","status":"passed","time":{"start":1705019249618,"stop":1705019252562,"duration":2944}},{"uid":"da60a07f290fea5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1478//#testresult/da60a07f290fea5d","status":"passed","time":{"start":1704932827138,"stop":1704932830170,"duration":3032}},{"uid":"c043727d81d209d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1472//#testresult/c043727d81d209d","status":"passed","time":{"start":1704846440059,"stop":1704846442692,"duration":2633}},{"uid":"73e5973004a18515","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1456//#testresult/73e5973004a18515","status":"passed","time":{"start":1704760211521,"stop":1704760214548,"duration":3027}},{"uid":"fe1903eadd57cc1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1452//#testresult/fe1903eadd57cc1","status":"passed","time":{"start":1704711612434,"stop":1704711615571,"duration":3137}},{"uid":"160a907a62d76a41","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1450//#testresult/160a907a62d76a41","status":"passed","time":{"start":1704711168125,"stop":1704711171952,"duration":3827}},{"uid":"28909b3d86151fb4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1448//#testresult/28909b3d86151fb4","status":"passed","time":{"start":1704710207086,"stop":1704710209974,"duration":2888}},{"uid":"d1d3f258f410bebb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1446//#testresult/d1d3f258f410bebb","status":"passed","time":{"start":1704709680368,"stop":1704709683459,"duration":3091}},{"uid":"46bc5725f668f9cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1443//#testresult/46bc5725f668f9cc","status":"passed","time":{"start":1704704190459,"stop":1704704193821,"duration":3362}},{"uid":"bbaf82012a12886f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1441//#testresult/bbaf82012a12886f","status":"passed","time":{"start":1704673753596,"stop":1704673756083,"duration":2487}}]},"tags":[]},"source":"ee304a93b7ab2fbb.json","parameterValues":["HarrogateBoroughCouncil","None","None"]}