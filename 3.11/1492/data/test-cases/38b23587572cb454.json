{"uid":"38b23587572cb454","name":"Validate Council Output [CrawleyBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"05d23ab98d3e1d732a826a9f3e40b529","time":{"start":1705295553014,"stop":1705295587813,"duration":34799},"status":"failed","statusMessage":"ValueError: time data '' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fb240d58860>\nrequest = <FixtureRequest for <Function test_scenario_outline[CrawleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb240bd2110>, 'council': 'CrawleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CrawleyBoroughCouncil.py:49: in parse_data\n    collection_date = datetime.strptime(item.text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = '', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data '' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data '' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fb240d58860>\nrequest = <FixtureRequest for <Function test_scenario_outline[CrawleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb240bd2110>, 'council': 'CrawleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CrawleyBoroughCouncil.py:49: in parse_data\n    collection_date = datetime.strptime(item.text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = '', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data '' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: CrawleyBoroughCouncil","time":{"start":1705295553014,"stop":1705295553015,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from CrawleyBoroughCouncil using None and the None is set","time":{"start":1705295553015,"stop":1705295587813,"duration":34798},"status":"failed","statusMessage":"time data '' does not match format '%A %d %B'","statusTrace":"ValueError: time data '' does not match format '%A %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az698-536"},{"name":"thread","value":"2694-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CrawleyBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":160,"unknown":0,"total":162},"items":[{"uid":"1a5d9b38bff0fb0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1491//#testresult/1a5d9b38bff0fb0e","status":"failed","statusDetails":"ValueError: time data '' does not match format '%A %d %B'","time":{"start":1705295118426,"stop":1705295150612,"duration":32186}},{"uid":"ef5154f3037b2a8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1490//#testresult/ef5154f3037b2a8a","status":"passed","time":{"start":1705278519750,"stop":1705278522526,"duration":2776}},{"uid":"420272758818b8ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1485//#testresult/420272758818b8ef","status":"passed","time":{"start":1705192187305,"stop":1705192189358,"duration":2053}},{"uid":"3903234d58d7bdf4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1484//#testresult/3903234d58d7bdf4","status":"passed","time":{"start":1705105651039,"stop":1705105652594,"duration":1555}},{"uid":"6eaadbe0a0379db9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1482//#testresult/6eaadbe0a0379db9","status":"passed","time":{"start":1705019226507,"stop":1705019233227,"duration":6720}},{"uid":"faa5a184dc1c4b18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1478//#testresult/faa5a184dc1c4b18","status":"passed","time":{"start":1704932816963,"stop":1704932822632,"duration":5669}},{"uid":"62ec46c363ef2666","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1472//#testresult/62ec46c363ef2666","status":"passed","time":{"start":1704846439265,"stop":1704846441607,"duration":2342}},{"uid":"2de3acecd6d9016","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1456//#testresult/2de3acecd6d9016","status":"passed","time":{"start":1704760157065,"stop":1704760160329,"duration":3264}},{"uid":"e809a0ed7ce6fd0b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1452//#testresult/e809a0ed7ce6fd0b","status":"passed","time":{"start":1704711476984,"stop":1704711479683,"duration":2699}},{"uid":"df8fe46227392b24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1450//#testresult/df8fe46227392b24","status":"passed","time":{"start":1704710687969,"stop":1704710690608,"duration":2639}},{"uid":"ba8778a6fc2865df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1448//#testresult/ba8778a6fc2865df","status":"passed","time":{"start":1704710072875,"stop":1704710074628,"duration":1753}},{"uid":"e0a4bb3751cec436","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1446//#testresult/e0a4bb3751cec436","status":"passed","time":{"start":1704709546807,"stop":1704709553250,"duration":6443}},{"uid":"1ba61e02eb658c24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1443//#testresult/1ba61e02eb658c24","status":"passed","time":{"start":1704704057807,"stop":1704704060625,"duration":2818}},{"uid":"c0d9bed5dd62b7ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1441//#testresult/c0d9bed5dd62b7ca","status":"passed","time":{"start":1704673766977,"stop":1704673768837,"duration":1860}},{"uid":"931ec0126ef53a10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1426//#testresult/931ec0126ef53a10","status":"passed","time":{"start":1704615385431,"stop":1704615386734,"duration":1303}},{"uid":"39ce7a867f944a72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1423//#testresult/39ce7a867f944a72","status":"passed","time":{"start":1704614786079,"stop":1704614787804,"duration":1725}},{"uid":"fec3f572e24aa54b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1420//#testresult/fec3f572e24aa54b","status":"passed","time":{"start":1704587532639,"stop":1704587533700,"duration":1061}},{"uid":"4221fc5a74106bab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1413//#testresult/4221fc5a74106bab","status":"passed","time":{"start":1704542775863,"stop":1704542778679,"duration":2816}},{"uid":"a09e51fd9d98ed89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1408//#testresult/a09e51fd9d98ed89","status":"passed","time":{"start":1704496214741,"stop":1704496216688,"duration":1947}},{"uid":"e60eb1688d93e33b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1406//#testresult/e60eb1688d93e33b","status":"passed","time":{"start":1704453393080,"stop":1704453395203,"duration":2123}}]},"tags":[]},"source":"38b23587572cb454.json","parameterValues":["CrawleyBoroughCouncil","None","None"]}