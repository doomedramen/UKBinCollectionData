{"uid":"480ec68a5f6bc385","name":"Validate Council Output [StokeOnTrentCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"17b62d612f29f2bda9703e241b337994","time":{"start":1702862451590,"stop":1702862452222,"duration":632},"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f95f3254a40>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f95f2521690>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:64: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f95f2842d50>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\"\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:50: ConnectionAbortedError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f95f3254a40>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f95f2521690>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:64: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f95f2842d50>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\"\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:50: ConnectionAbortedError","steps":[{"name":"Given the council: StokeOnTrentCityCouncil","time":{"start":1702862451591,"stop":1702862451591,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from StokeOnTrentCityCouncil using None and the None is set","time":{"start":1702862451591,"stop":1702862452222,"duration":631},"status":"failed","statusMessage":"Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1205-714"},{"name":"thread","value":"2757-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StokeOnTrentCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":41},"items":[{"uid":"4e5258897a99746e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/4e5258897a99746e","status":"passed","time":{"start":1702860096332,"stop":1702860098317,"duration":1985}},{"uid":"99462648d2b51c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/99462648d2b51c","status":"passed","time":{"start":1702843667111,"stop":1702843668498,"duration":1387}},{"uid":"dc57a5a07889b275","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/dc57a5a07889b275","status":"passed","time":{"start":1702809496318,"stop":1702809498019,"duration":1701}},{"uid":"56e43b945e40e67f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1247//#testresult/56e43b945e40e67f","status":"passed","time":{"start":1702657353407,"stop":1702657355088,"duration":1681}},{"uid":"4f301bc5e4c358d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1248//#testresult/4f301bc5e4c358d4","status":"passed","time":{"start":1702657349317,"stop":1702657350677,"duration":1360}},{"uid":"b95c20e487848eff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1244//#testresult/b95c20e487848eff","status":"passed","time":{"start":1702603281471,"stop":1702603282942,"duration":1471}},{"uid":"530a13f65e60ab59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1243//#testresult/530a13f65e60ab59","status":"passed","time":{"start":1702540160250,"stop":1702540162758,"duration":2508}},{"uid":"715ade98853c756f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1241//#testresult/715ade98853c756f","status":"passed","time":{"start":1702516826267,"stop":1702516827459,"duration":1192}},{"uid":"be354b50cf67801b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1238//#testresult/be354b50cf67801b","status":"passed","time":{"start":1702447674306,"stop":1702447675659,"duration":1353}},{"uid":"87dad8680f26ef79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1236//#testresult/87dad8680f26ef79","status":"passed","time":{"start":1702430430934,"stop":1702430432600,"duration":1666}},{"uid":"e6b3f92056efa2f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1232//#testresult/e6b3f92056efa2f3","status":"passed","time":{"start":1702366565000,"stop":1702366566515,"duration":1515}},{"uid":"e8ebe0a5baf5a43a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1231//#testresult/e8ebe0a5baf5a43a","status":"passed","time":{"start":1702344032956,"stop":1702344035541,"duration":2585}},{"uid":"6217442151be8f6f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1229//#testresult/6217442151be8f6f","status":"passed","time":{"start":1702257617743,"stop":1702257618912,"duration":1169}},{"uid":"a9d5e81fe7c612f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1228//#testresult/a9d5e81fe7c612f9","status":"passed","time":{"start":1702171569796,"stop":1702171571346,"duration":1550}},{"uid":"adfa93edc084e3d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1227//#testresult/adfa93edc084e3d6","status":"passed","time":{"start":1702084739489,"stop":1702084742274,"duration":2785}},{"uid":"240e8bb301242e95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1225//#testresult/240e8bb301242e95","status":"passed","time":{"start":1702066808767,"stop":1702066810493,"duration":1726}},{"uid":"8e591650e952694a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1222//#testresult/8e591650e952694a","status":"passed","time":{"start":1702054466640,"stop":1702054467993,"duration":1353}},{"uid":"707f1166a941dddb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1223//#testresult/707f1166a941dddb","status":"passed","time":{"start":1702054500359,"stop":1702054501445,"duration":1086}},{"uid":"61f043fc43f1a525","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1219//#testresult/61f043fc43f1a525","status":"passed","time":{"start":1701998487011,"stop":1701998488845,"duration":1834}},{"uid":"e70184cf771e0c95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1218//#testresult/e70184cf771e0c95","status":"passed","time":{"start":1701990449567,"stop":1701990451448,"duration":1881}}]},"tags":[]},"source":"480ec68a5f6bc385.json","parameterValues":["StokeOnTrentCityCouncil","None","None"]}