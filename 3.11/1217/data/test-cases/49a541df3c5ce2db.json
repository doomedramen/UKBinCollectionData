{"uid":"49a541df3c5ce2db","name":"Validate Council Output [ValeofGlamorganCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9cf2d3433b0a6f80c8b05ae26d0f9f5e","time":{"start":1701990426045,"stop":1701990426865,"duration":820},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f80201a45e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f801ffed3d0>, 'council': 'ValeofGlamorganCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:53: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f8034480750>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f80201a45e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f801ffed3d0>, 'council': 'ValeofGlamorganCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:53: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f8034480750>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: ValeofGlamorganCouncil","time":{"start":1701990426045,"stop":1701990426045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from ValeofGlamorganCouncil using None and the None is set","time":{"start":1701990426045,"stop":1701990426865,"duration":820},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1432-321"},{"name":"thread","value":"2722-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ValeofGlamorganCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":49,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":62},"items":[{"uid":"579de1d3cde0571b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1215//#testresult/579de1d3cde0571b","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701943011185,"stop":1701943012482,"duration":1297}},{"uid":"62e988d23dc8dcf4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1214//#testresult/62e988d23dc8dcf4","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701936628129,"stop":1701936629180,"duration":1051}},{"uid":"de80f74dd8e77284","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1213//#testresult/de80f74dd8e77284","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701936586808,"stop":1701936587546,"duration":738}},{"uid":"e8e8b56cd0843b5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1211//#testresult/e8e8b56cd0843b5e","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701912079643,"stop":1701912081053,"duration":1410}},{"uid":"1518281440a43b7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1209//#testresult/1518281440a43b7e","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701904942831,"stop":1701904943629,"duration":798}},{"uid":"927078be1a804d10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1201//#testresult/927078be1a804d10","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701882718010,"stop":1701882719566,"duration":1556}},{"uid":"a61201af1369500a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1202//#testresult/a61201af1369500a","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701882644057,"stop":1701882645965,"duration":1908}},{"uid":"d7f1749321c5b0d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1199//#testresult/d7f1749321c5b0d5","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701825627794,"stop":1701825628874,"duration":1080}},{"uid":"732812ddfdff56c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1198//#testresult/732812ddfdff56c0","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701795665883,"stop":1701795666819,"duration":936}},{"uid":"27dd65dc6a6d4195","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1197//#testresult/27dd65dc6a6d4195","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701795590378,"stop":1701795591648,"duration":1270}},{"uid":"b5e42e4342ede077","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1193//#testresult/b5e42e4342ede077","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701758608032,"stop":1701758609257,"duration":1225}},{"uid":"6d160f1eca35a0cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1192//#testresult/6d160f1eca35a0cc","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701758615734,"stop":1701758616608,"duration":874}},{"uid":"a0a07eaa1f53c1c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1191//#testresult/a0a07eaa1f53c1c4","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701739290503,"stop":1701739291529,"duration":1026}},{"uid":"7d4e8b865ff3f801","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1187//#testresult/7d4e8b865ff3f801","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701714459213,"stop":1701714460533,"duration":1320}},{"uid":"facb5bb33b68a2c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1184//#testresult/facb5bb33b68a2c7","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701652856566,"stop":1701652857349,"duration":783}},{"uid":"7decec364d16bd14","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1183//#testresult/7decec364d16bd14","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701566730323,"stop":1701566731832,"duration":1509}},{"uid":"6e015e31887f8c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1182//#testresult/6e015e31887f8c9","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701479848634,"stop":1701479849684,"duration":1050}},{"uid":"bd1d2fd6b4b5bd68","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1179//#testresult/bd1d2fd6b4b5bd68","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f7972be7f10>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1701419110446,"stop":1701419240426,"duration":129980}},{"uid":"d9d08086537e84ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1181//#testresult/d9d08086537e84ff","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701419157376,"stop":1701419158724,"duration":1348}},{"uid":"abfbcdd75114fe57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1180//#testresult/abfbcdd75114fe57","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1701419111563,"stop":1701419112314,"duration":751}}]},"tags":[]},"source":"49a541df3c5ce2db.json","parameterValues":["ValeofGlamorganCouncil","None","None"]}