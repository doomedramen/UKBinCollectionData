{"uid":"8fde355cff3d8b78","name":"Validate Council Output [ValeofGlamorganCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9cf2d3433b0a6f80c8b05ae26d0f9f5e","time":{"start":1704303822283,"stop":1704303823505,"duration":1222},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f3874843d80>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3873901f90>, 'council': 'ValeofGlamorganCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f38886c4850>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f3874843d80>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3873901f90>, 'council': 'ValeofGlamorganCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f38886c4850>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: ValeofGlamorganCouncil","time":{"start":1704303822283,"stop":1704303822283,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from ValeofGlamorganCouncil using None and the None is set","time":{"start":1704303822283,"stop":1704303823505,"duration":1222},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az801-135"},{"name":"thread","value":"2735-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ValeofGlamorganCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":111,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":124},"items":[{"uid":"77f290c41f9d5a4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1352//#testresult/77f290c41f9d5a4d","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704301547223,"stop":1704301548543,"duration":1320}},{"uid":"ab1832f861cba797","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1349//#testresult/ab1832f861cba797","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704244907123,"stop":1704244908459,"duration":1336}},{"uid":"2c1a9389a1679911","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1348//#testresult/2c1a9389a1679911","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704180519541,"stop":1704180521536,"duration":1995}},{"uid":"fdd346edc66ba9c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1346//#testresult/fdd346edc66ba9c1","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704158459543,"stop":1704158461015,"duration":1472}},{"uid":"ce023ab32e6089f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1345//#testresult/ce023ab32e6089f8","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704114774859,"stop":1704114776046,"duration":1187}},{"uid":"12faa7b591520761","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1343//#testresult/12faa7b591520761","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704113928990,"stop":1704113930192,"duration":1202}},{"uid":"2d6df4186cea131b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1342//#testresult/2d6df4186cea131b","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704113809101,"stop":1704113810171,"duration":1070}},{"uid":"b5f18a34dff22c75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1341//#testresult/b5f18a34dff22c75","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704112413880,"stop":1704112414696,"duration":816}},{"uid":"93cf9805c3cec2f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1339//#testresult/93cf9805c3cec2f9","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704112306307,"stop":1704112307677,"duration":1370}},{"uid":"6e56bca80bbcbd12","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1336//#testresult/6e56bca80bbcbd12","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704112091647,"stop":1704112093506,"duration":1859}},{"uid":"5752cbc652b0e1c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1337//#testresult/5752cbc652b0e1c6","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704112043135,"stop":1704112044683,"duration":1548}},{"uid":"300aa787e4749da6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1335//#testresult/300aa787e4749da6","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704111671496,"stop":1704111672301,"duration":805}},{"uid":"8860ac2884eb58f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1332//#testresult/8860ac2884eb58f6","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704111526447,"stop":1704111527676,"duration":1229}},{"uid":"4e1f6163eb0d877e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1330//#testresult/4e1f6163eb0d877e","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704100185629,"stop":1704100186830,"duration":1201}},{"uid":"fa94b1603d75c37a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1329//#testresult/fa94b1603d75c37a","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704072550416,"stop":1704072551186,"duration":770}},{"uid":"d4222e3bf27e830e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1327//#testresult/d4222e3bf27e830e","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704050652102,"stop":1704050653449,"duration":1347}},{"uid":"c67ab8a343fb9e2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1325//#testresult/c67ab8a343fb9e2b","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1704044083383,"stop":1704044084121,"duration":738}},{"uid":"ea1f03145e855adc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1320//#testresult/ea1f03145e855adc","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1703985997382,"stop":1703985998479,"duration":1097}},{"uid":"3ee6d14ad71fb050","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1316//#testresult/3ee6d14ad71fb050","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1703899138610,"stop":1703899139356,"duration":746}},{"uid":"36f20256942e5f4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1314//#testresult/36f20256942e5f4a","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1703853627402,"stop":1703853628966,"duration":1564}}]},"tags":[]},"source":"8fde355cff3d8b78.json","parameterValues":["ValeofGlamorganCouncil","None","None"]}