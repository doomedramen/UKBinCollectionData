{"uid":"3b3ac4a253745fba","name":"Validate Council Output [BedfordBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4d48486dc2c0a9c252d5ac44f0d62a3d","time":{"start":1726877056954,"stop":1726877117820,"duration":60866},"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7ff6338ef6a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7ff633771390>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7ff634531ad0>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7ff6338ef6a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7ff633771390>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7ff634531ad0>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","steps":[{"name":"Given the council","time":{"start":1726877056954,"stop":1726877056955,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1726877056955,"stop":1726877117820,"duration":60865},"status":"failed","statusMessage":"Could not get latest data!","statusTrace":"ConnectionError: Could not get latest data!\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"42180defe1273971","name":"stdout","source":"42180defe1273971.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1208-590"},{"name":"thread","value":"2752-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BedfordBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":141,"unknown":0,"total":146},"items":[{"uid":"b2045fe3f9f42b2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2123//#testresult/b2045fe3f9f42b2a","status":"passed","time":{"start":1726790658250,"stop":1726790663869,"duration":5619}},{"uid":"dd3c1ac9097378fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2122//#testresult/dd3c1ac9097378fd","status":"passed","time":{"start":1726704308864,"stop":1726704313246,"duration":4382}},{"uid":"8ecfbd77ae8df51a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2121//#testresult/8ecfbd77ae8df51a","status":"passed","time":{"start":1726617854859,"stop":1726617859687,"duration":4828}},{"uid":"4945ba2058d6ff22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2120//#testresult/4945ba2058d6ff22","status":"passed","time":{"start":1726531489767,"stop":1726531495732,"duration":5965}},{"uid":"84a3d8ec18747e7d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2116//#testresult/84a3d8ec18747e7d","status":"passed","time":{"start":1726445039491,"stop":1726445042781,"duration":3290}},{"uid":"bae1e8784da5d209","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2115//#testresult/bae1e8784da5d209","status":"passed","time":{"start":1726358604559,"stop":1726358620562,"duration":16003}},{"uid":"7248daf7d5b3d12e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2114//#testresult/7248daf7d5b3d12e","status":"passed","time":{"start":1726272224092,"stop":1726272229707,"duration":5615}},{"uid":"c324707324ae763d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2113//#testresult/c324707324ae763d","status":"passed","time":{"start":1726185868771,"stop":1726185871794,"duration":3023}},{"uid":"20246b80988e08db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2112//#testresult/20246b80988e08db","status":"passed","time":{"start":1726099435964,"stop":1726099439099,"duration":3135}},{"uid":"4fca95eb7624238d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2111//#testresult/4fca95eb7624238d","status":"passed","time":{"start":1726013036957,"stop":1726013039044,"duration":2087}},{"uid":"113843484a9ddbd6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2109//#testresult/113843484a9ddbd6","status":"passed","time":{"start":1725954869036,"stop":1725954872773,"duration":3737}},{"uid":"ac90e0fa0e3b5d14","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2107//#testresult/ac90e0fa0e3b5d14","status":"passed","time":{"start":1725926617152,"stop":1725926620663,"duration":3511}},{"uid":"ae238053675e04e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2095//#testresult/ae238053675e04e1","status":"passed","time":{"start":1725840232256,"stop":1725840244029,"duration":11773}},{"uid":"9139affd0983c630","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2093//#testresult/9139affd0983c630","status":"passed","time":{"start":1725753803642,"stop":1725753807803,"duration":4161}},{"uid":"c86bf3339594e89e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2092//#testresult/c86bf3339594e89e","status":"passed","time":{"start":1725667431957,"stop":1725667438308,"duration":6351}},{"uid":"5ff7a73af11b791b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2088//#testresult/5ff7a73af11b791b","status":"passed","time":{"start":1725581019649,"stop":1725581023230,"duration":3581}},{"uid":"353149d94667cad0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2086//#testresult/353149d94667cad0","status":"passed","time":{"start":1725568882063,"stop":1725568883981,"duration":1918}},{"uid":"783ff5e5960c86d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2083//#testresult/783ff5e5960c86d2","status":"passed","time":{"start":1725494668650,"stop":1725494670658,"duration":2008}},{"uid":"8eabd8709bfa55f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/8eabd8709bfa55f0","status":"passed","time":{"start":1725429788115,"stop":1725429790540,"duration":2425}},{"uid":"83166e6e5be4e254","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/83166e6e5be4e254","status":"passed","time":{"start":1725408324130,"stop":1725408327084,"duration":2954}}]},"tags":[]},"source":"3b3ac4a253745fba.json","parameterValues":["BedfordBoroughCouncil"]}