{"uid":"8c7274904f2b9f59","name":"Validate Council Output [WealdenDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b3ddf98c8383031d63a6bd27b361f868","time":{"start":1713832413666,"stop":1713832415157,"duration":1491},"status":"failed","statusMessage":"TypeError: 'int' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7f0de85b4ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0de843a610>, 'council': 'WealdenDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WealdenDistrictCouncil.CouncilClass object at 0x7f0de7857b10>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '10033413624', ...}\nuser_uprn = '10033413624'\nheaders = {'accept': '*/*', 'accept-language': 'en-GB,en;q=0.7', 'authority': 'www.wealden.gov.uk', 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', ...}\ndata = {'action': 'wealden_get_collections_for_uprn', 'uprn': '10033413624'}\nresponse = <Response [400]>, json_data = 0\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"authority\": \"www.wealden.gov.uk\",\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en-GB,en;q=0.7\",\n            \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n            # Requests sorts cookies= alphabetically\n            # 'cookie': 'ARRAffinity=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872; ARRAffinitySameSite=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872',\n            \"origin\": \"https://www.wealden.gov.uk\",\n            \"referer\": \"https://www.wealden.gov.uk/recycling-and-waste/bin-search/?uprn=10033413624\",\n            \"sec-fetch-dest\": \"empty\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"sec-gpc\": \"1\",\n            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"x-requested-with\": \"XMLHttpRequest\",\n        }\n    \n        data = {\n            \"action\": \"wealden_get_collections_for_uprn\",\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(\n            \"https://www.wealden.gov.uk/wp-admin/admin-ajax.php\",\n            headers=headers,\n            data=data,\n        )\n        json_data = json.loads(response.text)\n    \n>       if json_data[\"status\"] != \"success\":\nE       TypeError: 'int' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/WealdenDistrictCouncil.py:51: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"TypeError: 'int' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7f0de85b4ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0de843a610>, 'council': 'WealdenDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WealdenDistrictCouncil.CouncilClass object at 0x7f0de7857b10>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '10033413624', ...}\nuser_uprn = '10033413624'\nheaders = {'accept': '*/*', 'accept-language': 'en-GB,en;q=0.7', 'authority': 'www.wealden.gov.uk', 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', ...}\ndata = {'action': 'wealden_get_collections_for_uprn', 'uprn': '10033413624'}\nresponse = <Response [400]>, json_data = 0\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"authority\": \"www.wealden.gov.uk\",\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en-GB,en;q=0.7\",\n            \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n            # Requests sorts cookies= alphabetically\n            # 'cookie': 'ARRAffinity=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872; ARRAffinitySameSite=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872',\n            \"origin\": \"https://www.wealden.gov.uk\",\n            \"referer\": \"https://www.wealden.gov.uk/recycling-and-waste/bin-search/?uprn=10033413624\",\n            \"sec-fetch-dest\": \"empty\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"sec-gpc\": \"1\",\n            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"x-requested-with\": \"XMLHttpRequest\",\n        }\n    \n        data = {\n            \"action\": \"wealden_get_collections_for_uprn\",\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(\n            \"https://www.wealden.gov.uk/wp-admin/admin-ajax.php\",\n            headers=headers,\n            data=data,\n        )\n        json_data = json.loads(response.text)\n    \n>       if json_data[\"status\"] != \"success\":\nE       TypeError: 'int' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/WealdenDistrictCouncil.py:51: TypeError","steps":[{"name":"Given the council: WealdenDistrictCouncil","time":{"start":1713832413666,"stop":1713832413666,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WealdenDistrictCouncil using None and the None is set","time":{"start":1713832413666,"stop":1713832415157,"duration":1491},"status":"failed","statusMessage":"'int' object is not subscriptable","statusTrace":"TypeError: 'int' object is not subscriptable\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az883-761"},{"name":"thread","value":"2795-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WealdenDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":31,"broken":0,"skipped":0,"passed":229,"unknown":0,"total":260},"items":[{"uid":"7d6ef7fec87f4d9c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1708//#testresult/7d6ef7fec87f4d9c","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713745968316,"stop":1713745969719,"duration":1403}},{"uid":"9fb9b9b32e000939","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1707//#testresult/9fb9b9b32e000939","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713659611375,"stop":1713659612642,"duration":1267}},{"uid":"845bdad58307f0a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1706//#testresult/845bdad58307f0a0","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713573049405,"stop":1713573050833,"duration":1428}},{"uid":"bbe30479bf115f0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1702//#testresult/bbe30479bf115f0a","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713486710262,"stop":1713486711718,"duration":1456}},{"uid":"ed501d01922a9619","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1698//#testresult/ed501d01922a9619","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713400249066,"stop":1713400250314,"duration":1248}},{"uid":"a190395cf21c5596","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1697//#testresult/a190395cf21c5596","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713313856244,"stop":1713313857283,"duration":1039}},{"uid":"5721a628c8fb7da7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1696//#testresult/5721a628c8fb7da7","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713252911549,"stop":1713252912786,"duration":1237}},{"uid":"11d3fb07344a4659","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1695//#testresult/11d3fb07344a4659","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713227397605,"stop":1713227399023,"duration":1418}},{"uid":"e6f411ff72970957","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1692//#testresult/e6f411ff72970957","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713207901158,"stop":1713207902338,"duration":1180}},{"uid":"dbfd05b13142ceb2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1683//#testresult/dbfd05b13142ceb2","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713188434115,"stop":1713188435381,"duration":1266}},{"uid":"bc3b8e555f1a7d04","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1682//#testresult/bc3b8e555f1a7d04","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713149956643,"stop":1713149957839,"duration":1196}},{"uid":"dddc8f89fb508ff5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1681//#testresult/dddc8f89fb508ff5","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1713053464368,"stop":1713053465898,"duration":1530}},{"uid":"aefa8fe6f74d65f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1677//#testresult/aefa8fe6f74d65f5","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712968151168,"stop":1712968152325,"duration":1157}},{"uid":"a60309cba67d1b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1675//#testresult/a60309cba67d1b0","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712881946703,"stop":1712881947916,"duration":1213}},{"uid":"a922e9f080ea5176","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1674//#testresult/a922e9f080ea5176","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712795647918,"stop":1712795649320,"duration":1402}},{"uid":"4dd1517d0683a555","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1673//#testresult/4dd1517d0683a555","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712710542747,"stop":1712710543891,"duration":1144}},{"uid":"2e6ce86dd5cada11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1671//#testresult/2e6ce86dd5cada11","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712700536125,"stop":1712700537369,"duration":1244}},{"uid":"6f97a421a36e6f49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1668//#testresult/6f97a421a36e6f49","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712622696816,"stop":1712622698400,"duration":1584}},{"uid":"49341ecd8aae6bd5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1667//#testresult/49341ecd8aae6bd5","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712536241200,"stop":1712536242457,"duration":1257}},{"uid":"d9fe340229099b34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1666//#testresult/d9fe340229099b34","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712450135651,"stop":1712450136906,"duration":1255}}]},"tags":[]},"source":"8c7274904f2b9f59.json","parameterValues":["WealdenDistrictCouncil","None","None"]}