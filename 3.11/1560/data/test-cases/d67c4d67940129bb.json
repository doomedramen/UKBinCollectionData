{"uid":"d67c4d67940129bb","name":"Validate Council Output [NottinghamCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"10866f1748aa8c1e3efd6f525dda6e8f","time":{"start":1707784106986,"stop":1707784167942,"duration":60956},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f16a9d5c720>\nrequest = <FixtureRequest for <Function test_scenario_outline[NottinghamCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f16a8c58cd0>, 'council': 'NottinghamCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NottinghamCityCouncil.py:21: in parse_data\n    json_data = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f16bd9987d0>\ns = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\\r\\n<htm...source you are looking for, and it cannot be displayed.</h3>\\r\\n </fieldset></div>\\r\\n</div>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f16a9d5c720>\nrequest = <FixtureRequest for <Function test_scenario_outline[NottinghamCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f16a8c58cd0>, 'council': 'NottinghamCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NottinghamCityCouncil.py:21: in parse_data\n    json_data = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f16bd9987d0>\ns = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\\r\\n<htm...source you are looking for, and it cannot be displayed.</h3>\\r\\n </fieldset></div>\\r\\n</div>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NottinghamCityCouncil","time":{"start":1707784106986,"stop":1707784106986,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NottinghamCityCouncil using None and the None is set","time":{"start":1707784106986,"stop":1707784167942,"duration":60956},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1200-588"},{"name":"thread","value":"2739-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NottinghamCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":69,"unknown":0,"total":70},"items":[{"uid":"76bc96dd7cc88366","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1559//#testresult/76bc96dd7cc88366","status":"passed","time":{"start":1707697724595,"stop":1707697735283,"duration":10688}},{"uid":"62bbb3bf1159272d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1556//#testresult/62bbb3bf1159272d","status":"passed","time":{"start":1707611423010,"stop":1707611441195,"duration":18185}},{"uid":"dd44feb075b68a22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1554//#testresult/dd44feb075b68a22","status":"passed","time":{"start":1707524792247,"stop":1707524815829,"duration":23582}},{"uid":"3bfcff01c31f66a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1553//#testresult/3bfcff01c31f66a","status":"passed","time":{"start":1707438442156,"stop":1707438449878,"duration":7722}},{"uid":"b4fc4b4352f2099","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1552//#testresult/b4fc4b4352f2099","status":"passed","time":{"start":1707352056919,"stop":1707352065529,"duration":8610}},{"uid":"fb094860f32d048b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1551//#testresult/fb094860f32d048b","status":"passed","time":{"start":1707265584477,"stop":1707265589815,"duration":5338}},{"uid":"6fe5ea544216833","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1549//#testresult/6fe5ea544216833","status":"passed","time":{"start":1707179252585,"stop":1707179262300,"duration":9715}},{"uid":"def71288ce76c313","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1548//#testresult/def71288ce76c313","status":"passed","time":{"start":1707092993040,"stop":1707092998339,"duration":5299}},{"uid":"f88fa5b1a39694c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1547//#testresult/f88fa5b1a39694c6","status":"passed","time":{"start":1707006663535,"stop":1707006673667,"duration":10132}},{"uid":"2db6abef85d48606","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1545//#testresult/2db6abef85d48606","status":"passed","time":{"start":1706941948318,"stop":1706941950241,"duration":1923}},{"uid":"db1dcff86b521759","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1544//#testresult/db1dcff86b521759","status":"passed","time":{"start":1706939039849,"stop":1706939041918,"duration":2069}},{"uid":"8ceb3a1d65cbfcb7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1542//#testresult/8ceb3a1d65cbfcb7","status":"passed","time":{"start":1706938526150,"stop":1706938528060,"duration":1910}},{"uid":"df16bfc02f6f0dd3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1541//#testresult/df16bfc02f6f0dd3","status":"passed","time":{"start":1706920080194,"stop":1706920091898,"duration":11704}},{"uid":"f685db1604c83e8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1540//#testresult/f685db1604c83e8b","status":"passed","time":{"start":1706833625789,"stop":1706833635086,"duration":9297}},{"uid":"20fad4b72f70da7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1538//#testresult/20fad4b72f70da7b","status":"passed","time":{"start":1706747344145,"stop":1706747349843,"duration":5698}},{"uid":"c1c353a8f4eedbd6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1537//#testresult/c1c353a8f4eedbd6","status":"passed","time":{"start":1706660904840,"stop":1706660912719,"duration":7879}},{"uid":"2af67e4501a92fa9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1535//#testresult/2af67e4501a92fa9","status":"passed","time":{"start":1706574417190,"stop":1706574424453,"duration":7263}},{"uid":"b2424896ecf64eae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1534//#testresult/b2424896ecf64eae","status":"passed","time":{"start":1706488110471,"stop":1706488116465,"duration":5994}},{"uid":"1ff2f80c9b45d0ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1531//#testresult/1ff2f80c9b45d0ed","status":"passed","time":{"start":1706401802102,"stop":1706401824035,"duration":21933}},{"uid":"f69ccccb72c41cdf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1529//#testresult/f69ccccb72c41cdf","status":"passed","time":{"start":1706315233031,"stop":1706315249416,"duration":16385}}]},"tags":[]},"source":"d67c4d67940129bb.json","parameterValues":["NottinghamCityCouncil","None","None"]}