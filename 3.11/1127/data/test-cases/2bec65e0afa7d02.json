{"uid":"2bec65e0afa7d02","name":"Validate Council Output [ChelmsfordCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a36e1942544dc83c86694d4dbc2f9ff3","time":{"start":1699838304352,"stop":1699838326922,"duration":22570},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fec360e0220>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChelmsfordCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fec2266c810>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fec2266c810>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fec360e0220>\nrequest = <FixtureRequest for <Function test_scenario_outline[ChelmsfordCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fec2266c810>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fec2266c810>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: ChelmsfordCityCouncil","time":{"start":1699838304352,"stop":1699838304353,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from ChelmsfordCityCouncil using None and the None is set","time":{"start":1699838304353,"stop":1699838326920,"duration":22567},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699838326920,"stop":1699838326920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699838326920,"stop":1699838326922,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az585-782"},{"name":"thread","value":"2844-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ChelmsfordCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":13},"items":[{"uid":"7411411206561a96","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1126//#testresult/7411411206561a96","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699752075523,"stop":1699752276707,"duration":201184}},{"uid":"9dc79a102d3abaa4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/9dc79a102d3abaa4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699668896354,"stop":1699668918791,"duration":22437}},{"uid":"8157b4e84128f8a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/8157b4e84128f8a4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699578919048,"stop":1699578941251,"duration":22203}},{"uid":"142fc5b661029db2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/142fc5b661029db2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699492592509,"stop":1699492613936,"duration":21427}},{"uid":"b5c87ad1aa093c71","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/b5c87ad1aa093c71","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699481267564,"stop":1699481277093,"duration":9529}},{"uid":"61a57cc86ff8de6d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/61a57cc86ff8de6d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699481290984,"stop":1699481300163,"duration":9179}},{"uid":"1464c1ce058b988c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/1464c1ce058b988c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699445056959,"stop":1699445065499,"duration":8540}},{"uid":"83beb385e4b40982","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1115//#testresult/83beb385e4b40982","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699406129258,"stop":1699406137749,"duration":8491}},{"uid":"339c75a17215db97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1114//#testresult/339c75a17215db97","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699319806269,"stop":1699319827047,"duration":20778}},{"uid":"553f465ef5427fda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1113//#testresult/553f465ef5427fda","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699233475524,"stop":1699233496414,"duration":20890}},{"uid":"a135276b85f3947e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1111//#testresult/a135276b85f3947e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699170665613,"stop":1699170674567,"duration":8954}},{"uid":"fa078da493b89766","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1112//#testresult/fa078da493b89766","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699170680023,"stop":1699170688469,"duration":8446}}]},"tags":[]},"source":"2bec65e0afa7d02.json","parameterValues":["ChelmsfordCityCouncil","None","None"]}