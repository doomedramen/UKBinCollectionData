{"uid":"d0cf090a5d5980f5","name":"Validate Council Output [BexleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b14d94c00a7a02b15ede5862fe9627b6","time":{"start":1718670530649,"stop":1718670570241,"duration":39592},"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6bbb2a4cc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f6bbb31f150>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6bbb2a4cc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f6bbb31f150>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council","time":{"start":1718670530650,"stop":1718670530650,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1718670530651,"stop":1718670570241,"duration":39590},"status":"failed","statusMessage":"time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"ValueError: time data 'Being collected today' does not match format '%A %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8462c8c2126e1d33","name":"stdout","source":"8462c8c2126e1d33.txt","type":"text/plain","size":126}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az700-575"},{"name":"thread","value":"2716-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":139,"broken":0,"skipped":0,"passed":82,"unknown":0,"total":221},"items":[{"uid":"d165afe5a004a38d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1945//#testresult/d165afe5a004a38d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55eb2de33e9a <unknown>\n#1 0x55eb2db1d45c <unknown>\n#2 0x55eb2db695b5 <unknown>\n#3 0x55eb2db69671 <unknown>\n#4 0x55eb2dbadf14 <unknown>\n#5 0x55eb2db8c4dd <unknown>\n#6 0x55eb2dbab2cc <unknown>\n#7 0x55eb2db8c253 <unknown>\n#8 0x55eb2db5c1c7 <unknown>\n#9 0x55eb2db5cb3e <unknown>\n#10 0x55eb2ddfa2db <unknown>\n#11 0x55eb2ddfe387 <unknown>\n#12 0x55eb2dde6e0e <unknown>\n#13 0x55eb2ddfee52 <unknown>\n#14 0x55eb2ddcb7af <unknown>\n#15 0x55eb2de23188 <unknown>\n#16 0x55eb2de2335b <unknown>\n#17 0x55eb2de32fcc <unknown>\n#18 0x7fa38e7d6ac3 <unknown>","time":{"start":1718584234831,"stop":1718584340218,"duration":105387}},{"uid":"10435da350c3310f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1944//#testresult/10435da350c3310f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x563526cd5e9a <unknown>\n#1 0x5635269bf45c <unknown>\n#2 0x563526a0b5b5 <unknown>\n#3 0x563526a0b671 <unknown>\n#4 0x563526a4ff14 <unknown>\n#5 0x563526a2e4dd <unknown>\n#6 0x563526a4d2cc <unknown>\n#7 0x563526a2e253 <unknown>\n#8 0x5635269fe1c7 <unknown>\n#9 0x5635269feb3e <unknown>\n#10 0x563526c9c2db <unknown>\n#11 0x563526ca0387 <unknown>\n#12 0x563526c88e0e <unknown>\n#13 0x563526ca0e52 <unknown>\n#14 0x563526c6d7af <unknown>\n#15 0x563526cc5188 <unknown>\n#16 0x563526cc535b <unknown>\n#17 0x563526cd4fcc <unknown>\n#18 0x7f62c0101ac3 <unknown>","time":{"start":1718497884433,"stop":1718497989158,"duration":104725}},{"uid":"e1ef328b13b00e6a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1943//#testresult/e1ef328b13b00e6a","status":"passed","time":{"start":1718411300292,"stop":1718411341547,"duration":41255}},{"uid":"d5e60c41d6e5ceaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1942//#testresult/d5e60c41d6e5ceaf","status":"passed","time":{"start":1718324876427,"stop":1718324921531,"duration":45104}},{"uid":"56a0ab7d213df662","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1939//#testresult/56a0ab7d213df662","status":"passed","time":{"start":1718238492117,"stop":1718238533101,"duration":40984}},{"uid":"8bd54f2333714683","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1938//#testresult/8bd54f2333714683","status":"passed","time":{"start":1718152106453,"stop":1718152147864,"duration":41411}},{"uid":"bba742f56bd515a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1937//#testresult/bba742f56bd515a6","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1718065711710,"stop":1718065755898,"duration":44188}},{"uid":"7e702923165ee2a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1936//#testresult/7e702923165ee2a0","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557a50d25e9a <unknown>\n#1 0x557a50a0f45c <unknown>\n#2 0x557a50a5b5b5 <unknown>\n#3 0x557a50a5b671 <unknown>\n#4 0x557a50a9ff14 <unknown>\n#5 0x557a50a7e4dd <unknown>\n#6 0x557a50a9d2cc <unknown>\n#7 0x557a50a7e253 <unknown>\n#8 0x557a50a4e1c7 <unknown>\n#9 0x557a50a4eb3e <unknown>\n#10 0x557a50cec2db <unknown>\n#11 0x557a50cf0387 <unknown>\n#12 0x557a50cd8e0e <unknown>\n#13 0x557a50cf0e52 <unknown>\n#14 0x557a50cbd7af <unknown>\n#15 0x557a50d15188 <unknown>\n#16 0x557a50d1535b <unknown>\n#17 0x557a50d24fcc <unknown>\n#18 0x7f6a19f97ac3 <unknown>","time":{"start":1717979372569,"stop":1717979460622,"duration":88053}},{"uid":"f17b9ddd6ef97a7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1934//#testresult/f17b9ddd6ef97a7e","status":"passed","time":{"start":1717893120925,"stop":1717893158162,"duration":37237}},{"uid":"7ace50656757c0d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1933//#testresult/7ace50656757c0d9","status":"passed","time":{"start":1717806513558,"stop":1717806545351,"duration":31793}},{"uid":"8527f41c1e52f4f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1932//#testresult/8527f41c1e52f4f8","status":"passed","time":{"start":1717720119383,"stop":1717720159006,"duration":39623}},{"uid":"50f1e4b4b3a1ef6e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1927//#testresult/50f1e4b4b3a1ef6e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55eac459ce9a <unknown>\n#1 0x55eac428645c <unknown>\n#2 0x55eac42d25b5 <unknown>\n#3 0x55eac42d2671 <unknown>\n#4 0x55eac4316f14 <unknown>\n#5 0x55eac42f54dd <unknown>\n#6 0x55eac43142cc <unknown>\n#7 0x55eac42f5253 <unknown>\n#8 0x55eac42c51c7 <unknown>\n#9 0x55eac42c5b3e <unknown>\n#10 0x55eac45632db <unknown>\n#11 0x55eac4567387 <unknown>\n#12 0x55eac454fe0e <unknown>\n#13 0x55eac4567e52 <unknown>\n#14 0x55eac45347af <unknown>\n#15 0x55eac458c188 <unknown>\n#16 0x55eac458c35b <unknown>\n#17 0x55eac459bfcc <unknown>\n#18 0x7f5e2499dac3 <unknown>","time":{"start":1717633676777,"stop":1717633766545,"duration":89768}},{"uid":"e79eaff57885269f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1924//#testresult/e79eaff57885269f","status":"passed","time":{"start":1717547328310,"stop":1717547363493,"duration":35183}},{"uid":"f47487eb3f8988f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1923//#testresult/f47487eb3f8988f0","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1717460870441,"stop":1717460915982,"duration":45541}},{"uid":"7e35008f0068e102","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1921//#testresult/7e35008f0068e102","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55bc39c76e9a <unknown>\n#1 0x55bc3996045c <unknown>\n#2 0x55bc399ac5b5 <unknown>\n#3 0x55bc399ac671 <unknown>\n#4 0x55bc399f0f14 <unknown>\n#5 0x55bc399cf4dd <unknown>\n#6 0x55bc399ee2cc <unknown>\n#7 0x55bc399cf253 <unknown>\n#8 0x55bc3999f1c7 <unknown>\n#9 0x55bc3999fb3e <unknown>\n#10 0x55bc39c3d2db <unknown>\n#11 0x55bc39c41387 <unknown>\n#12 0x55bc39c29e0e <unknown>\n#13 0x55bc39c41e52 <unknown>\n#14 0x55bc39c0e7af <unknown>\n#15 0x55bc39c66188 <unknown>\n#16 0x55bc39c6635b <unknown>\n#17 0x55bc39c75fcc <unknown>\n#18 0x7fe4c7feaac3 <unknown>","time":{"start":1717374536788,"stop":1717374630599,"duration":93811}},{"uid":"6fb68004773cbadf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1911//#testresult/6fb68004773cbadf","status":"passed","time":{"start":1717316273821,"stop":1717316310251,"duration":36430}},{"uid":"bf19d1c95577c9a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1908//#testresult/bf19d1c95577c9a0","status":"passed","time":{"start":1717288221616,"stop":1717288262078,"duration":40462}},{"uid":"bf998c854bdd3cbe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1905//#testresult/bf998c854bdd3cbe","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x565061473e9a <unknown>\n#1 0x56506115d45c <unknown>\n#2 0x5650611a95b5 <unknown>\n#3 0x5650611a9671 <unknown>\n#4 0x5650611edf14 <unknown>\n#5 0x5650611cc4dd <unknown>\n#6 0x5650611eb2cc <unknown>\n#7 0x5650611cc253 <unknown>\n#8 0x56506119c1c7 <unknown>\n#9 0x56506119cb3e <unknown>\n#10 0x56506143a2db <unknown>\n#11 0x56506143e387 <unknown>\n#12 0x565061426e0e <unknown>\n#13 0x56506143ee52 <unknown>\n#14 0x56506140b7af <unknown>\n#15 0x565061463188 <unknown>\n#16 0x56506146335b <unknown>\n#17 0x565061472fcc <unknown>\n#18 0x7f11dc801ac3 <unknown>","time":{"start":1717201802199,"stop":1717201901042,"duration":98843}},{"uid":"66730327892e10ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1904//#testresult/66730327892e10ac","status":"passed","time":{"start":1717115238425,"stop":1717115278258,"duration":39833}},{"uid":"26b2e2118fcdc0a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1903//#testresult/26b2e2118fcdc0a2","status":"passed","time":{"start":1717028888070,"stop":1717028927369,"duration":39299}}]},"tags":[]},"source":"d0cf090a5d5980f5.json","parameterValues":["BexleyCouncil"]}