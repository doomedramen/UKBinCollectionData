{"uid":"4b9d8253a453904f","name":"Validate Council Output [WestSuffolkCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"446a4369fb450b9e3ee2f74bbf8ed65b","time":{"start":1715905995680,"stop":1715906008247,"duration":12567},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7ff3d61a1300>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff3d5350390>, 'council': 'WestSuffolkCouncil', 'headless_mode': 'True', 'selenium_mode': 'local', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"90fb25d7e03d77dc97035bfa12485218\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7ff3d605ed40>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7ff3d61a1300>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7ff3d5350390>, 'council': 'WestSuffolkCouncil', 'headless_mode': 'True', 'selenium_mode': 'local', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"90fb25d7e03d77dc97035bfa12485218\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7ff3d605ed40>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Given the council: WestSuffolkCouncil","time":{"start":1715905995681,"stop":1715905995681,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestSuffolkCouncil using local and the http://selenium:4444 is set","time":{"start":1715905995681,"stop":1715906008247,"duration":12566},"status":"failed","statusMessage":"Message: \n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az768-465"},{"name":"thread","value":"2651-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":253,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":253},"items":[{"uid":"ee6b387f55028f91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1803//#testresult/ee6b387f55028f91","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1715819602627,"stop":1715819617983,"duration":15356}},{"uid":"511dfb971a198c97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1781//#testresult/511dfb971a198c97","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1715733214046,"stop":1715733228539,"duration":14493}},{"uid":"c59b6522b361ae46","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1766//#testresult/c59b6522b361ae46","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1715646733328,"stop":1715646746157,"duration":12829}},{"uid":"173413a7761f38be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1765//#testresult/173413a7761f38be","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1715560402503,"stop":1715560413239,"duration":10736}},{"uid":"de26532ba2b44b28","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1764//#testresult/de26532ba2b44b28","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1715474154656,"stop":1715474164948,"duration":10292}},{"uid":"839bae0cce4459be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1763//#testresult/839bae0cce4459be","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1715387533729,"stop":1715387549414,"duration":15685}},{"uid":"90df76c0d60f0f18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1762//#testresult/90df76c0d60f0f18","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1715301159663,"stop":1715301171990,"duration":12327}},{"uid":"8cbf705beecd3e6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1760//#testresult/8cbf705beecd3e6b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1715285288338,"stop":1715285301775,"duration":13437}},{"uid":"f7ae95c7b6323c1b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1756//#testresult/f7ae95c7b6323c1b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1715214673396,"stop":1715214686092,"duration":12696}},{"uid":"ff11466105578ac9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1743//#testresult/ff11466105578ac9","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1715041914796,"stop":1715041926418,"duration":11622}},{"uid":"7d3720d5691fee18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1742//#testresult/7d3720d5691fee18","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714955624458,"stop":1714955635638,"duration":11180}},{"uid":"ec08c95851a0f2bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1741//#testresult/ec08c95851a0f2bb","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714869298807,"stop":1714869310925,"duration":12118}},{"uid":"95b62045855a98e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1740//#testresult/95b62045855a98e3","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714782698651,"stop":1714782712568,"duration":13917}},{"uid":"61045ff16efaca5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1739//#testresult/61045ff16efaca5","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714696285979,"stop":1714696297404,"duration":11425}},{"uid":"6d0517a1c4daec9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1738//#testresult/6d0517a1c4daec9","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714609868437,"stop":1714609882312,"duration":13875}},{"uid":"b4b546c2b2efeea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1735//#testresult/b4b546c2b2efeea","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714523580541,"stop":1714523591849,"duration":11308}},{"uid":"acd797483643b7a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1734//#testresult/acd797483643b7a3","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714436987632,"stop":1714437002558,"duration":14926}},{"uid":"1c57fb0f7683e39f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1732//#testresult/1c57fb0f7683e39f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714350866966,"stop":1714350879668,"duration":12702}},{"uid":"6eddbed2a23b4b00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1724//#testresult/6eddbed2a23b4b00","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714264501346,"stop":1714264515281,"duration":13935}},{"uid":"9c207beb055f6ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1722//#testresult/9c207beb055f6ed","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714234348037,"stop":1714234358187,"duration":10150}}]},"tags":[]},"source":"4b9d8253a453904f.json","parameterValues":["WestSuffolkCouncil","local","http://selenium:4444"]}