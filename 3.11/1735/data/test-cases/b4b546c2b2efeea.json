{"uid":"b4b546c2b2efeea","name":"Validate Council Output [WestSuffolkCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"446a4369fb450b9e3ee2f74bbf8ed65b","time":{"start":1714523580541,"stop":1714523591849,"duration":11308},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7fed640e0f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fed631242d0>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ef70416034fc04ab2f89cbed4581dbd4\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fed63792660>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7fed640e0f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fed631242d0>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ef70416034fc04ab2f89cbed4581dbd4\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fed63792660>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Given the council: WestSuffolkCouncil","time":{"start":1714523580541,"stop":1714523580541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestSuffolkCouncil using local and the http://selenium:4444 is set","time":{"start":1714523580542,"stop":1714523591849,"duration":11307},"status":"failed","statusMessage":"Message: \n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1153-853"},{"name":"thread","value":"2651-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":237,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":237},"items":[{"uid":"acd797483643b7a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1734//#testresult/acd797483643b7a3","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714436987632,"stop":1714437002558,"duration":14926}},{"uid":"1c57fb0f7683e39f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1732//#testresult/1c57fb0f7683e39f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714350866966,"stop":1714350879668,"duration":12702}},{"uid":"6eddbed2a23b4b00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1724//#testresult/6eddbed2a23b4b00","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714264501346,"stop":1714264515281,"duration":13935}},{"uid":"9c207beb055f6ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1722//#testresult/9c207beb055f6ed","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714234348037,"stop":1714234358187,"duration":10150}},{"uid":"8f6e106df6f40939","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1714//#testresult/8f6e106df6f40939","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714232935157,"stop":1714232945269,"duration":10112}},{"uid":"fe78999abdfc8f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1713//#testresult/fe78999abdfc8f5","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714177980469,"stop":1714177991939,"duration":11470}},{"uid":"99695d4f388b50b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1712//#testresult/99695d4f388b50b1","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714091517617,"stop":1714091530487,"duration":12870}},{"uid":"30b081feb56f4bb2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1711//#testresult/30b081feb56f4bb2","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1714006739835,"stop":1714006752948,"duration":13113}},{"uid":"a9132e39018cf7f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1710//#testresult/a9132e39018cf7f2","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713918696880,"stop":1713918710664,"duration":13784}},{"uid":"1574ef60a1e0ac26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1709//#testresult/1574ef60a1e0ac26","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713832426330,"stop":1713832457756,"duration":31426}},{"uid":"9574af7ee2fedbf0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1708//#testresult/9574af7ee2fedbf0","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713745989978,"stop":1713746003706,"duration":13728}},{"uid":"1569708b57d35ee2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1707//#testresult/1569708b57d35ee2","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713659622710,"stop":1713659635201,"duration":12491}},{"uid":"a43a46bc6e49e960","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1706//#testresult/a43a46bc6e49e960","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713573065790,"stop":1713573079909,"duration":14119}},{"uid":"4c5c56a3dde3f2e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1702//#testresult/4c5c56a3dde3f2e8","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713486726697,"stop":1713486740682,"duration":13985}},{"uid":"44b32fcefaefbeb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1698//#testresult/44b32fcefaefbeb","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713400263671,"stop":1713400277004,"duration":13333}},{"uid":"4e47f6e735664d44","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1697//#testresult/4e47f6e735664d44","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713313868185,"stop":1713313880251,"duration":12066}},{"uid":"b5056c4d1e87472c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1696//#testresult/b5056c4d1e87472c","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713252923859,"stop":1713252937025,"duration":13166}},{"uid":"aae1834fb51b7250","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1695//#testresult/aae1834fb51b7250","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713227410146,"stop":1713227422379,"duration":12233}},{"uid":"1389a551dd7d5361","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1692//#testresult/1389a551dd7d5361","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713207904262,"stop":1713207914514,"duration":10252}},{"uid":"2a3e66a6ba3b6dc9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1683//#testresult/2a3e66a6ba3b6dc9","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1713188445317,"stop":1713188457485,"duration":12168}}]},"tags":[]},"source":"b4b546c2b2efeea.json","parameterValues":["WestSuffolkCouncil","local","http://selenium:4444"]}