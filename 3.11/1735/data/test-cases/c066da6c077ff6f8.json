{"uid":"c066da6c077ff6f8","name":"Validate Council Output [CheshireWestAndChesterCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"34c4b9a17ef373b473fdc5ed16097f88","time":{"start":1714523298410,"stop":1714523308633,"duration":10223},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (174, 909)\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x5636787eacb3 <unknown>\n#1 0x5636784d94a7 <unknown>\n#2 0x56367852af73 <unknown>\n#3 0x563678528e76 <unknown>\n#4 0x563678526847 <unknown>\n#5 0x563678525c14 <unknown>\n#6 0x5636785191c9 <unknown>\n#7 0x563678546412 <unknown>\n#8 0x563678518b58 <unknown>\n#9 0x5636785465de <unknown>\n#10 0x563678564be9 <unknown>\n#11 0x5636785461b3 <unknown>\n#12 0x56367851724a <unknown>\n#13 0x563678517c1e <unknown>\n#14 0x5636787aefdb <unknown>\n#15 0x5636787b2f2b <unknown>\n#16 0x56367879b0f1 <unknown>\n#17 0x5636787b3a92 <unknown>\n#18 0x56367877ffaf <unknown>\n#19 0x5636787d9e08 <unknown>\n#20 0x5636787d9fe0 <unknown>\n#21 0x5636787e9e04 <unknown>\n#22 0x7fa351094ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f6d32314360>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6d32187650>, 'council': 'CheshireWestAndChesterCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:55: in parse_data\n    find_collection_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6d32fc4990>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5636787d9fe0 \\\\u003Cunknown>\\\\n#21 0x5636787e9e04 \\\\u003Cunknown>\\\\n#22 0x7fa351094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (174, 909)\nE         (Session info: chrome-headless-shell=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x5636787eacb3 <unknown>\nE       #1 0x5636784d94a7 <unknown>\nE       #2 0x56367852af73 <unknown>\nE       #3 0x563678528e76 <unknown>\nE       #4 0x563678526847 <unknown>\nE       #5 0x563678525c14 <unknown>\nE       #6 0x5636785191c9 <unknown>\nE       #7 0x563678546412 <unknown>\nE       #8 0x563678518b58 <unknown>\nE       #9 0x5636785465de <unknown>\nE       #10 0x563678564be9 <unknown>\nE       #11 0x5636785461b3 <unknown>\nE       #12 0x56367851724a <unknown>\nE       #13 0x563678517c1e <unknown>\nE       #14 0x5636787aefdb <unknown>\nE       #15 0x5636787b2f2b <unknown>\nE       #16 0x56367879b0f1 <unknown>\nE       #17 0x5636787b3a92 <unknown>\nE       #18 0x56367877ffaf <unknown>\nE       #19 0x5636787d9e08 <unknown>\nE       #20 0x5636787d9fe0 <unknown>\nE       #21 0x5636787e9e04 <unknown>\nE       #22 0x7fa351094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (174, 909)\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x5636787eacb3 <unknown>\n#1 0x5636784d94a7 <unknown>\n#2 0x56367852af73 <unknown>\n#3 0x563678528e76 <unknown>\n#4 0x563678526847 <unknown>\n#5 0x563678525c14 <unknown>\n#6 0x5636785191c9 <unknown>\n#7 0x563678546412 <unknown>\n#8 0x563678518b58 <unknown>\n#9 0x5636785465de <unknown>\n#10 0x563678564be9 <unknown>\n#11 0x5636785461b3 <unknown>\n#12 0x56367851724a <unknown>\n#13 0x563678517c1e <unknown>\n#14 0x5636787aefdb <unknown>\n#15 0x5636787b2f2b <unknown>\n#16 0x56367879b0f1 <unknown>\n#17 0x5636787b3a92 <unknown>\n#18 0x56367877ffaf <unknown>\n#19 0x5636787d9e08 <unknown>\n#20 0x5636787d9fe0 <unknown>\n#21 0x5636787e9e04 <unknown>\n#22 0x7fa351094ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f6d32314360>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6d32187650>, 'council': 'CheshireWestAndChesterCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:55: in parse_data\n    find_collection_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6d32fc4990>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5636787d9fe0 \\\\u003Cunknown>\\\\n#21 0x5636787e9e04 \\\\u003Cunknown>\\\\n#22 0x7fa351094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (174, 909)\nE         (Session info: chrome-headless-shell=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x5636787eacb3 <unknown>\nE       #1 0x5636784d94a7 <unknown>\nE       #2 0x56367852af73 <unknown>\nE       #3 0x563678528e76 <unknown>\nE       #4 0x563678526847 <unknown>\nE       #5 0x563678525c14 <unknown>\nE       #6 0x5636785191c9 <unknown>\nE       #7 0x563678546412 <unknown>\nE       #8 0x563678518b58 <unknown>\nE       #9 0x5636785465de <unknown>\nE       #10 0x563678564be9 <unknown>\nE       #11 0x5636785461b3 <unknown>\nE       #12 0x56367851724a <unknown>\nE       #13 0x563678517c1e <unknown>\nE       #14 0x5636787aefdb <unknown>\nE       #15 0x5636787b2f2b <unknown>\nE       #16 0x56367879b0f1 <unknown>\nE       #17 0x5636787b3a92 <unknown>\nE       #18 0x56367877ffaf <unknown>\nE       #19 0x5636787d9e08 <unknown>\nE       #20 0x5636787d9fe0 <unknown>\nE       #21 0x5636787e9e04 <unknown>\nE       #22 0x7fa351094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council: CheshireWestAndChesterCouncil","time":{"start":1714523298410,"stop":1714523298411,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from CheshireWestAndChesterCouncil using local and the http://selenium:4444 is set","time":{"start":1714523298412,"stop":1714523308632,"duration":10220},"status":"failed","statusMessage":"Message: element click intercepted: Element is not clickable at point (174, 909)\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x5636787eacb3 <unknown>\n#1 0x5636784d94a7 <unknown>\n#2 0x56367852af73 <unknown>\n#3 0x563678528e76 <unknown>\n#4 0x563678526847 <unknown>\n#5 0x563678525c14 <unknown>\n#6 0x5636785191c9 <unknown>\n#7 0x563678546412 <unknown>\n#8 0x563678518b58 <unknown>\n#9 0x5636785465de <unknown>\n#10 0x563678564be9 <unknown>\n#11 0x5636785461b3 <unknown>\n#12 0x56367851724a <unknown>\n#13 0x563678517c1e <unknown>\n#14 0x5636787aefdb <unknown>\n#15 0x5636787b2f2b <unknown>\n#16 0x56367879b0f1 <unknown>\n#17 0x5636787b3a92 <unknown>\n#18 0x56367877ffaf <unknown>\n#19 0x5636787d9e08 <unknown>\n#20 0x5636787d9fe0 <unknown>\n#21 0x5636787e9e04 <unknown>\n#22 0x7fa351094ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (174, 909)\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x5636787eacb3 <unknown>\n#1 0x5636784d94a7 <unknown>\n#2 0x56367852af73 <unknown>\n#3 0x563678528e76 <unknown>\n#4 0x563678526847 <unknown>\n#5 0x563678525c14 <unknown>\n#6 0x5636785191c9 <unknown>\n#7 0x563678546412 <unknown>\n#8 0x563678518b58 <unknown>\n#9 0x5636785465de <unknown>\n#10 0x563678564be9 <unknown>\n#11 0x5636785461b3 <unknown>\n#12 0x56367851724a <unknown>\n#13 0x563678517c1e <unknown>\n#14 0x5636787aefdb <unknown>\n#15 0x5636787b2f2b <unknown>\n#16 0x56367879b0f1 <unknown>\n#17 0x5636787b3a92 <unknown>\n#18 0x56367877ffaf <unknown>\n#19 0x5636787d9e08 <unknown>\n#20 0x5636787d9fe0 <unknown>\n#21 0x5636787e9e04 <unknown>\n#22 0x7fa351094ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1153-853"},{"name":"thread","value":"2660-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CheshireWestAndChesterCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"fd339dc00645d67b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1734//#testresult/fd339dc00645d67b","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (174, 909)\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x558f091c8cb3 <unknown>\n#1 0x558f08eb74a7 <unknown>\n#2 0x558f08f08f73 <unknown>\n#3 0x558f08f06e76 <unknown>\n#4 0x558f08f04847 <unknown>\n#5 0x558f08f03c14 <unknown>\n#6 0x558f08ef71c9 <unknown>\n#7 0x558f08f24412 <unknown>\n#8 0x558f08ef6b58 <unknown>\n#9 0x558f08f245de <unknown>\n#10 0x558f08f42be9 <unknown>\n#11 0x558f08f241b3 <unknown>\n#12 0x558f08ef524a <unknown>\n#13 0x558f08ef5c1e <unknown>\n#14 0x558f0918cfdb <unknown>\n#15 0x558f09190f2b <unknown>\n#16 0x558f091790f1 <unknown>\n#17 0x558f09191a92 <unknown>\n#18 0x558f0915dfaf <unknown>\n#19 0x558f091b7e08 <unknown>\n#20 0x558f091b7fe0 <unknown>\n#21 0x558f091c7e04 <unknown>\n#22 0x7f0a04294ac3 <unknown>","time":{"start":1714436733977,"stop":1714436744858,"duration":10881}},{"uid":"81c3c97834ed171d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1732//#testresult/81c3c97834ed171d","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (174, 909)\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x559286afecb3 <unknown>\n#1 0x5592867ed4a7 <unknown>\n#2 0x55928683ef73 <unknown>\n#3 0x55928683ce76 <unknown>\n#4 0x55928683a847 <unknown>\n#5 0x559286839c14 <unknown>\n#6 0x55928682d1c9 <unknown>\n#7 0x55928685a412 <unknown>\n#8 0x55928682cb58 <unknown>\n#9 0x55928685a5de <unknown>\n#10 0x559286878be9 <unknown>\n#11 0x55928685a1b3 <unknown>\n#12 0x55928682b24a <unknown>\n#13 0x55928682bc1e <unknown>\n#14 0x559286ac2fdb <unknown>\n#15 0x559286ac6f2b <unknown>\n#16 0x559286aaf0f1 <unknown>\n#17 0x559286ac7a92 <unknown>\n#18 0x559286a93faf <unknown>\n#19 0x559286aede08 <unknown>\n#20 0x559286aedfe0 <unknown>\n#21 0x559286afde04 <unknown>\n#22 0x7f198bc94ac3 <unknown>","time":{"start":1714350449612,"stop":1714350483762,"duration":34150}},{"uid":"4b4a8a7bbf585b61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1724//#testresult/4b4a8a7bbf585b61","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (174, 909)\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55c3dbe28cb3 <unknown>\n#1 0x55c3dbb174a7 <unknown>\n#2 0x55c3dbb68f73 <unknown>\n#3 0x55c3dbb66e76 <unknown>\n#4 0x55c3dbb64847 <unknown>\n#5 0x55c3dbb63c14 <unknown>\n#6 0x55c3dbb571c9 <unknown>\n#7 0x55c3dbb84412 <unknown>\n#8 0x55c3dbb56b58 <unknown>\n#9 0x55c3dbb845de <unknown>\n#10 0x55c3dbba2be9 <unknown>\n#11 0x55c3dbb841b3 <unknown>\n#12 0x55c3dbb5524a <unknown>\n#13 0x55c3dbb55c1e <unknown>\n#14 0x55c3dbdecfdb <unknown>\n#15 0x55c3dbdf0f2b <unknown>\n#16 0x55c3dbdd90f1 <unknown>\n#17 0x55c3dbdf1a92 <unknown>\n#18 0x55c3dbdbdfaf <unknown>\n#19 0x55c3dbe17e08 <unknown>\n#20 0x55c3dbe17fe0 <unknown>\n#21 0x55c3dbe27e04 <unknown>\n#22 0x7fdb00294ac3 <unknown>","time":{"start":1714264161448,"stop":1714264173115,"duration":11667}},{"uid":"428b4376c8a7cca2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1722//#testresult/428b4376c8a7cca2","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (174, 909)\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55e19d6d3cb3 <unknown>\n#1 0x55e19d3c24a7 <unknown>\n#2 0x55e19d413f73 <unknown>\n#3 0x55e19d411e76 <unknown>\n#4 0x55e19d40f847 <unknown>\n#5 0x55e19d40ec14 <unknown>\n#6 0x55e19d4021c9 <unknown>\n#7 0x55e19d42f412 <unknown>\n#8 0x55e19d401b58 <unknown>\n#9 0x55e19d42f5de <unknown>\n#10 0x55e19d44dbe9 <unknown>\n#11 0x55e19d42f1b3 <unknown>\n#12 0x55e19d40024a <unknown>\n#13 0x55e19d400c1e <unknown>\n#14 0x55e19d697fdb <unknown>\n#15 0x55e19d69bf2b <unknown>\n#16 0x55e19d6840f1 <unknown>\n#17 0x55e19d69ca92 <unknown>\n#18 0x55e19d668faf <unknown>\n#19 0x55e19d6c2e08 <unknown>\n#20 0x55e19d6c2fe0 <unknown>\n#21 0x55e19d6d2e04 <unknown>\n#22 0x7fc74d294ac3 <unknown>","time":{"start":1714234148105,"stop":1714234173932,"duration":25827}},{"uid":"809a0960a9ef9b70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1715//#testresult/809a0960a9ef9b70","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (174, 909)\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55b3509cfcb3 <unknown>\n#1 0x55b3506be4a7 <unknown>\n#2 0x55b35070ff73 <unknown>\n#3 0x55b35070de76 <unknown>\n#4 0x55b35070b847 <unknown>\n#5 0x55b35070ac14 <unknown>\n#6 0x55b3506fe1c9 <unknown>\n#7 0x55b35072b412 <unknown>\n#8 0x55b3506fdb58 <unknown>\n#9 0x55b35072b5de <unknown>\n#10 0x55b350749be9 <unknown>\n#11 0x55b35072b1b3 <unknown>\n#12 0x55b3506fc24a <unknown>\n#13 0x55b3506fcc1e <unknown>\n#14 0x55b350993fdb <unknown>\n#15 0x55b350997f2b <unknown>\n#16 0x55b3509800f1 <unknown>\n#17 0x55b350998a92 <unknown>\n#18 0x55b350964faf <unknown>\n#19 0x55b3509bee08 <unknown>\n#20 0x55b3509befe0 <unknown>\n#21 0x55b3509cee04 <unknown>\n#22 0x7fba09694ac3 <unknown>","time":{"start":1714232809415,"stop":1714232820228,"duration":10813}}]},"tags":[]},"source":"c066da6c077ff6f8.json","parameterValues":["CheshireWestAndChesterCouncil","local","http://selenium:4444"]}