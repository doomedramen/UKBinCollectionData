{"uid":"4c6a24570b51d828","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1714523381280,"stop":1714523390170,"duration":8890},"status":"failed","statusMessage":"ValueError: time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7fed640e0f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fed62fc7e50>, 'council': 'KingstonUponThamesCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/KingstonUponThamesCouncil.py:57: in parse_data\n    datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024'\nformat = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7fed640e0f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fed62fc7e50>, 'council': 'KingstonUponThamesCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/KingstonUponThamesCouncil.py:57: in parse_data\n    datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024'\nformat = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1714523381280,"stop":1714523381280,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1714523381281,"stop":1714523390170,"duration":8889},"status":"failed","statusMessage":"time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"ValueError: time data 'Wednesday, 1 May\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1153-853"},{"name":"thread","value":"2651-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":158,"broken":0,"skipped":0,"passed":115,"unknown":0,"total":273},"items":[{"uid":"ca1bdc98ae9e4b23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1734//#testresult/ca1bdc98ae9e4b23","status":"passed","time":{"start":1714436808689,"stop":1714436816281,"duration":7592}},{"uid":"370662f001f1d459","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1732//#testresult/370662f001f1d459","status":"passed","time":{"start":1714350546232,"stop":1714350559925,"duration":13693}},{"uid":"d31699c343cad20b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1724//#testresult/d31699c343cad20b","status":"passed","time":{"start":1714264249055,"stop":1714264258582,"duration":9527}},{"uid":"b51059a71b159b77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1722//#testresult/b51059a71b159b77","status":"passed","time":{"start":1714234225020,"stop":1714234233845,"duration":8825}},{"uid":"280245d1d17614de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1714//#testresult/280245d1d17614de","status":"passed","time":{"start":1714232764130,"stop":1714232771151,"duration":7021}},{"uid":"e63db4393f914442","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1713//#testresult/e63db4393f914442","status":"passed","time":{"start":1714177690125,"stop":1714177699174,"duration":9049}},{"uid":"b85a81f080a934b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1712//#testresult/b85a81f080a934b0","status":"passed","time":{"start":1714091240629,"stop":1714091249282,"duration":8653}},{"uid":"31c64f5d0406ba3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1711//#testresult/31c64f5d0406ba3c","status":"passed","time":{"start":1714006515905,"stop":1714006523209,"duration":7304}},{"uid":"3ad7d0c605829b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1710//#testresult/3ad7d0c605829b1","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 24 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1713918470451,"stop":1713918479320,"duration":8869}},{"uid":"c40e22504f723a1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1709//#testresult/c40e22504f723a1c","status":"passed","time":{"start":1713832142756,"stop":1713832149824,"duration":7068}},{"uid":"b68ccadfcacca61f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1708//#testresult/b68ccadfcacca61f","status":"passed","time":{"start":1713745740587,"stop":1713745750277,"duration":9690}},{"uid":"25bd95745f06dd20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1707//#testresult/25bd95745f06dd20","status":"passed","time":{"start":1713659378351,"stop":1713659389126,"duration":10775}},{"uid":"128ea07644b08525","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1706//#testresult/128ea07644b08525","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5617c9404863 <unknown>\n#1 0x5617c90fa8c6 <unknown>\n#2 0x5617c9145618 <unknown>\n#3 0x5617c91456d1 <unknown>\n#4 0x5617c9188744 <unknown>\n#5 0x5617c91675cd <unknown>\n#6 0x5617c9185c19 <unknown>\n#7 0x5617c9167343 <unknown>\n#8 0x5617c9138593 <unknown>\n#9 0x5617c9138f5e <unknown>\n#10 0x5617c93c884b <unknown>\n#11 0x5617c93cc7a5 <unknown>\n#12 0x5617c93b6571 <unknown>\n#13 0x5617c93cd332 <unknown>\n#14 0x5617c939b87f <unknown>\n#15 0x5617c93f3728 <unknown>\n#16 0x5617c93f38fb <unknown>\n#17 0x5617c94039b4 <unknown>\n#18 0x7fe435494ac3 <unknown>","time":{"start":1713572811155,"stop":1713572830635,"duration":19480}},{"uid":"b8a1abdcb4488b0f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1702//#testresult/b8a1abdcb4488b0f","status":"passed","time":{"start":1713486471652,"stop":1713486485214,"duration":13562}},{"uid":"544621e9961071aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1698//#testresult/544621e9961071aa","status":"passed","time":{"start":1713400021810,"stop":1713400029309,"duration":7499}},{"uid":"e689d4d685ee6988","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1697//#testresult/e689d4d685ee6988","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 17 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1713313662273,"stop":1713313673374,"duration":11101}},{"uid":"219ae1aecd64cde3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1696//#testresult/219ae1aecd64cde3","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5615e304e863 <unknown>\n#1 0x5615e2d448c6 <unknown>\n#2 0x5615e2d8f618 <unknown>\n#3 0x5615e2d8f6d1 <unknown>\n#4 0x5615e2dd2744 <unknown>\n#5 0x5615e2db15cd <unknown>\n#6 0x5615e2dcfc19 <unknown>\n#7 0x5615e2db1343 <unknown>\n#8 0x5615e2d82593 <unknown>\n#9 0x5615e2d82f5e <unknown>\n#10 0x5615e301284b <unknown>\n#11 0x5615e30167a5 <unknown>\n#12 0x5615e3000571 <unknown>\n#13 0x5615e3017332 <unknown>\n#14 0x5615e2fe587f <unknown>\n#15 0x5615e303d728 <unknown>\n#16 0x5615e303d8fb <unknown>\n#17 0x5615e304d9b4 <unknown>\n#18 0x7f2aad094ac3 <unknown>","time":{"start":1713252809857,"stop":1713252843546,"duration":33689}},{"uid":"34c44f75d850e60d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1695//#testresult/34c44f75d850e60d","status":"passed","time":{"start":1713227192296,"stop":1713227201061,"duration":8765}},{"uid":"7efb7352816db91d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1692//#testresult/7efb7352816db91d","status":"passed","time":{"start":1713207787175,"stop":1713207797870,"duration":10695}},{"uid":"afaef873da8ffd93","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1683//#testresult/afaef873da8ffd93","status":"passed","time":{"start":1713188326723,"stop":1713188333744,"duration":7021}}]},"tags":[]},"source":"4c6a24570b51d828.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}