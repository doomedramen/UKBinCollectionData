{"uid":"e0dab353b9dc030e","name":"Validate Council Output [SouthOxfordshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7f57931d644fea4dd7a0419f9995c47e","time":{"start":1704417634535,"stop":1704417635746,"duration":1211},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2ef5ab8ae0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2ef4e45a10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2ef4e45a10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2ef5ab8ae0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2ef4e45a10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2ef4e45a10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: SouthOxfordshireCouncil","time":{"start":1704417634535,"stop":1704417634536,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SouthOxfordshireCouncil using None and the None is set","time":{"start":1704417634536,"stop":1704417635744,"duration":1208},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704417635744,"stop":1704417635744,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704417635744,"stop":1704417635746,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az532-920"},{"name":"thread","value":"2689-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthOxfordshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":37,"broken":0,"skipped":0,"passed":99,"unknown":0,"total":136},"items":[{"uid":"7f031fa15f8ef499","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1379//#testresult/7f031fa15f8ef499","status":"passed","time":{"start":1704406143288,"stop":1704406146813,"duration":3525}},{"uid":"d144d18ce4a866c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1378//#testresult/d144d18ce4a866c2","status":"passed","time":{"start":1704406090008,"stop":1704406093347,"duration":3339}},{"uid":"9e390f28f74ab762","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1376//#testresult/9e390f28f74ab762","status":"passed","time":{"start":1704398921015,"stop":1704398925117,"duration":4102}},{"uid":"571fe7b61d7efcf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1375//#testresult/571fe7b61d7efcf","status":"passed","time":{"start":1704398869812,"stop":1704398873150,"duration":3338}},{"uid":"fbfd0ce9729f23aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1373//#testresult/fbfd0ce9729f23aa","status":"passed","time":{"start":1704388432970,"stop":1704388437422,"duration":4452}},{"uid":"1db28bcad122bd10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1369//#testresult/1db28bcad122bd10","status":"passed","time":{"start":1704378452423,"stop":1704378456103,"duration":3680}},{"uid":"19af73d55ae0bbf1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1367//#testresult/19af73d55ae0bbf1","status":"passed","time":{"start":1704378134355,"stop":1704378137094,"duration":2739}},{"uid":"158b8a493e713a98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1366//#testresult/158b8a493e713a98","status":"passed","time":{"start":1704375957762,"stop":1704375961415,"duration":3653}},{"uid":"5429a6e2b8954ddf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1363//#testresult/5429a6e2b8954ddf","status":"passed","time":{"start":1704356884714,"stop":1704356888458,"duration":3744}},{"uid":"bace7789e37e0c44","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1361//#testresult/bace7789e37e0c44","status":"passed","time":{"start":1704356039768,"stop":1704356043155,"duration":3387}},{"uid":"37fb2127f0412ade","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1359//#testresult/37fb2127f0412ade","status":"passed","time":{"start":1704331232834,"stop":1704331235883,"duration":3049}},{"uid":"5c5c81d951b2d6dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1355//#testresult/5c5c81d951b2d6dc","status":"passed","time":{"start":1704303838086,"stop":1704303842737,"duration":4651}},{"uid":"c6993c2b6edb2a72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1352//#testresult/c6993c2b6edb2a72","status":"passed","time":{"start":1704301524946,"stop":1704301529204,"duration":4258}},{"uid":"adae0afb16677ea5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1349//#testresult/adae0afb16677ea5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704244791077,"stop":1704244894609,"duration":103532}},{"uid":"12e3a74b68049936","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1348//#testresult/12e3a74b68049936","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704180418679,"stop":1704180522430,"duration":103751}},{"uid":"44657b81bf805ac1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1346//#testresult/44657b81bf805ac1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704158445383,"stop":1704158548751,"duration":103368}},{"uid":"8c8e318c4d7e800d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1345//#testresult/8c8e318c4d7e800d","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704114758989,"stop":1704114762472,"duration":3483}},{"uid":"38e9b2693c551b81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1343//#testresult/38e9b2693c551b81","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704113907556,"stop":1704113912333,"duration":4777}},{"uid":"56622caa43ebc08b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1342//#testresult/56622caa43ebc08b","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704113788616,"stop":1704113791858,"duration":3242}},{"uid":"2dadc4bda4e8b283","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1341//#testresult/2dadc4bda4e8b283","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112387252,"stop":1704112389469,"duration":2217}}]},"tags":[]},"source":"e0dab353b9dc030e.json","parameterValues":["SouthOxfordshireCouncil","None","None"]}