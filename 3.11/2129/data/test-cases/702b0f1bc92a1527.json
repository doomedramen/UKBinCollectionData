{"uid":"702b0f1bc92a1527","name":"Validate Council Output [NorthTynesideCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"5f199ed7bccd24a997d0abd44066cd21","time":{"start":1727309951296,"stop":1727309951704,"duration":408},"status":"failed","statusMessage":"TypeError: 'NoneType' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7f47b2e027a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthTynesideCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f47b2c85090>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthTynesideCouncil.CouncilClass object at 0x7f47b226eb10>, page = ''\nkwargs = {'council_module_str': 'NorthTynesideCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '47097627', user_postcode = 'NE26 2TG'\ns = <requests.sessions.Session object at 0x7f47c58ebe90>\nresponse = <Response [404]>\nsoup = <!DOCTYPE HTML>\n\n<html>\n<head>\n<title>Squarespace - Domain Not Claimed</title>\n<meta content=\"chrome=1\" http-equiv=\"X-...t>\n</head>\n<body class=\"squarespace-config squarespace-system-page\">\n<div class=\"minimal-logo\"> </div>\n</body>\n</html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n    \n        user_uprn = kwargs.get(\"uprn\")\n        user_postcode = kwargs.get(\"postcode\")\n        check_uprn(user_uprn)\n        check_postcode(user_postcode)\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n    \n        # Get the first form\n        response = s.get(\n            \"https://my.northtyneside.gov.uk/category/81/bin-collection-dates\",\n            verify = False,\n        )\n    \n        # Find the form ID and submit with a postcode\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n>       form_build_id = soup.find(\"input\", {\"name\": \"form_build_id\"})[\"value\"]\nE       TypeError: 'NoneType' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/NorthTynesideCouncil.py:31: TypeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"TypeError: 'NoneType' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7f47b2e027a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthTynesideCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f47b2c85090>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <NorthTynesideCouncil.CouncilClass object at 0x7f47b226eb10>, page = ''\nkwargs = {'council_module_str': 'NorthTynesideCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '47097627', user_postcode = 'NE26 2TG'\ns = <requests.sessions.Session object at 0x7f47c58ebe90>\nresponse = <Response [404]>\nsoup = <!DOCTYPE HTML>\n\n<html>\n<head>\n<title>Squarespace - Domain Not Claimed</title>\n<meta content=\"chrome=1\" http-equiv=\"X-...t>\n</head>\n<body class=\"squarespace-config squarespace-system-page\">\n<div class=\"minimal-logo\"> </div>\n</body>\n</html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n    \n        user_uprn = kwargs.get(\"uprn\")\n        user_postcode = kwargs.get(\"postcode\")\n        check_uprn(user_uprn)\n        check_postcode(user_postcode)\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n    \n        # Get the first form\n        response = s.get(\n            \"https://my.northtyneside.gov.uk/category/81/bin-collection-dates\",\n            verify = False,\n        )\n    \n        # Find the form ID and submit with a postcode\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n>       form_build_id = soup.find(\"input\", {\"name\": \"form_build_id\"})[\"value\"]\nE       TypeError: 'NoneType' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/NorthTynesideCouncil.py:31: TypeError","steps":[{"name":"Given the council","time":{"start":1727309951296,"stop":1727309951297,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1727309951297,"stop":1727309951704,"duration":407},"status":"failed","statusMessage":"'NoneType' object is not subscriptable","statusTrace":"TypeError: 'NoneType' object is not subscriptable\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8d60fc7b7b26150","name":"stdout","source":"8d60fc7b7b26150.txt","type":"text/plain","size":47}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az654-393"},{"name":"thread","value":"2818-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthTynesideCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":123,"broken":0,"skipped":0,"passed":209,"unknown":0,"total":332},"items":[{"uid":"58768966bc9ff0a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2128//#testresult/58768966bc9ff0a5","status":"passed","time":{"start":1727223550415,"stop":1727223552364,"duration":1949}},{"uid":"1199636db9ba5f07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2127//#testresult/1199636db9ba5f07","status":"passed","time":{"start":1727137233104,"stop":1727137235557,"duration":2453}},{"uid":"fc5138dab735c637","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2126//#testresult/fc5138dab735c637","status":"passed","time":{"start":1727050795129,"stop":1727050796994,"duration":1865}},{"uid":"a32d600267310c56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2125//#testresult/a32d600267310c56","status":"passed","time":{"start":1726964475718,"stop":1726964478029,"duration":2311}},{"uid":"4f9595df11f0892b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2124//#testresult/4f9595df11f0892b","status":"passed","time":{"start":1726878057238,"stop":1726878059507,"duration":2269}},{"uid":"5078b2ada63eed2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2123//#testresult/5078b2ada63eed2a","status":"passed","time":{"start":1726791622898,"stop":1726791625206,"duration":2308}},{"uid":"cf05840e69bb4073","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2122//#testresult/cf05840e69bb4073","status":"passed","time":{"start":1726705212851,"stop":1726705214774,"duration":1923}},{"uid":"5577f72cd9579309","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2121//#testresult/5577f72cd9579309","status":"passed","time":{"start":1726618809141,"stop":1726618810964,"duration":1823}},{"uid":"c633a6f8c28d1440","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2120//#testresult/c633a6f8c28d1440","status":"passed","time":{"start":1726532469019,"stop":1726532470925,"duration":1906}},{"uid":"57eb170d55d06bd1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2116//#testresult/57eb170d55d06bd1","status":"passed","time":{"start":1726446106009,"stop":1726446108438,"duration":2429}},{"uid":"1454d5014a75a196","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2115//#testresult/1454d5014a75a196","status":"passed","time":{"start":1726359539968,"stop":1726359541943,"duration":1975}},{"uid":"54d2583628b36fba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2114//#testresult/54d2583628b36fba","status":"passed","time":{"start":1726273266437,"stop":1726273268704,"duration":2267}},{"uid":"5246ebe9409407ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2113//#testresult/5246ebe9409407ba","status":"passed","time":{"start":1726186806937,"stop":1726186808843,"duration":1906}},{"uid":"71f0ff28a86c1208","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2112//#testresult/71f0ff28a86c1208","status":"passed","time":{"start":1726100360086,"stop":1726100362230,"duration":2144}},{"uid":"5e3d8a7a99320ada","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2111//#testresult/5e3d8a7a99320ada","status":"passed","time":{"start":1726014032458,"stop":1726014034504,"duration":2046}},{"uid":"8ccff3d734bde641","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2109//#testresult/8ccff3d734bde641","status":"passed","time":{"start":1725955775935,"stop":1725955777791,"duration":1856}},{"uid":"4cc7b21e34b3b156","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2107//#testresult/4cc7b21e34b3b156","status":"passed","time":{"start":1725927496666,"stop":1725927499151,"duration":2485}},{"uid":"4c0ade8d325b3835","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2095//#testresult/4c0ade8d325b3835","status":"passed","time":{"start":1725841213150,"stop":1725841215142,"duration":1992}},{"uid":"10b156b22d17796e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2093//#testresult/10b156b22d17796e","status":"passed","time":{"start":1725754725119,"stop":1725754727148,"duration":2029}},{"uid":"e979e37e57a0a990","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2092//#testresult/e979e37e57a0a990","status":"passed","time":{"start":1725668389815,"stop":1725668392354,"duration":2539}}]},"tags":[]},"source":"702b0f1bc92a1527.json","parameterValues":["NorthTynesideCouncil"]}