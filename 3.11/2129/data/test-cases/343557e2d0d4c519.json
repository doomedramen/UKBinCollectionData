{"uid":"343557e2d0d4c519","name":"Validate Council Output [CroydonCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cc336f6dd92ae6b8042805cd6f13d13e","time":{"start":1727309582381,"stop":1727309586728,"duration":4347},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"fixturefunc = <function scrape_step at 0x7f47b2e027a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f47b2c85090>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7f47b298a950>, page = ''\nkwargs = {'council_module_str': 'CroydonCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ns = <requests.sessions.Session object at 0x7f47b2273750>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '0b3813f245883fb783ff70a9e0a0625d9b32b586', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:275: AttributeError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"fixturefunc = <function scrape_step at 0x7f47b2e027a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f47b2c85090>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7f47b298a950>, page = ''\nkwargs = {'council_module_str': 'CroydonCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ns = <requests.sessions.Session object at 0x7f47b2273750>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '0b3813f245883fb783ff70a9e0a0625d9b32b586', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:275: AttributeError","steps":[{"name":"Given the council","time":{"start":1727309582381,"stop":1727309582382,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1727309582382,"stop":1727309586728,"duration":4346},"status":"failed","statusMessage":"'NoneType' object has no attribute 'attrs'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'attrs'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"68929302276453ae","name":"stdout","source":"68929302276453ae.txt","type":"text/plain","size":41}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az654-393"},{"name":"thread","value":"2818-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":187,"broken":0,"skipped":0,"passed":144,"unknown":0,"total":331},"items":[{"uid":"50112ef9054fee66","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2128//#testresult/50112ef9054fee66","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1727223195023,"stop":1727223196081,"duration":1058}},{"uid":"30cbb793f5afc548","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2127//#testresult/30cbb793f5afc548","status":"passed","time":{"start":1727136802583,"stop":1727136807976,"duration":5393}},{"uid":"b8f4e5436973bd62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2126//#testresult/b8f4e5436973bd62","status":"passed","time":{"start":1727050355263,"stop":1727050366211,"duration":10948}},{"uid":"50b90a973c189251","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2125//#testresult/50b90a973c189251","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1726964131105,"stop":1726964132402,"duration":1297}},{"uid":"f61ae23eaaedebc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2124//#testresult/f61ae23eaaedebc","status":"passed","time":{"start":1726877640769,"stop":1726877646147,"duration":5378}},{"uid":"1b4f6ae8f1afa32e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2123//#testresult/1b4f6ae8f1afa32e","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1726791199928,"stop":1726791203702,"duration":3774}},{"uid":"f6231012049eb4d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2122//#testresult/f6231012049eb4d1","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1726704871960,"stop":1726704875723,"duration":3763}},{"uid":"d8f77fff7f1586f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2121//#testresult/d8f77fff7f1586f4","status":"passed","time":{"start":1726618390864,"stop":1726618394790,"duration":3926}},{"uid":"c3a2056c708595c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2120//#testresult/c3a2056c708595c2","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1726532077121,"stop":1726532078020,"duration":899}},{"uid":"177a7e6738e01c0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2116//#testresult/177a7e6738e01c0c","status":"passed","time":{"start":1726445696368,"stop":1726445701321,"duration":4953}},{"uid":"ff27eb5fd50de1d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2115//#testresult/ff27eb5fd50de1d4","status":"passed","time":{"start":1726359163904,"stop":1726359172964,"duration":9060}},{"uid":"c2911d4c95b8d154","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2114//#testresult/c2911d4c95b8d154","status":"passed","time":{"start":1726272917367,"stop":1726272920991,"duration":3624}},{"uid":"f0b6fc2b3e139bc6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2113//#testresult/f0b6fc2b3e139bc6","status":"passed","time":{"start":1726186543188,"stop":1726186546590,"duration":3402}},{"uid":"123e33a6c3e8efd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2112//#testresult/123e33a6c3e8efd8","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1726099994352,"stop":1726099997855,"duration":3503}},{"uid":"57cd13b182ed3fed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2111//#testresult/57cd13b182ed3fed","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1726013593752,"stop":1726013594733,"duration":981}},{"uid":"a5aa1725189831dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2109//#testresult/a5aa1725189831dd","status":"passed","time":{"start":1725955409808,"stop":1725955413610,"duration":3802}},{"uid":"47211a0b08b49238","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2107//#testresult/47211a0b08b49238","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1725927171538,"stop":1725927173048,"duration":1510}},{"uid":"59b05445395979d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2095//#testresult/59b05445395979d3","status":"passed","time":{"start":1725840835860,"stop":1725840840057,"duration":4197}},{"uid":"d225e1a217b66903","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2093//#testresult/d225e1a217b66903","status":"passed","time":{"start":1725754366570,"stop":1725754371431,"duration":4861}},{"uid":"7c40d6a1063c5753","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2092//#testresult/7c40d6a1063c5753","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1725667992070,"stop":1725667993535,"duration":1465}}]},"tags":[]},"source":"343557e2d0d4c519.json","parameterValues":["CroydonCouncil"]}