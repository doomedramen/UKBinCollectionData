{"uid":"f0458570b931335","name":"Validate Council Output [WychavonDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"ab4be59a4392f5fb1301e38bba96913a","time":{"start":1727423473027,"stop":1727423491946,"duration":18919},"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x555834c5513a <unknown>\n#1 0x55583493b43d <unknown>\n#2 0x555834984b48 <unknown>\n#3 0x555834982fc1 <unknown>\n#4 0x5558349afb22 <unknown>\n#5 0x55583497f478 <unknown>\n#6 0x5558349afcee <unknown>\n#7 0x5558349ced7d <unknown>\n#8 0x5558349af8c3 <unknown>\n#9 0x55583497d6b3 <unknown>\n#10 0x55583497e68e <unknown>\n#11 0x555834c1fb3b <unknown>\n#12 0x555834c23ac1 <unknown>\n#13 0x555834c0c335 <unknown>\n#14 0x555834c24642 <unknown>\n#15 0x555834bf149f <unknown>\n#16 0x555834c44038 <unknown>\n#17 0x555834c44203 <unknown>\n#18 0x555834c53f8c <unknown>\n#19 0x7f38bb79ba94 <unknown>\n#20 0x7f38bb828a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7ffbb5bfa480>\nrequest = <FixtureRequest for <Function test_scenario_outline[WychavonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7ffbb5a79410>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/WychavonDistrictCouncil.py:87: in parse_data\n    input_element_postcode.send_keys(user_postcode)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffbb57e61d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...unknown>\\\\n#18 0x555834c53f8c \\\\u003Cunknown>\\\\n#19 0x7f38bb79ba94 \\\\u003Cunknown>\\\\n#20 0x7f38bb828a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=129.0.6668.58)\nE       Stacktrace:\nE       #0 0x555834c5513a <unknown>\nE       #1 0x55583493b43d <unknown>\nE       #2 0x555834984b48 <unknown>\nE       #3 0x555834982fc1 <unknown>\nE       #4 0x5558349afb22 <unknown>\nE       #5 0x55583497f478 <unknown>\nE       #6 0x5558349afcee <unknown>\nE       #7 0x5558349ced7d <unknown>\nE       #8 0x5558349af8c3 <unknown>\nE       #9 0x55583497d6b3 <unknown>\nE       #10 0x55583497e68e <unknown>\nE       #11 0x555834c1fb3b <unknown>\nE       #12 0x555834c23ac1 <unknown>\nE       #13 0x555834c0c335 <unknown>\nE       #14 0x555834c24642 <unknown>\nE       #15 0x555834bf149f <unknown>\nE       #16 0x555834c44038 <unknown>\nE       #17 0x555834c44203 <unknown>\nE       #18 0x555834c53f8c <unknown>\nE       #19 0x7f38bb79ba94 <unknown>\nE       #20 0x7f38bb828a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x555834c5513a <unknown>\n#1 0x55583493b43d <unknown>\n#2 0x555834984b48 <unknown>\n#3 0x555834982fc1 <unknown>\n#4 0x5558349afb22 <unknown>\n#5 0x55583497f478 <unknown>\n#6 0x5558349afcee <unknown>\n#7 0x5558349ced7d <unknown>\n#8 0x5558349af8c3 <unknown>\n#9 0x55583497d6b3 <unknown>\n#10 0x55583497e68e <unknown>\n#11 0x555834c1fb3b <unknown>\n#12 0x555834c23ac1 <unknown>\n#13 0x555834c0c335 <unknown>\n#14 0x555834c24642 <unknown>\n#15 0x555834bf149f <unknown>\n#16 0x555834c44038 <unknown>\n#17 0x555834c44203 <unknown>\n#18 0x555834c53f8c <unknown>\n#19 0x7f38bb79ba94 <unknown>\n#20 0x7f38bb828a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7ffbb5bfa480>\nrequest = <FixtureRequest for <Function test_scenario_outline[WychavonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7ffbb5a79410>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/WychavonDistrictCouncil.py:87: in parse_data\n    input_element_postcode.send_keys(user_postcode)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:231: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffbb57e61d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...unknown>\\\\n#18 0x555834c53f8c \\\\u003Cunknown>\\\\n#19 0x7f38bb79ba94 \\\\u003Cunknown>\\\\n#20 0x7f38bb828a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=129.0.6668.58)\nE       Stacktrace:\nE       #0 0x555834c5513a <unknown>\nE       #1 0x55583493b43d <unknown>\nE       #2 0x555834984b48 <unknown>\nE       #3 0x555834982fc1 <unknown>\nE       #4 0x5558349afb22 <unknown>\nE       #5 0x55583497f478 <unknown>\nE       #6 0x5558349afcee <unknown>\nE       #7 0x5558349ced7d <unknown>\nE       #8 0x5558349af8c3 <unknown>\nE       #9 0x55583497d6b3 <unknown>\nE       #10 0x55583497e68e <unknown>\nE       #11 0x555834c1fb3b <unknown>\nE       #12 0x555834c23ac1 <unknown>\nE       #13 0x555834c0c335 <unknown>\nE       #14 0x555834c24642 <unknown>\nE       #15 0x555834bf149f <unknown>\nE       #16 0x555834c44038 <unknown>\nE       #17 0x555834c44203 <unknown>\nE       #18 0x555834c53f8c <unknown>\nE       #19 0x7f38bb79ba94 <unknown>\nE       #20 0x7f38bb828a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Given the council","time":{"start":1727423473027,"stop":1727423473028,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1727423473028,"stop":1727423491946,"duration":18918},"status":"failed","statusMessage":"Message: element not interactable\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x555834c5513a <unknown>\n#1 0x55583493b43d <unknown>\n#2 0x555834984b48 <unknown>\n#3 0x555834982fc1 <unknown>\n#4 0x5558349afb22 <unknown>\n#5 0x55583497f478 <unknown>\n#6 0x5558349afcee <unknown>\n#7 0x5558349ced7d <unknown>\n#8 0x5558349af8c3 <unknown>\n#9 0x55583497d6b3 <unknown>\n#10 0x55583497e68e <unknown>\n#11 0x555834c1fb3b <unknown>\n#12 0x555834c23ac1 <unknown>\n#13 0x555834c0c335 <unknown>\n#14 0x555834c24642 <unknown>\n#15 0x555834bf149f <unknown>\n#16 0x555834c44038 <unknown>\n#17 0x555834c44203 <unknown>\n#18 0x555834c53f8c <unknown>\n#19 0x7f38bb79ba94 <unknown>\n#20 0x7f38bb828a34 __clone\n","statusTrace":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x555834c5513a <unknown>\n#1 0x55583493b43d <unknown>\n#2 0x555834984b48 <unknown>\n#3 0x555834982fc1 <unknown>\n#4 0x5558349afb22 <unknown>\n#5 0x55583497f478 <unknown>\n#6 0x5558349afcee <unknown>\n#7 0x5558349ced7d <unknown>\n#8 0x5558349af8c3 <unknown>\n#9 0x55583497d6b3 <unknown>\n#10 0x55583497e68e <unknown>\n#11 0x555834c1fb3b <unknown>\n#12 0x555834c23ac1 <unknown>\n#13 0x555834c0c335 <unknown>\n#14 0x555834c24642 <unknown>\n#15 0x555834bf149f <unknown>\n#16 0x555834c44038 <unknown>\n#17 0x555834c44203 <unknown>\n#18 0x555834c53f8c <unknown>\n#19 0x7f38bb79ba94 <unknown>\n#20 0x7f38bb828a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b6d31fe5379de3a8","name":"log","source":"b6d31fe5379de3a8.txt","type":"text/plain","size":745},{"uid":"1555e0c9940d315f","name":"stdout","source":"1555e0c9940d315f.txt","type":"text/plain","size":122}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az2022-498"},{"name":"thread","value":"2674-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WychavonDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":121,"unknown":0,"total":126},"items":[{"uid":"e18e5938d06ba4a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2130//#testresult/e18e5938d06ba4a9","status":"failed","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x5563f5bf313a <unknown>\n#1 0x5563f58d943d <unknown>\n#2 0x5563f5922b48 <unknown>\n#3 0x5563f5920fc1 <unknown>\n#4 0x5563f594db22 <unknown>\n#5 0x5563f591d478 <unknown>\n#6 0x5563f594dcee <unknown>\n#7 0x5563f596cd7d <unknown>\n#8 0x5563f594d8c3 <unknown>\n#9 0x5563f591b6b3 <unknown>\n#10 0x5563f591c68e <unknown>\n#11 0x5563f5bbdb3b <unknown>\n#12 0x5563f5bc1ac1 <unknown>\n#13 0x5563f5baa335 <unknown>\n#14 0x5563f5bc2642 <unknown>\n#15 0x5563f5b8f49f <unknown>\n#16 0x5563f5be2038 <unknown>\n#17 0x5563f5be2203 <unknown>\n#18 0x5563f5bf1f8c <unknown>\n#19 0x7fc300187a94 <unknown>\n#20 0x7fc300214a34 __clone","time":{"start":1727397196574,"stop":1727397225368,"duration":28794}},{"uid":"2a8b761dce407249","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2129//#testresult/2a8b761dce407249","status":"passed","time":{"start":1727310667778,"stop":1727310739171,"duration":71393}},{"uid":"be2f18c8b7cffe60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2128//#testresult/be2f18c8b7cffe60","status":"passed","time":{"start":1727224014727,"stop":1727224037527,"duration":22800}},{"uid":"702caeeb1708f533","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2127//#testresult/702caeeb1708f533","status":"passed","time":{"start":1727137969800,"stop":1727137994884,"duration":25084}},{"uid":"14c69e708648efc2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2126//#testresult/14c69e708648efc2","status":"passed","time":{"start":1727051236750,"stop":1727051260170,"duration":23420}},{"uid":"3bda5c88b4b0c313","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2125//#testresult/3bda5c88b4b0c313","status":"passed","time":{"start":1726965221508,"stop":1726965228468,"duration":6960}},{"uid":"74b2bfa8a4d0d917","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2124//#testresult/74b2bfa8a4d0d917","status":"passed","time":{"start":1726878562149,"stop":1726878582017,"duration":19868}},{"uid":"72410aa7c22dc63a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2123//#testresult/72410aa7c22dc63a","status":"passed","time":{"start":1726792380872,"stop":1726792403782,"duration":22910}},{"uid":"88f17253e92ffefb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2122//#testresult/88f17253e92ffefb","status":"passed","time":{"start":1726705959600,"stop":1726705965714,"duration":6114}},{"uid":"e2d456acf78a5e0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2121//#testresult/e2d456acf78a5e0d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55a5e294a86a <unknown>\n#1 0x55a5e2618e50 <unknown>\n#2 0x55a5e2668644 <unknown>\n#3 0x55a5e2668931 <unknown>\n#4 0x55a5e26ae534 <unknown>\n#5 0x55a5e268d4bd <unknown>\n#6 0x55a5e26ab9c6 <unknown>\n#7 0x55a5e268d233 <unknown>\n#8 0x55a5e265b093 <unknown>\n#9 0x55a5e265c09e <unknown>\n#10 0x55a5e2911acb <unknown>\n#11 0x55a5e2915a81 <unknown>\n#12 0x55a5e28fd695 <unknown>\n#13 0x55a5e29165f2 <unknown>\n#14 0x55a5e28e286f <unknown>\n#15 0x55a5e2939668 <unknown>\n#16 0x55a5e2939832 <unknown>\n#17 0x55a5e294965c <unknown>\n#18 0x7f230eb2ea94 <unknown>\n#19 0x7f230ebbba34 __clone","time":{"start":1726619524644,"stop":1726619610846,"duration":86202}},{"uid":"818f0bab5d487883","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2120//#testresult/818f0bab5d487883","status":"passed","time":{"start":1726533159792,"stop":1726533183852,"duration":24060}},{"uid":"e429b642571e8ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2116//#testresult/e429b642571e8ff","status":"passed","time":{"start":1726446837998,"stop":1726446845413,"duration":7415}},{"uid":"4a65ec625fd5d9a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2115//#testresult/4a65ec625fd5d9a3","status":"passed","time":{"start":1726359990962,"stop":1726359996955,"duration":5993}},{"uid":"a0b38fc51957c40e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2114//#testresult/a0b38fc51957c40e","status":"passed","time":{"start":1726274061026,"stop":1726274067710,"duration":6684}},{"uid":"2c6961210b921862","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2113//#testresult/2c6961210b921862","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5583ffb7186a <unknown>\n#1 0x5583ff83fe50 <unknown>\n#2 0x5583ff88f644 <unknown>\n#3 0x5583ff88f931 <unknown>\n#4 0x5583ff8d5534 <unknown>\n#5 0x5583ff8b44bd <unknown>\n#6 0x5583ff8d29c6 <unknown>\n#7 0x5583ff8b4233 <unknown>\n#8 0x5583ff882093 <unknown>\n#9 0x5583ff88309e <unknown>\n#10 0x5583ffb38acb <unknown>\n#11 0x5583ffb3ca81 <unknown>\n#12 0x5583ffb24695 <unknown>\n#13 0x5583ffb3d5f2 <unknown>\n#14 0x5583ffb0986f <unknown>\n#15 0x5583ffb60668 <unknown>\n#16 0x5583ffb60832 <unknown>\n#17 0x5583ffb7065c <unknown>\n#18 0x7f2301e03a94 <unknown>\n#19 0x7f2301e90a34 __clone","time":{"start":1726187528238,"stop":1726187618161,"duration":89923}},{"uid":"1fa0f96216a39bf5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2112//#testresult/1fa0f96216a39bf5","status":"passed","time":{"start":1726100822810,"stop":1726100828917,"duration":6107}},{"uid":"af3b9757d7d796e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2111//#testresult/af3b9757d7d796e2","status":"passed","time":{"start":1726014489284,"stop":1726014511706,"duration":22422}},{"uid":"2ccf0ed703951330","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2109//#testresult/2ccf0ed703951330","status":"passed","time":{"start":1725956527336,"stop":1725956543996,"duration":16660}},{"uid":"ee722b17f731cc43","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2107//#testresult/ee722b17f731cc43","status":"passed","time":{"start":1725928257688,"stop":1725928265597,"duration":7909}},{"uid":"fbf5ecb12b8df401","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2095//#testresult/fbf5ecb12b8df401","status":"passed","time":{"start":1725841917602,"stop":1725841923721,"duration":6119}}]},"tags":[]},"source":"f0458570b931335.json","parameterValues":["WychavonDistrictCouncil"]}