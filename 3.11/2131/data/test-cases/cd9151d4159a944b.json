{"uid":"cd9151d4159a944b","name":"Validate Council Output [CheshireWestAndChesterCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"64af12fdfc56ab0224e14523e9cf88ad","time":{"start":1727421648556,"stop":1727421654236,"duration":5680},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 807). Other element would receive the click: <div id=\"ccc-content\" class=\"ccc-content--dark   \">...</div>\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x561a4f97313a <unknown>\n#1 0x561a4f6595e0 <unknown>\n#2 0x561a4f6af866 <unknown>\n#3 0x561a4f6ad78d <unknown>\n#4 0x561a4f6ab237 <unknown>\n#5 0x561a4f6aa646 <unknown>\n#6 0x561a4f69da98 <unknown>\n#7 0x561a4f6cdb22 <unknown>\n#8 0x561a4f69d478 <unknown>\n#9 0x561a4f6cdcee <unknown>\n#10 0x561a4f6ecd7d <unknown>\n#11 0x561a4f6cd8c3 <unknown>\n#12 0x561a4f69b6b3 <unknown>\n#13 0x561a4f69c68e <unknown>\n#14 0x561a4f93db3b <unknown>\n#15 0x561a4f941ac1 <unknown>\n#16 0x561a4f92a335 <unknown>\n#17 0x561a4f942642 <unknown>\n#18 0x561a4f90f49f <unknown>\n#19 0x561a4f962038 <unknown>\n#20 0x561a4f962203 <unknown>\n#21 0x561a4f971f8c <unknown>\n#22 0x7f3e580aea94 <unknown>\n#23 0x7f3e5813ba34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f3315544ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f33153b8d90>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:52: in parse_data\n    click_element(By.LINK_TEXT, \"Find your collection day\")\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:46: in click_element\n    element.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f332178eb50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x561a4f971f8c \\\\u003Cunknown>\\\\n#22 0x7f3e580aea94 \\\\u003Cunknown>\\\\n#23 0x7f3e5813ba34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 807). Other element would receive the click: <div id=\"ccc-content\" class=\"ccc-content--dark   \">...</div>\nE         (Session info: chrome=129.0.6668.58)\nE       Stacktrace:\nE       #0 0x561a4f97313a <unknown>\nE       #1 0x561a4f6595e0 <unknown>\nE       #2 0x561a4f6af866 <unknown>\nE       #3 0x561a4f6ad78d <unknown>\nE       #4 0x561a4f6ab237 <unknown>\nE       #5 0x561a4f6aa646 <unknown>\nE       #6 0x561a4f69da98 <unknown>\nE       #7 0x561a4f6cdb22 <unknown>\nE       #8 0x561a4f69d478 <unknown>\nE       #9 0x561a4f6cdcee <unknown>\nE       #10 0x561a4f6ecd7d <unknown>\nE       #11 0x561a4f6cd8c3 <unknown>\nE       #12 0x561a4f69b6b3 <unknown>\nE       #13 0x561a4f69c68e <unknown>\nE       #14 0x561a4f93db3b <unknown>\nE       #15 0x561a4f941ac1 <unknown>\nE       #16 0x561a4f92a335 <unknown>\nE       #17 0x561a4f942642 <unknown>\nE       #18 0x561a4f90f49f <unknown>\nE       #19 0x561a4f962038 <unknown>\nE       #20 0x561a4f962203 <unknown>\nE       #21 0x561a4f971f8c <unknown>\nE       #22 0x7f3e580aea94 <unknown>\nE       #23 0x7f3e5813ba34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 807). Other element would receive the click: <div id=\"ccc-content\" class=\"ccc-content--dark   \">...</div>\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x561a4f97313a <unknown>\n#1 0x561a4f6595e0 <unknown>\n#2 0x561a4f6af866 <unknown>\n#3 0x561a4f6ad78d <unknown>\n#4 0x561a4f6ab237 <unknown>\n#5 0x561a4f6aa646 <unknown>\n#6 0x561a4f69da98 <unknown>\n#7 0x561a4f6cdb22 <unknown>\n#8 0x561a4f69d478 <unknown>\n#9 0x561a4f6cdcee <unknown>\n#10 0x561a4f6ecd7d <unknown>\n#11 0x561a4f6cd8c3 <unknown>\n#12 0x561a4f69b6b3 <unknown>\n#13 0x561a4f69c68e <unknown>\n#14 0x561a4f93db3b <unknown>\n#15 0x561a4f941ac1 <unknown>\n#16 0x561a4f92a335 <unknown>\n#17 0x561a4f942642 <unknown>\n#18 0x561a4f90f49f <unknown>\n#19 0x561a4f962038 <unknown>\n#20 0x561a4f962203 <unknown>\n#21 0x561a4f971f8c <unknown>\n#22 0x7f3e580aea94 <unknown>\n#23 0x7f3e5813ba34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f3315544ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f33153b8d90>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:52: in parse_data\n    click_element(By.LINK_TEXT, \"Find your collection day\")\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:46: in click_element\n    element.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f332178eb50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x561a4f971f8c \\\\u003Cunknown>\\\\n#22 0x7f3e580aea94 \\\\u003Cunknown>\\\\n#23 0x7f3e5813ba34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 807). Other element would receive the click: <div id=\"ccc-content\" class=\"ccc-content--dark   \">...</div>\nE         (Session info: chrome=129.0.6668.58)\nE       Stacktrace:\nE       #0 0x561a4f97313a <unknown>\nE       #1 0x561a4f6595e0 <unknown>\nE       #2 0x561a4f6af866 <unknown>\nE       #3 0x561a4f6ad78d <unknown>\nE       #4 0x561a4f6ab237 <unknown>\nE       #5 0x561a4f6aa646 <unknown>\nE       #6 0x561a4f69da98 <unknown>\nE       #7 0x561a4f6cdb22 <unknown>\nE       #8 0x561a4f69d478 <unknown>\nE       #9 0x561a4f6cdcee <unknown>\nE       #10 0x561a4f6ecd7d <unknown>\nE       #11 0x561a4f6cd8c3 <unknown>\nE       #12 0x561a4f69b6b3 <unknown>\nE       #13 0x561a4f69c68e <unknown>\nE       #14 0x561a4f93db3b <unknown>\nE       #15 0x561a4f941ac1 <unknown>\nE       #16 0x561a4f92a335 <unknown>\nE       #17 0x561a4f942642 <unknown>\nE       #18 0x561a4f90f49f <unknown>\nE       #19 0x561a4f962038 <unknown>\nE       #20 0x561a4f962203 <unknown>\nE       #21 0x561a4f971f8c <unknown>\nE       #22 0x7f3e580aea94 <unknown>\nE       #23 0x7f3e5813ba34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1727421648556,"stop":1727421648557,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1727421648561,"stop":1727421654236,"duration":5675},"status":"failed","statusMessage":"Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 807). Other element would receive the click: <div id=\"ccc-content\" class=\"ccc-content--dark   \">...</div>\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x561a4f97313a <unknown>\n#1 0x561a4f6595e0 <unknown>\n#2 0x561a4f6af866 <unknown>\n#3 0x561a4f6ad78d <unknown>\n#4 0x561a4f6ab237 <unknown>\n#5 0x561a4f6aa646 <unknown>\n#6 0x561a4f69da98 <unknown>\n#7 0x561a4f6cdb22 <unknown>\n#8 0x561a4f69d478 <unknown>\n#9 0x561a4f6cdcee <unknown>\n#10 0x561a4f6ecd7d <unknown>\n#11 0x561a4f6cd8c3 <unknown>\n#12 0x561a4f69b6b3 <unknown>\n#13 0x561a4f69c68e <unknown>\n#14 0x561a4f93db3b <unknown>\n#15 0x561a4f941ac1 <unknown>\n#16 0x561a4f92a335 <unknown>\n#17 0x561a4f942642 <unknown>\n#18 0x561a4f90f49f <unknown>\n#19 0x561a4f962038 <unknown>\n#20 0x561a4f962203 <unknown>\n#21 0x561a4f971f8c <unknown>\n#22 0x7f3e580aea94 <unknown>\n#23 0x7f3e5813ba34 __clone\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 807). Other element would receive the click: <div id=\"ccc-content\" class=\"ccc-content--dark   \">...</div>\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x561a4f97313a <unknown>\n#1 0x561a4f6595e0 <unknown>\n#2 0x561a4f6af866 <unknown>\n#3 0x561a4f6ad78d <unknown>\n#4 0x561a4f6ab237 <unknown>\n#5 0x561a4f6aa646 <unknown>\n#6 0x561a4f69da98 <unknown>\n#7 0x561a4f6cdb22 <unknown>\n#8 0x561a4f69d478 <unknown>\n#9 0x561a4f6cdcee <unknown>\n#10 0x561a4f6ecd7d <unknown>\n#11 0x561a4f6cd8c3 <unknown>\n#12 0x561a4f69b6b3 <unknown>\n#13 0x561a4f69c68e <unknown>\n#14 0x561a4f93db3b <unknown>\n#15 0x561a4f941ac1 <unknown>\n#16 0x561a4f92a335 <unknown>\n#17 0x561a4f942642 <unknown>\n#18 0x561a4f90f49f <unknown>\n#19 0x561a4f962038 <unknown>\n#20 0x561a4f962203 <unknown>\n#21 0x561a4f971f8c <unknown>\n#22 0x7f3e580aea94 <unknown>\n#23 0x7f3e5813ba34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"652353bf3aac5947","name":"log","source":"652353bf3aac5947.txt","type":"text/plain","size":1304},{"uid":"b76925a4d671d317","name":"stdout","source":"b76925a4d671d317.txt","type":"text/plain","size":56}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az2022-498"},{"name":"thread","value":"2677-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CheshireWestAndChesterCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":17,"broken":0,"skipped":0,"passed":138,"unknown":0,"total":155},"items":[{"uid":"392387f48a78872b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2130//#testresult/392387f48a78872b","status":"passed","time":{"start":1727395291888,"stop":1727395321078,"duration":29190}},{"uid":"47a314f324ea5316","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2129//#testresult/47a314f324ea5316","status":"passed","time":{"start":1727308879764,"stop":1727308909320,"duration":29556}},{"uid":"aeef71134f188194","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2128//#testresult/aeef71134f188194","status":"passed","time":{"start":1727222483321,"stop":1727222509857,"duration":26536}},{"uid":"c7d860e5a7ce3872","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2127//#testresult/c7d860e5a7ce3872","status":"passed","time":{"start":1727136085481,"stop":1727136127124,"duration":41643}},{"uid":"f15d110067f14d4f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2126//#testresult/f15d110067f14d4f","status":"passed","time":{"start":1727049673316,"stop":1727049701410,"duration":28094}},{"uid":"9c73ae2de76639d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2125//#testresult/9c73ae2de76639d","status":"passed","time":{"start":1726963281996,"stop":1726963317183,"duration":35187}},{"uid":"3b808f048165c4a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2124//#testresult/3b808f048165c4a7","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56145012886a <unknown>\n#1 0x56144fdf6e50 <unknown>\n#2 0x56144fe46644 <unknown>\n#3 0x56144fe46931 <unknown>\n#4 0x56144fe8c534 <unknown>\n#5 0x56144fe6b4bd <unknown>\n#6 0x56144fe899c6 <unknown>\n#7 0x56144fe6b233 <unknown>\n#8 0x56144fe39093 <unknown>\n#9 0x56144fe3a09e <unknown>\n#10 0x5614500efacb <unknown>\n#11 0x5614500f3a81 <unknown>\n#12 0x5614500db695 <unknown>\n#13 0x5614500f45f2 <unknown>\n#14 0x5614500c086f <unknown>\n#15 0x561450117668 <unknown>\n#16 0x561450117832 <unknown>\n#17 0x56145012765c <unknown>\n#18 0x7f74b777ca94 <unknown>\n#19 0x7f74b7809a34 __clone","time":{"start":1726876867571,"stop":1726876946902,"duration":79331}},{"uid":"4da8e8e6ffb42ad9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2123//#testresult/4da8e8e6ffb42ad9","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56225b56d86a <unknown>\n#1 0x56225b23be50 <unknown>\n#2 0x56225b28b644 <unknown>\n#3 0x56225b28b931 <unknown>\n#4 0x56225b2d1534 <unknown>\n#5 0x56225b2b04bd <unknown>\n#6 0x56225b2ce9c6 <unknown>\n#7 0x56225b2b0233 <unknown>\n#8 0x56225b27e093 <unknown>\n#9 0x56225b27f09e <unknown>\n#10 0x56225b534acb <unknown>\n#11 0x56225b538a81 <unknown>\n#12 0x56225b520695 <unknown>\n#13 0x56225b5395f2 <unknown>\n#14 0x56225b50586f <unknown>\n#15 0x56225b55c668 <unknown>\n#16 0x56225b55c832 <unknown>\n#17 0x56225b56c65c <unknown>\n#18 0x7fad85972a94 <unknown>\n#19 0x7fad859ffa34 __clone","time":{"start":1726790469258,"stop":1726790538118,"duration":68860}},{"uid":"acc910ab3a0ff794","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2122//#testresult/acc910ab3a0ff794","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55eb93d7386a <unknown>\n#1 0x55eb93a41e50 <unknown>\n#2 0x55eb93a91644 <unknown>\n#3 0x55eb93a91931 <unknown>\n#4 0x55eb93ad7534 <unknown>\n#5 0x55eb93ab64bd <unknown>\n#6 0x55eb93ad49c6 <unknown>\n#7 0x55eb93ab6233 <unknown>\n#8 0x55eb93a84093 <unknown>\n#9 0x55eb93a8509e <unknown>\n#10 0x55eb93d3aacb <unknown>\n#11 0x55eb93d3ea81 <unknown>\n#12 0x55eb93d26695 <unknown>\n#13 0x55eb93d3f5f2 <unknown>\n#14 0x55eb93d0b86f <unknown>\n#15 0x55eb93d62668 <unknown>\n#16 0x55eb93d62832 <unknown>\n#17 0x55eb93d7265c <unknown>\n#18 0x7f2641e56a94 <unknown>\n#19 0x7f2641ee3a34 __clone","time":{"start":1726704075781,"stop":1726704213024,"duration":137243}},{"uid":"51eda75947e95527","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2121//#testresult/51eda75947e95527","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561972dc686a <unknown>\n#1 0x561972a94e50 <unknown>\n#2 0x561972ae4644 <unknown>\n#3 0x561972ae4931 <unknown>\n#4 0x561972b2a534 <unknown>\n#5 0x561972b094bd <unknown>\n#6 0x561972b279c6 <unknown>\n#7 0x561972b09233 <unknown>\n#8 0x561972ad7093 <unknown>\n#9 0x561972ad809e <unknown>\n#10 0x561972d8dacb <unknown>\n#11 0x561972d91a81 <unknown>\n#12 0x561972d79695 <unknown>\n#13 0x561972d925f2 <unknown>\n#14 0x561972d5e86f <unknown>\n#15 0x561972db5668 <unknown>\n#16 0x561972db5832 <unknown>\n#17 0x561972dc565c <unknown>\n#18 0x7fba15836a94 <unknown>\n#19 0x7fba158c3a34 __clone","time":{"start":1726617677339,"stop":1726617750337,"duration":72998}},{"uid":"7c3cf09689db035d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2120//#testresult/7c3cf09689db035d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x562dae42d86a <unknown>\n#1 0x562dae0fbe50 <unknown>\n#2 0x562dae14b644 <unknown>\n#3 0x562dae14b931 <unknown>\n#4 0x562dae191534 <unknown>\n#5 0x562dae1704bd <unknown>\n#6 0x562dae18e9c6 <unknown>\n#7 0x562dae170233 <unknown>\n#8 0x562dae13e093 <unknown>\n#9 0x562dae13f09e <unknown>\n#10 0x562dae3f4acb <unknown>\n#11 0x562dae3f8a81 <unknown>\n#12 0x562dae3e0695 <unknown>\n#13 0x562dae3f95f2 <unknown>\n#14 0x562dae3c586f <unknown>\n#15 0x562dae41c668 <unknown>\n#16 0x562dae41c832 <unknown>\n#17 0x562dae42c65c <unknown>\n#18 0x7fdd67321a94 <unknown>\n#19 0x7fdd673aea34 __clone","time":{"start":1726531270645,"stop":1726531346539,"duration":75894}},{"uid":"3b4ae94b4d2a93f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2116//#testresult/3b4ae94b4d2a93f","status":"passed","time":{"start":1726444886006,"stop":1726444939666,"duration":53660}},{"uid":"d28ad970a77adfe4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2115//#testresult/d28ad970a77adfe4","status":"passed","time":{"start":1726358471881,"stop":1726358509354,"duration":37473}},{"uid":"ce92bdff6e6da997","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2114//#testresult/ce92bdff6e6da997","status":"passed","time":{"start":1726272087017,"stop":1726272127807,"duration":40790}},{"uid":"91334942a05b13b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2113//#testresult/91334942a05b13b0","status":"passed","time":{"start":1726185677938,"stop":1726185703136,"duration":25198}},{"uid":"5c59c40d35b63fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2112//#testresult/5c59c40d35b63fe","status":"passed","time":{"start":1726099299257,"stop":1726099343183,"duration":43926}},{"uid":"78fd0eb0a6e65747","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2111//#testresult/78fd0eb0a6e65747","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x556b7fdce86a <unknown>\n#1 0x556b7fa9ce50 <unknown>\n#2 0x556b7faf3346 <unknown>\n#3 0x556b7faf125d <unknown>\n#4 0x556b7faeecf7 <unknown>\n#5 0x556b7faedb9c <unknown>\n#6 0x556b7fae14d6 <unknown>\n#7 0x556b7fb11492 <unknown>\n#8 0x556b7fae0e89 <unknown>\n#9 0x556b7fb1165e <unknown>\n#10 0x556b7fb2f9c6 <unknown>\n#11 0x556b7fb11233 <unknown>\n#12 0x556b7fadf093 <unknown>\n#13 0x556b7fae009e <unknown>\n#14 0x556b7fd95acb <unknown>\n#15 0x556b7fd99a81 <unknown>\n#16 0x556b7fd81695 <unknown>\n#17 0x556b7fd9a5f2 <unknown>\n#18 0x556b7fd6686f <unknown>\n#19 0x556b7fdbd668 <unknown>\n#20 0x556b7fdbd832 <unknown>\n#21 0x556b7fdcd65c <unknown>\n#22 0x7fae7fdc2a94 <unknown>\n#23 0x7fae7fe4fa34 __clone","time":{"start":1726012871865,"stop":1726012876640,"duration":4775}},{"uid":"668aea41f981480d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2109//#testresult/668aea41f981480d","status":"passed","time":{"start":1725954753982,"stop":1725954770370,"duration":16388}},{"uid":"2a830161c7ebc19c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2107//#testresult/2a830161c7ebc19c","status":"passed","time":{"start":1725926488051,"stop":1725926518929,"duration":30878}},{"uid":"4c82b58823ad6f16","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2095//#testresult/4c82b58823ad6f16","status":"passed","time":{"start":1725840091450,"stop":1725840132406,"duration":40956}}]},"tags":[]},"source":"cd9151d4159a944b.json","parameterValues":["CheshireWestAndChesterCouncil"]}