{"uid":"af5c4b3c99b1d12","name":"Validate Council Output [SouthNorfolkCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"484d0c5e2def185d103e4e0bbf55c9cd","time":{"start":1698867620950,"stop":1698867622459,"duration":1509},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f9d48592480>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9d3a8ec850>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f9d3a8ec850>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f9d48592480>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthNorfolkCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9d3a8ec850>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f9d3a8ec850>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","steps":[{"name":"Given the council: SouthNorfolkCouncil","time":{"start":1698867620950,"stop":1698867620951,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from SouthNorfolkCouncil","time":{"start":1698867620951,"stop":1698867622456,"duration":1505},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698867622456,"stop":1698867622457,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698867622457,"stop":1698867622459,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1255-298"},{"name":"thread","value":"2170-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthNorfolkCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":165,"unknown":0,"total":170},"items":[{"uid":"68554b54aa3753af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1081//#testresult/68554b54aa3753af","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801583730,"stop":1698801587450,"duration":3720}},{"uid":"9248dcb5ddcf8896","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1079//#testresult/9248dcb5ddcf8896","status":"passed","time":{"start":1698788738448,"stop":1698788740385,"duration":1937}},{"uid":"67ac972b436b69c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1077//#testresult/67ac972b436b69c2","status":"passed","time":{"start":1698715205330,"stop":1698715207012,"duration":1682}},{"uid":"9b6ea7456b897a55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/9b6ea7456b897a55","status":"passed","time":{"start":1698701546083,"stop":1698701547804,"duration":1721}},{"uid":"b5637a89e4977d35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/b5637a89e4977d35","status":"passed","time":{"start":1698700445087,"stop":1698700449087,"duration":4000}},{"uid":"ac6f5535b650be83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/ac6f5535b650be83","status":"passed","time":{"start":1698693148712,"stop":1698693150757,"duration":2045}},{"uid":"55a60671f2e34b35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/55a60671f2e34b35","status":"passed","time":{"start":1698692961034,"stop":1698692962853,"duration":1819}},{"uid":"34224f8c09fe09cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/34224f8c09fe09cb","status":"passed","time":{"start":1698646573945,"stop":1698646575678,"duration":1733}},{"uid":"ac625bbaf5cc31f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/ac625bbaf5cc31f8","status":"passed","time":{"start":1698646543522,"stop":1698646545293,"duration":1771}},{"uid":"e6f339f12864da89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/e6f339f12864da89","status":"passed","time":{"start":1698628613373,"stop":1698628616312,"duration":2939}},{"uid":"70c89f2c73af743e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/70c89f2c73af743e","status":"passed","time":{"start":1698615372556,"stop":1698615374179,"duration":1623}},{"uid":"77c0633a622f0ad9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1063//#testresult/77c0633a622f0ad9","status":"passed","time":{"start":1698615286157,"stop":1698615287775,"duration":1618}},{"uid":"c47e27d6e1504cf8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1061//#testresult/c47e27d6e1504cf8","status":"passed","time":{"start":1698615386004,"stop":1698615387512,"duration":1508}},{"uid":"e8b0ea5e531af37b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1054//#testresult/e8b0ea5e531af37b","status":"passed","time":{"start":1698542597455,"stop":1698542599194,"duration":1739}},{"uid":"d43ad0f831841cf2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1053//#testresult/d43ad0f831841cf2","status":"passed","time":{"start":1698455613364,"stop":1698455617968,"duration":4604}},{"uid":"395e8a46d8837388","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1051//#testresult/395e8a46d8837388","status":"passed","time":{"start":1698369289359,"stop":1698369292425,"duration":3066}},{"uid":"9fd2519e5cb06dc3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1050//#testresult/9fd2519e5cb06dc3","status":"passed","time":{"start":1698283125982,"stop":1698283131119,"duration":5137}},{"uid":"486447aaf0eede27","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1049//#testresult/486447aaf0eede27","status":"passed","time":{"start":1698196735994,"stop":1698196737975,"duration":1981}},{"uid":"71b08880fa5ec0c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1048//#testresult/71b08880fa5ec0c0","status":"passed","time":{"start":1698178261254,"stop":1698178263404,"duration":2150}},{"uid":"ea63fe6f4b87d3bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1047//#testresult/ea63fe6f4b87d3bb","status":"passed","time":{"start":1698178415729,"stop":1698178417393,"duration":1664}}]},"tags":[]},"source":"af5c4b3c99b1d12.json","parameterValues":["SouthNorfolkCouncil"]}