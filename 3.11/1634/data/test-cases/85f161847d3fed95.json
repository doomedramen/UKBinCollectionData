{"uid":"85f161847d3fed95","name":"Validate Council Output [WestSuffolkCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"446a4369fb450b9e3ee2f74bbf8ed65b","time":{"start":1711240386261,"stop":1711240398609,"duration":12348},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7fc1a44ffc40>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc1a3619350>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bcc0642c554b5776d89242b0b42bfede\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fc1a426f380>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7fc1a44ffc40>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc1a3619350>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bcc0642c554b5776d89242b0b42bfede\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fc1a426f380>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Given the council: WestSuffolkCouncil","time":{"start":1711240386261,"stop":1711240386262,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestSuffolkCouncil using local and the http://selenium:4444 is set","time":{"start":1711240386262,"stop":1711240398609,"duration":12347},"status":"failed","statusMessage":"Message: \n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1499-307"},{"name":"thread","value":"2784-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":193,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":193},"items":[{"uid":"3d9f54e594859224","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1626//#testresult/3d9f54e594859224","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1711153742686,"stop":1711153754417,"duration":11731}},{"uid":"18c27ef33f3df8ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1625//#testresult/18c27ef33f3df8ed","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1711067360209,"stop":1711067373964,"duration":13755}},{"uid":"d280b698d6884cd1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1624//#testresult/d280b698d6884cd1","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710981054795,"stop":1710981069027,"duration":14232}},{"uid":"1a8fc39b55b577ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1621//#testresult/1a8fc39b55b577ac","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710971075745,"stop":1710971087519,"duration":11774}},{"uid":"70defc8a2f635c34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1619//#testresult/70defc8a2f635c34","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710894518506,"stop":1710894529010,"duration":10504}},{"uid":"e17794609b227a72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1615//#testresult/e17794609b227a72","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710808161327,"stop":1710808174877,"duration":13550}},{"uid":"a8d763c9b3c23ffa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1609//#testresult/a8d763c9b3c23ffa","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710721880089,"stop":1710721890684,"duration":10595}},{"uid":"924b11edeb0c49ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1608//#testresult/924b11edeb0c49ae","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710635543609,"stop":1710635556130,"duration":12521}},{"uid":"2363ce4850b6194d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1607//#testresult/2363ce4850b6194d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710548880361,"stop":1710548895078,"duration":14717}},{"uid":"edc96834bbd43407","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1605//#testresult/edc96834bbd43407","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710462567831,"stop":1710462582467,"duration":14636}},{"uid":"a8d9c30c0302b3a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1604//#testresult/a8d9c30c0302b3a1","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710452989643,"stop":1710453001743,"duration":12100}},{"uid":"ffb7b739fa920db0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1602//#testresult/ffb7b739fa920db0","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710376142660,"stop":1710376155316,"duration":12656}},{"uid":"b4ee8f755d4dd508","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1601//#testresult/b4ee8f755d4dd508","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710289706000,"stop":1710289718460,"duration":12460}},{"uid":"eda73c5c6ac32a0b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1600//#testresult/eda73c5c6ac32a0b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710203348166,"stop":1710203359375,"duration":11209}},{"uid":"748a6b60930b7c63","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1599//#testresult/748a6b60930b7c63","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710117094712,"stop":1710117109915,"duration":15203}},{"uid":"ae5d041264cecbd7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1598//#testresult/ae5d041264cecbd7","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1710030755551,"stop":1710030768742,"duration":13191}},{"uid":"d795c45be5ca0c89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1597//#testresult/d795c45be5ca0c89","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1709944186579,"stop":1709944198874,"duration":12295}},{"uid":"203c70b56f11b0ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1596//#testresult/203c70b56f11b0ef","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1709857767817,"stop":1709857781833,"duration":14016}},{"uid":"6583ab4fa248876d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1595//#testresult/6583ab4fa248876d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1709771064437,"stop":1709771080620,"duration":16183}},{"uid":"d24368df03735e47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1594//#testresult/d24368df03735e47","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1709684952275,"stop":1709684966833,"duration":14558}}]},"tags":[]},"source":"85f161847d3fed95.json","parameterValues":["WestSuffolkCouncil","local","http://selenium:4444"]}