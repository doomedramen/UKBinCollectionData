{"uid":"6b9c195f8d4b169e","name":"Validate Council Output [NeathPortTalbotCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"68717d64a9b5b73045a4198b6f1e2a64","time":{"start":1700443191752,"stop":1700443196158,"duration":4406},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (589, 627)\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x558bb9674fb3 <unknown>\n#1 0x558bb93484a7 <unknown>\n#2 0x558bb9395ecd <unknown>\n#3 0x558bb939426d <unknown>\n#4 0x558bb9392028 <unknown>\n#5 0x558bb9391097 <unknown>\n#6 0x558bb9385d59 <unknown>\n#7 0x558bb93b1942 <unknown>\n#8 0x558bb9385776 <unknown>\n#9 0x558bb93b1b0e <unknown>\n#10 0x558bb93cac02 <unknown>\n#11 0x558bb93b1713 <unknown>\n#12 0x558bb938418b <unknown>\n#13 0x558bb9384f7e <unknown>\n#14 0x558bb963a8d8 <unknown>\n#15 0x558bb963e800 <unknown>\n#16 0x558bb9648cfc <unknown>\n#17 0x558bb963f418 <unknown>\n#18 0x558bb960c42f <unknown>\n#19 0x558bb96634e8 <unknown>\n#20 0x558bb96636b4 <unknown>\n#21 0x558bb9674143 <unknown>\n#22 0x7ff1c2a94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fa01cd3d080>\nrequest = <FixtureRequest for <Function test_scenario_outline[NeathPortTalbotCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa0092df250>, 'council': 'NeathPortTalbotCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NeathPortTalbotCouncil.py:38: in parse_data\n    cookieAccept.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa0094dc3d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x558bb96636b4 \\\\u003Cunknown>\\\\n#21 0x558bb9674143 \\\\u003Cunknown>\\\\n#22 0x7ff1c2a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (589, 627)\nE         (Session info: headless chrome=118.0.5993.117)\nE       Stacktrace:\nE       #0 0x558bb9674fb3 <unknown>\nE       #1 0x558bb93484a7 <unknown>\nE       #2 0x558bb9395ecd <unknown>\nE       #3 0x558bb939426d <unknown>\nE       #4 0x558bb9392028 <unknown>\nE       #5 0x558bb9391097 <unknown>\nE       #6 0x558bb9385d59 <unknown>\nE       #7 0x558bb93b1942 <unknown>\nE       #8 0x558bb9385776 <unknown>\nE       #9 0x558bb93b1b0e <unknown>\nE       #10 0x558bb93cac02 <unknown>\nE       #11 0x558bb93b1713 <unknown>\nE       #12 0x558bb938418b <unknown>\nE       #13 0x558bb9384f7e <unknown>\nE       #14 0x558bb963a8d8 <unknown>\nE       #15 0x558bb963e800 <unknown>\nE       #16 0x558bb9648cfc <unknown>\nE       #17 0x558bb963f418 <unknown>\nE       #18 0x558bb960c42f <unknown>\nE       #19 0x558bb96634e8 <unknown>\nE       #20 0x558bb96636b4 <unknown>\nE       #21 0x558bb9674143 <unknown>\nE       #22 0x7ff1c2a94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (589, 627)\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x558bb9674fb3 <unknown>\n#1 0x558bb93484a7 <unknown>\n#2 0x558bb9395ecd <unknown>\n#3 0x558bb939426d <unknown>\n#4 0x558bb9392028 <unknown>\n#5 0x558bb9391097 <unknown>\n#6 0x558bb9385d59 <unknown>\n#7 0x558bb93b1942 <unknown>\n#8 0x558bb9385776 <unknown>\n#9 0x558bb93b1b0e <unknown>\n#10 0x558bb93cac02 <unknown>\n#11 0x558bb93b1713 <unknown>\n#12 0x558bb938418b <unknown>\n#13 0x558bb9384f7e <unknown>\n#14 0x558bb963a8d8 <unknown>\n#15 0x558bb963e800 <unknown>\n#16 0x558bb9648cfc <unknown>\n#17 0x558bb963f418 <unknown>\n#18 0x558bb960c42f <unknown>\n#19 0x558bb96634e8 <unknown>\n#20 0x558bb96636b4 <unknown>\n#21 0x558bb9674143 <unknown>\n#22 0x7ff1c2a94ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fa01cd3d080>\nrequest = <FixtureRequest for <Function test_scenario_outline[NeathPortTalbotCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa0092df250>, 'council': 'NeathPortTalbotCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NeathPortTalbotCouncil.py:38: in parse_data\n    cookieAccept.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa0094dc3d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x558bb96636b4 \\\\u003Cunknown>\\\\n#21 0x558bb9674143 \\\\u003Cunknown>\\\\n#22 0x7ff1c2a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (589, 627)\nE         (Session info: headless chrome=118.0.5993.117)\nE       Stacktrace:\nE       #0 0x558bb9674fb3 <unknown>\nE       #1 0x558bb93484a7 <unknown>\nE       #2 0x558bb9395ecd <unknown>\nE       #3 0x558bb939426d <unknown>\nE       #4 0x558bb9392028 <unknown>\nE       #5 0x558bb9391097 <unknown>\nE       #6 0x558bb9385d59 <unknown>\nE       #7 0x558bb93b1942 <unknown>\nE       #8 0x558bb9385776 <unknown>\nE       #9 0x558bb93b1b0e <unknown>\nE       #10 0x558bb93cac02 <unknown>\nE       #11 0x558bb93b1713 <unknown>\nE       #12 0x558bb938418b <unknown>\nE       #13 0x558bb9384f7e <unknown>\nE       #14 0x558bb963a8d8 <unknown>\nE       #15 0x558bb963e800 <unknown>\nE       #16 0x558bb9648cfc <unknown>\nE       #17 0x558bb963f418 <unknown>\nE       #18 0x558bb960c42f <unknown>\nE       #19 0x558bb96634e8 <unknown>\nE       #20 0x558bb96636b4 <unknown>\nE       #21 0x558bb9674143 <unknown>\nE       #22 0x7ff1c2a94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council: NeathPortTalbotCouncil","time":{"start":1700443191752,"stop":1700443191753,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from NeathPortTalbotCouncil using local and the http://selenium:4444 is set","time":{"start":1700443191753,"stop":1700443196158,"duration":4405},"status":"failed","statusMessage":"Message: element click intercepted: Element is not clickable at point (589, 627)\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x558bb9674fb3 <unknown>\n#1 0x558bb93484a7 <unknown>\n#2 0x558bb9395ecd <unknown>\n#3 0x558bb939426d <unknown>\n#4 0x558bb9392028 <unknown>\n#5 0x558bb9391097 <unknown>\n#6 0x558bb9385d59 <unknown>\n#7 0x558bb93b1942 <unknown>\n#8 0x558bb9385776 <unknown>\n#9 0x558bb93b1b0e <unknown>\n#10 0x558bb93cac02 <unknown>\n#11 0x558bb93b1713 <unknown>\n#12 0x558bb938418b <unknown>\n#13 0x558bb9384f7e <unknown>\n#14 0x558bb963a8d8 <unknown>\n#15 0x558bb963e800 <unknown>\n#16 0x558bb9648cfc <unknown>\n#17 0x558bb963f418 <unknown>\n#18 0x558bb960c42f <unknown>\n#19 0x558bb96634e8 <unknown>\n#20 0x558bb96636b4 <unknown>\n#21 0x558bb9674143 <unknown>\n#22 0x7ff1c2a94ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (589, 627)\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x558bb9674fb3 <unknown>\n#1 0x558bb93484a7 <unknown>\n#2 0x558bb9395ecd <unknown>\n#3 0x558bb939426d <unknown>\n#4 0x558bb9392028 <unknown>\n#5 0x558bb9391097 <unknown>\n#6 0x558bb9385d59 <unknown>\n#7 0x558bb93b1942 <unknown>\n#8 0x558bb9385776 <unknown>\n#9 0x558bb93b1b0e <unknown>\n#10 0x558bb93cac02 <unknown>\n#11 0x558bb93b1713 <unknown>\n#12 0x558bb938418b <unknown>\n#13 0x558bb9384f7e <unknown>\n#14 0x558bb963a8d8 <unknown>\n#15 0x558bb963e800 <unknown>\n#16 0x558bb9648cfc <unknown>\n#17 0x558bb963f418 <unknown>\n#18 0x558bb960c42f <unknown>\n#19 0x558bb96634e8 <unknown>\n#20 0x558bb96636b4 <unknown>\n#21 0x558bb9674143 <unknown>\n#22 0x7ff1c2a94ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1498-492"},{"name":"thread","value":"2725-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NeathPortTalbotCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":20},"items":[{"uid":"1907d527280f0359","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1134//#testresult/1907d527280f0359","status":"failed","statusDetails":"ValueError: time data 'Monday, 20\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'","time":{"start":1700357000721,"stop":1700357012783,"duration":12062}},{"uid":"27be4728653ddb76","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1133//#testresult/27be4728653ddb76","status":"passed","time":{"start":1700270274655,"stop":1700270285750,"duration":11095}},{"uid":"d8e4160196f2ad63","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1132//#testresult/d8e4160196f2ad63","status":"passed","time":{"start":1700183922028,"stop":1700183927192,"duration":5164}},{"uid":"af96a0546b0707cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1131//#testresult/af96a0546b0707cb","status":"passed","time":{"start":1700097576623,"stop":1700097582601,"duration":5978}},{"uid":"b2ead14a5e1124dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1129//#testresult/b2ead14a5e1124dd","status":"passed","time":{"start":1700011079313,"stop":1700011084499,"duration":5186}},{"uid":"aa97072a337f4ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1128//#testresult/aa97072a337f4ef","status":"passed","time":{"start":1699924689761,"stop":1699924697004,"duration":7243}},{"uid":"1e5e43353c4ce3d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1127//#testresult/1e5e43353c4ce3d4","status":"failed","statusDetails":"ValueError: time data 'Monday, 13\\xa0November (Today) 2023' does not match format '%A, %d %B %Y'","time":{"start":1699838296245,"stop":1699838309878,"duration":13633}},{"uid":"9c26bcc2546712f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1126//#testresult/9c26bcc2546712f3","status":"failed","statusDetails":"ValueError: time data 'Monday, 13\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'","time":{"start":1699752276784,"stop":1699752317055,"duration":40271}},{"uid":"82be1ce53abebfef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/82be1ce53abebfef","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (589, 627)\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x562e6498bfb3 <unknown>\n#1 0x562e6465f4a7 <unknown>\n#2 0x562e646acecd <unknown>\n#3 0x562e646ab26d <unknown>\n#4 0x562e646a9028 <unknown>\n#5 0x562e646a8097 <unknown>\n#6 0x562e6469cd59 <unknown>\n#7 0x562e646c8942 <unknown>\n#8 0x562e6469c776 <unknown>\n#9 0x562e646c8b0e <unknown>\n#10 0x562e646e1c02 <unknown>\n#11 0x562e646c8713 <unknown>\n#12 0x562e6469b18b <unknown>\n#13 0x562e6469bf7e <unknown>\n#14 0x562e649518d8 <unknown>\n#15 0x562e64955800 <unknown>\n#16 0x562e6495fcfc <unknown>\n#17 0x562e64956418 <unknown>\n#18 0x562e6492342f <unknown>\n#19 0x562e6497a4e8 <unknown>\n#20 0x562e6497a6b4 <unknown>\n#21 0x562e6498b143 <unknown>\n#22 0x7fa51d494ac3 <unknown>","time":{"start":1699669148170,"stop":1699669186280,"duration":38110}},{"uid":"a5cfc4ea0f5197bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/a5cfc4ea0f5197bb","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (589, 636)\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x55d870118fb3 <unknown>\n#1 0x55d86fdec4a7 <unknown>\n#2 0x55d86fe39ecd <unknown>\n#3 0x55d86fe3826d <unknown>\n#4 0x55d86fe36028 <unknown>\n#5 0x55d86fe35097 <unknown>\n#6 0x55d86fe29d59 <unknown>\n#7 0x55d86fe55942 <unknown>\n#8 0x55d86fe29776 <unknown>\n#9 0x55d86fe55b0e <unknown>\n#10 0x55d86fe6ec02 <unknown>\n#11 0x55d86fe55713 <unknown>\n#12 0x55d86fe2818b <unknown>\n#13 0x55d86fe28f7e <unknown>\n#14 0x55d8700de8d8 <unknown>\n#15 0x55d8700e2800 <unknown>\n#16 0x55d8700eccfc <unknown>\n#17 0x55d8700e3418 <unknown>\n#18 0x55d8700b042f <unknown>\n#19 0x55d8701074e8 <unknown>\n#20 0x55d8701076b4 <unknown>\n#21 0x55d870118143 <unknown>\n#22 0x7fe92ae94ac3 <unknown>","time":{"start":1699578954744,"stop":1699578959891,"duration":5147}},{"uid":"32300b4dfe6982d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/32300b4dfe6982d0","status":"passed","time":{"start":1699492636340,"stop":1699492662015,"duration":25675}},{"uid":"519a4a4c1ff0de87","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/519a4a4c1ff0de87","status":"failed","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: Cannot locate option with value: 10023947752; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception","time":{"start":1699481537685,"stop":1699481552003,"duration":14318}},{"uid":"8a44c2ff773661c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/8a44c2ff773661c4","status":"passed","time":{"start":1699481455950,"stop":1699481479154,"duration":23204}},{"uid":"b45dba061473c059","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/b45dba061473c059","status":"passed","time":{"start":1699445103950,"stop":1699445115668,"duration":11718}},{"uid":"a6831244b9188e62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1115//#testresult/a6831244b9188e62","status":"passed","time":{"start":1699406163303,"stop":1699406174033,"duration":10730}},{"uid":"6e09a501106b2aa2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1114//#testresult/6e09a501106b2aa2","status":"passed","time":{"start":1699319881328,"stop":1699319887233,"duration":5905}},{"uid":"7a90d07bc399556","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1113//#testresult/7a90d07bc399556","status":"failed","statusDetails":"ValueError: time data 'Monday, 6\\xa0November (Today) 2023' does not match format '%A, %d %B %Y'","time":{"start":1699233554454,"stop":1699233560605,"duration":6151}},{"uid":"e3da6c4819dbb5ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1111//#testresult/e3da6c4819dbb5ac","status":"failed","statusDetails":"ValueError: time data 'Monday, 6\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'","time":{"start":1699171029492,"stop":1699171051960,"duration":22468}},{"uid":"a968f9cb681df951","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1112//#testresult/a968f9cb681df951","status":"failed","statusDetails":"ValueError: time data 'Monday, 6\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'","time":{"start":1699170745216,"stop":1699170756492,"duration":11276}}]},"tags":[]},"source":"6b9c195f8d4b169e.json","parameterValues":["NeathPortTalbotCouncil","local","http://selenium:4444"]}