{"uid":"cba6998d42d1804c","name":"Validate Council Output [MidAndEastAntrimBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a483f237a3c589a1d176bf722aa074f8","time":{"start":1720053220405,"stop":1720053252786,"duration":32381},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f7bda8e6480>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidAndEastAntrimBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f7bec532e10>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidAndEastAntrimBoroughCouncil.CouncilClass object at 0x7f7bda528150>\npage = '<div id=\"divCalendarGraphics\"><br>  UnableToContinue--InvalidUserCredentials</div>'\nkwargs = {'council_module_str': 'MidAndEastAntrimBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"04e442e46959522bbf6ed98bc5eb88d0\")>\nuser_postcode = '100 Galgorm Road', web_driver = 'http://localhost:4444'\nheadless = True\noptions = <selenium.webdriver.chrome.options.Options object at 0x7f7bda528190>\nnumber = 0\ninputElement_pc = <selenium.webdriver.remote.webelement.WebElement (session=\"04e442e46959522bbf6ed98bc5eb88d0\", element=\"f.FC2D305C023C85B085E66DFB98BC4C89.d.FC0A6834A85B85F2E55BFBA650435DAB.e.25\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            page = \"https://www.midandeastantrim.gov.uk/resident/waste-recycling/collection-dates/\"\n    \n            # Assign user info\n            user_postcode = kwargs.get(\"postcode\")\n            # not used: user_paon = kwargs.get(\"paon\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n    \n            # Create Selenium webdriver\n            options = webdriver.ChromeOptions()\n            options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])\n            driver = create_webdriver(web_driver, headless, None, __name__)\n    \n            driver.get(page)\n    \n            time.sleep(5)\n            number = 0\n            driver.switch_to.frame(number)\n            # Enter postcode in text box and wait\n            inputElement_pc = driver.find_element(By.ID, \"txtAjaxSearch\")\n            inputElement_pc.send_keys(user_postcode)\n    \n            time.sleep(5)\n    \n            # Submit address information and wait - selecting the top one only\n            # if it is an exact match then it will go straight to the results\n            try:\n                button = driver.find_element(By.XPATH, '//*[@id=\"show-button-0\"]')\n                driver.execute_script(\"arguments[0].click();\", button)\n            except NoSuchElementException:\n                pass\n    \n            time.sleep(4)\n    \n            # Read next collection information\n            page = driver.find_element(By.ID, \"divCalendarGraphics\").get_attribute(\n                \"outerHTML\"\n            )\n    \n            # Make a BS4 object - remove bold tags and add @ so we can split the lines later\n            soup = BeautifulSoup(\n                page.strip()\n                .replace(\"<b>\", \"\")\n                .replace(\"</b>\", \"\")\n                .replace(\"<br>\", \"@\"),\n                features=\"html.parser\",\n            )\n            soup.prettify()\n    \n            # Data to return\n            data = {\"bins\": []}\n    \n            # Valid bin types\n            binTypes = [\"Refuse\", \"Garden\"]\n    \n            # Value to create dict for bin values\n            keys, values = [], []\n    \n            # Loop though html for text containing bins\n            # example of html (bold tags removed above)\n            # <div id=\"divCalendarGraphics\">\n            # <br>  <b>Refuse</b>: Tue 14 Nov then every alternate  Tue<br><b>Recycling</b>: No Recycling waste collection for this address<br><b>Garden</b>: Tue 21 Nov then every alternate  Tue<br><img src=\"img/Gif-Spacer.gif\" alt=\"spacer\" height=\"1\" width=\"30\">\n            # split by br tag and take first 4 splits\n            lines = soup.text.split(\"@\", 4)\n            for line in lines[1:4]:\n                keys.append(line.split(\":\")[0].strip())\n                # strip out the day and month from the text\n>               values.append(line.split(\":\")[1].strip().split(\" \")[:3])\nE               IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/MidAndEastAntrimBoroughCouncil.py:91: IndexError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f7bda8e6480>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidAndEastAntrimBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f7bec532e10>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidAndEastAntrimBoroughCouncil.CouncilClass object at 0x7f7bda528150>\npage = '<div id=\"divCalendarGraphics\"><br>  UnableToContinue--InvalidUserCredentials</div>'\nkwargs = {'council_module_str': 'MidAndEastAntrimBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"04e442e46959522bbf6ed98bc5eb88d0\")>\nuser_postcode = '100 Galgorm Road', web_driver = 'http://localhost:4444'\nheadless = True\noptions = <selenium.webdriver.chrome.options.Options object at 0x7f7bda528190>\nnumber = 0\ninputElement_pc = <selenium.webdriver.remote.webelement.WebElement (session=\"04e442e46959522bbf6ed98bc5eb88d0\", element=\"f.FC2D305C023C85B085E66DFB98BC4C89.d.FC0A6834A85B85F2E55BFBA650435DAB.e.25\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            page = \"https://www.midandeastantrim.gov.uk/resident/waste-recycling/collection-dates/\"\n    \n            # Assign user info\n            user_postcode = kwargs.get(\"postcode\")\n            # not used: user_paon = kwargs.get(\"paon\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n    \n            # Create Selenium webdriver\n            options = webdriver.ChromeOptions()\n            options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])\n            driver = create_webdriver(web_driver, headless, None, __name__)\n    \n            driver.get(page)\n    \n            time.sleep(5)\n            number = 0\n            driver.switch_to.frame(number)\n            # Enter postcode in text box and wait\n            inputElement_pc = driver.find_element(By.ID, \"txtAjaxSearch\")\n            inputElement_pc.send_keys(user_postcode)\n    \n            time.sleep(5)\n    \n            # Submit address information and wait - selecting the top one only\n            # if it is an exact match then it will go straight to the results\n            try:\n                button = driver.find_element(By.XPATH, '//*[@id=\"show-button-0\"]')\n                driver.execute_script(\"arguments[0].click();\", button)\n            except NoSuchElementException:\n                pass\n    \n            time.sleep(4)\n    \n            # Read next collection information\n            page = driver.find_element(By.ID, \"divCalendarGraphics\").get_attribute(\n                \"outerHTML\"\n            )\n    \n            # Make a BS4 object - remove bold tags and add @ so we can split the lines later\n            soup = BeautifulSoup(\n                page.strip()\n                .replace(\"<b>\", \"\")\n                .replace(\"</b>\", \"\")\n                .replace(\"<br>\", \"@\"),\n                features=\"html.parser\",\n            )\n            soup.prettify()\n    \n            # Data to return\n            data = {\"bins\": []}\n    \n            # Valid bin types\n            binTypes = [\"Refuse\", \"Garden\"]\n    \n            # Value to create dict for bin values\n            keys, values = [], []\n    \n            # Loop though html for text containing bins\n            # example of html (bold tags removed above)\n            # <div id=\"divCalendarGraphics\">\n            # <br>  <b>Refuse</b>: Tue 14 Nov then every alternate  Tue<br><b>Recycling</b>: No Recycling waste collection for this address<br><b>Garden</b>: Tue 21 Nov then every alternate  Tue<br><img src=\"img/Gif-Spacer.gif\" alt=\"spacer\" height=\"1\" width=\"30\">\n            # split by br tag and take first 4 splits\n            lines = soup.text.split(\"@\", 4)\n            for line in lines[1:4]:\n                keys.append(line.split(\":\")[0].strip())\n                # strip out the day and month from the text\n>               values.append(line.split(\":\")[1].strip().split(\" \")[:3])\nE               IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/MidAndEastAntrimBoroughCouncil.py:91: IndexError","steps":[{"name":"Given the council","time":{"start":1720053220405,"stop":1720053220405,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1720053220406,"stop":1720053252786,"duration":32380},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5f07cc592b052acb","name":"stdout","source":"5f07cc592b052acb.txt","type":"text/plain","size":100}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1269-204"},{"name":"thread","value":"2805-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MidAndEastAntrimBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":56,"unknown":0,"total":57},"items":[{"uid":"5122b5ba2d48bd18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1967//#testresult/5122b5ba2d48bd18","status":"passed","time":{"start":1719966788103,"stop":1719966822854,"duration":34751}},{"uid":"f7288f0cb6191b95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1966//#testresult/f7288f0cb6191b95","status":"passed","time":{"start":1719880367026,"stop":1719880436350,"duration":69324}},{"uid":"3e7592611a8693e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1965//#testresult/3e7592611a8693e4","status":"passed","time":{"start":1719794473626,"stop":1719794564300,"duration":90674}},{"uid":"61e4d40be421a15f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1964//#testresult/61e4d40be421a15f","status":"passed","time":{"start":1719708003445,"stop":1719708091013,"duration":87568}},{"uid":"6c8bc0e9d348534d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1962//#testresult/6c8bc0e9d348534d","status":"passed","time":{"start":1719621175557,"stop":1719621218875,"duration":43318}},{"uid":"41008eb60001c019","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1958//#testresult/41008eb60001c019","status":"passed","time":{"start":1719534749306,"stop":1719534796858,"duration":47552}},{"uid":"cf87a6935210bc0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1954//#testresult/cf87a6935210bc0c","status":"passed","time":{"start":1719362203119,"stop":1719362272231,"duration":69112}},{"uid":"183aa5988337a989","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1953//#testresult/183aa5988337a989","status":"passed","time":{"start":1719275799870,"stop":1719275866682,"duration":66812}},{"uid":"aaca3252ea999442","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1952//#testresult/aaca3252ea999442","status":"passed","time":{"start":1719189470184,"stop":1719189559883,"duration":89699}},{"uid":"ae999aa4902dc8c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1951//#testresult/ae999aa4902dc8c8","status":"passed","time":{"start":1719103051966,"stop":1719103137836,"duration":85870}},{"uid":"9630a75ee4d59bc3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1950//#testresult/9630a75ee4d59bc3","status":"passed","time":{"start":1719016593815,"stop":1719016655784,"duration":61969}},{"uid":"1a7456a00f6deae6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1949//#testresult/1a7456a00f6deae6","status":"passed","time":{"start":1718930288032,"stop":1718930349777,"duration":61745}},{"uid":"4cd77dbfef836750","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1948//#testresult/4cd77dbfef836750","status":"passed","time":{"start":1718843817519,"stop":1718843846758,"duration":29239}},{"uid":"416cb08af55a0180","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1947//#testresult/416cb08af55a0180","status":"passed","time":{"start":1718757490046,"stop":1718757530064,"duration":40018}},{"uid":"e1c1053b777693fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1946//#testresult/e1c1053b777693fa","status":"passed","time":{"start":1718671043332,"stop":1718671087347,"duration":44015}},{"uid":"62dc08cd8c00da4e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1945//#testresult/62dc08cd8c00da4e","status":"passed","time":{"start":1718584836057,"stop":1718584878529,"duration":42472}},{"uid":"c206e4f578a636ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1944//#testresult/c206e4f578a636ee","status":"passed","time":{"start":1718498215950,"stop":1718498309014,"duration":93064}},{"uid":"a85203fa2bbfd532","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1943//#testresult/a85203fa2bbfd532","status":"passed","time":{"start":1718411821187,"stop":1718411899990,"duration":78803}},{"uid":"9f4c7b92267b423c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1942//#testresult/9f4c7b92267b423c","status":"passed","time":{"start":1718325350980,"stop":1718325376743,"duration":25763}},{"uid":"a31b4dce9ecddf5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1939//#testresult/a31b4dce9ecddf5b","status":"passed","time":{"start":1718239011027,"stop":1718239049036,"duration":38009}}]},"tags":[]},"source":"cba6998d42d1804c.json","parameterValues":["MidAndEastAntrimBoroughCouncil"]}