{"uid":"84420865299f76d7","name":"Validate Council Output [RushmoorCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9e9824bacc749482fde9fb74bc6e375c","time":{"start":1701036220635,"stop":1701036221514,"duration":879},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa62a14f100>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa616530250>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa616530250>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fa62a14f100>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa616530250>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fa616530250>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: RushmoorCouncil","time":{"start":1701036220635,"stop":1701036220636,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from RushmoorCouncil using None and the None is set","time":{"start":1701036220636,"stop":1701036221512,"duration":876},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701036221512,"stop":1701036221512,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701036221512,"stop":1701036221514,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az842-952"},{"name":"thread","value":"2987-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RushmoorCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":30},"items":[{"uid":"e6e54fbf24a8972c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1150//#testresult/e6e54fbf24a8972c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036194484,"stop":1701036195342,"duration":858}},{"uid":"326bae9280f98ec5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1148//#testresult/326bae9280f98ec5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700961790311,"stop":1700961791174,"duration":863}},{"uid":"5e57397b19ac4a64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1147//#testresult/5e57397b19ac4a64","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700875004693,"stop":1700875005541,"duration":848}},{"uid":"75c161a6ca98a721","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1146//#testresult/75c161a6ca98a721","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700788621088,"stop":1700788621910,"duration":822}},{"uid":"84349025c9ce1ce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1145//#testresult/84349025c9ce1ce","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700702323757,"stop":1700702325029,"duration":1272}},{"uid":"88b946bc3e79a8c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1143//#testresult/88b946bc3e79a8c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646416044,"stop":1700646416628,"duration":584}},{"uid":"e4b7a064e09c5508","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1144//#testresult/e4b7a064e09c5508","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646440493,"stop":1700646441181,"duration":688}},{"uid":"f1e1d5cf034d7781","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1141//#testresult/f1e1d5cf034d7781","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700616086598,"stop":1700616087551,"duration":953}},{"uid":"735e8d7ed0b7846f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1136//#testresult/735e8d7ed0b7846f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700529741621,"stop":1700529742752,"duration":1131}},{"uid":"c600375d795175d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1135//#testresult/c600375d795175d9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443231043,"stop":1700443232314,"duration":1271}},{"uid":"e2196a8d591ae830","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1134//#testresult/e2196a8d591ae830","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700357021883,"stop":1700357022511,"duration":628}},{"uid":"e11089e467c9bd92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1133//#testresult/e11089e467c9bd92","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270323221,"stop":1700270323902,"duration":681}},{"uid":"fd081a1ead1b9ad6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1132//#testresult/fd081a1ead1b9ad6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183954041,"stop":1700183955064,"duration":1023}},{"uid":"959f2244cf482a13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1131//#testresult/959f2244cf482a13","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097596451,"stop":1700097597127,"duration":676}},{"uid":"9e2b2a41e9267e88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1129//#testresult/9e2b2a41e9267e88","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700011133687,"stop":1700011134322,"duration":635}},{"uid":"d8ed0fe46c0fb4ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1128//#testresult/d8ed0fe46c0fb4ee","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699924907808,"stop":1699924908755,"duration":947}},{"uid":"c68689cc9c11d61d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1127//#testresult/c68689cc9c11d61d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699838330523,"stop":1699838331446,"duration":923}},{"uid":"1837648856812b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1126//#testresult/1837648856812b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699752115387,"stop":1699752116338,"duration":951}},{"uid":"5c5b1746d39ff861","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/5c5b1746d39ff861","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699669224869,"stop":1699669227263,"duration":2394}},{"uid":"b63e63fadd6d7064","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/b63e63fadd6d7064","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699578976764,"stop":1699578977470,"duration":706}}]},"tags":[]},"source":"84420865299f76d7.json","parameterValues":["RushmoorCouncil","None","None"]}