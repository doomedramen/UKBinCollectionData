{"uid":"ecfce7bf2f3a7ada","name":"Validate Council Output [TorridgeDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"617b4311b681b19c6f82373e9ef5a04d","time":{"start":1699147445674,"stop":1699147449716,"duration":4042},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f1cb1c225c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f1ca3f74650>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f1ca3f74650>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f1cb1c225c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f1ca3f74650>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f1ca3f74650>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1699147445674,"stop":1699147445675,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from TorridgeDistrictCouncil","time":{"start":1699147445675,"stop":1699147449714,"duration":4039},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699147449714,"stop":1699147449714,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699147449714,"stop":1699147449716,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az586-611"},{"name":"thread","value":"2715-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":175,"unknown":0,"total":179},"items":[{"uid":"2eb1298ac13c25e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1107//#testresult/2eb1298ac13c25e0","status":"passed","time":{"start":1699101684438,"stop":1699101687330,"duration":2892}},{"uid":"f1b4577be3c4f3a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1106//#testresult/f1b4577be3c4f3a7","status":"passed","time":{"start":1699060698684,"stop":1699060701476,"duration":2792}},{"uid":"93249b5822d48539","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1100//#testresult/93249b5822d48539","status":"passed","time":{"start":1699007822260,"stop":1699007824839,"duration":2579}},{"uid":"dcc4eaf64da30adf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1095//#testresult/dcc4eaf64da30adf","status":"passed","time":{"start":1698988827691,"stop":1698988831667,"duration":3976}},{"uid":"3394d69f51a786ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1094//#testresult/3394d69f51a786ca","status":"passed","time":{"start":1698974420243,"stop":1698974423210,"duration":2967}},{"uid":"bde62e6b1f32e786","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1091//#testresult/bde62e6b1f32e786","status":"passed","time":{"start":1698887776691,"stop":1698887779434,"duration":2743}},{"uid":"3e6c91801f5b1222","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1090//#testresult/3e6c91801f5b1222","status":"passed","time":{"start":1698878529267,"stop":1698878532136,"duration":2869}},{"uid":"60eb76cb8b227312","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1089//#testresult/60eb76cb8b227312","status":"passed","time":{"start":1698878303068,"stop":1698878305927,"duration":2859}},{"uid":"b03608b0375ab1f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1086//#testresult/b03608b0375ab1f5","status":"passed","time":{"start":1698867789081,"stop":1698867793910,"duration":4829}},{"uid":"7daf28b0c689f53f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1081//#testresult/7daf28b0c689f53f","status":"passed","time":{"start":1698801734030,"stop":1698801737269,"duration":3239}},{"uid":"81888d292039d18b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1079//#testresult/81888d292039d18b","status":"passed","time":{"start":1698788753939,"stop":1698788759874,"duration":5935}},{"uid":"bcfbdbdad89d05e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1077//#testresult/bcfbdbdad89d05e","status":"passed","time":{"start":1698715229144,"stop":1698715232000,"duration":2856}},{"uid":"ea7b435392462570","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/ea7b435392462570","status":"passed","time":{"start":1698701560948,"stop":1698701563738,"duration":2790}},{"uid":"575495b564332a82","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/575495b564332a82","status":"passed","time":{"start":1698700465851,"stop":1698700468640,"duration":2789}},{"uid":"cc139e06de8c8fba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/cc139e06de8c8fba","status":"passed","time":{"start":1698693204470,"stop":1698693207427,"duration":2957}},{"uid":"c088226f565cb1f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/c088226f565cb1f6","status":"passed","time":{"start":1698692990393,"stop":1698692993272,"duration":2879}},{"uid":"e5ce80cf296876f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/e5ce80cf296876f9","status":"passed","time":{"start":1698646592353,"stop":1698646595219,"duration":2866}},{"uid":"d1d4b58bf2a3a043","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/d1d4b58bf2a3a043","status":"passed","time":{"start":1698646684282,"stop":1698646687489,"duration":3207}},{"uid":"1c0234528cb35168","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/1c0234528cb35168","status":"passed","time":{"start":1698628804107,"stop":1698628808261,"duration":4154}},{"uid":"61499f4b05675586","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/61499f4b05675586","status":"passed","time":{"start":1698615661347,"stop":1698615663847,"duration":2500}}]},"tags":[]},"source":"ecfce7bf2f3a7ada.json","parameterValues":["TorridgeDistrictCouncil"]}