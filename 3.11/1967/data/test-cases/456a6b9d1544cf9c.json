{"uid":"456a6b9d1544cf9c","name":"Validate Council Output [BedfordBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4d48486dc2c0a9c252d5ac44f0d62a3d","time":{"start":1719966601645,"stop":1719966602201,"duration":556},"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7fd184fa3420>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd184c47c10>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7fd184cd89d0>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7fd184fa3420>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd184c47c10>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7fd184cd89d0>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","steps":[{"name":"Given the council","time":{"start":1719966601645,"stop":1719966601645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1719966601646,"stop":1719966602201,"duration":555},"status":"failed","statusMessage":"Could not get latest data!","statusTrace":"ConnectionError: Could not get latest data!\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"149e093764c475b7","name":"stdout","source":"149e093764c475b7.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1536-472"},{"name":"thread","value":"2747-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BedfordBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":54,"unknown":0,"total":55},"items":[{"uid":"d955e06bca881c3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1966//#testresult/d955e06bca881c3c","status":"passed","time":{"start":1719880262755,"stop":1719880268233,"duration":5478}},{"uid":"98e1a51f0d6545be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1965//#testresult/98e1a51f0d6545be","status":"passed","time":{"start":1719794093373,"stop":1719794097051,"duration":3678}},{"uid":"30d50e782df5cf14","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1964//#testresult/30d50e782df5cf14","status":"passed","time":{"start":1719707590537,"stop":1719707593138,"duration":2601}},{"uid":"a6a7be6cb77df32f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1962//#testresult/a6a7be6cb77df32f","status":"passed","time":{"start":1719620953524,"stop":1719620956671,"duration":3147}},{"uid":"1290ec765da2a8a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1958//#testresult/1290ec765da2a8a3","status":"passed","time":{"start":1719534574452,"stop":1719534576953,"duration":2501}},{"uid":"ab232687acf1d0dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1954//#testresult/ab232687acf1d0dc","status":"passed","time":{"start":1719361779938,"stop":1719361784973,"duration":5035}},{"uid":"8475c8afaf9f0457","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1953//#testresult/8475c8afaf9f0457","status":"passed","time":{"start":1719275362950,"stop":1719275366322,"duration":3372}},{"uid":"5d5859d84ef70680","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1952//#testresult/5d5859d84ef70680","status":"passed","time":{"start":1719189087433,"stop":1719189090682,"duration":3249}},{"uid":"69731ac49999de5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1951//#testresult/69731ac49999de5d","status":"passed","time":{"start":1719102760588,"stop":1719102763494,"duration":2906}},{"uid":"b5d048a7b0d67eef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1950//#testresult/b5d048a7b0d67eef","status":"passed","time":{"start":1719016167463,"stop":1719016175822,"duration":8359}},{"uid":"b3c1ca972cefcd79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1949//#testresult/b3c1ca972cefcd79","status":"passed","time":{"start":1718929809124,"stop":1718929811219,"duration":2095}},{"uid":"b528590d344f6a29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1948//#testresult/b528590d344f6a29","status":"passed","time":{"start":1718843346422,"stop":1718843349856,"duration":3434}},{"uid":"a9e305914957aa7b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1947//#testresult/a9e305914957aa7b","status":"passed","time":{"start":1718757037619,"stop":1718757040398,"duration":2779}},{"uid":"13d1023d521f6384","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1946//#testresult/13d1023d521f6384","status":"passed","time":{"start":1718670599395,"stop":1718670601186,"duration":1791}},{"uid":"3ade5bd680bba084","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1945//#testresult/3ade5bd680bba084","status":"passed","time":{"start":1718584378974,"stop":1718584381492,"duration":2518}},{"uid":"528f6765a76bad56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1944//#testresult/528f6765a76bad56","status":"passed","time":{"start":1718498024047,"stop":1718498026149,"duration":2102}},{"uid":"edfa5b007a2e694e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1943//#testresult/edfa5b007a2e694e","status":"passed","time":{"start":1718411381057,"stop":1718411384727,"duration":3670}},{"uid":"3dfae487c3f8e55a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1942//#testresult/3dfae487c3f8e55a","status":"passed","time":{"start":1718324967816,"stop":1718324970691,"duration":2875}},{"uid":"b61e322fbdde2c98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1939//#testresult/b61e322fbdde2c98","status":"passed","time":{"start":1718238573329,"stop":1718238576370,"duration":3041}},{"uid":"3165d354c4a019e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1938//#testresult/3165d354c4a019e4","status":"passed","time":{"start":1718152192805,"stop":1718152196435,"duration":3630}}]},"tags":[]},"source":"456a6b9d1544cf9c.json","parameterValues":["BedfordBoroughCouncil"]}