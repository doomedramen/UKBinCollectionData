{"uid":"12905fd631ddaba","name":"Validate Council Output [SunderlandCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1a7ab024f39f9d5f723a6a4b1c23ccbf","time":{"start":1719621765902,"stop":1719621916671,"duration":150769},"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55ffd18ea69a <unknown>\n#1 0x55ffd15cd0dc <unknown>\n#2 0x55ffd15c4c70 <unknown>\n#3 0x55ffd15b4772 <unknown>\n#4 0x55ffd15b5df2 <unknown>\n#5 0x55ffd15b4a2d <unknown>\n#6 0x55ffd15b4143 <unknown>\n#7 0x55ffd15b4035 <unknown>\n#8 0x55ffd15b1f76 <unknown>\n#9 0x55ffd15b247a <unknown>\n#10 0x55ffd15cfb27 <unknown>\n#11 0x55ffd165c1f5 <unknown>\n#12 0x55ffd163c872 <unknown>\n#13 0x55ffd165b5c3 <unknown>\n#14 0x55ffd163c613 <unknown>\n#15 0x55ffd160c4f7 <unknown>\n#16 0x55ffd160ce4e <unknown>\n#17 0x55ffd18b086b <unknown>\n#18 0x55ffd18b4911 <unknown>\n#19 0x55ffd189c35e <unknown>\n#20 0x55ffd18b5472 <unknown>\n#21 0x55ffd1880cbf <unknown>\n#22 0x55ffd18da098 <unknown>\n#23 0x55ffd18da270 <unknown>\n#24 0x55ffd18e97cc <unknown>\n#25 0x7f517e809ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f07b3cfe7a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f07b5c611d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:33: in parse_data\n    driver.get(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f07b2bedbd0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x55ffd18da270 \\\\u003Cunknown>\\\\n#24 0x55ffd18e97cc \\\\u003Cunknown>\\\\n#25 0x7f517e809ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=126.0.6478.114)\nE       Stacktrace:\nE       #0 0x55ffd18ea69a <unknown>\nE       #1 0x55ffd15cd0dc <unknown>\nE       #2 0x55ffd15c4c70 <unknown>\nE       #3 0x55ffd15b4772 <unknown>\nE       #4 0x55ffd15b5df2 <unknown>\nE       #5 0x55ffd15b4a2d <unknown>\nE       #6 0x55ffd15b4143 <unknown>\nE       #7 0x55ffd15b4035 <unknown>\nE       #8 0x55ffd15b1f76 <unknown>\nE       #9 0x55ffd15b247a <unknown>\nE       #10 0x55ffd15cfb27 <unknown>\nE       #11 0x55ffd165c1f5 <unknown>\nE       #12 0x55ffd163c872 <unknown>\nE       #13 0x55ffd165b5c3 <unknown>\nE       #14 0x55ffd163c613 <unknown>\nE       #15 0x55ffd160c4f7 <unknown>\nE       #16 0x55ffd160ce4e <unknown>\nE       #17 0x55ffd18b086b <unknown>\nE       #18 0x55ffd18b4911 <unknown>\nE       #19 0x55ffd189c35e <unknown>\nE       #20 0x55ffd18b5472 <unknown>\nE       #21 0x55ffd1880cbf <unknown>\nE       #22 0x55ffd18da098 <unknown>\nE       #23 0x55ffd18da270 <unknown>\nE       #24 0x55ffd18e97cc <unknown>\nE       #25 0x7f517e809ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55ffd18ea69a <unknown>\n#1 0x55ffd15cd0dc <unknown>\n#2 0x55ffd15c4c70 <unknown>\n#3 0x55ffd15b4772 <unknown>\n#4 0x55ffd15b5df2 <unknown>\n#5 0x55ffd15b4a2d <unknown>\n#6 0x55ffd15b4143 <unknown>\n#7 0x55ffd15b4035 <unknown>\n#8 0x55ffd15b1f76 <unknown>\n#9 0x55ffd15b247a <unknown>\n#10 0x55ffd15cfb27 <unknown>\n#11 0x55ffd165c1f5 <unknown>\n#12 0x55ffd163c872 <unknown>\n#13 0x55ffd165b5c3 <unknown>\n#14 0x55ffd163c613 <unknown>\n#15 0x55ffd160c4f7 <unknown>\n#16 0x55ffd160ce4e <unknown>\n#17 0x55ffd18b086b <unknown>\n#18 0x55ffd18b4911 <unknown>\n#19 0x55ffd189c35e <unknown>\n#20 0x55ffd18b5472 <unknown>\n#21 0x55ffd1880cbf <unknown>\n#22 0x55ffd18da098 <unknown>\n#23 0x55ffd18da270 <unknown>\n#24 0x55ffd18e97cc <unknown>\n#25 0x7f517e809ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f07b3cfe7a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f07b5c611d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:33: in parse_data\n    driver.get(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f07b2bedbd0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x55ffd18da270 \\\\u003Cunknown>\\\\n#24 0x55ffd18e97cc \\\\u003Cunknown>\\\\n#25 0x7f517e809ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=126.0.6478.114)\nE       Stacktrace:\nE       #0 0x55ffd18ea69a <unknown>\nE       #1 0x55ffd15cd0dc <unknown>\nE       #2 0x55ffd15c4c70 <unknown>\nE       #3 0x55ffd15b4772 <unknown>\nE       #4 0x55ffd15b5df2 <unknown>\nE       #5 0x55ffd15b4a2d <unknown>\nE       #6 0x55ffd15b4143 <unknown>\nE       #7 0x55ffd15b4035 <unknown>\nE       #8 0x55ffd15b1f76 <unknown>\nE       #9 0x55ffd15b247a <unknown>\nE       #10 0x55ffd15cfb27 <unknown>\nE       #11 0x55ffd165c1f5 <unknown>\nE       #12 0x55ffd163c872 <unknown>\nE       #13 0x55ffd165b5c3 <unknown>\nE       #14 0x55ffd163c613 <unknown>\nE       #15 0x55ffd160c4f7 <unknown>\nE       #16 0x55ffd160ce4e <unknown>\nE       #17 0x55ffd18b086b <unknown>\nE       #18 0x55ffd18b4911 <unknown>\nE       #19 0x55ffd189c35e <unknown>\nE       #20 0x55ffd18b5472 <unknown>\nE       #21 0x55ffd1880cbf <unknown>\nE       #22 0x55ffd18da098 <unknown>\nE       #23 0x55ffd18da270 <unknown>\nE       #24 0x55ffd18e97cc <unknown>\nE       #25 0x7f517e809ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","steps":[{"name":"Given the council","time":{"start":1719621765902,"stop":1719621765902,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1719621765902,"stop":1719621916671,"duration":150769},"status":"failed","statusMessage":"Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55ffd18ea69a <unknown>\n#1 0x55ffd15cd0dc <unknown>\n#2 0x55ffd15c4c70 <unknown>\n#3 0x55ffd15b4772 <unknown>\n#4 0x55ffd15b5df2 <unknown>\n#5 0x55ffd15b4a2d <unknown>\n#6 0x55ffd15b4143 <unknown>\n#7 0x55ffd15b4035 <unknown>\n#8 0x55ffd15b1f76 <unknown>\n#9 0x55ffd15b247a <unknown>\n#10 0x55ffd15cfb27 <unknown>\n#11 0x55ffd165c1f5 <unknown>\n#12 0x55ffd163c872 <unknown>\n#13 0x55ffd165b5c3 <unknown>\n#14 0x55ffd163c613 <unknown>\n#15 0x55ffd160c4f7 <unknown>\n#16 0x55ffd160ce4e <unknown>\n#17 0x55ffd18b086b <unknown>\n#18 0x55ffd18b4911 <unknown>\n#19 0x55ffd189c35e <unknown>\n#20 0x55ffd18b5472 <unknown>\n#21 0x55ffd1880cbf <unknown>\n#22 0x55ffd18da098 <unknown>\n#23 0x55ffd18da270 <unknown>\n#24 0x55ffd18e97cc <unknown>\n#25 0x7f517e809ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=126.0.6478.114)\nStacktrace:\n#0 0x55ffd18ea69a <unknown>\n#1 0x55ffd15cd0dc <unknown>\n#2 0x55ffd15c4c70 <unknown>\n#3 0x55ffd15b4772 <unknown>\n#4 0x55ffd15b5df2 <unknown>\n#5 0x55ffd15b4a2d <unknown>\n#6 0x55ffd15b4143 <unknown>\n#7 0x55ffd15b4035 <unknown>\n#8 0x55ffd15b1f76 <unknown>\n#9 0x55ffd15b247a <unknown>\n#10 0x55ffd15cfb27 <unknown>\n#11 0x55ffd165c1f5 <unknown>\n#12 0x55ffd163c872 <unknown>\n#13 0x55ffd165b5c3 <unknown>\n#14 0x55ffd163c613 <unknown>\n#15 0x55ffd160c4f7 <unknown>\n#16 0x55ffd160ce4e <unknown>\n#17 0x55ffd18b086b <unknown>\n#18 0x55ffd18b4911 <unknown>\n#19 0x55ffd189c35e <unknown>\n#20 0x55ffd18b5472 <unknown>\n#21 0x55ffd1880cbf <unknown>\n#22 0x55ffd18da098 <unknown>\n#23 0x55ffd18da270 <unknown>\n#24 0x55ffd18e97cc <unknown>\n#25 0x7f517e809ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f3996ae6028c9e5c","name":"stdout","source":"f3996ae6028c9e5c.txt","type":"text/plain","size":933}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az651-306"},{"name":"thread","value":"2702-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SunderlandCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":50,"unknown":0,"total":52},"items":[{"uid":"d2e629f34367297a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1958//#testresult/d2e629f34367297a","status":"passed","time":{"start":1719535329842,"stop":1719535355013,"duration":25171}},{"uid":"ad0b8693ebe4c5d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1954//#testresult/ad0b8693ebe4c5d2","status":"passed","time":{"start":1719362712824,"stop":1719362734784,"duration":21960}},{"uid":"4930d1a04765aab4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1953//#testresult/4930d1a04765aab4","status":"passed","time":{"start":1719276164866,"stop":1719276248932,"duration":84066}},{"uid":"64db603885c85528","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1952//#testresult/64db603885c85528","status":"passed","time":{"start":1719189839167,"stop":1719189990150,"duration":150983}},{"uid":"38e4f3706605479b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1951//#testresult/38e4f3706605479b","status":"passed","time":{"start":1719103398113,"stop":1719103550492,"duration":152379}},{"uid":"409c92ba6613aa2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1950//#testresult/409c92ba6613aa2a","status":"passed","time":{"start":1719016975171,"stop":1719017130318,"duration":155147}},{"uid":"ef496c28b8f3139b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1949//#testresult/ef496c28b8f3139b","status":"passed","time":{"start":1718930749608,"stop":1718930769848,"duration":20240}},{"uid":"3a4ebf5446fe8cd1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1948//#testresult/3a4ebf5446fe8cd1","status":"passed","time":{"start":1718844093871,"stop":1718844226114,"duration":132243}},{"uid":"7888316eee658c06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1947//#testresult/7888316eee658c06","status":"passed","time":{"start":1718757840460,"stop":1718757866035,"duration":25575}},{"uid":"a31b7eff264ea636","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1946//#testresult/a31b7eff264ea636","status":"passed","time":{"start":1718671482255,"stop":1718671504457,"duration":22202}},{"uid":"d920ac8ed44f880f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1945//#testresult/d920ac8ed44f880f","status":"passed","time":{"start":1718585279407,"stop":1718585316193,"duration":36786}},{"uid":"3b5b81623f984d62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1944//#testresult/3b5b81623f984d62","status":"passed","time":{"start":1718498613763,"stop":1718498747467,"duration":133704}},{"uid":"1773d6308eac598a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1943//#testresult/1773d6308eac598a","status":"passed","time":{"start":1718412065833,"stop":1718412212398,"duration":146565}},{"uid":"2fccb5adc257dc42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1942//#testresult/2fccb5adc257dc42","status":"passed","time":{"start":1718325535746,"stop":1718325812756,"duration":277010}},{"uid":"ef05333e9241d041","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1939//#testresult/ef05333e9241d041","status":"passed","time":{"start":1718239344890,"stop":1718239493221,"duration":148331}},{"uid":"4bb5d8af76549240","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1938//#testresult/4bb5d8af76549240","status":"passed","time":{"start":1718152957006,"stop":1718152982202,"duration":25196}},{"uid":"c90f927ff049edb1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1937//#testresult/c90f927ff049edb1","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x56170c350e9a <unknown>\n#1 0x56170c03a45c <unknown>\n#2 0x56170c031fd0 <unknown>\n#3 0x56170c021b32 <unknown>\n#4 0x56170c023162 <unknown>\n#5 0x56170c021ded <unknown>\n#6 0x56170c021503 <unknown>\n#7 0x56170c0213f5 <unknown>\n#8 0x56170c01f336 <unknown>\n#9 0x56170c01f83a <unknown>\n#10 0x56170c03cea7 <unknown>\n#11 0x56170c0c8ed5 <unknown>\n#12 0x56170c0a94b2 <unknown>\n#13 0x56170c0c82cc <unknown>\n#14 0x56170c0a9253 <unknown>\n#15 0x56170c0791c7 <unknown>\n#16 0x56170c079b3e <unknown>\n#17 0x56170c3172db <unknown>\n#18 0x56170c31b387 <unknown>\n#19 0x56170c303e0e <unknown>\n#20 0x56170c31be52 <unknown>\n#21 0x56170c2e87af <unknown>\n#22 0x56170c340188 <unknown>\n#23 0x56170c34035b <unknown>\n#24 0x56170c34ffcc <unknown>\n#25 0x7fddebbd2ac3 <unknown>","time":{"start":1718066630333,"stop":1718066885468,"duration":255135}},{"uid":"6cf9458e457f3eb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1936//#testresult/6cf9458e457f3eb3","status":"passed","time":{"start":1717980250399,"stop":1717980284559,"duration":34160}},{"uid":"bc790ae19827e53b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1934//#testresult/bc790ae19827e53b","status":"passed","time":{"start":1717893641136,"stop":1717893771875,"duration":130739}},{"uid":"f5eb8206b5e6482f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1933//#testresult/f5eb8206b5e6482f","status":"passed","time":{"start":1717807583713,"stop":1717807621326,"duration":37613}}]},"tags":[]},"source":"12905fd631ddaba.json","parameterValues":["SunderlandCityCouncil"]}