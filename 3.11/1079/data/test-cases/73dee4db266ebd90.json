{"uid":"73dee4db266ebd90","name":"Validate Council Output [SwaleBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"af246d65f1eea891cf11ee497308965a","time":{"start":1698788746594,"stop":1698788748233,"duration":1639},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7fec32766b60>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fec24e80310>, 'council': 'SwaleBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:61: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:57: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7fec24dc2110>, page = ''\nkwargs = {'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', 'url': 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}\nform_area = <form autocomplete=\"off\" class=\"integration bin-lookup\" method=\"GET\" name=\"bin-collection-form\">\n<fieldset id=\"tab1\">\n...e=\"change-postcode\" type=\"submit\" value=\"Try another post code\">try another post code</button>.</p> </fieldset>\n</form>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n            item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\n        for c in collections:\n            bin_type = c[0].strip()\n            # temp_date = c[2].strip() + \" \" + str(datetime.now().year)\n            bin_date = datetime.strptime(\n>               c[2].strip() + \" \" + str(datetime.now().year), \"%d %B %Y\"\n            ).strftime(date_format)\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:48: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7fec32766b60>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fec24e80310>, 'council': 'SwaleBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:61: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:57: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7fec24dc2110>, page = ''\nkwargs = {'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', 'url': 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}\nform_area = <form autocomplete=\"off\" class=\"integration bin-lookup\" method=\"GET\" name=\"bin-collection-form\">\n<fieldset id=\"tab1\">\n...e=\"change-postcode\" type=\"submit\" value=\"Try another post code\">try another post code</button>.</p> </fieldset>\n</form>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n            item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\n        for c in collections:\n            bin_type = c[0].strip()\n            # temp_date = c[2].strip() + \" \" + str(datetime.now().year)\n            bin_date = datetime.strptime(\n>               c[2].strip() + \" \" + str(datetime.now().year), \"%d %B %Y\"\n            ).strftime(date_format)\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:48: IndexError","steps":[{"name":"Given the council: SwaleBoroughCouncil","time":{"start":1698788746594,"stop":1698788746594,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from SwaleBoroughCouncil","time":{"start":1698788746594,"stop":1698788748233,"duration":1639},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az792-687"},{"name":"thread","value":"2172-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwaleBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":145,"broken":0,"skipped":0,"passed":23,"unknown":0,"total":168},"items":[{"uid":"e47ac599b0848867","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1077//#testresult/e47ac599b0848867","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1698715221055,"stop":1698715222717,"duration":1662}},{"uid":"eaef15e37c268a4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/eaef15e37c268a4d","status":"passed","time":{"start":1698701552664,"stop":1698701554008,"duration":1344}},{"uid":"b459285f95828881","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/b459285f95828881","status":"passed","time":{"start":1698700455798,"stop":1698700458027,"duration":2229}},{"uid":"41ed6e0c0d968086","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/41ed6e0c0d968086","status":"passed","time":{"start":1698693175778,"stop":1698693177390,"duration":1612}},{"uid":"a5e78f5d1c4368ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/a5e78f5d1c4368ba","status":"passed","time":{"start":1698692968952,"stop":1698692970517,"duration":1565}},{"uid":"ccdf21d0efedcc15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/ccdf21d0efedcc15","status":"passed","time":{"start":1698646581994,"stop":1698646612252,"duration":30258}},{"uid":"4cce95b11b430ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/4cce95b11b430ba","status":"passed","time":{"start":1698646551164,"stop":1698646553194,"duration":2030}},{"uid":"37de1966a41688dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/37de1966a41688dc","status":"passed","time":{"start":1698628637748,"stop":1698628667099,"duration":29351}},{"uid":"5d2ac47bf8e0f1dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/5d2ac47bf8e0f1dd","status":"passed","time":{"start":1698615391164,"stop":1698615392453,"duration":1289}},{"uid":"9e1eb450c991bf18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1063//#testresult/9e1eb450c991bf18","status":"passed","time":{"start":1698615310125,"stop":1698615311752,"duration":1627}},{"uid":"19554ed69ab7f698","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1061//#testresult/19554ed69ab7f698","status":"passed","time":{"start":1698615319636,"stop":1698615321238,"duration":1602}},{"uid":"8cb0749a55897043","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1054//#testresult/8cb0749a55897043","status":"passed","time":{"start":1698542564247,"stop":1698542594229,"duration":29982}},{"uid":"363b789600daad6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1053//#testresult/363b789600daad6","status":"passed","time":{"start":1698455642590,"stop":1698455665953,"duration":23363}},{"uid":"562b354808e318","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1051//#testresult/562b354808e318","status":"passed","time":{"start":1698369319945,"stop":1698369328990,"duration":9045}},{"uid":"31c423fb33f8f5e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1050//#testresult/31c423fb33f8f5e9","status":"passed","time":{"start":1698283137129,"stop":1698283138867,"duration":1738}},{"uid":"8f29e7252b3a8970","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1049//#testresult/8f29e7252b3a8970","status":"passed","time":{"start":1698196715673,"stop":1698196745024,"duration":29351}},{"uid":"62640462317c27de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1048//#testresult/62640462317c27de","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1698178287486,"stop":1698178290665,"duration":3179}},{"uid":"bd2ac69201ec245b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1047//#testresult/bd2ac69201ec245b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1698178362677,"stop":1698178364043,"duration":1366}},{"uid":"a53379e148ed0e40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1046//#testresult/a53379e148ed0e40","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1698110168513,"stop":1698110176896,"duration":8383}},{"uid":"7a7e229e271dd74f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1044//#testresult/7a7e229e271dd74f","status":"passed","time":{"start":1698065078925,"stop":1698065098005,"duration":19080}}]},"tags":[]},"source":"73dee4db266ebd90.json","parameterValues":["SwaleBoroughCouncil"]}