{"uid":"a8984fb2c3709341","name":"Validate Council Output [WiltshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aedb86c72e1849b4679ed1a7ee37cf59","time":{"start":1698788794781,"stop":1698788797502,"duration":2721},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f7214252160>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiltshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f7203de0c10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:86: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f7203de0c10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:82: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f7214252160>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiltshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f7203de0c10>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:86: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f7203de0c10>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:82: AssertionError","steps":[{"name":"Given the council: WiltshireCouncil","time":{"start":1698788794781,"stop":1698788794782,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WiltshireCouncil","time":{"start":1698788794782,"stop":1698788797499,"duration":2717},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698788797500,"stop":1698788797500,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698788797500,"stop":1698788797502,"duration":2},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az792-687"},{"name":"thread","value":"2169-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiltshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":164,"unknown":0,"total":168},"items":[{"uid":"9c1e9d2efc2932a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1077//#testresult/9c1e9d2efc2932a8","status":"passed","time":{"start":1698715265819,"stop":1698715274274,"duration":8455}},{"uid":"54eae80d0595adcc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/54eae80d0595adcc","status":"passed","time":{"start":1698701598786,"stop":1698701601060,"duration":2274}},{"uid":"73d144428a3ada22","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/73d144428a3ada22","status":"passed","time":{"start":1698700502417,"stop":1698700504948,"duration":2531}},{"uid":"eea6f6ec3615de6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/eea6f6ec3615de6c","status":"passed","time":{"start":1698693239465,"stop":1698693242045,"duration":2580}},{"uid":"7360424eaf5d0c68","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/7360424eaf5d0c68","status":"passed","time":{"start":1698693026669,"stop":1698693034811,"duration":8142}},{"uid":"ffe85b7603396d86","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/ffe85b7603396d86","status":"passed","time":{"start":1698646617634,"stop":1698646630029,"duration":12395}},{"uid":"7e6deb0c900fea79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/7e6deb0c900fea79","status":"passed","time":{"start":1698646594332,"stop":1698646606184,"duration":11852}},{"uid":"b773cf2774d8ae8e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/b773cf2774d8ae8e","status":"passed","time":{"start":1698628842810,"stop":1698628845118,"duration":2308}},{"uid":"b6de25586ba6a149","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/b6de25586ba6a149","status":"passed","time":{"start":1698615552721,"stop":1698615554814,"duration":2093}},{"uid":"7f95d3f3434c8e91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1063//#testresult/7f95d3f3434c8e91","status":"passed","time":{"start":1698615478388,"stop":1698615480623,"duration":2235}},{"uid":"e0b1894e64b07913","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1061//#testresult/e0b1894e64b07913","status":"passed","time":{"start":1698615423890,"stop":1698615426896,"duration":3006}},{"uid":"710976ee50f0ac2d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1054//#testresult/710976ee50f0ac2d","status":"passed","time":{"start":1698542644084,"stop":1698542648228,"duration":4144}},{"uid":"e2d5b3d78c17de6e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1053//#testresult/e2d5b3d78c17de6e","status":"passed","time":{"start":1698455905743,"stop":1698455911481,"duration":5738}},{"uid":"2d78cbc04f2956ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1051//#testresult/2d78cbc04f2956ba","status":"passed","time":{"start":1698369630971,"stop":1698369634350,"duration":3379}},{"uid":"3e2ee53cff3f2c69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1050//#testresult/3e2ee53cff3f2c69","status":"passed","time":{"start":1698283244021,"stop":1698283246773,"duration":2752}},{"uid":"182163eb5fcf2ad1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1049//#testresult/182163eb5fcf2ad1","status":"passed","time":{"start":1698196773562,"stop":1698196779772,"duration":6210}},{"uid":"d440a58a5f3edd92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1048//#testresult/d440a58a5f3edd92","status":"passed","time":{"start":1698178466860,"stop":1698178469820,"duration":2960}},{"uid":"3b0c4f324853bbd5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1047//#testresult/3b0c4f324853bbd5","status":"passed","time":{"start":1698178452314,"stop":1698178457734,"duration":5420}},{"uid":"8eaf89af94c137fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1046//#testresult/8eaf89af94c137fb","status":"passed","time":{"start":1698110348805,"stop":1698110351385,"duration":2580}},{"uid":"703f2198099b954d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1044//#testresult/703f2198099b954d","status":"passed","time":{"start":1698065195284,"stop":1698065199611,"duration":4327}}]},"tags":[]},"source":"a8984fb2c3709341.json","parameterValues":["WiltshireCouncil"]}