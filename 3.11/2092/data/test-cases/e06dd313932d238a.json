{"uid":"e06dd313932d238a","name":"Validate Council Output [WestSuffolkCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f49da38cf3e195a06db2680429130b4a","time":{"start":1725669131724,"stop":1725669142340,"duration":10616},"status":"failed","statusMessage":"AttributeError: module 'itertools' has no attribute 'batched'","statusTrace":"fixturefunc = <function scrape_step at 0x7f26995c6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f2699446710>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WestSuffolkCouncil.CouncilClass object at 0x7f2699274a10>, page = ''\nkwargs = {'council_module_str': 'WestSuffolkCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, user_uprn = '10009739960'\napi_url = 'https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId=10009739960'\nresponse = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html>\n<head>\n<style>\r\n\t\ta {\r\n\t\t  color: #0000EE; /* Traditional hyperlink blue color */\r\n\t\t}\t\r\n\t</st...<div id=\"atFooter\"></div>-->\n<script src=\"custom/js/responsivemap.js\" type=\"text/javascript\"></script>\n</body>\n</html>\n\npanel_search = <function CouncilClass.parse_data.<locals>.panel_search at 0x7f2698b76ca0>\ncollection_tag = [<div class=\"atPanelData\"><strong>Black bin:</strong> Wednesday 18th September <br/><strong>Blue  bin:</strong> Wednesday 11th September <br/><strong>Brown   bin:</strong> Wednesday 11th September \r\n </div>]\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_uprn = kwargs.get(\"uprn\")\n    \n        api_url = f\"https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId={user_uprn}\"\n    \n        response = requests.get(api_url)\n    \n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        def panel_search(cur_tag: Tag):\n            \"\"\"\n            Helper function to find the correct tag\n            \"\"\"\n            if cur_tag.name != \"div\":\n                return False\n    \n            tag_class = cur_tag.attrs.get(\"class\", None)\n            if tag_class is None:\n                return False\n    \n            parent_has_header = cur_tag.parent.find_all(\n                \"h4\", string=\"Bin collection days\"\n            )\n            if len(parent_has_header) < 1:\n                return False\n    \n            return \"atPanelData\" in tag_class\n    \n        collection_tag = soup.body.find_all(panel_search)\n    \n        # Parse the resultant div\n        for tag in collection_tag:\n            text_list = list(tag.stripped_strings)\n            # Create and parse the list as tuples of name:date\n>           for bin_name, collection_date in itertools.batched(text_list, 2):\nE           AttributeError: module 'itertools' has no attribute 'batched'\n\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:48: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: module 'itertools' has no attribute 'batched'","statusTrace":"fixturefunc = <function scrape_step at 0x7f26995c6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f2699446710>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WestSuffolkCouncil.CouncilClass object at 0x7f2699274a10>, page = ''\nkwargs = {'council_module_str': 'WestSuffolkCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ndata = {'bins': []}, user_uprn = '10009739960'\napi_url = 'https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId=10009739960'\nresponse = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html>\n<head>\n<style>\r\n\t\ta {\r\n\t\t  color: #0000EE; /* Traditional hyperlink blue color */\r\n\t\t}\t\r\n\t</st...<div id=\"atFooter\"></div>-->\n<script src=\"custom/js/responsivemap.js\" type=\"text/javascript\"></script>\n</body>\n</html>\n\npanel_search = <function CouncilClass.parse_data.<locals>.panel_search at 0x7f2698b76ca0>\ncollection_tag = [<div class=\"atPanelData\"><strong>Black bin:</strong> Wednesday 18th September <br/><strong>Blue  bin:</strong> Wednesday 11th September <br/><strong>Brown   bin:</strong> Wednesday 11th September \r\n </div>]\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        user_uprn = kwargs.get(\"uprn\")\n    \n        api_url = f\"https://maps.westsuffolk.gov.uk/MyWestSuffolk.aspx?action=SetAddress&UniqueId={user_uprn}\"\n    \n        response = requests.get(api_url)\n    \n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        def panel_search(cur_tag: Tag):\n            \"\"\"\n            Helper function to find the correct tag\n            \"\"\"\n            if cur_tag.name != \"div\":\n                return False\n    \n            tag_class = cur_tag.attrs.get(\"class\", None)\n            if tag_class is None:\n                return False\n    \n            parent_has_header = cur_tag.parent.find_all(\n                \"h4\", string=\"Bin collection days\"\n            )\n            if len(parent_has_header) < 1:\n                return False\n    \n            return \"atPanelData\" in tag_class\n    \n        collection_tag = soup.body.find_all(panel_search)\n    \n        # Parse the resultant div\n        for tag in collection_tag:\n            text_list = list(tag.stripped_strings)\n            # Create and parse the list as tuples of name:date\n>           for bin_name, collection_date in itertools.batched(text_list, 2):\nE           AttributeError: module 'itertools' has no attribute 'batched'\n\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:48: AttributeError","steps":[{"name":"Given the council","time":{"start":1725669131724,"stop":1725669131725,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725669131725,"stop":1725669142340,"duration":10615},"status":"failed","statusMessage":"module 'itertools' has no attribute 'batched'","statusTrace":"AttributeError: module 'itertools' has no attribute 'batched'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7089bbc27e539b63","name":"stdout","source":"7089bbc27e539b63.txt","type":"text/plain","size":45}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az2021-39"},{"name":"thread","value":"2819-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":133,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":133},"items":[{"uid":"5c9118982d25c2fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2088//#testresult/5c9118982d25c2fd","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725582417629,"stop":1725582427963,"duration":10334}},{"uid":"960e80f40d7163df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2086//#testresult/960e80f40d7163df","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725570252151,"stop":1725570262837,"duration":10686}},{"uid":"83b196efc65c978e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2083//#testresult/83b196efc65c978e","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725496074948,"stop":1725496085633,"duration":10685}},{"uid":"7f9f0e8ccf6f32f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/7f9f0e8ccf6f32f7","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725431365198,"stop":1725431377083,"duration":11885}},{"uid":"600225c7cfeb8f38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/600225c7cfeb8f38","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725409745237,"stop":1725409755907,"duration":10670}},{"uid":"24b9b1d6a35d35e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2080//#testresult/24b9b1d6a35d35e5","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725404658051,"stop":1725404668075,"duration":10024}},{"uid":"13c6c67de86339c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2073//#testresult/13c6c67de86339c9","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725385943568,"stop":1725385959195,"duration":15627}},{"uid":"d2f8c6acc6f84235","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2070//#testresult/d2f8c6acc6f84235","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725348137545,"stop":1725348147930,"duration":10385}},{"uid":"298a9ba8dfb57a34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2069//#testresult/298a9ba8dfb57a34","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725323372848,"stop":1725323383702,"duration":10854}},{"uid":"8d2b18fa4f64fccb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2068//#testresult/8d2b18fa4f64fccb","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725317293399,"stop":1725317309518,"duration":16119}},{"uid":"b2aefe9d528ff9c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2066//#testresult/b2aefe9d528ff9c9","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725313717698,"stop":1725313736743,"duration":19045}},{"uid":"4301b578b037d90a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2064//#testresult/4301b578b037d90a","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725311573134,"stop":1725311584059,"duration":10925}},{"uid":"9d13fac23fe5b487","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2060//#testresult/9d13fac23fe5b487","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725309046607,"stop":1725309057229,"duration":10622}},{"uid":"4ef521c798e2ef93","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2059//#testresult/4ef521c798e2ef93","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725308931634,"stop":1725308944092,"duration":12458}},{"uid":"fb1ff86fd826ed5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2054//#testresult/fb1ff86fd826ed5c","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725236875179,"stop":1725236886873,"duration":11694}},{"uid":"940a740ab63ca168","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2053//#testresult/940a740ab63ca168","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725150803551,"stop":1725150813542,"duration":9991}},{"uid":"a7874253ac8c91ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2052//#testresult/a7874253ac8c91ef","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1725064086226,"stop":1725064097098,"duration":10872}},{"uid":"7878651505ea838f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2051//#testresult/7878651505ea838f","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724977885141,"stop":1724977895081,"duration":9940}},{"uid":"8c878137f0799148","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2049//#testresult/8c878137f0799148","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724891154090,"stop":1724891170413,"duration":16323}},{"uid":"5954c01da3de017d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2048//#testresult/5954c01da3de017d","status":"failed","statusDetails":"AttributeError: module 'itertools' has no attribute 'batched'","time":{"start":1724804750869,"stop":1724804761207,"duration":10338}}]},"tags":[]},"source":"e06dd313932d238a.json","parameterValues":["WestSuffolkCouncil"]}