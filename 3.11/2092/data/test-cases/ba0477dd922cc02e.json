{"uid":"ba0477dd922cc02e","name":"Validate Council Output [EastCambridgeshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"94109bff7ef580f8a70ff49447a40d87","time":{"start":1725667449036,"stop":1725667480155,"duration":31119},"status":"failed","statusMessage":"ValueError: not enough values to unpack (expected 3, got 1)","statusTrace":"fixturefunc = <function scrape_step at 0x7f26995c6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastCambridgeshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f2699446710>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastCambridgeshireCouncil.CouncilClass object at 0x7f2698bff410>\npage = <Response [200]>\nkwargs = {'council_module_str': 'EastCambridgeshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuprn = '10002597178'\nurl = 'https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn=10002597178'\ns = <requests.sessions.Session object at 0x7f2698bfff90>\nsoup = <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n\n<html>\n<he...\n\r\n    $('#collectionaddress').attr('src', '/fillform/?iframe_id=collectionaddress');\r\n\r\n})();</script></body>\n</html>\n\ndata = {'bins': []}\nbins = <div class=\"row collectionsrow\"><div class=\"col-xs-12 title collectionscell\">\n          \t\t\t\t            Please select an address to view the upcoming collections.\n          \t\t\t\t          </div></div>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        # Check the UPRN is valid\n        check_uprn(uprn)\n    \n        # Request URL\n        url = f\"https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn={uprn}\"\n    \n        # Make Request\n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n        page = s.get(url)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Form a JSON wrapper\n        data = {\"bins\": []}\n    \n        for bins in soup.find_all(\"div\", {\"class\": \"row collectionsrow\"}):\n            # Find the collection dates\n>           _, bin_type, date = bins.find_all(\"div\")\nE           ValueError: not enough values to unpack (expected 3, got 1)\n\nuk_bin_collection/uk_bin_collection/councils/EastCambridgeshireCouncil.py:37: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: not enough values to unpack (expected 3, got 1)","statusTrace":"fixturefunc = <function scrape_step at 0x7f26995c6d40>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastCambridgeshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f2699446710>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastCambridgeshireCouncil.CouncilClass object at 0x7f2698bff410>\npage = <Response [200]>\nkwargs = {'council_module_str': 'EastCambridgeshireCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuprn = '10002597178'\nurl = 'https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn=10002597178'\ns = <requests.sessions.Session object at 0x7f2698bfff90>\nsoup = <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n\n<html>\n<he...\n\r\n    $('#collectionaddress').attr('src', '/fillform/?iframe_id=collectionaddress');\r\n\r\n})();</script></body>\n</html>\n\ndata = {'bins': []}\nbins = <div class=\"row collectionsrow\"><div class=\"col-xs-12 title collectionscell\">\n          \t\t\t\t            Please select an address to view the upcoming collections.\n          \t\t\t\t          </div></div>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        # Check the UPRN is valid\n        check_uprn(uprn)\n    \n        # Request URL\n        url = f\"https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn={uprn}\"\n    \n        # Make Request\n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n        page = s.get(url)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Form a JSON wrapper\n        data = {\"bins\": []}\n    \n        for bins in soup.find_all(\"div\", {\"class\": \"row collectionsrow\"}):\n            # Find the collection dates\n>           _, bin_type, date = bins.find_all(\"div\")\nE           ValueError: not enough values to unpack (expected 3, got 1)\n\nuk_bin_collection/uk_bin_collection/councils/EastCambridgeshireCouncil.py:37: ValueError","steps":[{"name":"Given the council","time":{"start":1725667449037,"stop":1725667449037,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725667449037,"stop":1725667480155,"duration":31118},"status":"failed","statusMessage":"not enough values to unpack (expected 3, got 1)","statusTrace":"ValueError: not enough values to unpack (expected 3, got 1)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a94c35810f5ffcca","name":"stdout","source":"a94c35810f5ffcca.txt","type":"text/plain","size":52}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az2021-39"},{"name":"thread","value":"2819-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastCambridgeshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":304,"unknown":0,"total":311},"items":[{"uid":"342b40f8a98940f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2088//#testresult/342b40f8a98940f0","status":"passed","time":{"start":1725581035237,"stop":1725581036544,"duration":1307}},{"uid":"f8503d05ff809245","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2086//#testresult/f8503d05ff809245","status":"passed","time":{"start":1725568892104,"stop":1725568897537,"duration":5433}},{"uid":"994fe71875ae2b61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2083//#testresult/994fe71875ae2b61","status":"passed","time":{"start":1725494679284,"stop":1725494680937,"duration":1653}},{"uid":"e020229e5dfa6364","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/e020229e5dfa6364","status":"passed","time":{"start":1725429797683,"stop":1725429798946,"duration":1263}},{"uid":"7621ae2602febfda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2082//#testresult/7621ae2602febfda","status":"passed","time":{"start":1725408396630,"stop":1725408398205,"duration":1575}},{"uid":"e486ab6ecf8d7d45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2080//#testresult/e486ab6ecf8d7d45","status":"passed","time":{"start":1725403407951,"stop":1725403409756,"duration":1805}},{"uid":"bb131742743c9547","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2073//#testresult/bb131742743c9547","status":"passed","time":{"start":1725384350090,"stop":1725384351544,"duration":1454}},{"uid":"d05cc1392b9a4985","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2070//#testresult/d05cc1392b9a4985","status":"passed","time":{"start":1725346569446,"stop":1725346570793,"duration":1347}},{"uid":"e75e523614be4802","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2069//#testresult/e75e523614be4802","status":"passed","time":{"start":1725322473207,"stop":1725322476171,"duration":2964}},{"uid":"9406ee3b9dfef8cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2068//#testresult/9406ee3b9dfef8cc","status":"passed","time":{"start":1725315739072,"stop":1725315740235,"duration":1163}},{"uid":"c1b71bda513d4dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2066//#testresult/c1b71bda513d4dc","status":"passed","time":{"start":1725312464501,"stop":1725312465612,"duration":1111}},{"uid":"5131997dfb7fb3f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2064//#testresult/5131997dfb7fb3f8","status":"passed","time":{"start":1725310304885,"stop":1725310305837,"duration":952}},{"uid":"60d18c2ac39150e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2060//#testresult/60d18c2ac39150e2","status":"passed","time":{"start":1725307640623,"stop":1725307641859,"duration":1236}},{"uid":"f90823d630f0de84","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2059//#testresult/f90823d630f0de84","status":"passed","time":{"start":1725307524069,"stop":1725307525088,"duration":1019}},{"uid":"769b0ec45b10a7d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2054//#testresult/769b0ec45b10a7d4","status":"passed","time":{"start":1725235672733,"stop":1725235674886,"duration":2153}},{"uid":"e7decaa9735380c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2053//#testresult/e7decaa9735380c","status":"passed","time":{"start":1725149307655,"stop":1725149311700,"duration":4045}},{"uid":"f70fb4824256e13e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2052//#testresult/f70fb4824256e13e","status":"passed","time":{"start":1725063320237,"stop":1725063322210,"duration":1973}},{"uid":"40991ba08721f163","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2051//#testresult/40991ba08721f163","status":"passed","time":{"start":1724976506395,"stop":1724976507787,"duration":1392}},{"uid":"af004e0972ee7523","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2049//#testresult/af004e0972ee7523","status":"passed","time":{"start":1724890379465,"stop":1724890380776,"duration":1311}},{"uid":"deee7c3e1c3459be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2048//#testresult/deee7c3e1c3459be","status":"passed","time":{"start":1724804025196,"stop":1724804026383,"duration":1187}}]},"tags":[]},"source":"ba0477dd922cc02e.json","parameterValues":["EastCambridgeshireCouncil"]}