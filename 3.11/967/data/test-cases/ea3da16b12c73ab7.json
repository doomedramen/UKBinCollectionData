{"uid":"ea3da16b12c73ab7","name":"Validate Council Output [CharnwoodBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"801248c9ab954856945dc1ac5bef1fab","time":{"start":1696209250491,"stop":1696209251897,"duration":1406},"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CharnwoodBoroughCouncil]>>\n_pytest_bdd_example = {'council': 'CharnwoodBoroughCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CharnwoodBoroughCouncil.py:31: in parse_data\n    collection_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%a %d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CharnwoodBoroughCouncil]>>\n_pytest_bdd_example = {'council': 'CharnwoodBoroughCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CharnwoodBoroughCouncil.py:31: in parse_data\n    collection_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%a %d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: CharnwoodBoroughCouncil","time":{"start":1696209250491,"stop":1696209250492,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from CharnwoodBoroughCouncil","time":{"start":1696209250492,"stop":1696209251897,"duration":1405},"status":"failed","statusMessage":"time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az936-676"},{"name":"thread","value":"2222-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CharnwoodBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":93,"unknown":0,"total":107},"items":[{"uid":"c52e118059515201","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/966//#testresult/c52e118059515201","status":"passed","time":{"start":1696123358840,"stop":1696123360681,"duration":1841}},{"uid":"86fb7559bfb84df3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/965//#testresult/86fb7559bfb84df3","status":"passed","time":{"start":1696036309538,"stop":1696036311603,"duration":2065}},{"uid":"e2af392b16000bf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/964//#testresult/e2af392b16000bf6","status":"passed","time":{"start":1695950008456,"stop":1695950009937,"duration":1481}},{"uid":"67c24cc94b94d829","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/963//#testresult/67c24cc94b94d829","status":"passed","time":{"start":1695930337917,"stop":1695930339498,"duration":1581}},{"uid":"e878ec6ffb6034ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/962//#testresult/e878ec6ffb6034ac","status":"passed","time":{"start":1695930235353,"stop":1695930237264,"duration":1911}},{"uid":"da78618a5ccddb5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/960//#testresult/da78618a5ccddb5e","status":"passed","time":{"start":1695863597769,"stop":1695863599452,"duration":1683}},{"uid":"be2fa047cab40547","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/958//#testresult/be2fa047cab40547","status":"passed","time":{"start":1695852445286,"stop":1695852446869,"duration":1583}},{"uid":"34c6534c872cf412","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/954//#testresult/34c6534c872cf412","status":"passed","time":{"start":1695841394906,"stop":1695841396721,"duration":1815}},{"uid":"a47341248bd0b0b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/953//#testresult/a47341248bd0b0b4","status":"passed","time":{"start":1695841351374,"stop":1695841352960,"duration":1586}},{"uid":"1415b073f0f0d5b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/948//#testresult/1415b073f0f0d5b0","status":"passed","time":{"start":1695777230722,"stop":1695777232433,"duration":1711}},{"uid":"fbe8c9519b9e70ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/947//#testresult/fbe8c9519b9e70ba","status":"passed","time":{"start":1695690826234,"stop":1695690827505,"duration":1271}},{"uid":"244769d272f8db21","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/946//#testresult/244769d272f8db21","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1695604449377,"stop":1695604450518,"duration":1141}},{"uid":"1a85fa4e704d2c48","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/945//#testresult/1a85fa4e704d2c48","status":"passed","time":{"start":1695518235188,"stop":1695518236973,"duration":1785}},{"uid":"d751fbf53170c00b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/944//#testresult/d751fbf53170c00b","status":"passed","time":{"start":1695431451973,"stop":1695431453540,"duration":1567}},{"uid":"9075fc334be8dff2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/943//#testresult/9075fc334be8dff2","status":"passed","time":{"start":1695345189441,"stop":1695345191087,"duration":1646}},{"uid":"e9928ac545bae63b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/942//#testresult/e9928ac545bae63b","status":"passed","time":{"start":1695258740875,"stop":1695258742513,"duration":1638}},{"uid":"c6633577b1c2c8a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/941//#testresult/c6633577b1c2c8a2","status":"passed","time":{"start":1695206122938,"stop":1695206124252,"duration":1314}},{"uid":"4bc39ac1dfd92bf8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/939//#testresult/4bc39ac1dfd92bf8","status":"passed","time":{"start":1695193582246,"stop":1695193584090,"duration":1844}},{"uid":"d70ff530e80ab181","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/937//#testresult/d70ff530e80ab181","status":"passed","time":{"start":1695172377564,"stop":1695172379200,"duration":1636}},{"uid":"a602dc578805317c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/936//#testresult/a602dc578805317c","status":"passed","time":{"start":1695161882973,"stop":1695161884566,"duration":1593}}]},"tags":[]},"source":"ea3da16b12c73ab7.json","parameterValues":["CharnwoodBoroughCouncil"]}