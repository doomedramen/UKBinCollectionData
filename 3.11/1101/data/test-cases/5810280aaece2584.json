{"uid":"5810280aaece2584","name":"Validate Council Output [HuntingdonDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1f15b033b85c0869097090322a2589a2","time":{"start":1699007632996,"stop":1699007634141,"duration":1145},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2d7b25a5c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d7188d3d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2d7188d3d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2d7b25a5c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2d7188d3d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2d7188d3d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","steps":[{"name":"Given the council: HuntingdonDistrictCouncil","time":{"start":1699007632996,"stop":1699007632996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from HuntingdonDistrictCouncil","time":{"start":1699007632997,"stop":1699007634139,"duration":1142},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699007634139,"stop":1699007634139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699007634139,"stop":1699007634141,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az555-184"},{"name":"thread","value":"2590-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"HuntingdonDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":164,"unknown":0,"total":176},"items":[{"uid":"d5c0a0e248e8baa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1095//#testresult/d5c0a0e248e8baa","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698988655204,"stop":1698988656401,"duration":1197}},{"uid":"75e3111017d4c571","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1094//#testresult/75e3111017d4c571","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698974148688,"stop":1698974150345,"duration":1657}},{"uid":"ee9c925a54158af6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1091//#testresult/ee9c925a54158af6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698887638231,"stop":1698887639351,"duration":1120}},{"uid":"808b365c0e7fde2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1090//#testresult/808b365c0e7fde2b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878315473,"stop":1698878316625,"duration":1152}},{"uid":"40e4951daf640fce","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1089//#testresult/40e4951daf640fce","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878231697,"stop":1698878232747,"duration":1050}},{"uid":"91dcdd2ef4da8bd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1086//#testresult/91dcdd2ef4da8bd8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867430994,"stop":1698867432322,"duration":1328}},{"uid":"805db04cc7e1ed72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1081//#testresult/805db04cc7e1ed72","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801521084,"stop":1698801522301,"duration":1217}},{"uid":"394306d2ab396925","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1079//#testresult/394306d2ab396925","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788532895,"stop":1698788534749,"duration":1854}},{"uid":"f2d3053036fa957d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1077//#testresult/f2d3053036fa957d","status":"passed","time":{"start":1698715004757,"stop":1698715006562,"duration":1805}},{"uid":"d58f17e55ebd297b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/d58f17e55ebd297b","status":"passed","time":{"start":1698701361290,"stop":1698701362580,"duration":1290}},{"uid":"8d7a411de99d159a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/8d7a411de99d159a","status":"passed","time":{"start":1698700246419,"stop":1698700247997,"duration":1578}},{"uid":"9f819bf04b5b502d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/9f819bf04b5b502d","status":"passed","time":{"start":1698693131290,"stop":1698693132942,"duration":1652}},{"uid":"1abae21c5ae73346","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/1abae21c5ae73346","status":"passed","time":{"start":1698692769446,"stop":1698692771142,"duration":1696}},{"uid":"43bbf4837a283028","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/43bbf4837a283028","status":"passed","time":{"start":1698646347906,"stop":1698646350028,"duration":2122}},{"uid":"72a6838f68a83dde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/72a6838f68a83dde","status":"passed","time":{"start":1698646354534,"stop":1698646356056,"duration":1522}},{"uid":"a93d0e9dfb4b0e48","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/a93d0e9dfb4b0e48","status":"passed","time":{"start":1698628573637,"stop":1698628575766,"duration":2129}},{"uid":"5d3fd1adda795bec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/5d3fd1adda795bec","status":"passed","time":{"start":1698615491592,"stop":1698615493370,"duration":1778}},{"uid":"87d98b75f27adcf5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1063//#testresult/87d98b75f27adcf5","status":"passed","time":{"start":1698615255715,"stop":1698615257117,"duration":1402}},{"uid":"97ca60c988aa50bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1061//#testresult/97ca60c988aa50bb","status":"passed","time":{"start":1698615134759,"stop":1698615136482,"duration":1723}},{"uid":"2e6f2b8b89f65850","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1054//#testresult/2e6f2b8b89f65850","status":"passed","time":{"start":1698542374327,"stop":1698542376568,"duration":2241}}]},"tags":[]},"source":"5810280aaece2584.json","parameterValues":["HuntingdonDistrictCouncil"]}