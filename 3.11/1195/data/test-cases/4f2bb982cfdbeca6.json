{"uid":"4f2bb982cfdbeca6","name":"Validate Council Output [StokeOnTrentCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"17b62d612f29f2bda9703e241b337994","time":{"start":1701758628206,"stop":1701758628753,"duration":547},"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f5a377274c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5a274d8a50>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f5a274daad0>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\"\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:50: ConnectionAbortedError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"fixturefunc = <function scrape_step at 0x7f5a377274c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[StokeOnTrentCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5a274d8a50>, 'council': 'StokeOnTrentCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <StokeOnTrentCityCouncil.CouncilClass object at 0x7f5a274daad0>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://www.stoke.gov.uk/jadu/custom/webserviceLookUps/BarTecWebServices_missed_bin_calendar.php?UPRN=3455121482', ...}\nsoup = <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<main><allResults><title>Bin Round Information for Stoke-on-Trent</title><link>...dress has been searched over 5 times in the last hour, this service has been stopped to protect services</Error></main>\ndata = {'bins': []}, collections = []\nbin_types = {'MIXED REC 55 BOX': 'Blue box', 'ORG 180': 'Brown bin', 'ORG 240 STD': 'Brown bin', 'PAID ORGANIC': 'Brown bin', ...}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"lxml-xml\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n        collections = []\n    \n        # Match bin types from API to their actual type\n        bin_types = {\n            \"RESIDUAL BIN\": \"Grey bin\",\n            \"RES 180\": \"Grey bin\",\n            \"RES 240 STD\": \"Grey bin\",\n            \"RES 360 STD+\": \"Grey bin\",\n            \"RES 360 STD\": \"Grey bin\",\n            \"RES 660\": \"Grey bin\",\n            \"RES 770\": \"Grey bin\",\n            \"RES BAG\": \"Grey bin\",\n            \"RES 140 SML\": \"Grey bin\",\n            \"REC 180 SML\": \"Blue bin\",\n            \"REC 240 STD\": \"Blue bin\",\n            \"REC 360\": \"Blue bin\",\n            \"REC 770\": \"Blue bin\",\n            \"MIXED REC 55 BOX\": \"Blue box\",\n            \"PAPER 44 BOX\": \"Blue box\",\n            \"PAPER BAG\": \"Paper bag\",\n            \"ORG 180\": \"Brown bin\",\n            \"ORG 240 STD\": \"Brown bin\",\n            \"PAID ORGANIC\": \"Brown bin\",\n            \"RES 1100\": \"Grey trade container\",\n            \"REC GL 770\": \"Blue trade container\"\n        }\n        # If the API errors, throw the exception\n        if soup.find(\"Error\") is not None:\n>           raise ConnectionAbortedError(soup.find(\"Error\").text.strip())\nE           ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n\nuk_bin_collection/uk_bin_collection/councils/StokeOnTrentCityCouncil.py:50: ConnectionAbortedError","steps":[{"name":"Given the council: StokeOnTrentCityCouncil","time":{"start":1701758628206,"stop":1701758628207,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from StokeOnTrentCityCouncil using None and the None is set","time":{"start":1701758628207,"stop":1701758628753,"duration":546},"status":"failed","statusMessage":"Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services","statusTrace":"ConnectionAbortedError: Sorry this address has been searched over 5 times in the last hour, this service has been stopped to protect services\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az973-395"},{"name":"thread","value":"2831-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StokeOnTrentCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":8},"items":[{"uid":"27178ad09a234f45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1191//#testresult/27178ad09a234f45","status":"passed","time":{"start":1701739250986,"stop":1701739252765,"duration":1779}},{"uid":"14a67b82c5f580a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1187//#testresult/14a67b82c5f580a9","status":"passed","time":{"start":1701714413166,"stop":1701714414497,"duration":1331}},{"uid":"d85f5449946a5cec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1184//#testresult/d85f5449946a5cec","status":"passed","time":{"start":1701652805426,"stop":1701652807052,"duration":1626}},{"uid":"ae33145238ecaaf4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1183//#testresult/ae33145238ecaaf4","status":"passed","time":{"start":1701566666652,"stop":1701566668337,"duration":1685}},{"uid":"b1a868d1b845ad15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1182//#testresult/b1a868d1b845ad15","status":"passed","time":{"start":1701479838987,"stop":1701479841417,"duration":2430}},{"uid":"1880dcad6c24c2cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1181//#testresult/1880dcad6c24c2cb","status":"passed","time":{"start":1701419143050,"stop":1701419145201,"duration":2151}},{"uid":"dd3de153991ef0e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1180//#testresult/dd3de153991ef0e4","status":"passed","time":{"start":1701419098913,"stop":1701419101505,"duration":2592}}]},"tags":[]},"source":"4f2bb982cfdbeca6.json","parameterValues":["StokeOnTrentCityCouncil","None","None"]}