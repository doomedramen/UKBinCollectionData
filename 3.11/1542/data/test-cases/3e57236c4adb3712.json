{"uid":"3e57236c4adb3712","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1706938429389,"stop":1706938443860,"duration":14471},"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=121.0.6167.139)\nStacktrace:\n#0 0x556e9d2e3d93 <unknown>\n#1 0x556e9cfc7177 <unknown>\n#2 0x556e9d00ccef <unknown>\n#3 0x556e9d00b05b <unknown>\n#4 0x556e9d035442 <unknown>\n#5 0x556e9d007028 <unknown>\n#6 0x556e9d03560e <unknown>\n#7 0x556e9d05412d <unknown>\n#8 0x556e9d0351e3 <unknown>\n#9 0x556e9d005135 <unknown>\n#10 0x556e9d00613e <unknown>\n#11 0x556e9d2a7e4b <unknown>\n#12 0x556e9d2abdfa <unknown>\n#13 0x556e9d2946d5 <unknown>\n#14 0x556e9d2aca6f <unknown>\n#15 0x556e9d27869f <unknown>\n#16 0x556e9d2d1098 <unknown>\n#17 0x556e9d2d1262 <unknown>\n#18 0x556e9d2e2f34 <unknown>\n#19 0x7f3f6d294ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f98e1bb4d60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f98e1171cd0>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f98e11b5a90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x556e9d2d1262 \\\\u003Cunknown>\\\\n#18 0x556e9d2e2f34 \\\\u003Cunknown>\\\\n#19 0x7f3f6d294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=121.0.6167.139)\nE       Stacktrace:\nE       #0 0x556e9d2e3d93 <unknown>\nE       #1 0x556e9cfc7177 <unknown>\nE       #2 0x556e9d00ccef <unknown>\nE       #3 0x556e9d00b05b <unknown>\nE       #4 0x556e9d035442 <unknown>\nE       #5 0x556e9d007028 <unknown>\nE       #6 0x556e9d03560e <unknown>\nE       #7 0x556e9d05412d <unknown>\nE       #8 0x556e9d0351e3 <unknown>\nE       #9 0x556e9d005135 <unknown>\nE       #10 0x556e9d00613e <unknown>\nE       #11 0x556e9d2a7e4b <unknown>\nE       #12 0x556e9d2abdfa <unknown>\nE       #13 0x556e9d2946d5 <unknown>\nE       #14 0x556e9d2aca6f <unknown>\nE       #15 0x556e9d27869f <unknown>\nE       #16 0x556e9d2d1098 <unknown>\nE       #17 0x556e9d2d1262 <unknown>\nE       #18 0x556e9d2e2f34 <unknown>\nE       #19 0x7f3f6d294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=121.0.6167.139)\nStacktrace:\n#0 0x556e9d2e3d93 <unknown>\n#1 0x556e9cfc7177 <unknown>\n#2 0x556e9d00ccef <unknown>\n#3 0x556e9d00b05b <unknown>\n#4 0x556e9d035442 <unknown>\n#5 0x556e9d007028 <unknown>\n#6 0x556e9d03560e <unknown>\n#7 0x556e9d05412d <unknown>\n#8 0x556e9d0351e3 <unknown>\n#9 0x556e9d005135 <unknown>\n#10 0x556e9d00613e <unknown>\n#11 0x556e9d2a7e4b <unknown>\n#12 0x556e9d2abdfa <unknown>\n#13 0x556e9d2946d5 <unknown>\n#14 0x556e9d2aca6f <unknown>\n#15 0x556e9d27869f <unknown>\n#16 0x556e9d2d1098 <unknown>\n#17 0x556e9d2d1262 <unknown>\n#18 0x556e9d2e2f34 <unknown>\n#19 0x7f3f6d294ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f98e1bb4d60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f98e1171cd0>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f98e11b5a90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x556e9d2d1262 \\\\u003Cunknown>\\\\n#18 0x556e9d2e2f34 \\\\u003Cunknown>\\\\n#19 0x7f3f6d294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=121.0.6167.139)\nE       Stacktrace:\nE       #0 0x556e9d2e3d93 <unknown>\nE       #1 0x556e9cfc7177 <unknown>\nE       #2 0x556e9d00ccef <unknown>\nE       #3 0x556e9d00b05b <unknown>\nE       #4 0x556e9d035442 <unknown>\nE       #5 0x556e9d007028 <unknown>\nE       #6 0x556e9d03560e <unknown>\nE       #7 0x556e9d05412d <unknown>\nE       #8 0x556e9d0351e3 <unknown>\nE       #9 0x556e9d005135 <unknown>\nE       #10 0x556e9d00613e <unknown>\nE       #11 0x556e9d2a7e4b <unknown>\nE       #12 0x556e9d2abdfa <unknown>\nE       #13 0x556e9d2946d5 <unknown>\nE       #14 0x556e9d2aca6f <unknown>\nE       #15 0x556e9d27869f <unknown>\nE       #16 0x556e9d2d1098 <unknown>\nE       #17 0x556e9d2d1262 <unknown>\nE       #18 0x556e9d2e2f34 <unknown>\nE       #19 0x7f3f6d294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1706938429389,"stop":1706938429390,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1706938429390,"stop":1706938443860,"duration":14470},"status":"failed","statusMessage":"Message: element not interactable\n  (Session info: chrome-headless-shell=121.0.6167.139)\nStacktrace:\n#0 0x556e9d2e3d93 <unknown>\n#1 0x556e9cfc7177 <unknown>\n#2 0x556e9d00ccef <unknown>\n#3 0x556e9d00b05b <unknown>\n#4 0x556e9d035442 <unknown>\n#5 0x556e9d007028 <unknown>\n#6 0x556e9d03560e <unknown>\n#7 0x556e9d05412d <unknown>\n#8 0x556e9d0351e3 <unknown>\n#9 0x556e9d005135 <unknown>\n#10 0x556e9d00613e <unknown>\n#11 0x556e9d2a7e4b <unknown>\n#12 0x556e9d2abdfa <unknown>\n#13 0x556e9d2946d5 <unknown>\n#14 0x556e9d2aca6f <unknown>\n#15 0x556e9d27869f <unknown>\n#16 0x556e9d2d1098 <unknown>\n#17 0x556e9d2d1262 <unknown>\n#18 0x556e9d2e2f34 <unknown>\n#19 0x7f3f6d294ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=121.0.6167.139)\nStacktrace:\n#0 0x556e9d2e3d93 <unknown>\n#1 0x556e9cfc7177 <unknown>\n#2 0x556e9d00ccef <unknown>\n#3 0x556e9d00b05b <unknown>\n#4 0x556e9d035442 <unknown>\n#5 0x556e9d007028 <unknown>\n#6 0x556e9d03560e <unknown>\n#7 0x556e9d05412d <unknown>\n#8 0x556e9d0351e3 <unknown>\n#9 0x556e9d005135 <unknown>\n#10 0x556e9d00613e <unknown>\n#11 0x556e9d2a7e4b <unknown>\n#12 0x556e9d2abdfa <unknown>\n#13 0x556e9d2946d5 <unknown>\n#14 0x556e9d2aca6f <unknown>\n#15 0x556e9d27869f <unknown>\n#16 0x556e9d2d1098 <unknown>\n#17 0x556e9d2d1262 <unknown>\n#18 0x556e9d2e2f34 <unknown>\n#19 0x7f3f6d294ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az837-262"},{"name":"thread","value":"2881-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":34,"broken":0,"skipped":0,"passed":59,"unknown":0,"total":93},"items":[{"uid":"33619abc71a57982","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1541//#testresult/33619abc71a57982","status":"passed","time":{"start":1706919985093,"stop":1706920009100,"duration":24007}},{"uid":"c6b24c6b43137a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1540//#testresult/c6b24c6b43137a9","status":"passed","time":{"start":1706833539723,"stop":1706833554302,"duration":14579}},{"uid":"b1871e6d98b80cef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1538//#testresult/b1871e6d98b80cef","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55f0c138bd93 <unknown>\n#1 0x55f0c106f337 <unknown>\n#2 0x55f0c10bad60 <unknown>\n#3 0x55f0c10bae51 <unknown>\n#4 0x55f0c10febc4 <unknown>\n#5 0x55f0c10dd46d <unknown>\n#6 0x55f0c10fc12d <unknown>\n#7 0x55f0c10dd1e3 <unknown>\n#8 0x55f0c10ad135 <unknown>\n#9 0x55f0c10ae13e <unknown>\n#10 0x55f0c134fe4b <unknown>\n#11 0x55f0c1353dfa <unknown>\n#12 0x55f0c133c6d5 <unknown>\n#13 0x55f0c1354a6f <unknown>\n#14 0x55f0c132069f <unknown>\n#15 0x55f0c1379098 <unknown>\n#16 0x55f0c1379262 <unknown>\n#17 0x55f0c138af34 <unknown>\n#18 0x7fedd6094ac3 <unknown>","time":{"start":1706747235073,"stop":1706747307837,"duration":72764}},{"uid":"4ee2ca8c02b89e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1537//#testresult/4ee2ca8c02b89e0","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556f06114f83 <unknown>\n#1 0x556f05dcdcf7 <unknown>\n#2 0x556f05e1d99e <unknown>\n#3 0x556f05e1daa1 <unknown>\n#4 0x556f05e68d64 <unknown>\n#5 0x556f05e470dd <unknown>\n#6 0x556f05e66006 <unknown>\n#7 0x556f05e46e53 <unknown>\n#8 0x556f05e0edd4 <unknown>\n#9 0x556f05e101de <unknown>\n#10 0x556f060d9531 <unknown>\n#11 0x556f060dd455 <unknown>\n#12 0x556f060c5f55 <unknown>\n#13 0x556f060de0ef <unknown>\n#14 0x556f060a999f <unknown>\n#15 0x556f06102008 <unknown>\n#16 0x556f061021d7 <unknown>\n#17 0x556f06114124 <unknown>\n#18 0x7fb009894ac3 <unknown>","time":{"start":1706660793890,"stop":1706660862610,"duration":68720}},{"uid":"5026958531c2248d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1535//#testresult/5026958531c2248d","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1706574333585,"stop":1706574352847,"duration":19262}},{"uid":"af0402cb0a59f75d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1534//#testresult/af0402cb0a59f75d","status":"passed","time":{"start":1706488024630,"stop":1706488039123,"duration":14493}},{"uid":"d9517a67db10272","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1531//#testresult/d9517a67db10272","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x563569419f83 <unknown>\n#1 0x5635690d2cf7 <unknown>\n#2 0x56356912299e <unknown>\n#3 0x563569122aa1 <unknown>\n#4 0x56356916dd64 <unknown>\n#5 0x56356914c0dd <unknown>\n#6 0x56356916b006 <unknown>\n#7 0x56356914be53 <unknown>\n#8 0x563569113dd4 <unknown>\n#9 0x5635691151de <unknown>\n#10 0x5635693de531 <unknown>\n#11 0x5635693e2455 <unknown>\n#12 0x5635693caf55 <unknown>\n#13 0x5635693e30ef <unknown>\n#14 0x5635693ae99f <unknown>\n#15 0x563569407008 <unknown>\n#16 0x5635694071d7 <unknown>\n#17 0x563569419124 <unknown>\n#18 0x7f22e6894ac3 <unknown>","time":{"start":1706401699955,"stop":1706401765204,"duration":65249}},{"uid":"49f05d998de4fbd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1529//#testresult/49f05d998de4fbd","status":"passed","time":{"start":1706315143458,"stop":1706315164178,"duration":20720}},{"uid":"1cd8b319e12f324c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1528//#testresult/1cd8b319e12f324c","status":"passed","time":{"start":1706228781521,"stop":1706228801514,"duration":19993}},{"uid":"8cabb2686dddc937","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1523//#testresult/8cabb2686dddc937","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55aed15f1f83 <unknown>\n#1 0x55aed12aacf7 <unknown>\n#2 0x55aed12fa99e <unknown>\n#3 0x55aed12faaa1 <unknown>\n#4 0x55aed1345d64 <unknown>\n#5 0x55aed13240dd <unknown>\n#6 0x55aed1343006 <unknown>\n#7 0x55aed1323e53 <unknown>\n#8 0x55aed12ebdd4 <unknown>\n#9 0x55aed12ed1de <unknown>\n#10 0x55aed15b6531 <unknown>\n#11 0x55aed15ba455 <unknown>\n#12 0x55aed15a2f55 <unknown>\n#13 0x55aed15bb0ef <unknown>\n#14 0x55aed158699f <unknown>\n#15 0x55aed15df008 <unknown>\n#16 0x55aed15df1d7 <unknown>\n#17 0x55aed15f1124 <unknown>\n#18 0x7f00a8c94ac3 <unknown>","time":{"start":1706142478741,"stop":1706142554285,"duration":75544}},{"uid":"3a922f24530cdbfa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1522//#testresult/3a922f24530cdbfa","status":"passed","time":{"start":1706056092620,"stop":1706056111649,"duration":19029}},{"uid":"288cec7559e11bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1521//#testresult/288cec7559e11bc","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1705969679929,"stop":1705969702512,"duration":22583}},{"uid":"5d7a2053c17520d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1520//#testresult/5d7a2053c17520d6","status":"passed","time":{"start":1705883386864,"stop":1705883410066,"duration":23202}},{"uid":"3a39cee36f96182d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1519//#testresult/3a39cee36f96182d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x560a4d0f7f83 <unknown>\n#1 0x560a4cdb0cf7 <unknown>\n#2 0x560a4ce0099e <unknown>\n#3 0x560a4ce00aa1 <unknown>\n#4 0x560a4ce4bd64 <unknown>\n#5 0x560a4ce2a0dd <unknown>\n#6 0x560a4ce49006 <unknown>\n#7 0x560a4ce29e53 <unknown>\n#8 0x560a4cdf1dd4 <unknown>\n#9 0x560a4cdf31de <unknown>\n#10 0x560a4d0bc531 <unknown>\n#11 0x560a4d0c0455 <unknown>\n#12 0x560a4d0a8f55 <unknown>\n#13 0x560a4d0c10ef <unknown>\n#14 0x560a4d08c99f <unknown>\n#15 0x560a4d0e5008 <unknown>\n#16 0x560a4d0e51d7 <unknown>\n#17 0x560a4d0f7124 <unknown>\n#18 0x7fa558694ac3 <unknown>","time":{"start":1705797025231,"stop":1705797091030,"duration":65799}},{"uid":"9722c8cf417b7bfa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1515//#testresult/9722c8cf417b7bfa","status":"passed","time":{"start":1705710396883,"stop":1705710420938,"duration":24055}},{"uid":"78f26255c72ef4aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1511//#testresult/78f26255c72ef4aa","status":"passed","time":{"start":1705624061775,"stop":1705624075850,"duration":14075}},{"uid":"ea08bdeada5cecc2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/ea08bdeada5cecc2","status":"passed","time":{"start":1705537636231,"stop":1705537655835,"duration":19604}},{"uid":"92e241ad0bf814bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/92e241ad0bf814bc","status":"passed","time":{"start":1705451245877,"stop":1705451263088,"duration":17211}},{"uid":"570cc09c686c1b2e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1499//#testresult/570cc09c686c1b2e","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1705364861283,"stop":1705364880331,"duration":19048}},{"uid":"bd40bcd499b51043","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1492//#testresult/bd40bcd499b51043","status":"passed","time":{"start":1705295579312,"stop":1705295600745,"duration":21433}}]},"tags":[]},"source":"3e57236c4adb3712.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}