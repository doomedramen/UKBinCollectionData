{"uid":"eabc0936408e1c6d","name":"Validate Council Output [WestSuffolkCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"446a4369fb450b9e3ee2f74bbf8ed65b","time":{"start":1706939083449,"stop":1706939095933,"duration":12484},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7f17302c00e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f172f95e290>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b0b6863361500fed997c745580b9151f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f172f9b5d00>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"fixturefunc = <function scrape_step at 0x7f17302c00e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestSuffolkCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f172f95e290>, 'council': 'WestSuffolkCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:80: in parse_data\n    self.wait_for_element_conditions(\nuk_bin_collection/uk_bin_collection/councils/WestSuffolkCouncil.py:19: in wait_for_element_conditions\n    WebDriverWait(driver, timeout).until(conditions)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b0b6863361500fed997c745580b9151f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f172f9b5d00>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Given the council: WestSuffolkCouncil","time":{"start":1706939083449,"stop":1706939083450,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestSuffolkCouncil using local and the http://selenium:4444 is set","time":{"start":1706939083450,"stop":1706939095933,"duration":12483},"status":"failed","statusMessage":"Message: \n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az975-848"},{"name":"thread","value":"2920-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestSuffolkCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":150,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":150},"items":[{"uid":"daabb6477b6d8151","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1542//#testresult/daabb6477b6d8151","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706938627767,"stop":1706938640131,"duration":12364}},{"uid":"29514fc58a673e95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1541//#testresult/29514fc58a673e95","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706920184144,"stop":1706920199373,"duration":15229}},{"uid":"7b0fcf0454fd730e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1540//#testresult/7b0fcf0454fd730e","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706833716000,"stop":1706833726202,"duration":10202}},{"uid":"a4e18ff92f22968","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1538//#testresult/a4e18ff92f22968","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706747423731,"stop":1706747434529,"duration":10798}},{"uid":"87468807408f5c98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1537//#testresult/87468807408f5c98","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706660991577,"stop":1706661002655,"duration":11078}},{"uid":"8155449d7650d450","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1535//#testresult/8155449d7650d450","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706574497749,"stop":1706574511810,"duration":14061}},{"uid":"3b196ec7c8d93731","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1534//#testresult/3b196ec7c8d93731","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ead27b2f83 <unknown>\n#1 0x55ead246bcf7 <unknown>\n#2 0x55ead24bb99e <unknown>\n#3 0x55ead24bbaa1 <unknown>\n#4 0x55ead2506d64 <unknown>\n#5 0x55ead24e50dd <unknown>\n#6 0x55ead2504006 <unknown>\n#7 0x55ead24e4e53 <unknown>\n#8 0x55ead24acdd4 <unknown>\n#9 0x55ead24ae1de <unknown>\n#10 0x55ead2777531 <unknown>\n#11 0x55ead277b455 <unknown>\n#12 0x55ead2763f55 <unknown>\n#13 0x55ead277c0ef <unknown>\n#14 0x55ead274799f <unknown>\n#15 0x55ead27a0008 <unknown>\n#16 0x55ead27a01d7 <unknown>\n#17 0x55ead27b2124 <unknown>\n#18 0x7f1261a94ac3 <unknown>","time":{"start":1706488312542,"stop":1706488327463,"duration":14921}},{"uid":"503e9bbf80210d35","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1531//#testresult/503e9bbf80210d35","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706401868454,"stop":1706401881391,"duration":12937}},{"uid":"b6572481faad8b3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1529//#testresult/b6572481faad8b3a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706315390882,"stop":1706315403499,"duration":12617}},{"uid":"82a7ca53f9bc2930","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1528//#testresult/82a7ca53f9bc2930","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706228958859,"stop":1706228971404,"duration":12545}},{"uid":"c52ba9a764578bbf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1523//#testresult/c52ba9a764578bbf","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706142790488,"stop":1706142807346,"duration":16858}},{"uid":"52470936661b8717","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1522//#testresult/52470936661b8717","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1706056310651,"stop":1706056325848,"duration":15197}},{"uid":"edb2203178bfbc95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1521//#testresult/edb2203178bfbc95","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705969893431,"stop":1705969903667,"duration":10236}},{"uid":"e80ad39fa7ed0506","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1520//#testresult/e80ad39fa7ed0506","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705883581347,"stop":1705883598596,"duration":17249}},{"uid":"998efa84d48bfb7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1519//#testresult/998efa84d48bfb7a","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705797218374,"stop":1705797231878,"duration":13504}},{"uid":"bbd94dcccb8cdf1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1515//#testresult/bbd94dcccb8cdf1f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705710632920,"stop":1705710647448,"duration":14528}},{"uid":"5c3d5c47005c3966","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1511//#testresult/5c3d5c47005c3966","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705624289202,"stop":1705624303505,"duration":14303}},{"uid":"4452ae402bd23e73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/4452ae402bd23e73","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705537794363,"stop":1705537807276,"duration":12913}},{"uid":"352a85d16fd82094","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/352a85d16fd82094","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705451411452,"stop":1705451428573,"duration":17121}},{"uid":"a22abaa723d61689","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1499//#testresult/a22abaa723d61689","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705365146601,"stop":1705365157207,"duration":10606}}]},"tags":[]},"source":"eabc0936408e1c6d.json","parameterValues":["WestSuffolkCouncil","local","http://selenium:4444"]}