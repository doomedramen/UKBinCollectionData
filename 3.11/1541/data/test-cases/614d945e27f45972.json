{"uid":"614d945e27f45972","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1706920076131,"stop":1706920107037,"duration":30906},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fc9b8c4c720>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc9b7e849d0>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fc9ce3fe190>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fc9b8c4c720>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc9b7e849d0>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fc9ce3fe190>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1706920076131,"stop":1706920076131,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1706920076132,"stop":1706920107037,"duration":30905},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az714-532"},{"name":"thread","value":"2802-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":178,"unknown":0,"total":181},"items":[{"uid":"c4fa28f1b196af23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1540//#testresult/c4fa28f1b196af23","status":"passed","time":{"start":1706833617248,"stop":1706833621774,"duration":4526}},{"uid":"1557bc75962fe8f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1538//#testresult/1557bc75962fe8f0","status":"passed","time":{"start":1706747349323,"stop":1706747350304,"duration":981}},{"uid":"80d0e6a6a8276f2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1537//#testresult/80d0e6a6a8276f2b","status":"passed","time":{"start":1706660882887,"stop":1706660886673,"duration":3786}},{"uid":"f8a179df68bbbd6e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1535//#testresult/f8a179df68bbbd6e","status":"passed","time":{"start":1706574419069,"stop":1706574420290,"duration":1221}},{"uid":"7ac014feb0dce6eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1534//#testresult/7ac014feb0dce6eb","status":"passed","time":{"start":1706488108619,"stop":1706488112712,"duration":4093}},{"uid":"83aeff0021bc7fb4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1531//#testresult/83aeff0021bc7fb4","status":"passed","time":{"start":1706401821666,"stop":1706401822525,"duration":859}},{"uid":"2b9b97d4d70038b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1529//#testresult/2b9b97d4d70038b1","status":"passed","time":{"start":1706315231852,"stop":1706315235113,"duration":3261}},{"uid":"71de86d6c3881acc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1528//#testresult/71de86d6c3881acc","status":"passed","time":{"start":1706228872498,"stop":1706228877055,"duration":4557}},{"uid":"90bf3266db583024","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1523//#testresult/90bf3266db583024","status":"passed","time":{"start":1706142578665,"stop":1706142579784,"duration":1119}},{"uid":"735aab80c833a873","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1522//#testresult/735aab80c833a873","status":"passed","time":{"start":1706056181549,"stop":1706056182596,"duration":1047}},{"uid":"c7dd62efc940f2b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1521//#testresult/c7dd62efc940f2b0","status":"passed","time":{"start":1705969799565,"stop":1705969801533,"duration":1968}},{"uid":"f59f095c34985588","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1520//#testresult/f59f095c34985588","status":"passed","time":{"start":1705883460208,"stop":1705883467714,"duration":7506}},{"uid":"5d95c89a141da189","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1519//#testresult/5d95c89a141da189","status":"passed","time":{"start":1705797115007,"stop":1705797121323,"duration":6316}},{"uid":"905f604ed2151971","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1515//#testresult/905f604ed2151971","status":"passed","time":{"start":1705710572975,"stop":1705710575714,"duration":2739}},{"uid":"92b1c6be555165d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1511//#testresult/92b1c6be555165d8","status":"passed","time":{"start":1705624146554,"stop":1705624149839,"duration":3285}},{"uid":"6828268028d907df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/6828268028d907df","status":"passed","time":{"start":1705537725238,"stop":1705537726068,"duration":830}},{"uid":"2bc5290b572ff1fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/2bc5290b572ff1fd","status":"passed","time":{"start":1705451352402,"stop":1705451353801,"duration":1399}},{"uid":"daab2f0b5d317b47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1499//#testresult/daab2f0b5d317b47","status":"passed","time":{"start":1705365010094,"stop":1705365015264,"duration":5170}},{"uid":"9e37992f663baecd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1492//#testresult/9e37992f663baecd","status":"passed","time":{"start":1705295692756,"stop":1705295693906,"duration":1150}},{"uid":"d2ca73fc54dc34c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1491//#testresult/d2ca73fc54dc34c4","status":"passed","time":{"start":1705295154705,"stop":1705295155851,"duration":1146}}]},"tags":[]},"source":"614d945e27f45972.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}