{"uid":"54c9c0a536c5f44b","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1713227134431,"stop":1713227151013,"duration":16582},"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f34d1eac720>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f34d1d5f8d0>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7f34d1eac720>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f34d1d5f8d0>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:120: in parse_data\n    parsed_date = datetime.strptime(date_text, \"%A %d %B\")\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Being collected today', format = '%A %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Being collected today' does not match format '%A %d %B'\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1713227134432,"stop":1713227134432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1713227134432,"stop":1713227151013,"duration":16581},"status":"failed","statusMessage":"time data 'Being collected today' does not match format '%A %d %B'","statusTrace":"ValueError: time data 'Being collected today' does not match format '%A %d %B'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1040-457"},{"name":"thread","value":"2758-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":55,"broken":0,"skipped":0,"passed":108,"unknown":0,"total":163},"items":[{"uid":"c34b006d75fc7fcb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1692//#testresult/c34b006d75fc7fcb","status":"passed","time":{"start":1713207719453,"stop":1713207747501,"duration":28048}},{"uid":"37bbf20763e3e310","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1683//#testresult/37bbf20763e3e310","status":"passed","time":{"start":1713188253938,"stop":1713188282074,"duration":28136}},{"uid":"2d80d80940f9ee05","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1682//#testresult/2d80d80940f9ee05","status":"passed","time":{"start":1713149744154,"stop":1713149765295,"duration":21141}},{"uid":"92f6d5dbc0673622","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1681//#testresult/92f6d5dbc0673622","status":"passed","time":{"start":1713053248401,"stop":1713053279160,"duration":30759}},{"uid":"aa6376185ad91c67","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1677//#testresult/aa6376185ad91c67","status":"passed","time":{"start":1712967746718,"stop":1712967778398,"duration":31680}},{"uid":"483a1ce9062dc662","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1675//#testresult/483a1ce9062dc662","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564d112c1863 <unknown>\n#1 0x564d10fb78c6 <unknown>\n#2 0x564d11002618 <unknown>\n#3 0x564d110026d1 <unknown>\n#4 0x564d11045744 <unknown>\n#5 0x564d110245cd <unknown>\n#6 0x564d11042c19 <unknown>\n#7 0x564d11024343 <unknown>\n#8 0x564d10ff5593 <unknown>\n#9 0x564d10ff5f5e <unknown>\n#10 0x564d1128584b <unknown>\n#11 0x564d112897a5 <unknown>\n#12 0x564d11273571 <unknown>\n#13 0x564d1128a332 <unknown>\n#14 0x564d1125887f <unknown>\n#15 0x564d112b0728 <unknown>\n#16 0x564d112b08fb <unknown>\n#17 0x564d112c09b4 <unknown>\n#18 0x7f3592894ac3 <unknown>","time":{"start":1712881602717,"stop":1712881675203,"duration":72486}},{"uid":"d3cfa26eca7ca32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1674//#testresult/d3cfa26eca7ca32","status":"passed","time":{"start":1712795322172,"stop":1712795347029,"duration":24857}},{"uid":"7604291349ab4abe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1673//#testresult/7604291349ab4abe","status":"passed","time":{"start":1712710320708,"stop":1712710348547,"duration":27839}},{"uid":"a1e59dcc3a82a9a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1671//#testresult/a1e59dcc3a82a9a0","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5612a6c65873 <unknown>\n#1 0x5612a695b8c6 <unknown>\n#2 0x5612a69a6618 <unknown>\n#3 0x5612a69a66d1 <unknown>\n#4 0x5612a69e9744 <unknown>\n#5 0x5612a69c85cd <unknown>\n#6 0x5612a69e6c19 <unknown>\n#7 0x5612a69c8343 <unknown>\n#8 0x5612a6999593 <unknown>\n#9 0x5612a6999f5e <unknown>\n#10 0x5612a6c2985b <unknown>\n#11 0x5612a6c2d7b5 <unknown>\n#12 0x5612a6c17581 <unknown>\n#13 0x5612a6c2e342 <unknown>\n#14 0x5612a6bfc88f <unknown>\n#15 0x5612a6c54738 <unknown>\n#16 0x5612a6c5490b <unknown>\n#17 0x5612a6c649c4 <unknown>\n#18 0x7fd526894ac3 <unknown>","time":{"start":1712700316999,"stop":1712700393014,"duration":76015}},{"uid":"631317a0354d151","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1668//#testresult/631317a0354d151","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d7fda0c873 <unknown>\n#1 0x55d7fd7028c6 <unknown>\n#2 0x55d7fd74d618 <unknown>\n#3 0x55d7fd74d6d1 <unknown>\n#4 0x55d7fd790744 <unknown>\n#5 0x55d7fd76f5cd <unknown>\n#6 0x55d7fd78dc19 <unknown>\n#7 0x55d7fd76f343 <unknown>\n#8 0x55d7fd740593 <unknown>\n#9 0x55d7fd740f5e <unknown>\n#10 0x55d7fd9d085b <unknown>\n#11 0x55d7fd9d47b5 <unknown>\n#12 0x55d7fd9be581 <unknown>\n#13 0x55d7fd9d5342 <unknown>\n#14 0x55d7fd9a388f <unknown>\n#15 0x55d7fd9fb738 <unknown>\n#16 0x55d7fd9fb90b <unknown>\n#17 0x55d7fda0b9c4 <unknown>\n#18 0x7f4f6bc94ac3 <unknown>","time":{"start":1712622380148,"stop":1712622457720,"duration":77572}},{"uid":"b1eb0794f735e8b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1667//#testresult/b1eb0794f735e8b2","status":"passed","time":{"start":1712536034185,"stop":1712536060029,"duration":25844}},{"uid":"3b5068b68d836059","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1666//#testresult/3b5068b68d836059","status":"passed","time":{"start":1712449765712,"stop":1712449801603,"duration":35891}},{"uid":"f1f3e4e33f511a1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1665//#testresult/f1f3e4e33f511a1c","status":"passed","time":{"start":1712363114778,"stop":1712363140483,"duration":25705}},{"uid":"b20259c3da7f3c7f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1664//#testresult/b20259c3da7f3c7f","status":"passed","time":{"start":1712276778994,"stop":1712276799055,"duration":20061}},{"uid":"2dc696406e45b699","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1660//#testresult/2dc696406e45b699","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564e7fd6c8a3 <unknown>\n#1 0x564e7fa628c6 <unknown>\n#2 0x564e7faad618 <unknown>\n#3 0x564e7faad6d1 <unknown>\n#4 0x564e7faf0744 <unknown>\n#5 0x564e7facf5cd <unknown>\n#6 0x564e7faedc19 <unknown>\n#7 0x564e7facf343 <unknown>\n#8 0x564e7faa0593 <unknown>\n#9 0x564e7faa0f5e <unknown>\n#10 0x564e7fd3088b <unknown>\n#11 0x564e7fd347e5 <unknown>\n#12 0x564e7fd1e5b1 <unknown>\n#13 0x564e7fd35372 <unknown>\n#14 0x564e7fd038bf <unknown>\n#15 0x564e7fd5b768 <unknown>\n#16 0x564e7fd5b93b <unknown>\n#17 0x564e7fd6b9f4 <unknown>\n#18 0x7fda3c494ac3 <unknown>","time":{"start":1712190403559,"stop":1712190476896,"duration":73337}},{"uid":"aff379c820726531","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1657//#testresult/aff379c820726531","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1712136872592,"stop":1712136891943,"duration":19351}},{"uid":"8f5d87747abf64d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1655//#testresult/8f5d87747abf64d","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1712103935241,"stop":1712103967035,"duration":31794}},{"uid":"66f720cf3cfbdc8a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1654//#testresult/66f720cf3cfbdc8a","status":"passed","time":{"start":1712017568408,"stop":1712017607477,"duration":39069}},{"uid":"dc99b9c1c42471ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1653//#testresult/dc99b9c1c42471ba","status":"passed","time":{"start":1711931362488,"stop":1711931384862,"duration":22374}},{"uid":"8f7486cd5d180111","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1652//#testresult/8f7486cd5d180111","status":"passed","time":{"start":1711844952481,"stop":1711844988833,"duration":36352}}]},"tags":[]},"source":"54c9c0a536c5f44b.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}