{"uid":"4c3ddf55e92fa576","name":"Validate Council Output [WestBerkshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"01e9aabe7c605fabcf00c630ea7946b4","time":{"start":1716079391181,"stop":1716079405369,"duration":14188},"status":"failed","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x557f83d7aeca <unknown>\n#1 0x557f83a6445c <unknown>\n#2 0x557f83a996f8 <unknown>\n#3 0x557f83a9563b <unknown>\n#4 0x557f83adfb19 <unknown>\n#5 0x557f83ad3253 <unknown>\n#6 0x557f83aa31c7 <unknown>\n#7 0x557f83aa3b3e <unknown>\n#8 0x557f83d4130b <unknown>\n#9 0x557f83d453b7 <unknown>\n#10 0x557f83d2de3e <unknown>\n#11 0x557f83d45e82 <unknown>\n#12 0x557f83d127df <unknown>\n#13 0x557f83d6a1b8 <unknown>\n#14 0x557f83d6a38b <unknown>\n#15 0x557f83d79ffc <unknown>\n#16 0x7f89fb094ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f9607e256c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestBerkshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9607175a10>, 'council': 'WestBerkshireCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestBerkshireCouncil.py:36: in parse_data\n    driver = webdriver.Chrome(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:208: in __init__\n    self.start_session(capabilities)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:292: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9607142f90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x557f83d6a38b \\\\u003Cunknown>\\\\n#15 0x557f83d79ffc \\\\u003Cunknown>\\\\n#16 0x7f89fb094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x557f83d7aeca <unknown>\nE       #1 0x557f83a6445c <unknown>\nE       #2 0x557f83a996f8 <unknown>\nE       #3 0x557f83a9563b <unknown>\nE       #4 0x557f83adfb19 <unknown>\nE       #5 0x557f83ad3253 <unknown>\nE       #6 0x557f83aa31c7 <unknown>\nE       #7 0x557f83aa3b3e <unknown>\nE       #8 0x557f83d4130b <unknown>\nE       #9 0x557f83d453b7 <unknown>\nE       #10 0x557f83d2de3e <unknown>\nE       #11 0x557f83d45e82 <unknown>\nE       #12 0x557f83d127df <unknown>\nE       #13 0x557f83d6a1b8 <unknown>\nE       #14 0x557f83d6a38b <unknown>\nE       #15 0x557f83d79ffc <unknown>\nE       #16 0x7f89fb094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x557f83d7aeca <unknown>\n#1 0x557f83a6445c <unknown>\n#2 0x557f83a996f8 <unknown>\n#3 0x557f83a9563b <unknown>\n#4 0x557f83adfb19 <unknown>\n#5 0x557f83ad3253 <unknown>\n#6 0x557f83aa31c7 <unknown>\n#7 0x557f83aa3b3e <unknown>\n#8 0x557f83d4130b <unknown>\n#9 0x557f83d453b7 <unknown>\n#10 0x557f83d2de3e <unknown>\n#11 0x557f83d45e82 <unknown>\n#12 0x557f83d127df <unknown>\n#13 0x557f83d6a1b8 <unknown>\n#14 0x557f83d6a38b <unknown>\n#15 0x557f83d79ffc <unknown>\n#16 0x7f89fb094ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f9607e256c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestBerkshireCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9607175a10>, 'council': 'WestBerkshireCouncil', 'headless_mode': 'True', 'local_browser': 'False', ...}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:884: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:76: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WestBerkshireCouncil.py:36: in parse_data\n    driver = webdriver.Chrome(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:208: in __init__\n    self.start_session(capabilities)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:292: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9607142f90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x557f83d6a38b \\\\u003Cunknown>\\\\n#15 0x557f83d79ffc \\\\u003Cunknown>\\\\n#16 0x7f89fb094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x557f83d7aeca <unknown>\nE       #1 0x557f83a6445c <unknown>\nE       #2 0x557f83a996f8 <unknown>\nE       #3 0x557f83a9563b <unknown>\nE       #4 0x557f83adfb19 <unknown>\nE       #5 0x557f83ad3253 <unknown>\nE       #6 0x557f83aa31c7 <unknown>\nE       #7 0x557f83aa3b3e <unknown>\nE       #8 0x557f83d4130b <unknown>\nE       #9 0x557f83d453b7 <unknown>\nE       #10 0x557f83d2de3e <unknown>\nE       #11 0x557f83d45e82 <unknown>\nE       #12 0x557f83d127df <unknown>\nE       #13 0x557f83d6a1b8 <unknown>\nE       #14 0x557f83d6a38b <unknown>\nE       #15 0x557f83d79ffc <unknown>\nE       #16 0x7f89fb094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","steps":[{"name":"Given the council: WestBerkshireCouncil","time":{"start":1716079391181,"stop":1716079391181,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WestBerkshireCouncil","time":{"start":1716079391181,"stop":1716079405369,"duration":14188},"status":"failed","statusMessage":"Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x557f83d7aeca <unknown>\n#1 0x557f83a6445c <unknown>\n#2 0x557f83a996f8 <unknown>\n#3 0x557f83a9563b <unknown>\n#4 0x557f83adfb19 <unknown>\n#5 0x557f83ad3253 <unknown>\n#6 0x557f83aa31c7 <unknown>\n#7 0x557f83aa3b3e <unknown>\n#8 0x557f83d4130b <unknown>\n#9 0x557f83d453b7 <unknown>\n#10 0x557f83d2de3e <unknown>\n#11 0x557f83d45e82 <unknown>\n#12 0x557f83d127df <unknown>\n#13 0x557f83d6a1b8 <unknown>\n#14 0x557f83d6a38b <unknown>\n#15 0x557f83d79ffc <unknown>\n#16 0x7f89fb094ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x557f83d7aeca <unknown>\n#1 0x557f83a6445c <unknown>\n#2 0x557f83a996f8 <unknown>\n#3 0x557f83a9563b <unknown>\n#4 0x557f83adfb19 <unknown>\n#5 0x557f83ad3253 <unknown>\n#6 0x557f83aa31c7 <unknown>\n#7 0x557f83aa3b3e <unknown>\n#8 0x557f83d4130b <unknown>\n#9 0x557f83d453b7 <unknown>\n#10 0x557f83d2de3e <unknown>\n#11 0x557f83d45e82 <unknown>\n#12 0x557f83d127df <unknown>\n#13 0x557f83d6a1b8 <unknown>\n#14 0x557f83d6a38b <unknown>\n#15 0x557f83d79ffc <unknown>\n#16 0x7f89fb094ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a9b1a2cfbcf9a654","name":"stdout","source":"a9b1a2cfbcf9a654.txt","type":"text/plain","size":795}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az735-377"},{"name":"thread","value":"2799-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestBerkshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"3f822ec7a73d0a3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1842//#testresult/3f822ec7a73d0a3f","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x56464c745eca <unknown>\n#1 0x56464c42f45c <unknown>\n#2 0x56464c4646f8 <unknown>\n#3 0x56464c46063b <unknown>\n#4 0x56464c4aab19 <unknown>\n#5 0x56464c49e253 <unknown>\n#6 0x56464c46e1c7 <unknown>\n#7 0x56464c46eb3e <unknown>\n#8 0x56464c70c30b <unknown>\n#9 0x56464c7103b7 <unknown>\n#10 0x56464c6f8e3e <unknown>\n#11 0x56464c710e82 <unknown>\n#12 0x56464c6dd7df <unknown>\n#13 0x56464c7351b8 <unknown>\n#14 0x56464c73538b <unknown>\n#15 0x56464c744ffc <unknown>\n#16 0x7f94d4294ac3 <unknown>","time":{"start":1715992660735,"stop":1715992672480,"duration":11745}},{"uid":"57ccc9d30d31d88d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1839//#testresult/57ccc9d30d31d88d","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55cf39f6eeca <unknown>\n#1 0x55cf39c5845c <unknown>\n#2 0x55cf39c8d6f8 <unknown>\n#3 0x55cf39c8963b <unknown>\n#4 0x55cf39cd3b19 <unknown>\n#5 0x55cf39cc7253 <unknown>\n#6 0x55cf39c971c7 <unknown>\n#7 0x55cf39c97b3e <unknown>\n#8 0x55cf39f3530b <unknown>\n#9 0x55cf39f393b7 <unknown>\n#10 0x55cf39f21e3e <unknown>\n#11 0x55cf39f39e82 <unknown>\n#12 0x55cf39f067df <unknown>\n#13 0x55cf39f5e1b8 <unknown>\n#14 0x55cf39f5e38b <unknown>\n#15 0x55cf39f6dffc <unknown>\n#16 0x7fc28b694ac3 <unknown>","time":{"start":1715984009072,"stop":1715984010552,"duration":1480}},{"uid":"635d95ffed51b4a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1834//#testresult/635d95ffed51b4a7","status":"failed","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x559bedcc1eca <unknown>\n#1 0x559bed9ab45c <unknown>\n#2 0x559bed9e06f8 <unknown>\n#3 0x559bed9dc63b <unknown>\n#4 0x559beda26b19 <unknown>\n#5 0x559beda1a253 <unknown>\n#6 0x559bed9ea1c7 <unknown>\n#7 0x559bed9eab3e <unknown>\n#8 0x559bedc8830b <unknown>\n#9 0x559bedc8c3b7 <unknown>\n#10 0x559bedc74e3e <unknown>\n#11 0x559bedc8ce82 <unknown>\n#12 0x559bedc597df <unknown>\n#13 0x559bedcb11b8 <unknown>\n#14 0x559bedcb138b <unknown>\n#15 0x559bedcc0ffc <unknown>\n#16 0x7f39c8c94ac3 <unknown>","time":{"start":1715974255809,"stop":1715974257409,"duration":1600}}]},"tags":[]},"source":"4c3ddf55e92fa576.json","parameterValues":["WestBerkshireCouncil"]}