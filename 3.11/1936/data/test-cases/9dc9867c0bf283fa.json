{"uid":"9dc9867c0bf283fa","name":"Validate Council Output [ValeofGlamorganCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1e5a723ab9bb5ec179bcd63e0a46576d","time":{"start":1717980303456,"stop":1717980304600,"duration":1144},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fbed1621a80>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fbed12bba50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fbee52d4b10>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fbed1621a80>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fbed12bba50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fbee52d4b10>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council","time":{"start":1717980303456,"stop":1717980303457,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1717980303457,"stop":1717980304600,"duration":1143},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ff48309ae9463e71","name":"stdout","source":"ff48309ae9463e71.txt","type":"text/plain","size":49}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1446-612"},{"name":"thread","value":"2695-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ValeofGlamorganCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":55,"broken":0,"skipped":0,"passed":157,"unknown":0,"total":212},"items":[{"uid":"f6d6668e11e361ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1934//#testresult/f6d6668e11e361ad","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fa03daa8f50>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1717893946873,"stop":1717894081590,"duration":134717}},{"uid":"e2faeb372337667d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1933//#testresult/e2faeb372337667d","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1717807642942,"stop":1717807644035,"duration":1093}},{"uid":"f1bf5956bceeed72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1932//#testresult/f1bf5956bceeed72","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1717721148434,"stop":1717721149344,"duration":910}},{"uid":"84ab030292f76f59","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1927//#testresult/84ab030292f76f59","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1717634619882,"stop":1717634621654,"duration":1772}},{"uid":"40d6fb6bc6f87d7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1924//#testresult/40d6fb6bc6f87d7e","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1717548207354,"stop":1717548208590,"duration":1236}},{"uid":"84124c478b5668c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1923//#testresult/84124c478b5668c0","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fcb73882450>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1717461870409,"stop":1717462004529,"duration":134120}},{"uid":"50f2711195ee5fd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1921//#testresult/50f2711195ee5fd8","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1717375605150,"stop":1717375606558,"duration":1408}},{"uid":"1bdee0542f76ad9f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1911//#testresult/1bdee0542f76ad9f","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1717316952595,"stop":1717316953364,"duration":769}},{"uid":"7c77227ad33cf803","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1908//#testresult/7c77227ad33cf803","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1717289063996,"stop":1717289065170,"duration":1174}},{"uid":"14225ebb5c6742fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1905//#testresult/14225ebb5c6742fe","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1717202851348,"stop":1717202852325,"duration":977}},{"uid":"8ccf72a24b3a2035","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1904//#testresult/8ccf72a24b3a2035","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1717116181031,"stop":1717116181887,"duration":856}},{"uid":"fa0cb43127f5d339","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1903//#testresult/fa0cb43127f5d339","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1717029833734,"stop":1717029834710,"duration":976}},{"uid":"2244012bf34385bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1898//#testresult/2244012bf34385bd","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716943577873,"stop":1716943579012,"duration":1139}},{"uid":"84d24cb6a49d5762","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1893//#testresult/84d24cb6a49d5762","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716856871616,"stop":1716856872931,"duration":1315}},{"uid":"94667113a20404f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1883//#testresult/94667113a20404f2","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716770435738,"stop":1716770436817,"duration":1079}},{"uid":"fc2fae9fd5f36a0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1881//#testresult/fc2fae9fd5f36a0a","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716753578584,"stop":1716753579492,"duration":908}},{"uid":"ef520f4502357cac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1877//#testresult/ef520f4502357cac","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716743591734,"stop":1716743592438,"duration":704}},{"uid":"5d4956c40f79ae8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1871//#testresult/5d4956c40f79ae8f","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716710335443,"stop":1716710336484,"duration":1041}},{"uid":"6c4f156c342c0c7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1866//#testresult/6c4f156c342c0c7a","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1716705617296,"stop":1716705618257,"duration":961}},{"uid":"3c074760884daa5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1865//#testresult/3c074760884daa5","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f85b9f4c110>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1716684071362,"stop":1716684205117,"duration":133755}}]},"tags":[]},"source":"9dc9867c0bf283fa.json","parameterValues":["ValeofGlamorganCouncil"]}