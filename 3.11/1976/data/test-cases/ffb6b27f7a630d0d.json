{"uid":"ffb6b27f7a630d0d","name":"Validate Council Output [WestLindseyDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f5da797a0b2058c505a20cf5bf95112e","time":{"start":1720485918077,"stop":1720485918740,"duration":663},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fa76945fe20>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestLindseyDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fa769110a10>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/WestLindseyDistrictCouncil.py:34: in parse_data\n    address_data = json.loads(\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fa77d895910>\ns = 'The service is unavailabl', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fa76945fe20>\nrequest = <FixtureRequest for <Function test_scenario_outline[WestLindseyDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fa769110a10>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/WestLindseyDistrictCouncil.py:34: in parse_data\n    address_data = json.loads(\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fa77d895910>\ns = 'The service is unavailabl', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council","time":{"start":1720485918077,"stop":1720485918078,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1720485918078,"stop":1720485918740,"duration":662},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"758f2a7fa8d7fa31","name":"stdout","source":"758f2a7fa8d7fa31.txt","type":"text/plain","size":53}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1272-139"},{"name":"thread","value":"2685-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WestLindseyDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":60,"unknown":0,"total":61},"items":[{"uid":"f7315ca22bf38a19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1975//#testresult/f7315ca22bf38a19","status":"passed","time":{"start":1720399645635,"stop":1720399646722,"duration":1087}},{"uid":"7f6cfa76b4c52436","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1971//#testresult/7f6cfa76b4c52436","status":"passed","time":{"start":1720313300948,"stop":1720313301871,"duration":923}},{"uid":"7d7e37ec8f9f8e8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1970//#testresult/7d7e37ec8f9f8e8b","status":"passed","time":{"start":1720226812596,"stop":1720226813607,"duration":1011}},{"uid":"6a6bddf85aa7a31a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1969//#testresult/6a6bddf85aa7a31a","status":"passed","time":{"start":1720140171932,"stop":1720140172758,"duration":826}},{"uid":"6c1c457629ad48c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1968//#testresult/6c1c457629ad48c2","status":"passed","time":{"start":1720053816472,"stop":1720053818029,"duration":1557}},{"uid":"ac2df3230bfbbd2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1967//#testresult/ac2df3230bfbbd2b","status":"passed","time":{"start":1719967401005,"stop":1719967402084,"duration":1079}},{"uid":"f8611874c2a38526","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1966//#testresult/f8611874c2a38526","status":"passed","time":{"start":1719881039842,"stop":1719881040796,"duration":954}},{"uid":"2d8de13c26fea547","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1965//#testresult/2d8de13c26fea547","status":"passed","time":{"start":1719795057862,"stop":1719795059033,"duration":1171}},{"uid":"8be896837c18ae47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1964//#testresult/8be896837c18ae47","status":"passed","time":{"start":1719708582781,"stop":1719708583870,"duration":1089}},{"uid":"5641de00618c4ff4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1962//#testresult/5641de00618c4ff4","status":"passed","time":{"start":1719621931944,"stop":1719621932930,"duration":986}},{"uid":"44d9b41e17893759","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1958//#testresult/44d9b41e17893759","status":"passed","time":{"start":1719535360024,"stop":1719535361026,"duration":1002}},{"uid":"97baa2c56b43ca0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1954//#testresult/97baa2c56b43ca0a","status":"passed","time":{"start":1719362791194,"stop":1719362792250,"duration":1056}},{"uid":"7c050930d8fa1a34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1953//#testresult/7c050930d8fa1a34","status":"passed","time":{"start":1719276345960,"stop":1719276346915,"duration":955}},{"uid":"7d9586445290d4c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1952//#testresult/7d9586445290d4c0","status":"passed","time":{"start":1719190053781,"stop":1719190055123,"duration":1342}},{"uid":"e41406012cafc9e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1951//#testresult/e41406012cafc9e1","status":"passed","time":{"start":1719103590157,"stop":1719103591227,"duration":1070}},{"uid":"df4789d2de08b58e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1950//#testresult/df4789d2de08b58e","status":"passed","time":{"start":1719017171278,"stop":1719017172201,"duration":923}},{"uid":"591ce5698c076fdd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1949//#testresult/591ce5698c076fdd","status":"passed","time":{"start":1718930823822,"stop":1718930824772,"duration":950}},{"uid":"374f5d27986828a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1948//#testresult/374f5d27986828a5","status":"passed","time":{"start":1718844289631,"stop":1718844290846,"duration":1215}},{"uid":"79ee7902c077b894","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1947//#testresult/79ee7902c077b894","status":"passed","time":{"start":1718758033620,"stop":1718758035001,"duration":1381}},{"uid":"3a8af9414398a2b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1946//#testresult/3a8af9414398a2b9","status":"passed","time":{"start":1718671582453,"stop":1718671583378,"duration":925}}]},"tags":[]},"source":"ffb6b27f7a630d0d.json","parameterValues":["WestLindseyDistrictCouncil"]}