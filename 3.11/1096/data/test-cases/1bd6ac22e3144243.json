{"uid":"1bd6ac22e3144243","name":"Validate Council Output [KingstonUponThamesCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"5cc54a24c590c0c794126ca22d0562ff","time":{"start":1698988613957,"stop":1698988614566,"duration":609},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2ca2560ae0>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2c8ea365d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2c8ea365d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2ca2560ae0>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2c8ea365d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:90: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2c8ea365d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:85: AssertionError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1698988613958,"stop":1698988613958,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from KingstonUponThamesCouncil","time":{"start":1698988613958,"stop":1698988614564,"duration":606},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1698988614564,"stop":1698988614564,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1698988614564,"stop":1698988614566,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az566-171"},{"name":"thread","value":"2348-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":23,"broken":0,"skipped":0,"passed":152,"unknown":0,"total":175},"items":[{"uid":"832cbd62da44bddc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1094//#testresult/832cbd62da44bddc","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698974150374,"stop":1698974151236,"duration":862}},{"uid":"2aabf0af555ddac6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1091//#testresult/2aabf0af555ddac6","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698887639375,"stop":1698887639933,"duration":558}},{"uid":"72225b2eb6f2ae9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1090//#testresult/72225b2eb6f2ae9b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878316652,"stop":1698878317256,"duration":604}},{"uid":"c0b84f4154c4c4cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1089//#testresult/c0b84f4154c4c4cd","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878232770,"stop":1698878233344,"duration":574}},{"uid":"e1900d2440d33c0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1086//#testresult/e1900d2440d33c0d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867432356,"stop":1698867433230,"duration":874}},{"uid":"b8be2ec6b416b88b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1081//#testresult/b8be2ec6b416b88b","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801522377,"stop":1698801523364,"duration":987}},{"uid":"c53c43aadf042790","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1079//#testresult/c53c43aadf042790","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788534776,"stop":1698788535447,"duration":671}},{"uid":"f47db822a4f6f948","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1077//#testresult/f47db822a4f6f948","status":"passed","time":{"start":1698715006566,"stop":1698715007423,"duration":857}},{"uid":"66952d02bef5893b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/66952d02bef5893b","status":"passed","time":{"start":1698701362583,"stop":1698701363644,"duration":1061}},{"uid":"caec7e567fbebd4a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/caec7e567fbebd4a","status":"passed","time":{"start":1698700248000,"stop":1698700248796,"duration":796}},{"uid":"4fb138ab4b0f382a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/4fb138ab4b0f382a","status":"passed","time":{"start":1698693132946,"stop":1698693133798,"duration":852}},{"uid":"8fe545f2d130030e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/8fe545f2d130030e","status":"passed","time":{"start":1698692771147,"stop":1698692772042,"duration":895}},{"uid":"97f14f6abb680c66","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/97f14f6abb680c66","status":"passed","time":{"start":1698646350031,"stop":1698646350962,"duration":931}},{"uid":"52367444c94be6dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/52367444c94be6dc","status":"failed","statusDetails":"ValueError: time data 'None 2023' does not match format '%A, %d %B %Y'","time":{"start":1698646356058,"stop":1698646357916,"duration":1858}},{"uid":"fff7789e495dc945","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/fff7789e495dc945","status":"passed","time":{"start":1698628575769,"stop":1698628576474,"duration":705}},{"uid":"b3d290f3bebacdfb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/b3d290f3bebacdfb","status":"passed","time":{"start":1698615493373,"stop":1698615494207,"duration":834}},{"uid":"b879db386b004c58","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1063//#testresult/b879db386b004c58","status":"passed","time":{"start":1698615257122,"stop":1698615257799,"duration":677}},{"uid":"bfa8b037c16972a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1061//#testresult/bfa8b037c16972a3","status":"passed","time":{"start":1698615136485,"stop":1698615137348,"duration":863}},{"uid":"1e09ac0b7e5f62c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1054//#testresult/1e09ac0b7e5f62c0","status":"passed","time":{"start":1698542376571,"stop":1698542377501,"duration":930}},{"uid":"703d861426b76471","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1053//#testresult/703d861426b76471","status":"failed","statusDetails":"ValueError: time data 'None 2023' does not match format '%A, %d %B %Y'","time":{"start":1698455565170,"stop":1698455566861,"duration":1691}}]},"tags":[]},"source":"1bd6ac22e3144243.json","parameterValues":["KingstonUponThamesCouncil"]}