{"uid":"682181bab8c31424","name":"Validate Council Output [BexleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b14d94c00a7a02b15ede5862fe9627b6","time":{"start":1698455467943,"stop":1698455468353,"duration":410},"status":"failed","statusMessage":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"fixturefunc = <function scrape_step at 0x7fd661411260>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd66146d890>, 'council': 'BexleyCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BexleyCouncil.CouncilClass object at 0x7fd6540211d0>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': 'spamstorage@live.co.uk', 'url': 'https://www.bexley.gov.uk/', ...}\nuser_email = 'spamstorage@live.co.uk'\nheaders = {'Connection': 'Keep-Alive', 'X-country': 'gb', 'X-email': 'spamstorage@live.co.uk'}\nresponse = <Response [400]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # User email from @Home app as UPRN\n        user_email = kwargs.get(\"uprn\")\n        headers = {\n            \"X-country\": \"gb\",\n            \"X-email\": user_email,\n            \"Connection\": \"Keep-Alive\",\n        }\n    \n        # Sniffed from the app\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://services.athomeapp.net/ServiceData/GetUserRoundJson\",\n            headers=headers,\n        )\n    \n        # 200 is OK. Sometimes it times out and gives this, but I'm not parsing HTTP codes\n        if response.status_code != 200:\n>           raise ValueError(\n                \"Error parsing API. Please check your email is correct and registered on the @Home app.\"\n            )\nE           ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:34: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"fixturefunc = <function scrape_step at 0x7fd661411260>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd66146d890>, 'council': 'BexleyCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BexleyCouncil.CouncilClass object at 0x7fd6540211d0>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': 'spamstorage@live.co.uk', 'url': 'https://www.bexley.gov.uk/', ...}\nuser_email = 'spamstorage@live.co.uk'\nheaders = {'Connection': 'Keep-Alive', 'X-country': 'gb', 'X-email': 'spamstorage@live.co.uk'}\nresponse = <Response [400]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # User email from @Home app as UPRN\n        user_email = kwargs.get(\"uprn\")\n        headers = {\n            \"X-country\": \"gb\",\n            \"X-email\": user_email,\n            \"Connection\": \"Keep-Alive\",\n        }\n    \n        # Sniffed from the app\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://services.athomeapp.net/ServiceData/GetUserRoundJson\",\n            headers=headers,\n        )\n    \n        # 200 is OK. Sometimes it times out and gives this, but I'm not parsing HTTP codes\n        if response.status_code != 200:\n>           raise ValueError(\n                \"Error parsing API. Please check your email is correct and registered on the @Home app.\"\n            )\nE           ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:34: ValueError","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1698455467943,"stop":1698455467944,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BexleyCouncil","time":{"start":1698455467944,"stop":1698455468353,"duration":409},"status":"failed","statusMessage":"Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az189-126"},{"name":"thread","value":"2192-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":99,"broken":0,"skipped":0,"passed":56,"unknown":0,"total":155},"items":[{"uid":"c7ebf8279769896c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1051//#testresult/c7ebf8279769896c","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698369155294,"stop":1698369155935,"duration":641}},{"uid":"b333de3b1ddf78d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1050//#testresult/b333de3b1ddf78d4","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698282737708,"stop":1698282738379,"duration":671}},{"uid":"d536dac8749c36ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1049//#testresult/d536dac8749c36ca","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698196416652,"stop":1698196417170,"duration":518}},{"uid":"fbbdf4a72f6933fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1048//#testresult/fbbdf4a72f6933fb","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698178133506,"stop":1698178134122,"duration":616}},{"uid":"d55b435618f16af7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1047//#testresult/d55b435618f16af7","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698178087475,"stop":1698178088708,"duration":1233}},{"uid":"353420d784f19be7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1046//#testresult/353420d784f19be7","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698110005574,"stop":1698110006154,"duration":580}},{"uid":"709d225f276a2ce5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1044//#testresult/709d225f276a2ce5","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698064776276,"stop":1698064776965,"duration":689}},{"uid":"475154f2adb53eda","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1042//#testresult/475154f2adb53eda","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1698023661372,"stop":1698023661987,"duration":615}},{"uid":"953ae002df6e2f4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1040//#testresult/953ae002df6e2f4b","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697937519472,"stop":1697937519925,"duration":453}},{"uid":"451d42676817d1cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1039//#testresult/451d42676817d1cb","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697850710528,"stop":1697850710995,"duration":467}},{"uid":"c2455b73894266c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1037//#testresult/c2455b73894266c4","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697790319864,"stop":1697790320500,"duration":636}},{"uid":"249db470d91206c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1034//#testresult/249db470d91206c3","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697764435895,"stop":1697764436416,"duration":521}},{"uid":"86357dfd505e25b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1033//#testresult/86357dfd505e25b4","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697706448878,"stop":1697706449504,"duration":626}},{"uid":"c28ee0653ee4a90","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1032//#testresult/c28ee0653ee4a90","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697706408087,"stop":1697706408507,"duration":420}},{"uid":"fb1b7c231a645272","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1030//#testresult/fb1b7c231a645272","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","time":{"start":1697702044312,"stop":1697702044314,"duration":2}},{"uid":"53cc86c02613edc5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/53cc86c02613edc5","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697696109926,"stop":1697696110463,"duration":537}},{"uid":"9a41d427c3f3c065","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/9a41d427c3f3c065","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697678032422,"stop":1697678033110,"duration":688}},{"uid":"b81bf5a1c7d13c6d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/b81bf5a1c7d13c6d","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697666521576,"stop":1697666522046,"duration":470}},{"uid":"f35e7ca8423e030e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/f35e7ca8423e030e","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697656774652,"stop":1697656775212,"duration":560}},{"uid":"de10fb11088ba69f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/de10fb11088ba69f","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1697649968280,"stop":1697649969162,"duration":882}}]},"tags":[]},"source":"682181bab8c31424.json","parameterValues":["BexleyCouncil"]}