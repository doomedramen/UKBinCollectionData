{"uid":"40c9bc05bdb3c137","name":"Validate Council Output [ThreeRiversDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e3654e30da7afdc28f7fe7f42f4ffd96","time":{"start":1718412213820,"stop":1718412246936,"duration":33116},"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=125.0.6422.76); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55deb0bf2e9a <unknown>\n#1 0x55deb08dc45c <unknown>\n#2 0x55deb08e1b69 <unknown>\n#3 0x55deb08e3915 <unknown>\n#4 0x55deb08e399c <unknown>\n#5 0x55deb0922e34 <unknown>\n#6 0x55deb094b4b2 <unknown>\n#7 0x55deb091ca79 <unknown>\n#8 0x55deb094b67e <unknown>\n#9 0x55deb096a2cc <unknown>\n#10 0x55deb094b253 <unknown>\n#11 0x55deb091b1c7 <unknown>\n#12 0x55deb091bb3e <unknown>\n#13 0x55deb0bb92db <unknown>\n#14 0x55deb0bbd387 <unknown>\n#15 0x55deb0ba5e0e <unknown>\n#16 0x55deb0bbde52 <unknown>\n#17 0x55deb0b8a7af <unknown>\n#18 0x55deb0be2188 <unknown>\n#19 0x55deb0be235b <unknown>\n#20 0x55deb0bf1fcc <unknown>\n#21 0x7f7bcb6e6ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f9754d01800>\nrequest = <FixtureRequest for <Function test_scenario_outline[ThreeRiversDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f9754d7a0d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/ThreeRiversDistrictCouncil.py:75: in parse_data\n    drop_down_values.select_by_value(str(user_uprn))\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/select.py:79: in select_by_value\n    self._set_selected(opt)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/select.py:212: in _set_selected\n    if not option.is_enabled():\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:192: in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9753e53310>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x55deb0be235b \\\\u003Cunknown>\\\\n#20 0x55deb0bf1fcc \\\\u003Cunknown>\\\\n#21 0x7f7bcb6e6ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=125.0.6422.76); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55deb0bf2e9a <unknown>\nE       #1 0x55deb08dc45c <unknown>\nE       #2 0x55deb08e1b69 <unknown>\nE       #3 0x55deb08e3915 <unknown>\nE       #4 0x55deb08e399c <unknown>\nE       #5 0x55deb0922e34 <unknown>\nE       #6 0x55deb094b4b2 <unknown>\nE       #7 0x55deb091ca79 <unknown>\nE       #8 0x55deb094b67e <unknown>\nE       #9 0x55deb096a2cc <unknown>\nE       #10 0x55deb094b253 <unknown>\nE       #11 0x55deb091b1c7 <unknown>\nE       #12 0x55deb091bb3e <unknown>\nE       #13 0x55deb0bb92db <unknown>\nE       #14 0x55deb0bbd387 <unknown>\nE       #15 0x55deb0ba5e0e <unknown>\nE       #16 0x55deb0bbde52 <unknown>\nE       #17 0x55deb0b8a7af <unknown>\nE       #18 0x55deb0be2188 <unknown>\nE       #19 0x55deb0be235b <unknown>\nE       #20 0x55deb0bf1fcc <unknown>\nE       #21 0x7f7bcb6e6ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=125.0.6422.76); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55deb0bf2e9a <unknown>\n#1 0x55deb08dc45c <unknown>\n#2 0x55deb08e1b69 <unknown>\n#3 0x55deb08e3915 <unknown>\n#4 0x55deb08e399c <unknown>\n#5 0x55deb0922e34 <unknown>\n#6 0x55deb094b4b2 <unknown>\n#7 0x55deb091ca79 <unknown>\n#8 0x55deb094b67e <unknown>\n#9 0x55deb096a2cc <unknown>\n#10 0x55deb094b253 <unknown>\n#11 0x55deb091b1c7 <unknown>\n#12 0x55deb091bb3e <unknown>\n#13 0x55deb0bb92db <unknown>\n#14 0x55deb0bbd387 <unknown>\n#15 0x55deb0ba5e0e <unknown>\n#16 0x55deb0bbde52 <unknown>\n#17 0x55deb0b8a7af <unknown>\n#18 0x55deb0be2188 <unknown>\n#19 0x55deb0be235b <unknown>\n#20 0x55deb0bf1fcc <unknown>\n#21 0x7f7bcb6e6ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f9754d01800>\nrequest = <FixtureRequest for <Function test_scenario_outline[ThreeRiversDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f9754d7a0d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/ThreeRiversDistrictCouncil.py:75: in parse_data\n    drop_down_values.select_by_value(str(user_uprn))\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/select.py:79: in select_by_value\n    self._set_selected(opt)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/select.py:212: in _set_selected\n    if not option.is_enabled():\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:192: in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9753e53310>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x55deb0be235b \\\\u003Cunknown>\\\\n#20 0x55deb0bf1fcc \\\\u003Cunknown>\\\\n#21 0x7f7bcb6e6ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=125.0.6422.76); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55deb0bf2e9a <unknown>\nE       #1 0x55deb08dc45c <unknown>\nE       #2 0x55deb08e1b69 <unknown>\nE       #3 0x55deb08e3915 <unknown>\nE       #4 0x55deb08e399c <unknown>\nE       #5 0x55deb0922e34 <unknown>\nE       #6 0x55deb094b4b2 <unknown>\nE       #7 0x55deb091ca79 <unknown>\nE       #8 0x55deb094b67e <unknown>\nE       #9 0x55deb096a2cc <unknown>\nE       #10 0x55deb094b253 <unknown>\nE       #11 0x55deb091b1c7 <unknown>\nE       #12 0x55deb091bb3e <unknown>\nE       #13 0x55deb0bb92db <unknown>\nE       #14 0x55deb0bbd387 <unknown>\nE       #15 0x55deb0ba5e0e <unknown>\nE       #16 0x55deb0bbde52 <unknown>\nE       #17 0x55deb0b8a7af <unknown>\nE       #18 0x55deb0be2188 <unknown>\nE       #19 0x55deb0be235b <unknown>\nE       #20 0x55deb0bf1fcc <unknown>\nE       #21 0x7f7bcb6e6ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Given the council","time":{"start":1718412213820,"stop":1718412213820,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1718412213820,"stop":1718412246936,"duration":33116},"status":"failed","statusMessage":"Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=125.0.6422.76); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55deb0bf2e9a <unknown>\n#1 0x55deb08dc45c <unknown>\n#2 0x55deb08e1b69 <unknown>\n#3 0x55deb08e3915 <unknown>\n#4 0x55deb08e399c <unknown>\n#5 0x55deb0922e34 <unknown>\n#6 0x55deb094b4b2 <unknown>\n#7 0x55deb091ca79 <unknown>\n#8 0x55deb094b67e <unknown>\n#9 0x55deb096a2cc <unknown>\n#10 0x55deb094b253 <unknown>\n#11 0x55deb091b1c7 <unknown>\n#12 0x55deb091bb3e <unknown>\n#13 0x55deb0bb92db <unknown>\n#14 0x55deb0bbd387 <unknown>\n#15 0x55deb0ba5e0e <unknown>\n#16 0x55deb0bbde52 <unknown>\n#17 0x55deb0b8a7af <unknown>\n#18 0x55deb0be2188 <unknown>\n#19 0x55deb0be235b <unknown>\n#20 0x55deb0bf1fcc <unknown>\n#21 0x7f7bcb6e6ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=125.0.6422.76); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55deb0bf2e9a <unknown>\n#1 0x55deb08dc45c <unknown>\n#2 0x55deb08e1b69 <unknown>\n#3 0x55deb08e3915 <unknown>\n#4 0x55deb08e399c <unknown>\n#5 0x55deb0922e34 <unknown>\n#6 0x55deb094b4b2 <unknown>\n#7 0x55deb091ca79 <unknown>\n#8 0x55deb094b67e <unknown>\n#9 0x55deb096a2cc <unknown>\n#10 0x55deb094b253 <unknown>\n#11 0x55deb091b1c7 <unknown>\n#12 0x55deb091bb3e <unknown>\n#13 0x55deb0bb92db <unknown>\n#14 0x55deb0bbd387 <unknown>\n#15 0x55deb0ba5e0e <unknown>\n#16 0x55deb0bbde52 <unknown>\n#17 0x55deb0b8a7af <unknown>\n#18 0x55deb0be2188 <unknown>\n#19 0x55deb0be235b <unknown>\n#20 0x55deb0bf1fcc <unknown>\n#21 0x7f7bcb6e6ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"352d98b3f71eb1b2","name":"log","source":"352d98b3f71eb1b2.txt","type":"text/plain","size":993},{"uid":"4f2025ed1dc24ded","name":"stdout","source":"4f2025ed1dc24ded.txt","type":"text/plain","size":53}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1424-456"},{"name":"thread","value":"2715-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ThreeRiversDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":14,"unknown":0,"total":15},"items":[{"uid":"ac572fc479a8eb26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1942//#testresult/ac572fc479a8eb26","status":"passed","time":{"start":1718325798942,"stop":1718325843609,"duration":44667}},{"uid":"1bbb019aa7f2f771","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1940//#testresult/1bbb019aa7f2f771","status":"passed","time":{"start":1718268655273,"stop":1718268675129,"duration":19856}},{"uid":"458266e2bd766b23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1939//#testresult/458266e2bd766b23","status":"passed","time":{"start":1718239619143,"stop":1718239637224,"duration":18081}},{"uid":"e118dba4b39c00cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1938//#testresult/e118dba4b39c00cb","status":"passed","time":{"start":1718153119875,"stop":1718153161350,"duration":41475}},{"uid":"d2459c515b3432a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1937//#testresult/d2459c515b3432a6","status":"passed","time":{"start":1718066912200,"stop":1718066944821,"duration":32621}},{"uid":"73ec7c3cbb0488e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1936//#testresult/73ec7c3cbb0488e3","status":"passed","time":{"start":1717980310679,"stop":1717980344045,"duration":33366}},{"uid":"337a030111a8afc6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1934//#testresult/337a030111a8afc6","status":"passed","time":{"start":1717893768990,"stop":1717893809751,"duration":40761}},{"uid":"ac93cf7c510bb354","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1933//#testresult/ac93cf7c510bb354","status":"passed","time":{"start":1717807641045,"stop":1717807655603,"duration":14558}},{"uid":"105eb215894d32c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1932//#testresult/105eb215894d32c1","status":"passed","time":{"start":1717720972135,"stop":1717721146252,"duration":174117}},{"uid":"cf10fe8bfe6eca9d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1927//#testresult/cf10fe8bfe6eca9d","status":"passed","time":{"start":1717634626955,"stop":1717634658195,"duration":31240}},{"uid":"740d05fa240b3665","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1924//#testresult/740d05fa240b3665","status":"passed","time":{"start":1717548222583,"stop":1717548235189,"duration":12606}},{"uid":"801c44fcb38687ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1923//#testresult/801c44fcb38687ae","status":"passed","time":{"start":1717461834284,"stop":1717461868237,"duration":33953}},{"uid":"fbfef9cd540af931","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1921//#testresult/fbfef9cd540af931","status":"passed","time":{"start":1717375437991,"stop":1717375587887,"duration":149896}},{"uid":"1069079d002f67ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1919//#testresult/1069079d002f67ef","status":"passed","time":{"start":1717331856535,"stop":1717331868882,"duration":12347}}]},"tags":[]},"source":"40c9bc05bdb3c137.json","parameterValues":["ThreeRiversDistrictCouncil"]}