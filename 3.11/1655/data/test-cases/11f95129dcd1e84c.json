{"uid":"11f95129dcd1e84c","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1712103989345,"stop":1712104002092,"duration":12747},"status":"failed","statusMessage":"ValueError: time data 'Wednesday, 3 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6e054cc9a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6e04b89e90>, 'council': 'KingstonUponThamesCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/KingstonUponThamesCouncil.py:57: in parse_data\n    datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Wednesday, 3 April\\n              \\n              \\n              (In progress) 2024'\nformat = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Wednesday, 3 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Wednesday, 3 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f6e054cc9a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f6e04b89e90>, 'council': 'KingstonUponThamesCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/KingstonUponThamesCouncil.py:57: in parse_data\n    datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:567: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Wednesday, 3 April\\n              \\n              \\n              (In progress) 2024'\nformat = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Wednesday, 3 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1712103989345,"stop":1712103989345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1712103989345,"stop":1712104002092,"duration":12747},"status":"failed","statusMessage":"time data 'Wednesday, 3 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","statusTrace":"ValueError: time data 'Wednesday, 3 April\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1393-394"},{"name":"thread","value":"2917-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":151,"broken":0,"skipped":0,"passed":87,"unknown":0,"total":238},"items":[{"uid":"45dc9590d1907cf1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1654//#testresult/45dc9590d1907cf1","status":"passed","time":{"start":1712017631490,"stop":1712017647025,"duration":15535}},{"uid":"9299556671ab3e64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1653//#testresult/9299556671ab3e64","status":"passed","time":{"start":1711931423933,"stop":1711931431484,"duration":7551}},{"uid":"30b6481aec89ec80","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1652//#testresult/30b6481aec89ec80","status":"passed","time":{"start":1711845025141,"stop":1711845031921,"duration":6780}},{"uid":"b8184943a3c863ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1649//#testresult/b8184943a3c863ab","status":"passed","time":{"start":1711672005002,"stop":1711672009130,"duration":4128}},{"uid":"1a8f5c1075402ef4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1648//#testresult/1a8f5c1075402ef4","status":"passed","time":{"start":1711585666718,"stop":1711585675454,"duration":8736}},{"uid":"35f30cc1af465e5b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1646//#testresult/35f30cc1af465e5b","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 27 March\\n              \\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1711499188509,"stop":1711499202339,"duration":13830}},{"uid":"2111d73a106da8de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1645//#testresult/2111d73a106da8de","status":"passed","time":{"start":1711412764279,"stop":1711412777203,"duration":12924}},{"uid":"df3633bc50e2f477","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1641//#testresult/df3633bc50e2f477","status":"passed","time":{"start":1711326477787,"stop":1711326486750,"duration":8963}},{"uid":"5dcc4139955426a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1634//#testresult/5dcc4139955426a8","status":"passed","time":{"start":1711240171259,"stop":1711240180037,"duration":8778}},{"uid":"4340c9d40259aec8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1626//#testresult/4340c9d40259aec8","status":"passed","time":{"start":1711153592590,"stop":1711153609776,"duration":17186}},{"uid":"af9866b51261e56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1625//#testresult/af9866b51261e56","status":"passed","time":{"start":1711067209045,"stop":1711067216058,"duration":7013}},{"uid":"b9be3df7239cd72e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1624//#testresult/b9be3df7239cd72e","status":"passed","time":{"start":1710980888473,"stop":1710980900485,"duration":12012}},{"uid":"a5b2e7a390585b6d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1621//#testresult/a5b2e7a390585b6d","status":"passed","time":{"start":1710970969840,"stop":1710970978658,"duration":8818}},{"uid":"8b1a4220a055c14c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1619//#testresult/8b1a4220a055c14c","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 20 March\\n              \\n              (In progress) 2024' does not match format '%A, %d %B %Y'","time":{"start":1710894375836,"stop":1710894384861,"duration":9025}},{"uid":"697a77e31ad9a304","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1615//#testresult/697a77e31ad9a304","status":"passed","time":{"start":1710808103480,"stop":1710808112232,"duration":8752}},{"uid":"67e4e8c867b5f7f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1609//#testresult/67e4e8c867b5f7f","status":"passed","time":{"start":1710721732212,"stop":1710721739836,"duration":7624}},{"uid":"d89834d9200b0f38","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1608//#testresult/d89834d9200b0f38","status":"passed","time":{"start":1710635357494,"stop":1710635364221,"duration":6727}},{"uid":"16029a06a29205c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1607//#testresult/16029a06a29205c3","status":"passed","time":{"start":1710548733735,"stop":1710548743733,"duration":9998}},{"uid":"f0778b8bba781a2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1605//#testresult/f0778b8bba781a2a","status":"passed","time":{"start":1710462408344,"stop":1710462420208,"duration":11864}},{"uid":"908209afae377de1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1604//#testresult/908209afae377de1","status":"passed","time":{"start":1710452856125,"stop":1710452868313,"duration":12188}}]},"tags":[]},"source":"11f95129dcd1e84c.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}