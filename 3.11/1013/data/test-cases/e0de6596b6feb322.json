{"uid":"e0de6596b6feb322","name":"Validate Council Output [WiganBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d724d8b9a4d0593a99f53e95b03e558b","time":{"start":1697618464518,"stop":1697618469394,"duration":4876},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb555d549a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb548446510>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb548446510>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fb555d549a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WiganBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb548446510>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:87: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fb548446510>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:83: AssertionError","steps":[{"name":"Given the council: WiganBoroughCouncil","time":{"start":1697618464519,"stop":1697618464519,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WiganBoroughCouncil","time":{"start":1697618464519,"stop":1697618469391,"duration":4872},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1697618469391,"stop":1697618469392,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1697618469392,"stop":1697618469394,"duration":2},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az713-629"},{"name":"thread","value":"2413-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WiganBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":58,"broken":0,"skipped":0,"passed":76,"unknown":0,"total":134},"items":[{"uid":"42b67cd43f38e35a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/42b67cd43f38e35a","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697591974943,"stop":1697591978429,"duration":3486}},{"uid":"fa85a3fb71c378af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/fa85a3fb71c378af","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697542908353,"stop":1697542911805,"duration":3452}},{"uid":"30484533196e146e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/30484533196e146e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697505642383,"stop":1697505647052,"duration":4669}},{"uid":"44c741068d12d415","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/44c741068d12d415","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484896051,"stop":1697484899700,"duration":3649}},{"uid":"ce3053bfb94c4aaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/ce3053bfb94c4aaf","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697484806699,"stop":1697484810060,"duration":3361}},{"uid":"1b8792ddaae20e5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/1b8792ddaae20e5e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697419265085,"stop":1697419268868,"duration":3783}},{"uid":"e0ae209d8cb75eb6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/e0ae209d8cb75eb6","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697403364153,"stop":1697403367910,"duration":3757}},{"uid":"7a9c453fd7631ba4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/7a9c453fd7631ba4","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697399996618,"stop":1697400002407,"duration":5789}},{"uid":"e46a8126f4b3c20d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/994//#testresult/e46a8126f4b3c20d","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697367248532,"stop":1697367253116,"duration":4584}},{"uid":"2516f45c6313983c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/993//#testresult/2516f45c6313983c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697367162899,"stop":1697367166582,"duration":3683}},{"uid":"452d163da828e242","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/992//#testresult/452d163da828e242","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697333075162,"stop":1697333079039,"duration":3877}},{"uid":"119f3926e299776c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/119f3926e299776c","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697246237914,"stop":1697246244110,"duration":6196}},{"uid":"14ccead43feec4fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/14ccead43feec4fb","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697160088185,"stop":1697160092079,"duration":3894}},{"uid":"5ef1a35fab6dae8f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/5ef1a35fab6dae8f","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697073452845,"stop":1697073456941,"duration":4096}},{"uid":"cd639684aba2b36d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/984//#testresult/cd639684aba2b36d","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697053093297,"stop":1697053096277,"duration":2980}},{"uid":"f09ffffd1e5bcda9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/981//#testresult/f09ffffd1e5bcda9","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1697051014485,"stop":1697051018785,"duration":4300}},{"uid":"9c87a92d67810667","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/978//#testresult/9c87a92d67810667","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696987115061,"stop":1696987121738,"duration":6677}},{"uid":"c6fd7c402804c938","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/977//#testresult/c6fd7c402804c938","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696900721700,"stop":1696900726421,"duration":4721}},{"uid":"a456821077208072","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/976//#testresult/a456821077208072","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696814376549,"stop":1696814380930,"duration":4381}},{"uid":"1c3b15fecd09f583","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/975//#testresult/1c3b15fecd09f583","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1696728210363,"stop":1696728214446,"duration":4083}}]},"tags":[]},"source":"e0de6596b6feb322.json","parameterValues":["WiganBoroughCouncil"]}