{"uid":"1c23eb6a3fae6e14","name":"Validate Council Output [MalvernHillsDC-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aa5bb0fc8895f376e02d5eea8573242b","time":{"start":1703541257396,"stop":1703541258370,"duration":974},"status":"failed","statusMessage":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f3b1f3ccae0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3b1f1ebb90>, 'council': 'MalvernHillsDC', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MalvernHillsDC.py:51: in parse_data\n    date = datetime.strptime(thisCollection[1], \"%A %d/%m/%Y\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Please refer to the  christmas collection calendar.'\nformat = '%A %d/%m/%Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f3b1f3ccae0>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f3b1f1ebb90>, 'council': 'MalvernHillsDC', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MalvernHillsDC.py:51: in parse_data\n    date = datetime.strptime(thisCollection[1], \"%A %d/%m/%Y\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Please refer to the  christmas collection calendar.'\nformat = '%A %d/%m/%Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: MalvernHillsDC","time":{"start":1703541257396,"stop":1703541257396,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MalvernHillsDC using None and the None is set","time":{"start":1703541257396,"stop":1703541258370,"duration":974},"status":"failed","statusMessage":"time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az847-406"},{"name":"thread","value":"2685-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MalvernHillsDC"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":38,"broken":0,"skipped":0,"passed":57,"unknown":0,"total":95},"items":[{"uid":"f6c4369ecbe2cb60","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1295//#testresult/f6c4369ecbe2cb60","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1703467244855,"stop":1703467245774,"duration":919}},{"uid":"624bc663261c389a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1292//#testresult/624bc663261c389a","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1703416546295,"stop":1703416547448,"duration":1153}},{"uid":"2b3bd1f92f70587f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1291//#testresult/2b3bd1f92f70587f","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1703416510935,"stop":1703416512233,"duration":1298}},{"uid":"2c4dfc43c8a6f6e2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1289//#testresult/2c4dfc43c8a6f6e2","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1703381080328,"stop":1703381081683,"duration":1355}},{"uid":"a14bd2d6a6a1b23b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1287//#testresult/a14bd2d6a6a1b23b","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1703294085244,"stop":1703294086456,"duration":1212}},{"uid":"b8817d24a5a3bda6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1282//#testresult/b8817d24a5a3bda6","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1703207814161,"stop":1703207815502,"duration":1341}},{"uid":"f035f48fc492a3c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1281//#testresult/f035f48fc492a3c4","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1703121583805,"stop":1703121584680,"duration":875}},{"uid":"c7bd9d2120730f5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1280//#testresult/c7bd9d2120730f5d","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1703034416862,"stop":1703034418311,"duration":1449}},{"uid":"32d3e22b6e92400f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1279//#testresult/32d3e22b6e92400f","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1703025049254,"stop":1703025050224,"duration":970}},{"uid":"a77066747fe9232","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1278//#testresult/a77066747fe9232","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1703025018748,"stop":1703025019729,"duration":981}},{"uid":"8125e47b20964588","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1276//#testresult/8125e47b20964588","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702948699727,"stop":1702948701048,"duration":1321}},{"uid":"e727b74c0b758073","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1275//#testresult/e727b74c0b758073","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702862364591,"stop":1702862365731,"duration":1140}},{"uid":"33dd3d52426c6d37","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/33dd3d52426c6d37","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702860017412,"stop":1702860018387,"duration":975}},{"uid":"1eb4e1ce678d5b74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/1eb4e1ce678d5b74","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702843583496,"stop":1702843584820,"duration":1324}},{"uid":"887ec321a5f0d02b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/887ec321a5f0d02b","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702809391474,"stop":1702809392635,"duration":1161}},{"uid":"a0c69274bcc982d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1247//#testresult/a0c69274bcc982d5","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702657146984,"stop":1702657148381,"duration":1397}},{"uid":"644d006257688108","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1248//#testresult/644d006257688108","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702657170851,"stop":1702657171905,"duration":1054}},{"uid":"cb738447ae71ae5a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1244//#testresult/cb738447ae71ae5a","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702603213827,"stop":1702603214634,"duration":807}},{"uid":"1df42cb6f6a2fb84","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1243//#testresult/1df42cb6f6a2fb84","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702540051932,"stop":1702540052963,"duration":1031}},{"uid":"d9d1253948df9853","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1241//#testresult/d9d1253948df9853","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1702516690096,"stop":1702516691248,"duration":1152}}]},"tags":[]},"source":"1c23eb6a3fae6e14.json","parameterValues":["MalvernHillsDC","None","None"]}