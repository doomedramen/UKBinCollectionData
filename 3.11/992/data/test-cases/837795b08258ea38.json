{"uid":"837795b08258ea38","name":"Validate Council Output [GuildfordCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"316f6b3276320661fa68609de6296157","time":{"start":1697332795782,"stop":1697332797498,"duration":1716},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[GuildfordCouncil]>>\n_pytest_bdd_example = {'council': 'GuildfordCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GuildfordCouncil.py:45: in parse_data\n    results = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f37bccecf10>\ns = '*/{\"event\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"eventDef\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"t\"...tual: MlRqRU5YT3pjWFRNenJranFOMWFjQXlMaWFpdmxPSTZWeEo0bWtiN0hsaXcyNDQuMjAuNC0yLjQxLjQ\",\"exceptionEvent\":true}/*ERROR*/'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[GuildfordCouncil]>>\n_pytest_bdd_example = {'council': 'GuildfordCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GuildfordCouncil.py:45: in parse_data\n    results = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f37bccecf10>\ns = '*/{\"event\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"eventDef\":{\"descriptor\":\"markup://aura:clientOutOfSync\",\"t\"...tual: MlRqRU5YT3pjWFRNenJranFOMWFjQXlMaWFpdmxPSTZWeEo0bWtiN0hsaXcyNDQuMjAuNC0yLjQxLjQ\",\"exceptionEvent\":true}/*ERROR*/'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: GuildfordCouncil","time":{"start":1697332795783,"stop":1697332795783,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from GuildfordCouncil","time":{"start":1697332795783,"stop":1697332797498,"duration":1715},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1242-608"},{"name":"thread","value":"2429-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GuildfordCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":84,"unknown":0,"total":86},"items":[{"uid":"86fff29d4d0771c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/988//#testresult/86fff29d4d0771c","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1697245958341,"stop":1697245959769,"duration":1428}},{"uid":"c988e2c9fc9b5971","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/986//#testresult/c988e2c9fc9b5971","status":"passed","time":{"start":1697159801980,"stop":1697159805941,"duration":3961}},{"uid":"7f26ff909d7dd77a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/985//#testresult/7f26ff909d7dd77a","status":"passed","time":{"start":1697073152630,"stop":1697073154984,"duration":2354}},{"uid":"843086cd38a8f29f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/984//#testresult/843086cd38a8f29f","status":"passed","time":{"start":1697052878775,"stop":1697052881168,"duration":2393}},{"uid":"52edd277923b56ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/981//#testresult/52edd277923b56ed","status":"passed","time":{"start":1697050730096,"stop":1697050732141,"duration":2045}},{"uid":"1adb32e2b855f822","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/978//#testresult/1adb32e2b855f822","status":"passed","time":{"start":1696986830019,"stop":1696986835860,"duration":5841}},{"uid":"25b5c9ab923cdf20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/977//#testresult/25b5c9ab923cdf20","status":"passed","time":{"start":1696900427079,"stop":1696900430555,"duration":3476}},{"uid":"58e22e04f8895daf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/976//#testresult/58e22e04f8895daf","status":"passed","time":{"start":1696814071370,"stop":1696814073509,"duration":2139}},{"uid":"995b27fce3ceb8b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/975//#testresult/995b27fce3ceb8b9","status":"passed","time":{"start":1696727946598,"stop":1696727949522,"duration":2924}},{"uid":"3c815fa30f91bdfa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/974//#testresult/3c815fa30f91bdfa","status":"passed","time":{"start":1696641206968,"stop":1696641210121,"duration":3153}},{"uid":"44afced9e11dfa39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/973//#testresult/44afced9e11dfa39","status":"passed","time":{"start":1696554870905,"stop":1696554873281,"duration":2376}},{"uid":"41bc6c37216d8c2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/972//#testresult/41bc6c37216d8c2f","status":"passed","time":{"start":1696468460584,"stop":1696468463623,"duration":3039}},{"uid":"54c624dffe4a1ef3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/971//#testresult/54c624dffe4a1ef3","status":"passed","time":{"start":1696382173097,"stop":1696382176549,"duration":3452}},{"uid":"cd79cfe648084e0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/970//#testresult/cd79cfe648084e0c","status":"passed","time":{"start":1696366235508,"stop":1696366238636,"duration":3128}},{"uid":"5a15bd4209c75ca2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/969//#testresult/5a15bd4209c75ca2","status":"passed","time":{"start":1696295705543,"stop":1696295707905,"duration":2362}},{"uid":"15b267805f75bdd8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/967//#testresult/15b267805f75bdd8","status":"passed","time":{"start":1696209299771,"stop":1696209302567,"duration":2796}},{"uid":"42800c9dc83478ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/966//#testresult/42800c9dc83478ab","status":"passed","time":{"start":1696123399594,"stop":1696123402844,"duration":3250}},{"uid":"874a28fcda427d8d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/965//#testresult/874a28fcda427d8d","status":"passed","time":{"start":1696036355324,"stop":1696036358314,"duration":2990}},{"uid":"a23027ecc562e54b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/964//#testresult/a23027ecc562e54b","status":"passed","time":{"start":1695950095290,"stop":1695950097992,"duration":2702}},{"uid":"6303c209d4481678","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/963//#testresult/6303c209d4481678","status":"passed","time":{"start":1695930371387,"stop":1695930374520,"duration":3133}}]},"tags":[]},"source":"837795b08258ea38.json","parameterValues":["GuildfordCouncil"]}