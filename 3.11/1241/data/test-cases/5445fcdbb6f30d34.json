{"uid":"5445fcdbb6f30d34","name":"Validate Council Output [NewcastleCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a63cb1391c4aa4a9ce00ac5e7dcb85fb","time":{"start":1702516718990,"stop":1702516750316,"duration":31326},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fcdf24f1800>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fcdf1daf950>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fcdf1daf950>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fcdf24f1800>\nrequest = <FixtureRequest for <Function test_scenario_outline[NewcastleCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fcdf1daf950>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fcdf1daf950>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: NewcastleCityCouncil","time":{"start":1702516718991,"stop":1702516718991,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NewcastleCityCouncil using None and the None is set","time":{"start":1702516718991,"stop":1702516750314,"duration":31323},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1702516750315,"stop":1702516750315,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1702516750315,"stop":1702516750316,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1242-990"},{"name":"thread","value":"2771-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NewcastleCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":0,"skipped":0,"passed":54,"unknown":0,"total":75},"items":[{"uid":"5f2c9040807ef470","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1238//#testresult/5f2c9040807ef470","status":"passed","time":{"start":1702447487809,"stop":1702447497465,"duration":9656}},{"uid":"2feb7cf20fa304b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1236//#testresult/2feb7cf20fa304b0","status":"passed","time":{"start":1702430354817,"stop":1702430393606,"duration":38789}},{"uid":"56a4f57b9e271cbe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1232//#testresult/56a4f57b9e271cbe","status":"passed","time":{"start":1702366499873,"stop":1702366511849,"duration":11976}},{"uid":"792c1774e08028e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1231//#testresult/792c1774e08028e9","status":"passed","time":{"start":1702343976186,"stop":1702343986872,"duration":10686}},{"uid":"239eea293783d245","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1229//#testresult/239eea293783d245","status":"passed","time":{"start":1702257576904,"stop":1702257593936,"duration":17032}},{"uid":"8250861e2a8196d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1228//#testresult/8250861e2a8196d6","status":"passed","time":{"start":1702171473048,"stop":1702171501898,"duration":28850}},{"uid":"6c5d8085166a1dfe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1227//#testresult/6c5d8085166a1dfe","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702084652530,"stop":1702084683012,"duration":30482}},{"uid":"820373e7d9107276","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1225//#testresult/820373e7d9107276","status":"passed","time":{"start":1702066736557,"stop":1702066774075,"duration":37518}},{"uid":"80904751ebf2c24e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1222//#testresult/80904751ebf2c24e","status":"passed","time":{"start":1702054390912,"stop":1702054425671,"duration":34759}},{"uid":"e83b31462608d899","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1223//#testresult/e83b31462608d899","status":"failed","statusDetails":"AssertionError: True","time":{"start":1702054425014,"stop":1702054483818,"duration":58804}},{"uid":"1f655762052e4198","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1219//#testresult/1f655762052e4198","status":"passed","time":{"start":1701998419664,"stop":1701998459065,"duration":39401}},{"uid":"2b071751e8ad845c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1218//#testresult/2b071751e8ad845c","status":"passed","time":{"start":1701990391843,"stop":1701990405585,"duration":13742}},{"uid":"e65928bf60dc6d6a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1217//#testresult/e65928bf60dc6d6a","status":"passed","time":{"start":1701990352256,"stop":1701990368645,"duration":16389}},{"uid":"55c86fe2945d2b80","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1215//#testresult/55c86fe2945d2b80","status":"passed","time":{"start":1701942815760,"stop":1701942834373,"duration":18613}},{"uid":"b2a4a241e5bc3d4c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1214//#testresult/b2a4a241e5bc3d4c","status":"passed","time":{"start":1701936539306,"stop":1701936563659,"duration":24353}},{"uid":"1f0efaa89d3a7c79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1213//#testresult/1f0efaa89d3a7c79","status":"passed","time":{"start":1701936481118,"stop":1701936507888,"duration":26770}},{"uid":"8c301ad6aab1b9fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1211//#testresult/8c301ad6aab1b9fa","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701911986960,"stop":1701912019067,"duration":32107}},{"uid":"b183f6a1dfa4b695","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1209//#testresult/b183f6a1dfa4b695","status":"passed","time":{"start":1701904873850,"stop":1701904890175,"duration":16325}},{"uid":"688cfd24ae615b31","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1201//#testresult/688cfd24ae615b31","status":"passed","time":{"start":1701882550063,"stop":1701882567943,"duration":17880}},{"uid":"9ba4d53fa4e1aac7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1202//#testresult/9ba4d53fa4e1aac7","status":"passed","time":{"start":1701882584337,"stop":1701882595877,"duration":11540}}]},"tags":[]},"source":"5445fcdbb6f30d34.json","parameterValues":["NewcastleCityCouncil","None","None"]}