{"uid":"49341ecd8aae6bd5","name":"Validate Council Output [WealdenDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b3ddf98c8383031d63a6bd27b361f868","time":{"start":1712536241200,"stop":1712536242457,"duration":1257},"status":"failed","statusMessage":"TypeError: 'int' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7feeccd23ce0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7feeccb74ed0>, 'council': 'WealdenDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WealdenDistrictCouncil.CouncilClass object at 0x7feecc318c50>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '10033413624', ...}\nuser_uprn = '10033413624'\nheaders = {'accept': '*/*', 'accept-language': 'en-GB,en;q=0.7', 'authority': 'www.wealden.gov.uk', 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', ...}\ndata = {'action': 'wealden_get_collections_for_uprn', 'uprn': '10033413624'}\nresponse = <Response [400]>, json_data = 0\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"authority\": \"www.wealden.gov.uk\",\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en-GB,en;q=0.7\",\n            \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n            # Requests sorts cookies= alphabetically\n            # 'cookie': 'ARRAffinity=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872; ARRAffinitySameSite=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872',\n            \"origin\": \"https://www.wealden.gov.uk\",\n            \"referer\": \"https://www.wealden.gov.uk/recycling-and-waste/bin-search/?uprn=10033413624\",\n            \"sec-fetch-dest\": \"empty\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"sec-gpc\": \"1\",\n            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"x-requested-with\": \"XMLHttpRequest\",\n        }\n    \n        data = {\n            \"action\": \"wealden_get_collections_for_uprn\",\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(\n            \"https://www.wealden.gov.uk/wp-admin/admin-ajax.php\",\n            headers=headers,\n            data=data,\n        )\n        json_data = json.loads(response.text)\n    \n>       if json_data[\"status\"] != \"success\":\nE       TypeError: 'int' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/WealdenDistrictCouncil.py:51: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"TypeError: 'int' object is not subscriptable","statusTrace":"fixturefunc = <function scrape_step at 0x7feeccd23ce0>\nrequest = <FixtureRequest for <Function test_scenario_outline[WealdenDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7feeccb74ed0>, 'council': 'WealdenDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WealdenDistrictCouncil.CouncilClass object at 0x7feecc318c50>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '10033413624', ...}\nuser_uprn = '10033413624'\nheaders = {'accept': '*/*', 'accept-language': 'en-GB,en;q=0.7', 'authority': 'www.wealden.gov.uk', 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8', ...}\ndata = {'action': 'wealden_get_collections_for_uprn', 'uprn': '10033413624'}\nresponse = <Response [400]>, json_data = 0\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"authority\": \"www.wealden.gov.uk\",\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en-GB,en;q=0.7\",\n            \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n            # Requests sorts cookies= alphabetically\n            # 'cookie': 'ARRAffinity=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872; ARRAffinitySameSite=e45c20b343b490e3866d5d35c3dbda687e4a1357c2163c32922209862abb5872',\n            \"origin\": \"https://www.wealden.gov.uk\",\n            \"referer\": \"https://www.wealden.gov.uk/recycling-and-waste/bin-search/?uprn=10033413624\",\n            \"sec-fetch-dest\": \"empty\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"sec-gpc\": \"1\",\n            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"x-requested-with\": \"XMLHttpRequest\",\n        }\n    \n        data = {\n            \"action\": \"wealden_get_collections_for_uprn\",\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(\n            \"https://www.wealden.gov.uk/wp-admin/admin-ajax.php\",\n            headers=headers,\n            data=data,\n        )\n        json_data = json.loads(response.text)\n    \n>       if json_data[\"status\"] != \"success\":\nE       TypeError: 'int' object is not subscriptable\n\nuk_bin_collection/uk_bin_collection/councils/WealdenDistrictCouncil.py:51: TypeError","steps":[{"name":"Given the council: WealdenDistrictCouncil","time":{"start":1712536241200,"stop":1712536241201,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from WealdenDistrictCouncil using None and the None is set","time":{"start":1712536241201,"stop":1712536242457,"duration":1256},"status":"failed","statusMessage":"'int' object is not subscriptable","statusTrace":"TypeError: 'int' object is not subscriptable\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az777-327"},{"name":"thread","value":"2831-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WealdenDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":229,"unknown":0,"total":241},"items":[{"uid":"d9fe340229099b34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1666//#testresult/d9fe340229099b34","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712450135651,"stop":1712450136906,"duration":1255}},{"uid":"569962401845a8bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1665//#testresult/569962401845a8bf","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712363468193,"stop":1712363469723,"duration":1530}},{"uid":"571325073757d6d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1664//#testresult/571325073757d6d8","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712277031177,"stop":1712277032444,"duration":1267}},{"uid":"b72a67522493a74d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1660//#testresult/b72a67522493a74d","status":"failed","statusDetails":"TypeError: 'int' object is not subscriptable","time":{"start":1712190668105,"stop":1712190669341,"duration":1236}},{"uid":"9c353eeea9faf023","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1657//#testresult/9c353eeea9faf023","status":"passed","time":{"start":1712137052279,"stop":1712137053964,"duration":1685}},{"uid":"46f0366d184c5b67","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1655//#testresult/46f0366d184c5b67","status":"passed","time":{"start":1712104184873,"stop":1712104187485,"duration":2612}},{"uid":"de8df3788788bbfc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1654//#testresult/de8df3788788bbfc","status":"passed","time":{"start":1712017850432,"stop":1712017853172,"duration":2740}},{"uid":"6cd5cad28cf3aaab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1653//#testresult/6cd5cad28cf3aaab","status":"passed","time":{"start":1711931652966,"stop":1711931654985,"duration":2019}},{"uid":"f18963fb66996dcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1652//#testresult/f18963fb66996dcd","status":"passed","time":{"start":1711845179116,"stop":1711845180800,"duration":1684}},{"uid":"461566acacb5d2ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1649//#testresult/461566acacb5d2ba","status":"passed","time":{"start":1711672190063,"stop":1711672191565,"duration":1502}},{"uid":"f2513f07491e6cc7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1648//#testresult/f2513f07491e6cc7","status":"passed","time":{"start":1711585862724,"stop":1711585864294,"duration":1570}},{"uid":"160667418c6b30f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1646//#testresult/160667418c6b30f0","status":"passed","time":{"start":1711499390970,"stop":1711499392891,"duration":1921}},{"uid":"d21cad554c397f48","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1645//#testresult/d21cad554c397f48","status":"passed","time":{"start":1711412931057,"stop":1711412932820,"duration":1763}},{"uid":"9119f567c9dcd893","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1641//#testresult/9119f567c9dcd893","status":"passed","time":{"start":1711326643181,"stop":1711326644854,"duration":1673}},{"uid":"dab297504226d247","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1634//#testresult/dab297504226d247","status":"passed","time":{"start":1711240374226,"stop":1711240375699,"duration":1473}},{"uid":"4bb5409d8c2a0e7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1626//#testresult/4bb5409d8c2a0e7c","status":"passed","time":{"start":1711153731932,"stop":1711153733803,"duration":1871}},{"uid":"57d461fbd55b96c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1625//#testresult/57d461fbd55b96c6","status":"passed","time":{"start":1711067349222,"stop":1711067350979,"duration":1757}},{"uid":"722a239b404bd5db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1624//#testresult/722a239b404bd5db","status":"passed","time":{"start":1710981041342,"stop":1710981043357,"duration":2015}},{"uid":"5bde5b2b23438661","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1621//#testresult/5bde5b2b23438661","status":"passed","time":{"start":1710971067109,"stop":1710971068881,"duration":1772}},{"uid":"82fcfb433d63978f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1619//#testresult/82fcfb433d63978f","status":"passed","time":{"start":1710894516808,"stop":1710894518503,"duration":1695}}]},"tags":[]},"source":"49341ecd8aae6bd5.json","parameterValues":["WealdenDistrictCouncil","None","None"]}