{"uid":"5e502625b63b1088","name":"Validate Council Output [MalvernHillsDC-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aa5bb0fc8895f376e02d5eea8573242b","time":{"start":1704378055386,"stop":1704378056315,"duration":929},"status":"failed","statusMessage":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7fba6115ce00>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fba60d99990>, 'council': 'MalvernHillsDC', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MalvernHillsDC.py:50: in parse_data\n    date = datetime.strptime(thisCollection[1], \"%A %d/%m/%Y\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Please refer to the  christmas collection calendar.'\nformat = '%A %d/%m/%Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7fba6115ce00>\nrequest = <FixtureRequest for <Function test_scenario_outline[MalvernHillsDC-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fba60d99990>, 'council': 'MalvernHillsDC', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/MalvernHillsDC.py:50: in parse_data\n    date = datetime.strptime(thisCollection[1], \"%A %d/%m/%Y\")\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Please refer to the  christmas collection calendar.'\nformat = '%A %d/%m/%Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: MalvernHillsDC","time":{"start":1704378055387,"stop":1704378055387,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MalvernHillsDC using None and the None is set","time":{"start":1704378055387,"stop":1704378056315,"duration":928},"status":"failed","statusMessage":"time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","statusTrace":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1251-781"},{"name":"thread","value":"2683-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MalvernHillsDC"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":72,"broken":0,"skipped":0,"passed":57,"unknown":0,"total":129},"items":[{"uid":"69c240b75c36a4c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1366//#testresult/69c240b75c36a4c4","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704375878155,"stop":1704375879067,"duration":912}},{"uid":"1672fba8b7988c1d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1363//#testresult/1672fba8b7988c1d","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704356797941,"stop":1704356799014,"duration":1073}},{"uid":"77914efedfcfcd32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1361//#testresult/77914efedfcfcd32","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704355936107,"stop":1704355937231,"duration":1124}},{"uid":"5d8da95c1af1918b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1359//#testresult/5d8da95c1af1918b","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704331205705,"stop":1704331206595,"duration":890}},{"uid":"57a5fccd2e407309","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1355//#testresult/57a5fccd2e407309","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704303741878,"stop":1704303743319,"duration":1441}},{"uid":"fc822fd29bd534cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1352//#testresult/fc822fd29bd534cf","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704301430898,"stop":1704301432339,"duration":1441}},{"uid":"71c551a1f021956f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1349//#testresult/71c551a1f021956f","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704244673820,"stop":1704244674884,"duration":1064}},{"uid":"983a010171568f25","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1348//#testresult/983a010171568f25","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704180256193,"stop":1704180257456,"duration":1263}},{"uid":"750f28c8c35cec62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1346//#testresult/750f28c8c35cec62","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704158381285,"stop":1704158382172,"duration":887}},{"uid":"242ccc96551b55c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1345//#testresult/242ccc96551b55c6","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704114647487,"stop":1704114648877,"duration":1390}},{"uid":"f518066177bf714","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1343//#testresult/f518066177bf714","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704113754404,"stop":1704113755793,"duration":1389}},{"uid":"1b9b03893c6bf5bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1342//#testresult/1b9b03893c6bf5bc","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704113695146,"stop":1704113696197,"duration":1051}},{"uid":"d8945ed256ae29e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1341//#testresult/d8945ed256ae29e","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704112273001,"stop":1704112273995,"duration":994}},{"uid":"9a6b9dc827eedd1e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1339//#testresult/9a6b9dc827eedd1e","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704112131302,"stop":1704112132265,"duration":963}},{"uid":"77cb09ebeed6dad2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1336//#testresult/77cb09ebeed6dad2","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704111899311,"stop":1704111900771,"duration":1460}},{"uid":"4bde398c510cb37d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1337//#testresult/4bde398c510cb37d","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704111891461,"stop":1704111892702,"duration":1241}},{"uid":"4d07a72de630960e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1335//#testresult/4d07a72de630960e","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704111528675,"stop":1704111529718,"duration":1043}},{"uid":"f97943476cadf165","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1332//#testresult/f97943476cadf165","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704111377170,"stop":1704111378550,"duration":1380}},{"uid":"12cb25e9d827af97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1330//#testresult/12cb25e9d827af97","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704099966583,"stop":1704099967934,"duration":1351}},{"uid":"1cdfd15e19db43a1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1329//#testresult/1cdfd15e19db43a1","status":"failed","statusDetails":"ValueError: time data 'Please refer to the  christmas collection calendar.' does not match format '%A %d/%m/%Y'","time":{"start":1704072594684,"stop":1704072595697,"duration":1013}}]},"tags":[]},"source":"5e502625b63b1088.json","parameterValues":["MalvernHillsDC","None","None"]}