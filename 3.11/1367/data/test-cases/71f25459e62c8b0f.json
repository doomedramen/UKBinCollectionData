{"uid":"71f25459e62c8b0f","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1704378182739,"stop":1704378487500,"duration":304761},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x558e50459f83 <unknown>\n#1 0x558e50112cf7 <unknown>\n#2 0x558e500f87a1 <unknown>\n#3 0x558e500f844a <unknown>\n#4 0x558e500f67e1 <unknown>\n#5 0x558e500f718a <unknown>\n#6 0x558e5010807c <unknown>\n#7 0x558e501207c1 <unknown>\n#8 0x558e501266bb <unknown>\n#9 0x558e500f792d <unknown>\n#10 0x558e501205c2 <unknown>\n#11 0x558e501ab204 <unknown>\n#12 0x558e5018be53 <unknown>\n#13 0x558e50153dd4 <unknown>\n#14 0x558e501551de <unknown>\n#15 0x558e5041e531 <unknown>\n#16 0x558e50422455 <unknown>\n#17 0x558e5040af55 <unknown>\n#18 0x558e504230ef <unknown>\n#19 0x558e503ee99f <unknown>\n#20 0x558e50447008 <unknown>\n#21 0x558e504471d7 <unknown>\n#22 0x558e50459124 <unknown>\n#23 0x7f79d0894ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb7edfed9e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb7ed729e10>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:58: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb7ed5159d0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x558e504471d7 \\\\u003Cunknown>\\\\n#22 0x558e50459124 \\\\u003Cunknown>\\\\n#23 0x7f79d0894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x558e50459f83 <unknown>\nE       #1 0x558e50112cf7 <unknown>\nE       #2 0x558e500f87a1 <unknown>\nE       #3 0x558e500f844a <unknown>\nE       #4 0x558e500f67e1 <unknown>\nE       #5 0x558e500f718a <unknown>\nE       #6 0x558e5010807c <unknown>\nE       #7 0x558e501207c1 <unknown>\nE       #8 0x558e501266bb <unknown>\nE       #9 0x558e500f792d <unknown>\nE       #10 0x558e501205c2 <unknown>\nE       #11 0x558e501ab204 <unknown>\nE       #12 0x558e5018be53 <unknown>\nE       #13 0x558e50153dd4 <unknown>\nE       #14 0x558e501551de <unknown>\nE       #15 0x558e5041e531 <unknown>\nE       #16 0x558e50422455 <unknown>\nE       #17 0x558e5040af55 <unknown>\nE       #18 0x558e504230ef <unknown>\nE       #19 0x558e503ee99f <unknown>\nE       #20 0x558e50447008 <unknown>\nE       #21 0x558e504471d7 <unknown>\nE       #22 0x558e50459124 <unknown>\nE       #23 0x7f79d0894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x558e50459f83 <unknown>\n#1 0x558e50112cf7 <unknown>\n#2 0x558e500f87a1 <unknown>\n#3 0x558e500f844a <unknown>\n#4 0x558e500f67e1 <unknown>\n#5 0x558e500f718a <unknown>\n#6 0x558e5010807c <unknown>\n#7 0x558e501207c1 <unknown>\n#8 0x558e501266bb <unknown>\n#9 0x558e500f792d <unknown>\n#10 0x558e501205c2 <unknown>\n#11 0x558e501ab204 <unknown>\n#12 0x558e5018be53 <unknown>\n#13 0x558e50153dd4 <unknown>\n#14 0x558e501551de <unknown>\n#15 0x558e5041e531 <unknown>\n#16 0x558e50422455 <unknown>\n#17 0x558e5040af55 <unknown>\n#18 0x558e504230ef <unknown>\n#19 0x558e503ee99f <unknown>\n#20 0x558e50447008 <unknown>\n#21 0x558e504471d7 <unknown>\n#22 0x558e50459124 <unknown>\n#23 0x7f79d0894ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fb7edfed9e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fb7ed729e10>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:58: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb7ed5159d0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x558e504471d7 \\\\u003Cunknown>\\\\n#22 0x558e50459124 \\\\u003Cunknown>\\\\n#23 0x7f79d0894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x558e50459f83 <unknown>\nE       #1 0x558e50112cf7 <unknown>\nE       #2 0x558e500f87a1 <unknown>\nE       #3 0x558e500f844a <unknown>\nE       #4 0x558e500f67e1 <unknown>\nE       #5 0x558e500f718a <unknown>\nE       #6 0x558e5010807c <unknown>\nE       #7 0x558e501207c1 <unknown>\nE       #8 0x558e501266bb <unknown>\nE       #9 0x558e500f792d <unknown>\nE       #10 0x558e501205c2 <unknown>\nE       #11 0x558e501ab204 <unknown>\nE       #12 0x558e5018be53 <unknown>\nE       #13 0x558e50153dd4 <unknown>\nE       #14 0x558e501551de <unknown>\nE       #15 0x558e5041e531 <unknown>\nE       #16 0x558e50422455 <unknown>\nE       #17 0x558e5040af55 <unknown>\nE       #18 0x558e504230ef <unknown>\nE       #19 0x558e503ee99f <unknown>\nE       #20 0x558e50447008 <unknown>\nE       #21 0x558e504471d7 <unknown>\nE       #22 0x558e50459124 <unknown>\nE       #23 0x7f79d0894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1704378182739,"stop":1704378182740,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1704378182740,"stop":1704378487500,"duration":304760},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x558e50459f83 <unknown>\n#1 0x558e50112cf7 <unknown>\n#2 0x558e500f87a1 <unknown>\n#3 0x558e500f844a <unknown>\n#4 0x558e500f67e1 <unknown>\n#5 0x558e500f718a <unknown>\n#6 0x558e5010807c <unknown>\n#7 0x558e501207c1 <unknown>\n#8 0x558e501266bb <unknown>\n#9 0x558e500f792d <unknown>\n#10 0x558e501205c2 <unknown>\n#11 0x558e501ab204 <unknown>\n#12 0x558e5018be53 <unknown>\n#13 0x558e50153dd4 <unknown>\n#14 0x558e501551de <unknown>\n#15 0x558e5041e531 <unknown>\n#16 0x558e50422455 <unknown>\n#17 0x558e5040af55 <unknown>\n#18 0x558e504230ef <unknown>\n#19 0x558e503ee99f <unknown>\n#20 0x558e50447008 <unknown>\n#21 0x558e504471d7 <unknown>\n#22 0x558e50459124 <unknown>\n#23 0x7f79d0894ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x558e50459f83 <unknown>\n#1 0x558e50112cf7 <unknown>\n#2 0x558e500f87a1 <unknown>\n#3 0x558e500f844a <unknown>\n#4 0x558e500f67e1 <unknown>\n#5 0x558e500f718a <unknown>\n#6 0x558e5010807c <unknown>\n#7 0x558e501207c1 <unknown>\n#8 0x558e501266bb <unknown>\n#9 0x558e500f792d <unknown>\n#10 0x558e501205c2 <unknown>\n#11 0x558e501ab204 <unknown>\n#12 0x558e5018be53 <unknown>\n#13 0x558e50153dd4 <unknown>\n#14 0x558e501551de <unknown>\n#15 0x558e5041e531 <unknown>\n#16 0x558e50422455 <unknown>\n#17 0x558e5040af55 <unknown>\n#18 0x558e504230ef <unknown>\n#19 0x558e503ee99f <unknown>\n#20 0x558e50447008 <unknown>\n#21 0x558e504471d7 <unknown>\n#22 0x558e50459124 <unknown>\n#23 0x7f79d0894ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1251-781"},{"name":"thread","value":"2677-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":0,"skipped":0,"passed":108,"unknown":0,"total":129},"items":[{"uid":"27a6e259b9675515","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1366//#testresult/27a6e259b9675515","status":"passed","time":{"start":1704375958123,"stop":1704375967788,"duration":9665}},{"uid":"e53bd77efd87a399","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1363//#testresult/e53bd77efd87a399","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55c902f9cf83 <unknown>\n#1 0x55c902c55cf7 <unknown>\n#2 0x55c902c4d6ea <unknown>\n#3 0x55c902c3c5a1 <unknown>\n#4 0x55c902c3dd40 <unknown>\n#5 0x55c902c3c854 <unknown>\n#6 0x55c902c3b586 <unknown>\n#7 0x55c902c3b44a <unknown>\n#8 0x55c902c397e1 <unknown>\n#9 0x55c902c3a01a <unknown>\n#10 0x55c902c58bbe <unknown>\n#11 0x55c902cee7a5 <unknown>\n#12 0x55c902ccf0b2 <unknown>\n#13 0x55c902cee006 <unknown>\n#14 0x55c902ccee53 <unknown>\n#15 0x55c902c96dd4 <unknown>\n#16 0x55c902c981de <unknown>\n#17 0x55c902f61531 <unknown>\n#18 0x55c902f65455 <unknown>\n#19 0x55c902f4df55 <unknown>\n#20 0x55c902f660ef <unknown>\n#21 0x55c902f3199f <unknown>\n#22 0x55c902f8a008 <unknown>\n#23 0x55c902f8a1d7 <unknown>\n#24 0x55c902f9c124 <unknown>\n#25 0x7fce50a94ac3 <unknown>","time":{"start":1704356749965,"stop":1704356770907,"duration":20942}},{"uid":"ba326131d1821a83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1361//#testresult/ba326131d1821a83","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x556972ed0f83 <unknown>\n#1 0x556972b89cf7 <unknown>\n#2 0x556972b816ea <unknown>\n#3 0x556972b705a1 <unknown>\n#4 0x556972b71d40 <unknown>\n#5 0x556972b70854 <unknown>\n#6 0x556972b6f586 <unknown>\n#7 0x556972b6f44a <unknown>\n#8 0x556972b6d7e1 <unknown>\n#9 0x556972b6e01a <unknown>\n#10 0x556972b8cbbe <unknown>\n#11 0x556972c227a5 <unknown>\n#12 0x556972c030b2 <unknown>\n#13 0x556972c22006 <unknown>\n#14 0x556972c02e53 <unknown>\n#15 0x556972bcadd4 <unknown>\n#16 0x556972bcc1de <unknown>\n#17 0x556972e95531 <unknown>\n#18 0x556972e99455 <unknown>\n#19 0x556972e81f55 <unknown>\n#20 0x556972e9a0ef <unknown>\n#21 0x556972e6599f <unknown>\n#22 0x556972ebe008 <unknown>\n#23 0x556972ebe1d7 <unknown>\n#24 0x556972ed0124 <unknown>\n#25 0x7fb258894ac3 <unknown>","time":{"start":1704355896147,"stop":1704355917516,"duration":21369}},{"uid":"1a2ff2e291bf0951","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1359//#testresult/1a2ff2e291bf0951","status":"passed","time":{"start":1704331069886,"stop":1704331077257,"duration":7371}},{"uid":"5c359f18dcabc3ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1355//#testresult/5c359f18dcabc3ab","status":"passed","time":{"start":1704303709804,"stop":1704303718668,"duration":8864}},{"uid":"b103d3a59bd43cd6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1352//#testresult/b103d3a59bd43cd6","status":"passed","time":{"start":1704301393180,"stop":1704301402099,"duration":8919}},{"uid":"894f1b4d133a38bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1349//#testresult/894f1b4d133a38bf","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55621fefdf83 <unknown>\n#1 0x55621fbb6cf7 <unknown>\n#2 0x55621fb9c7a1 <unknown>\n#3 0x55621fb9c44a <unknown>\n#4 0x55621fb9a7e1 <unknown>\n#5 0x55621fb9b18a <unknown>\n#6 0x55621fbac07c <unknown>\n#7 0x55621fbc47c1 <unknown>\n#8 0x55621fbca6bb <unknown>\n#9 0x55621fb9b92d <unknown>\n#10 0x55621fbc45c2 <unknown>\n#11 0x55621fc4f204 <unknown>\n#12 0x55621fc2fe53 <unknown>\n#13 0x55621fbf7dd4 <unknown>\n#14 0x55621fbf91de <unknown>\n#15 0x55621fec2531 <unknown>\n#16 0x55621fec6455 <unknown>\n#17 0x55621feaef55 <unknown>\n#18 0x55621fec70ef <unknown>\n#19 0x55621fe9299f <unknown>\n#20 0x55621feeb008 <unknown>\n#21 0x55621feeb1d7 <unknown>\n#22 0x55621fefd124 <unknown>\n#23 0x7f4129a94ac3 <unknown>","time":{"start":1704244699480,"stop":1704245003421,"duration":303941}},{"uid":"c0a848cf382cd5cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1348//#testresult/c0a848cf382cd5cf","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55a14c093f83 <unknown>\n#1 0x55a14bd4ccf7 <unknown>\n#2 0x55a14bd327a1 <unknown>\n#3 0x55a14bd3244a <unknown>\n#4 0x55a14bd307e1 <unknown>\n#5 0x55a14bd3118a <unknown>\n#6 0x55a14bd4207c <unknown>\n#7 0x55a14bd5a7c1 <unknown>\n#8 0x55a14bd606bb <unknown>\n#9 0x55a14bd3192d <unknown>\n#10 0x55a14bd5a5c2 <unknown>\n#11 0x55a14bde5204 <unknown>\n#12 0x55a14bdc5e53 <unknown>\n#13 0x55a14bd8ddd4 <unknown>\n#14 0x55a14bd8f1de <unknown>\n#15 0x55a14c058531 <unknown>\n#16 0x55a14c05c455 <unknown>\n#17 0x55a14c044f55 <unknown>\n#18 0x55a14c05d0ef <unknown>\n#19 0x55a14c02899f <unknown>\n#20 0x55a14c081008 <unknown>\n#21 0x55a14c0811d7 <unknown>\n#22 0x55a14c093124 <unknown>\n#23 0x7f4db1894ac3 <unknown>","time":{"start":1704180222224,"stop":1704180528012,"duration":305788}},{"uid":"8dbf3334e828b0cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1346//#testresult/8dbf3334e828b0cc","status":"passed","time":{"start":1704158302140,"stop":1704158309538,"duration":7398}},{"uid":"78eafb03222292f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1345//#testresult/78eafb03222292f4","status":"passed","time":{"start":1704114615082,"stop":1704114625107,"duration":10025}},{"uid":"c276ee6b04ca0eba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1343//#testresult/c276ee6b04ca0eba","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55e242482f83 <unknown>\n#1 0x55e24213bcf7 <unknown>\n#2 0x55e2421217a1 <unknown>\n#3 0x55e24212144a <unknown>\n#4 0x55e24211f7e1 <unknown>\n#5 0x55e24212018a <unknown>\n#6 0x55e24213107c <unknown>\n#7 0x55e2421497c1 <unknown>\n#8 0x55e24214f6bb <unknown>\n#9 0x55e24212092d <unknown>\n#10 0x55e2421495c2 <unknown>\n#11 0x55e2421d4204 <unknown>\n#12 0x55e2421b4e53 <unknown>\n#13 0x55e24217cdd4 <unknown>\n#14 0x55e24217e1de <unknown>\n#15 0x55e242447531 <unknown>\n#16 0x55e24244b455 <unknown>\n#17 0x55e242433f55 <unknown>\n#18 0x55e24244c0ef <unknown>\n#19 0x55e24241799f <unknown>\n#20 0x55e242470008 <unknown>\n#21 0x55e2424701d7 <unknown>\n#22 0x55e242482124 <unknown>\n#23 0x7fd92b294ac3 <unknown>","time":{"start":1704113770661,"stop":1704114075777,"duration":305116}},{"uid":"211294de7df7e5f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1342//#testresult/211294de7df7e5f","status":"passed","time":{"start":1704113668424,"stop":1704113676039,"duration":7615}},{"uid":"435ef946e3a8e135","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1341//#testresult/435ef946e3a8e135","status":"passed","time":{"start":1704112239249,"stop":1704112248241,"duration":8992}},{"uid":"168f197c1e5b28c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1339//#testresult/168f197c1e5b28c2","status":"passed","time":{"start":1704112091911,"stop":1704112100997,"duration":9086}},{"uid":"84e561c57d8f9e15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1336//#testresult/84e561c57d8f9e15","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x561d0165cf83 <unknown>\n#1 0x561d01315cf7 <unknown>\n#2 0x561d012fb7a1 <unknown>\n#3 0x561d012fb44a <unknown>\n#4 0x561d012f97e1 <unknown>\n#5 0x561d012fa18a <unknown>\n#6 0x561d0130b07c <unknown>\n#7 0x561d013237c1 <unknown>\n#8 0x561d013296bb <unknown>\n#9 0x561d012fa92d <unknown>\n#10 0x561d013235c2 <unknown>\n#11 0x561d013ae204 <unknown>\n#12 0x561d0138ee53 <unknown>\n#13 0x561d01356dd4 <unknown>\n#14 0x561d013581de <unknown>\n#15 0x561d01621531 <unknown>\n#16 0x561d01625455 <unknown>\n#17 0x561d0160df55 <unknown>\n#18 0x561d016260ef <unknown>\n#19 0x561d015f199f <unknown>\n#20 0x561d0164a008 <unknown>\n#21 0x561d0164a1d7 <unknown>\n#22 0x561d0165c124 <unknown>\n#23 0x7f4415a94ac3 <unknown>","time":{"start":1704111909605,"stop":1704112214906,"duration":305301}},{"uid":"60ed5823c3b1ff52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1337//#testresult/60ed5823c3b1ff52","status":"passed","time":{"start":1704111911940,"stop":1704111920210,"duration":8270}},{"uid":"6d1dc29ff49f5008","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1335//#testresult/6d1dc29ff49f5008","status":"passed","time":{"start":1704111499550,"stop":1704111522406,"duration":22856}},{"uid":"da61bedbd3802196","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1332//#testresult/da61bedbd3802196","status":"passed","time":{"start":1704111338883,"stop":1704111348597,"duration":9714}},{"uid":"b17bf8ea6fb85512","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1330//#testresult/b17bf8ea6fb85512","status":"passed","time":{"start":1704099951218,"stop":1704099960780,"duration":9562}},{"uid":"a762472ada067390","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1329//#testresult/a762472ada067390","status":"passed","time":{"start":1704072299372,"stop":1704072306388,"duration":7016}}]},"tags":[]},"source":"71f25459e62c8b0f.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}