{"uid":"93ec115d18d81f2b","name":"Validate Council Output [RenfrewshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"21c77c05ec171f4a60a68c21bf3d0b55","time":{"start":1718066580846,"stop":1718066742661,"duration":161815},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55fba688be9a <unknown>\n#1 0x55fba657545c <unknown>\n#2 0x55fba65c8336 <unknown>\n#3 0x55fba65c6176 <unknown>\n#4 0x55fba65c3b57 <unknown>\n#5 0x55fba65c297c <unknown>\n#6 0x55fba65b60ff <unknown>\n#7 0x55fba65e44b2 <unknown>\n#8 0x55fba65b5a79 <unknown>\n#9 0x55fba65e467e <unknown>\n#10 0x55fba66032cc <unknown>\n#11 0x55fba65e4253 <unknown>\n#12 0x55fba65b41c7 <unknown>\n#13 0x55fba65b4b3e <unknown>\n#14 0x55fba68522db <unknown>\n#15 0x55fba6856387 <unknown>\n#16 0x55fba683ee0e <unknown>\n#17 0x55fba6856e52 <unknown>\n#18 0x55fba68237af <unknown>\n#19 0x55fba687b188 <unknown>\n#20 0x55fba687b35b <unknown>\n#21 0x55fba688afcc <unknown>\n#22 0x7fe0377caac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f52ca3296c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f52c9fce850>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f52c94a9cd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55fba687b35b \\\\u003Cunknown>\\\\n#21 0x55fba688afcc \\\\u003Cunknown>\\\\n#22 0x7fe0377caac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x55fba688be9a <unknown>\nE       #1 0x55fba657545c <unknown>\nE       #2 0x55fba65c8336 <unknown>\nE       #3 0x55fba65c6176 <unknown>\nE       #4 0x55fba65c3b57 <unknown>\nE       #5 0x55fba65c297c <unknown>\nE       #6 0x55fba65b60ff <unknown>\nE       #7 0x55fba65e44b2 <unknown>\nE       #8 0x55fba65b5a79 <unknown>\nE       #9 0x55fba65e467e <unknown>\nE       #10 0x55fba66032cc <unknown>\nE       #11 0x55fba65e4253 <unknown>\nE       #12 0x55fba65b41c7 <unknown>\nE       #13 0x55fba65b4b3e <unknown>\nE       #14 0x55fba68522db <unknown>\nE       #15 0x55fba6856387 <unknown>\nE       #16 0x55fba683ee0e <unknown>\nE       #17 0x55fba6856e52 <unknown>\nE       #18 0x55fba68237af <unknown>\nE       #19 0x55fba687b188 <unknown>\nE       #20 0x55fba687b35b <unknown>\nE       #21 0x55fba688afcc <unknown>\nE       #22 0x7fe0377caac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55fba688be9a <unknown>\n#1 0x55fba657545c <unknown>\n#2 0x55fba65c8336 <unknown>\n#3 0x55fba65c6176 <unknown>\n#4 0x55fba65c3b57 <unknown>\n#5 0x55fba65c297c <unknown>\n#6 0x55fba65b60ff <unknown>\n#7 0x55fba65e44b2 <unknown>\n#8 0x55fba65b5a79 <unknown>\n#9 0x55fba65e467e <unknown>\n#10 0x55fba66032cc <unknown>\n#11 0x55fba65e4253 <unknown>\n#12 0x55fba65b41c7 <unknown>\n#13 0x55fba65b4b3e <unknown>\n#14 0x55fba68522db <unknown>\n#15 0x55fba6856387 <unknown>\n#16 0x55fba683ee0e <unknown>\n#17 0x55fba6856e52 <unknown>\n#18 0x55fba68237af <unknown>\n#19 0x55fba687b188 <unknown>\n#20 0x55fba687b35b <unknown>\n#21 0x55fba688afcc <unknown>\n#22 0x7fe0377caac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f52ca3296c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RenfrewshireCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f52c9fce850>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/RenfrewshireCouncil.py:38: in parse_data\n    accept_button.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f52c94a9cd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55fba687b35b \\\\u003Cunknown>\\\\n#21 0x55fba688afcc \\\\u003Cunknown>\\\\n#22 0x7fe0377caac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x55fba688be9a <unknown>\nE       #1 0x55fba657545c <unknown>\nE       #2 0x55fba65c8336 <unknown>\nE       #3 0x55fba65c6176 <unknown>\nE       #4 0x55fba65c3b57 <unknown>\nE       #5 0x55fba65c297c <unknown>\nE       #6 0x55fba65b60ff <unknown>\nE       #7 0x55fba65e44b2 <unknown>\nE       #8 0x55fba65b5a79 <unknown>\nE       #9 0x55fba65e467e <unknown>\nE       #10 0x55fba66032cc <unknown>\nE       #11 0x55fba65e4253 <unknown>\nE       #12 0x55fba65b41c7 <unknown>\nE       #13 0x55fba65b4b3e <unknown>\nE       #14 0x55fba68522db <unknown>\nE       #15 0x55fba6856387 <unknown>\nE       #16 0x55fba683ee0e <unknown>\nE       #17 0x55fba6856e52 <unknown>\nE       #18 0x55fba68237af <unknown>\nE       #19 0x55fba687b188 <unknown>\nE       #20 0x55fba687b35b <unknown>\nE       #21 0x55fba688afcc <unknown>\nE       #22 0x7fe0377caac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1718066580846,"stop":1718066580846,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1718066580847,"stop":1718066742661,"duration":161814},"status":"failed","statusMessage":"Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55fba688be9a <unknown>\n#1 0x55fba657545c <unknown>\n#2 0x55fba65c8336 <unknown>\n#3 0x55fba65c6176 <unknown>\n#4 0x55fba65c3b57 <unknown>\n#5 0x55fba65c297c <unknown>\n#6 0x55fba65b60ff <unknown>\n#7 0x55fba65e44b2 <unknown>\n#8 0x55fba65b5a79 <unknown>\n#9 0x55fba65e467e <unknown>\n#10 0x55fba66032cc <unknown>\n#11 0x55fba65e4253 <unknown>\n#12 0x55fba65b41c7 <unknown>\n#13 0x55fba65b4b3e <unknown>\n#14 0x55fba68522db <unknown>\n#15 0x55fba6856387 <unknown>\n#16 0x55fba683ee0e <unknown>\n#17 0x55fba6856e52 <unknown>\n#18 0x55fba68237af <unknown>\n#19 0x55fba687b188 <unknown>\n#20 0x55fba687b35b <unknown>\n#21 0x55fba688afcc <unknown>\n#22 0x7fe0377caac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x55fba688be9a <unknown>\n#1 0x55fba657545c <unknown>\n#2 0x55fba65c8336 <unknown>\n#3 0x55fba65c6176 <unknown>\n#4 0x55fba65c3b57 <unknown>\n#5 0x55fba65c297c <unknown>\n#6 0x55fba65b60ff <unknown>\n#7 0x55fba65e44b2 <unknown>\n#8 0x55fba65b5a79 <unknown>\n#9 0x55fba65e467e <unknown>\n#10 0x55fba66032cc <unknown>\n#11 0x55fba65e4253 <unknown>\n#12 0x55fba65b41c7 <unknown>\n#13 0x55fba65b4b3e <unknown>\n#14 0x55fba68522db <unknown>\n#15 0x55fba6856387 <unknown>\n#16 0x55fba683ee0e <unknown>\n#17 0x55fba6856e52 <unknown>\n#18 0x55fba68237af <unknown>\n#19 0x55fba687b188 <unknown>\n#20 0x55fba687b35b <unknown>\n#21 0x55fba688afcc <unknown>\n#22 0x7fe0377caac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7ab380220da599a6","name":"stdout","source":"7ab380220da599a6.txt","type":"text/plain","size":870}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1437-993"},{"name":"thread","value":"2700-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RenfrewshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":27,"unknown":0,"total":35},"items":[{"uid":"7796a06139f81947","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1936//#testresult/7796a06139f81947","status":"passed","time":{"start":1717980272287,"stop":1717980290671,"duration":18384}},{"uid":"c3f76c3f8cdd7f07","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1934//#testresult/c3f76c3f8cdd7f07","status":"passed","time":{"start":1717893597628,"stop":1717893614233,"duration":16605}},{"uid":"5e09b030b73e63","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1933//#testresult/5e09b030b73e63","status":"passed","time":{"start":1717807614098,"stop":1717807640738,"duration":26640}},{"uid":"b305d1cb6cab7e39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1932//#testresult/b305d1cb6cab7e39","status":"passed","time":{"start":1717720792111,"stop":1717720808311,"duration":16200}},{"uid":"aca43a8248fa8ffc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1927//#testresult/aca43a8248fa8ffc","status":"passed","time":{"start":1717634462499,"stop":1717634610077,"duration":147578}},{"uid":"4459e4216f346975","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1924//#testresult/4459e4216f346975","status":"passed","time":{"start":1717548177552,"stop":1717548196972,"duration":19420}},{"uid":"ea1305d2f179fc02","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1923//#testresult/ea1305d2f179fc02","status":"passed","time":{"start":1717461695021,"stop":1717461842636,"duration":147615}},{"uid":"e53f51e7e6226a1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1921//#testresult/e53f51e7e6226a1c","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 654)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x5603d66d0e9a <unknown>\n#1 0x5603d63ba45c <unknown>\n#2 0x5603d640d336 <unknown>\n#3 0x5603d640b176 <unknown>\n#4 0x5603d6408b57 <unknown>\n#5 0x5603d640797c <unknown>\n#6 0x5603d63fb0ff <unknown>\n#7 0x5603d64294b2 <unknown>\n#8 0x5603d63faa79 <unknown>\n#9 0x5603d642967e <unknown>\n#10 0x5603d64482cc <unknown>\n#11 0x5603d6429253 <unknown>\n#12 0x5603d63f91c7 <unknown>\n#13 0x5603d63f9b3e <unknown>\n#14 0x5603d66972db <unknown>\n#15 0x5603d669b387 <unknown>\n#16 0x5603d6683e0e <unknown>\n#17 0x5603d669be52 <unknown>\n#18 0x5603d66687af <unknown>\n#19 0x5603d66c0188 <unknown>\n#20 0x5603d66c035b <unknown>\n#21 0x5603d66cffcc <unknown>\n#22 0x7fcdc406bac3 <unknown>","time":{"start":1717375438253,"stop":1717375592682,"duration":154429}},{"uid":"90fe6aa26cb55141","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1911//#testresult/90fe6aa26cb55141","status":"passed","time":{"start":1717316958095,"stop":1717316981552,"duration":23457}},{"uid":"439e51fbd8a0606b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1908//#testresult/439e51fbd8a0606b","status":"passed","time":{"start":1717288725380,"stop":1717288743822,"duration":18442}},{"uid":"cc3d2f09be8d9f3b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1905//#testresult/cc3d2f09be8d9f3b","status":"passed","time":{"start":1717202538399,"stop":1717202697257,"duration":158858}},{"uid":"99f942a6785a6fe7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1904//#testresult/99f942a6785a6fe7","status":"passed","time":{"start":1717116018209,"stop":1717116172339,"duration":154130}},{"uid":"23e3955cd3514ae2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1903//#testresult/23e3955cd3514ae2","status":"passed","time":{"start":1717029676545,"stop":1717029827605,"duration":151060}},{"uid":"5ca65e4eae3989a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1898//#testresult/5ca65e4eae3989a4","status":"passed","time":{"start":1716943238411,"stop":1716943396428,"duration":158017}},{"uid":"b9db3fbdff60e95f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1893//#testresult/b9db3fbdff60e95f","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x557574059e9a <unknown>\n#1 0x557573d4345c <unknown>\n#2 0x557573d96336 <unknown>\n#3 0x557573d94176 <unknown>\n#4 0x557573d91b57 <unknown>\n#5 0x557573d9097c <unknown>\n#6 0x557573d840ff <unknown>\n#7 0x557573db24b2 <unknown>\n#8 0x557573d83a79 <unknown>\n#9 0x557573db267e <unknown>\n#10 0x557573dd12cc <unknown>\n#11 0x557573db2253 <unknown>\n#12 0x557573d821c7 <unknown>\n#13 0x557573d82b3e <unknown>\n#14 0x5575740202db <unknown>\n#15 0x557574024387 <unknown>\n#16 0x55757400ce0e <unknown>\n#17 0x557574024e52 <unknown>\n#18 0x557573ff17af <unknown>\n#19 0x557574049188 <unknown>\n#20 0x55757404935b <unknown>\n#21 0x557574058fcc <unknown>\n#22 0x7f3220a74ac3 <unknown>","time":{"start":1716856691855,"stop":1716856835269,"duration":143414}},{"uid":"233ba2f99f9b61b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1883//#testresult/233ba2f99f9b61b5","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (141, 639)\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x5627df35de9a <unknown>\n#1 0x5627df04745c <unknown>\n#2 0x5627df09a336 <unknown>\n#3 0x5627df098176 <unknown>\n#4 0x5627df095b57 <unknown>\n#5 0x5627df09497c <unknown>\n#6 0x5627df0880ff <unknown>\n#7 0x5627df0b64b2 <unknown>\n#8 0x5627df087a79 <unknown>\n#9 0x5627df0b667e <unknown>\n#10 0x5627df0d52cc <unknown>\n#11 0x5627df0b6253 <unknown>\n#12 0x5627df0861c7 <unknown>\n#13 0x5627df086b3e <unknown>\n#14 0x5627df3242db <unknown>\n#15 0x5627df328387 <unknown>\n#16 0x5627df310e0e <unknown>\n#17 0x5627df328e52 <unknown>\n#18 0x5627df2f57af <unknown>\n#19 0x5627df34d188 <unknown>\n#20 0x5627df34d35b <unknown>\n#21 0x5627df35cfcc <unknown>\n#22 0x7f90ddbe9ac3 <unknown>","time":{"start":1716770395456,"stop":1716770413337,"duration":17881}},{"uid":"7e74135f1f54f49e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1881//#testresult/7e74135f1f54f49e","status":"passed","time":{"start":1716753394826,"stop":1716753546152,"duration":151326}},{"uid":"aeb1d5007873a6be","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1877//#testresult/aeb1d5007873a6be","status":"passed","time":{"start":1716743512858,"stop":1716743538381,"duration":25523}},{"uid":"38fa1b9768e0fc12","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1871//#testresult/38fa1b9768e0fc12","status":"passed","time":{"start":1716710347865,"stop":1716710373646,"duration":25781}},{"uid":"63fb11d8c79e6f0e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1866//#testresult/63fb11d8c79e6f0e","status":"passed","time":{"start":1716705630073,"stop":1716705656173,"duration":26100}}]},"tags":[]},"source":"93ec115d18d81f2b.json","parameterValues":["RenfrewshireCouncil"]}