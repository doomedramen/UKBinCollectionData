{"uid":"6c07c7034a912234","name":"Validate Council Output [WalthamForest]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f804494c5f4de0ecd7ce05105f7ab6a0","time":{"start":1718066912413,"stop":1718067017933,"duration":105520},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557a176cbe9a <unknown>\n#1 0x557a173b545c <unknown>\n#2 0x557a174015b5 <unknown>\n#3 0x557a17401671 <unknown>\n#4 0x557a17445f14 <unknown>\n#5 0x557a174244dd <unknown>\n#6 0x557a174432cc <unknown>\n#7 0x557a17424253 <unknown>\n#8 0x557a173f41c7 <unknown>\n#9 0x557a173f4b3e <unknown>\n#10 0x557a176922db <unknown>\n#11 0x557a17696387 <unknown>\n#12 0x557a1767ee0e <unknown>\n#13 0x557a17696e52 <unknown>\n#14 0x557a176637af <unknown>\n#15 0x557a176bb188 <unknown>\n#16 0x557a176bb35b <unknown>\n#17 0x557a176cafcc <unknown>\n#18 0x7f9f419b4ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fa05a125260>\nrequest = <FixtureRequest for <Function test_scenario_outline[WalthamForest]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fa059dc3410>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WalthamForest.py:74: in parse_data\n    h4_element = wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8a61c9788fab140dfa566a998e4af78b\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fa059d76200>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x557a176cbe9a <unknown>\nE       #1 0x557a173b545c <unknown>\nE       #2 0x557a174015b5 <unknown>\nE       #3 0x557a17401671 <unknown>\nE       #4 0x557a17445f14 <unknown>\nE       #5 0x557a174244dd <unknown>\nE       #6 0x557a174432cc <unknown>\nE       #7 0x557a17424253 <unknown>\nE       #8 0x557a173f41c7 <unknown>\nE       #9 0x557a173f4b3e <unknown>\nE       #10 0x557a176922db <unknown>\nE       #11 0x557a17696387 <unknown>\nE       #12 0x557a1767ee0e <unknown>\nE       #13 0x557a17696e52 <unknown>\nE       #14 0x557a176637af <unknown>\nE       #15 0x557a176bb188 <unknown>\nE       #16 0x557a176bb35b <unknown>\nE       #17 0x557a176cafcc <unknown>\nE       #18 0x7f9f419b4ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557a176cbe9a <unknown>\n#1 0x557a173b545c <unknown>\n#2 0x557a174015b5 <unknown>\n#3 0x557a17401671 <unknown>\n#4 0x557a17445f14 <unknown>\n#5 0x557a174244dd <unknown>\n#6 0x557a174432cc <unknown>\n#7 0x557a17424253 <unknown>\n#8 0x557a173f41c7 <unknown>\n#9 0x557a173f4b3e <unknown>\n#10 0x557a176922db <unknown>\n#11 0x557a17696387 <unknown>\n#12 0x557a1767ee0e <unknown>\n#13 0x557a17696e52 <unknown>\n#14 0x557a176637af <unknown>\n#15 0x557a176bb188 <unknown>\n#16 0x557a176bb35b <unknown>\n#17 0x557a176cafcc <unknown>\n#18 0x7f9f419b4ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7fa05a125260>\nrequest = <FixtureRequest for <Function test_scenario_outline[WalthamForest]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fa059dc3410>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/WalthamForest.py:74: in parse_data\n    h4_element = wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8a61c9788fab140dfa566a998e4af78b\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fa059d76200>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x557a176cbe9a <unknown>\nE       #1 0x557a173b545c <unknown>\nE       #2 0x557a174015b5 <unknown>\nE       #3 0x557a17401671 <unknown>\nE       #4 0x557a17445f14 <unknown>\nE       #5 0x557a174244dd <unknown>\nE       #6 0x557a174432cc <unknown>\nE       #7 0x557a17424253 <unknown>\nE       #8 0x557a173f41c7 <unknown>\nE       #9 0x557a173f4b3e <unknown>\nE       #10 0x557a176922db <unknown>\nE       #11 0x557a17696387 <unknown>\nE       #12 0x557a1767ee0e <unknown>\nE       #13 0x557a17696e52 <unknown>\nE       #14 0x557a176637af <unknown>\nE       #15 0x557a176bb188 <unknown>\nE       #16 0x557a176bb35b <unknown>\nE       #17 0x557a176cafcc <unknown>\nE       #18 0x7f9f419b4ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Given the council","time":{"start":1718066912414,"stop":1718066912414,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1718066912414,"stop":1718067017933,"duration":105519},"status":"failed","statusMessage":"Message: \nStacktrace:\n#0 0x557a176cbe9a <unknown>\n#1 0x557a173b545c <unknown>\n#2 0x557a174015b5 <unknown>\n#3 0x557a17401671 <unknown>\n#4 0x557a17445f14 <unknown>\n#5 0x557a174244dd <unknown>\n#6 0x557a174432cc <unknown>\n#7 0x557a17424253 <unknown>\n#8 0x557a173f41c7 <unknown>\n#9 0x557a173f4b3e <unknown>\n#10 0x557a176922db <unknown>\n#11 0x557a17696387 <unknown>\n#12 0x557a1767ee0e <unknown>\n#13 0x557a17696e52 <unknown>\n#14 0x557a176637af <unknown>\n#15 0x557a176bb188 <unknown>\n#16 0x557a176bb35b <unknown>\n#17 0x557a176cafcc <unknown>\n#18 0x7f9f419b4ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557a176cbe9a <unknown>\n#1 0x557a173b545c <unknown>\n#2 0x557a174015b5 <unknown>\n#3 0x557a17401671 <unknown>\n#4 0x557a17445f14 <unknown>\n#5 0x557a174244dd <unknown>\n#6 0x557a174432cc <unknown>\n#7 0x557a17424253 <unknown>\n#8 0x557a173f41c7 <unknown>\n#9 0x557a173f4b3e <unknown>\n#10 0x557a176922db <unknown>\n#11 0x557a17696387 <unknown>\n#12 0x557a1767ee0e <unknown>\n#13 0x557a17696e52 <unknown>\n#14 0x557a176637af <unknown>\n#15 0x557a176bb188 <unknown>\n#16 0x557a176bb35b <unknown>\n#17 0x557a176cafcc <unknown>\n#18 0x7f9f419b4ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"2952b203022dfd68","name":"stdout","source":"2952b203022dfd68.txt","type":"text/plain","size":623}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1437-993"},{"name":"thread","value":"2703-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WalthamForest"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":15,"unknown":0,"total":16},"items":[{"uid":"ccb719f079c7ecd1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1936//#testresult/ccb719f079c7ecd1","status":"passed","time":{"start":1717980313824,"stop":1717980360953,"duration":47129}},{"uid":"4a37bec0f5469bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1934//#testresult/4a37bec0f5469bc","status":"passed","time":{"start":1717893956256,"stop":1717893994296,"duration":38040}},{"uid":"bf339f5f0068998f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1933//#testresult/bf339f5f0068998f","status":"passed","time":{"start":1717807671661,"stop":1717807707208,"duration":35547}},{"uid":"b843406afb766a8d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1932//#testresult/b843406afb766a8d","status":"passed","time":{"start":1717721164606,"stop":1717721199770,"duration":35164}},{"uid":"b26f72f78939bdf0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1927//#testresult/b26f72f78939bdf0","status":"passed","time":{"start":1717634630252,"stop":1717634682591,"duration":52339}},{"uid":"f39c32ab8d26251e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1924//#testresult/f39c32ab8d26251e","status":"passed","time":{"start":1717548224349,"stop":1717548252650,"duration":28301}},{"uid":"787f4c08b6343ac0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1923//#testresult/787f4c08b6343ac0","status":"passed","time":{"start":1717461879970,"stop":1717461948485,"duration":68515}},{"uid":"2d25781aaa7287b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1921//#testresult/2d25781aaa7287b5","status":"passed","time":{"start":1717375613619,"stop":1717375645452,"duration":31833}},{"uid":"3cefafa4540176c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1911//#testresult/3cefafa4540176c4","status":"passed","time":{"start":1717316975350,"stop":1717317006425,"duration":31075}},{"uid":"905b70564e3d25b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1908//#testresult/905b70564e3d25b5","status":"passed","time":{"start":1717289065243,"stop":1717289093718,"duration":28475}},{"uid":"50fb9f69c1938d28","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1905//#testresult/50fb9f69c1938d28","status":"passed","time":{"start":1717202875727,"stop":1717202905106,"duration":29379}},{"uid":"f15793014d51e8ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1904//#testresult/f15793014d51e8ed","status":"passed","time":{"start":1717116184576,"stop":1717116208760,"duration":24184}},{"uid":"68f50f6c8edba65e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1903//#testresult/68f50f6c8edba65e","status":"passed","time":{"start":1717029838037,"stop":1717029871376,"duration":33339}},{"uid":"87141e9a81a1d189","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1898//#testresult/87141e9a81a1d189","status":"passed","time":{"start":1716943581359,"stop":1716943610746,"duration":29387}},{"uid":"5d31b3dc3589adc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1896//#testresult/5d31b3dc3589adc","status":"passed","time":{"start":1716930940419,"stop":1716930980248,"duration":39829}}]},"tags":[]},"source":"6c07c7034a912234.json","parameterValues":["WalthamForest"]}