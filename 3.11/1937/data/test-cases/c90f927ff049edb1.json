{"uid":"c90f927ff049edb1","name":"Validate Council Output [SunderlandCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"1a7ab024f39f9d5f723a6a4b1c23ccbf","time":{"start":1718066630333,"stop":1718066885468,"duration":255135},"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x56170c350e9a <unknown>\n#1 0x56170c03a45c <unknown>\n#2 0x56170c031fd0 <unknown>\n#3 0x56170c021b32 <unknown>\n#4 0x56170c023162 <unknown>\n#5 0x56170c021ded <unknown>\n#6 0x56170c021503 <unknown>\n#7 0x56170c0213f5 <unknown>\n#8 0x56170c01f336 <unknown>\n#9 0x56170c01f83a <unknown>\n#10 0x56170c03cea7 <unknown>\n#11 0x56170c0c8ed5 <unknown>\n#12 0x56170c0a94b2 <unknown>\n#13 0x56170c0c82cc <unknown>\n#14 0x56170c0a9253 <unknown>\n#15 0x56170c0791c7 <unknown>\n#16 0x56170c079b3e <unknown>\n#17 0x56170c3172db <unknown>\n#18 0x56170c31b387 <unknown>\n#19 0x56170c303e0e <unknown>\n#20 0x56170c31be52 <unknown>\n#21 0x56170c2e87af <unknown>\n#22 0x56170c340188 <unknown>\n#23 0x56170c34035b <unknown>\n#24 0x56170c34ffcc <unknown>\n#25 0x7fddebbd2ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f49de91e0c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f49de5bc2d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:33: in parse_data\n    driver.get(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f49dd533290>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x56170c34035b \\\\u003Cunknown>\\\\n#24 0x56170c34ffcc \\\\u003Cunknown>\\\\n#25 0x7fddebbd2ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x56170c350e9a <unknown>\nE       #1 0x56170c03a45c <unknown>\nE       #2 0x56170c031fd0 <unknown>\nE       #3 0x56170c021b32 <unknown>\nE       #4 0x56170c023162 <unknown>\nE       #5 0x56170c021ded <unknown>\nE       #6 0x56170c021503 <unknown>\nE       #7 0x56170c0213f5 <unknown>\nE       #8 0x56170c01f336 <unknown>\nE       #9 0x56170c01f83a <unknown>\nE       #10 0x56170c03cea7 <unknown>\nE       #11 0x56170c0c8ed5 <unknown>\nE       #12 0x56170c0a94b2 <unknown>\nE       #13 0x56170c0c82cc <unknown>\nE       #14 0x56170c0a9253 <unknown>\nE       #15 0x56170c0791c7 <unknown>\nE       #16 0x56170c079b3e <unknown>\nE       #17 0x56170c3172db <unknown>\nE       #18 0x56170c31b387 <unknown>\nE       #19 0x56170c303e0e <unknown>\nE       #20 0x56170c31be52 <unknown>\nE       #21 0x56170c2e87af <unknown>\nE       #22 0x56170c340188 <unknown>\nE       #23 0x56170c34035b <unknown>\nE       #24 0x56170c34ffcc <unknown>\nE       #25 0x7fddebbd2ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x56170c350e9a <unknown>\n#1 0x56170c03a45c <unknown>\n#2 0x56170c031fd0 <unknown>\n#3 0x56170c021b32 <unknown>\n#4 0x56170c023162 <unknown>\n#5 0x56170c021ded <unknown>\n#6 0x56170c021503 <unknown>\n#7 0x56170c0213f5 <unknown>\n#8 0x56170c01f336 <unknown>\n#9 0x56170c01f83a <unknown>\n#10 0x56170c03cea7 <unknown>\n#11 0x56170c0c8ed5 <unknown>\n#12 0x56170c0a94b2 <unknown>\n#13 0x56170c0c82cc <unknown>\n#14 0x56170c0a9253 <unknown>\n#15 0x56170c0791c7 <unknown>\n#16 0x56170c079b3e <unknown>\n#17 0x56170c3172db <unknown>\n#18 0x56170c31b387 <unknown>\n#19 0x56170c303e0e <unknown>\n#20 0x56170c31be52 <unknown>\n#21 0x56170c2e87af <unknown>\n#22 0x56170c340188 <unknown>\n#23 0x56170c34035b <unknown>\n#24 0x56170c34ffcc <unknown>\n#25 0x7fddebbd2ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f49de91e0c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SunderlandCityCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f49de5bc2d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/SunderlandCityCouncil.py:33: in parse_data\n    driver.get(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f49dd533290>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x56170c34035b \\\\u003Cunknown>\\\\n#24 0x56170c34ffcc \\\\u003Cunknown>\\\\n#25 0x7fddebbd2ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: chrome-headless-shell=125.0.6422.76)\nE       Stacktrace:\nE       #0 0x56170c350e9a <unknown>\nE       #1 0x56170c03a45c <unknown>\nE       #2 0x56170c031fd0 <unknown>\nE       #3 0x56170c021b32 <unknown>\nE       #4 0x56170c023162 <unknown>\nE       #5 0x56170c021ded <unknown>\nE       #6 0x56170c021503 <unknown>\nE       #7 0x56170c0213f5 <unknown>\nE       #8 0x56170c01f336 <unknown>\nE       #9 0x56170c01f83a <unknown>\nE       #10 0x56170c03cea7 <unknown>\nE       #11 0x56170c0c8ed5 <unknown>\nE       #12 0x56170c0a94b2 <unknown>\nE       #13 0x56170c0c82cc <unknown>\nE       #14 0x56170c0a9253 <unknown>\nE       #15 0x56170c0791c7 <unknown>\nE       #16 0x56170c079b3e <unknown>\nE       #17 0x56170c3172db <unknown>\nE       #18 0x56170c31b387 <unknown>\nE       #19 0x56170c303e0e <unknown>\nE       #20 0x56170c31be52 <unknown>\nE       #21 0x56170c2e87af <unknown>\nE       #22 0x56170c340188 <unknown>\nE       #23 0x56170c34035b <unknown>\nE       #24 0x56170c34ffcc <unknown>\nE       #25 0x7fddebbd2ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","steps":[{"name":"Given the council","time":{"start":1718066630334,"stop":1718066630334,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1718066630334,"stop":1718066885468,"duration":255134},"status":"failed","statusMessage":"Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x56170c350e9a <unknown>\n#1 0x56170c03a45c <unknown>\n#2 0x56170c031fd0 <unknown>\n#3 0x56170c021b32 <unknown>\n#4 0x56170c023162 <unknown>\n#5 0x56170c021ded <unknown>\n#6 0x56170c021503 <unknown>\n#7 0x56170c0213f5 <unknown>\n#8 0x56170c01f336 <unknown>\n#9 0x56170c01f83a <unknown>\n#10 0x56170c03cea7 <unknown>\n#11 0x56170c0c8ed5 <unknown>\n#12 0x56170c0a94b2 <unknown>\n#13 0x56170c0c82cc <unknown>\n#14 0x56170c0a9253 <unknown>\n#15 0x56170c0791c7 <unknown>\n#16 0x56170c079b3e <unknown>\n#17 0x56170c3172db <unknown>\n#18 0x56170c31b387 <unknown>\n#19 0x56170c303e0e <unknown>\n#20 0x56170c31be52 <unknown>\n#21 0x56170c2e87af <unknown>\n#22 0x56170c340188 <unknown>\n#23 0x56170c34035b <unknown>\n#24 0x56170c34ffcc <unknown>\n#25 0x7fddebbd2ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: chrome-headless-shell=125.0.6422.76)\nStacktrace:\n#0 0x56170c350e9a <unknown>\n#1 0x56170c03a45c <unknown>\n#2 0x56170c031fd0 <unknown>\n#3 0x56170c021b32 <unknown>\n#4 0x56170c023162 <unknown>\n#5 0x56170c021ded <unknown>\n#6 0x56170c021503 <unknown>\n#7 0x56170c0213f5 <unknown>\n#8 0x56170c01f336 <unknown>\n#9 0x56170c01f83a <unknown>\n#10 0x56170c03cea7 <unknown>\n#11 0x56170c0c8ed5 <unknown>\n#12 0x56170c0a94b2 <unknown>\n#13 0x56170c0c82cc <unknown>\n#14 0x56170c0a9253 <unknown>\n#15 0x56170c0791c7 <unknown>\n#16 0x56170c079b3e <unknown>\n#17 0x56170c3172db <unknown>\n#18 0x56170c31b387 <unknown>\n#19 0x56170c303e0e <unknown>\n#20 0x56170c31be52 <unknown>\n#21 0x56170c2e87af <unknown>\n#22 0x56170c340188 <unknown>\n#23 0x56170c34035b <unknown>\n#24 0x56170c34ffcc <unknown>\n#25 0x7fddebbd2ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"568133eec5e538a","name":"stdout","source":"568133eec5e538a.txt","type":"text/plain","size":932}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1437-993"},{"name":"thread","value":"2697-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SunderlandCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":34,"unknown":0,"total":35},"items":[{"uid":"6cf9458e457f3eb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1936//#testresult/6cf9458e457f3eb3","status":"passed","time":{"start":1717980250399,"stop":1717980284559,"duration":34160}},{"uid":"bc790ae19827e53b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1934//#testresult/bc790ae19827e53b","status":"passed","time":{"start":1717893641136,"stop":1717893771875,"duration":130739}},{"uid":"f5eb8206b5e6482f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1933//#testresult/f5eb8206b5e6482f","status":"passed","time":{"start":1717807583713,"stop":1717807621326,"duration":37613}},{"uid":"9cd2c6992986d11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1932//#testresult/9cd2c6992986d11","status":"passed","time":{"start":1717720826140,"stop":1717720974785,"duration":148645}},{"uid":"65cdbdce1f0d65fb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1927//#testresult/65cdbdce1f0d65fb","status":"passed","time":{"start":1717634440464,"stop":1717634468873,"duration":28409}},{"uid":"baa21c3c5aa7ee32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1924//#testresult/baa21c3c5aa7ee32","status":"passed","time":{"start":1717548168241,"stop":1717548187038,"duration":18797}},{"uid":"65213d8edface96f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1923//#testresult/65213d8edface96f","status":"passed","time":{"start":1717461694681,"stop":1717461836718,"duration":142037}},{"uid":"3bb5f770b1461389","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1921//#testresult/3bb5f770b1461389","status":"passed","time":{"start":1717375297491,"stop":1717375429218,"duration":131727}},{"uid":"c8a30bb1d861b805","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1911//#testresult/c8a30bb1d861b805","status":"passed","time":{"start":1717316680932,"stop":1717316943649,"duration":262717}},{"uid":"fee9ca8b41a3054d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1908//#testresult/fee9ca8b41a3054d","status":"passed","time":{"start":1717288924552,"stop":1717289062447,"duration":137895}},{"uid":"717439fb2beac4d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1905//#testresult/717439fb2beac4d0","status":"passed","time":{"start":1717202690497,"stop":1717202845132,"duration":154635}},{"uid":"85fd6677331d942b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1904//#testresult/85fd6677331d942b","status":"passed","time":{"start":1717116036363,"stop":1717116175440,"duration":139077}},{"uid":"154bded5ba8f0061","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1903//#testresult/154bded5ba8f0061","status":"passed","time":{"start":1717029680114,"stop":1717029832072,"duration":151958}},{"uid":"d9eeb10bf23c2a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1898//#testresult/d9eeb10bf23c2a0","status":"passed","time":{"start":1716943553599,"stop":1716943566790,"duration":13191}},{"uid":"ca59d67dac6c2595","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1893//#testresult/ca59d67dac6c2595","status":"passed","time":{"start":1716856858992,"stop":1716856874970,"duration":15978}},{"uid":"d6494ecfdf2270cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1883//#testresult/d6494ecfdf2270cc","status":"passed","time":{"start":1716770422465,"stop":1716770568979,"duration":146514}},{"uid":"55af9e038e34a68a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1881//#testresult/55af9e038e34a68a","status":"passed","time":{"start":1716753568930,"stop":1716753583124,"duration":14194}},{"uid":"a1d569daa11630c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1877//#testresult/a1d569daa11630c2","status":"passed","time":{"start":1716743567808,"stop":1716743707073,"duration":139265}},{"uid":"f946293f853932c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1871//#testresult/f946293f853932c5","status":"passed","time":{"start":1716710194635,"stop":1716710336379,"duration":141744}},{"uid":"6782fc53ff68dd0d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1866//#testresult/6782fc53ff68dd0d","status":"passed","time":{"start":1716705484758,"stop":1716705618802,"duration":134044}}]},"tags":[]},"source":"c90f927ff049edb1.json","parameterValues":["SunderlandCityCouncil"]}