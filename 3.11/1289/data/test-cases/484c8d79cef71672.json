{"uid":"484c8d79cef71672","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1703380986161,"stop":1703381291546,"duration":305385},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55d4a4dc3f83 <unknown>\n#1 0x55d4a4a7ccf7 <unknown>\n#2 0x55d4a4a627a1 <unknown>\n#3 0x55d4a4a6244a <unknown>\n#4 0x55d4a4a607e1 <unknown>\n#5 0x55d4a4a6118a <unknown>\n#6 0x55d4a4a7207c <unknown>\n#7 0x55d4a4a8a7c1 <unknown>\n#8 0x55d4a4a906bb <unknown>\n#9 0x55d4a4a6192d <unknown>\n#10 0x55d4a4a8a5c2 <unknown>\n#11 0x55d4a4b15204 <unknown>\n#12 0x55d4a4af5e53 <unknown>\n#13 0x55d4a4abddd4 <unknown>\n#14 0x55d4a4abf1de <unknown>\n#15 0x55d4a4d88531 <unknown>\n#16 0x55d4a4d8c455 <unknown>\n#17 0x55d4a4d74f55 <unknown>\n#18 0x55d4a4d8d0ef <unknown>\n#19 0x55d4a4d5899f <unknown>\n#20 0x55d4a4db1008 <unknown>\n#21 0x55d4a4db11d7 <unknown>\n#22 0x55d4a4dc3124 <unknown>\n#23 0x7f758f494ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f8a83262160>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8a826f6750>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:49: in parse_data\n    ))).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f8a830da350>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55d4a4db11d7 \\\\u003Cunknown>\\\\n#22 0x55d4a4dc3124 \\\\u003Cunknown>\\\\n#23 0x7f758f494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55d4a4dc3f83 <unknown>\nE       #1 0x55d4a4a7ccf7 <unknown>\nE       #2 0x55d4a4a627a1 <unknown>\nE       #3 0x55d4a4a6244a <unknown>\nE       #4 0x55d4a4a607e1 <unknown>\nE       #5 0x55d4a4a6118a <unknown>\nE       #6 0x55d4a4a7207c <unknown>\nE       #7 0x55d4a4a8a7c1 <unknown>\nE       #8 0x55d4a4a906bb <unknown>\nE       #9 0x55d4a4a6192d <unknown>\nE       #10 0x55d4a4a8a5c2 <unknown>\nE       #11 0x55d4a4b15204 <unknown>\nE       #12 0x55d4a4af5e53 <unknown>\nE       #13 0x55d4a4abddd4 <unknown>\nE       #14 0x55d4a4abf1de <unknown>\nE       #15 0x55d4a4d88531 <unknown>\nE       #16 0x55d4a4d8c455 <unknown>\nE       #17 0x55d4a4d74f55 <unknown>\nE       #18 0x55d4a4d8d0ef <unknown>\nE       #19 0x55d4a4d5899f <unknown>\nE       #20 0x55d4a4db1008 <unknown>\nE       #21 0x55d4a4db11d7 <unknown>\nE       #22 0x55d4a4dc3124 <unknown>\nE       #23 0x7f758f494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55d4a4dc3f83 <unknown>\n#1 0x55d4a4a7ccf7 <unknown>\n#2 0x55d4a4a627a1 <unknown>\n#3 0x55d4a4a6244a <unknown>\n#4 0x55d4a4a607e1 <unknown>\n#5 0x55d4a4a6118a <unknown>\n#6 0x55d4a4a7207c <unknown>\n#7 0x55d4a4a8a7c1 <unknown>\n#8 0x55d4a4a906bb <unknown>\n#9 0x55d4a4a6192d <unknown>\n#10 0x55d4a4a8a5c2 <unknown>\n#11 0x55d4a4b15204 <unknown>\n#12 0x55d4a4af5e53 <unknown>\n#13 0x55d4a4abddd4 <unknown>\n#14 0x55d4a4abf1de <unknown>\n#15 0x55d4a4d88531 <unknown>\n#16 0x55d4a4d8c455 <unknown>\n#17 0x55d4a4d74f55 <unknown>\n#18 0x55d4a4d8d0ef <unknown>\n#19 0x55d4a4d5899f <unknown>\n#20 0x55d4a4db1008 <unknown>\n#21 0x55d4a4db11d7 <unknown>\n#22 0x55d4a4dc3124 <unknown>\n#23 0x7f758f494ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f8a83262160>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8a826f6750>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:49: in parse_data\n    ))).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f8a830da350>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55d4a4db11d7 \\\\u003Cunknown>\\\\n#22 0x55d4a4dc3124 \\\\u003Cunknown>\\\\n#23 0x7f758f494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55d4a4dc3f83 <unknown>\nE       #1 0x55d4a4a7ccf7 <unknown>\nE       #2 0x55d4a4a627a1 <unknown>\nE       #3 0x55d4a4a6244a <unknown>\nE       #4 0x55d4a4a607e1 <unknown>\nE       #5 0x55d4a4a6118a <unknown>\nE       #6 0x55d4a4a7207c <unknown>\nE       #7 0x55d4a4a8a7c1 <unknown>\nE       #8 0x55d4a4a906bb <unknown>\nE       #9 0x55d4a4a6192d <unknown>\nE       #10 0x55d4a4a8a5c2 <unknown>\nE       #11 0x55d4a4b15204 <unknown>\nE       #12 0x55d4a4af5e53 <unknown>\nE       #13 0x55d4a4abddd4 <unknown>\nE       #14 0x55d4a4abf1de <unknown>\nE       #15 0x55d4a4d88531 <unknown>\nE       #16 0x55d4a4d8c455 <unknown>\nE       #17 0x55d4a4d74f55 <unknown>\nE       #18 0x55d4a4d8d0ef <unknown>\nE       #19 0x55d4a4d5899f <unknown>\nE       #20 0x55d4a4db1008 <unknown>\nE       #21 0x55d4a4db11d7 <unknown>\nE       #22 0x55d4a4dc3124 <unknown>\nE       #23 0x7f758f494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1703380986161,"stop":1703380986162,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1703380986162,"stop":1703381291546,"duration":305384},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55d4a4dc3f83 <unknown>\n#1 0x55d4a4a7ccf7 <unknown>\n#2 0x55d4a4a627a1 <unknown>\n#3 0x55d4a4a6244a <unknown>\n#4 0x55d4a4a607e1 <unknown>\n#5 0x55d4a4a6118a <unknown>\n#6 0x55d4a4a7207c <unknown>\n#7 0x55d4a4a8a7c1 <unknown>\n#8 0x55d4a4a906bb <unknown>\n#9 0x55d4a4a6192d <unknown>\n#10 0x55d4a4a8a5c2 <unknown>\n#11 0x55d4a4b15204 <unknown>\n#12 0x55d4a4af5e53 <unknown>\n#13 0x55d4a4abddd4 <unknown>\n#14 0x55d4a4abf1de <unknown>\n#15 0x55d4a4d88531 <unknown>\n#16 0x55d4a4d8c455 <unknown>\n#17 0x55d4a4d74f55 <unknown>\n#18 0x55d4a4d8d0ef <unknown>\n#19 0x55d4a4d5899f <unknown>\n#20 0x55d4a4db1008 <unknown>\n#21 0x55d4a4db11d7 <unknown>\n#22 0x55d4a4dc3124 <unknown>\n#23 0x7f758f494ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55d4a4dc3f83 <unknown>\n#1 0x55d4a4a7ccf7 <unknown>\n#2 0x55d4a4a627a1 <unknown>\n#3 0x55d4a4a6244a <unknown>\n#4 0x55d4a4a607e1 <unknown>\n#5 0x55d4a4a6118a <unknown>\n#6 0x55d4a4a7207c <unknown>\n#7 0x55d4a4a8a7c1 <unknown>\n#8 0x55d4a4a906bb <unknown>\n#9 0x55d4a4a6192d <unknown>\n#10 0x55d4a4a8a5c2 <unknown>\n#11 0x55d4a4b15204 <unknown>\n#12 0x55d4a4af5e53 <unknown>\n#13 0x55d4a4abddd4 <unknown>\n#14 0x55d4a4abf1de <unknown>\n#15 0x55d4a4d88531 <unknown>\n#16 0x55d4a4d8c455 <unknown>\n#17 0x55d4a4d74f55 <unknown>\n#18 0x55d4a4d8d0ef <unknown>\n#19 0x55d4a4d5899f <unknown>\n#20 0x55d4a4db1008 <unknown>\n#21 0x55d4a4db11d7 <unknown>\n#22 0x55d4a4dc3124 <unknown>\n#23 0x7f758f494ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1110-626"},{"name":"thread","value":"2693-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":78,"unknown":0,"total":91},"items":[{"uid":"cfe75e050d0de0cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1287//#testresult/cfe75e050d0de0cf","status":"passed","time":{"start":1703294116641,"stop":1703294125414,"duration":8773}},{"uid":"8edbfbda93b9a8f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1282//#testresult/8edbfbda93b9a8f0","status":"passed","time":{"start":1703207798947,"stop":1703207807690,"duration":8743}},{"uid":"271abd9eb07fe435","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1281//#testresult/271abd9eb07fe435","status":"passed","time":{"start":1703121429394,"stop":1703121437632,"duration":8238}},{"uid":"4338db15a4c41662","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1280//#testresult/4338db15a4c41662","status":"passed","time":{"start":1703034313403,"stop":1703034322676,"duration":9273}},{"uid":"63f1e028b45413b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1279//#testresult/63f1e028b45413b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55ecbcb0af83 <unknown>\n#1 0x55ecbc7c3cf7 <unknown>\n#2 0x55ecbc7a97a1 <unknown>\n#3 0x55ecbc7a944a <unknown>\n#4 0x55ecbc7a77e1 <unknown>\n#5 0x55ecbc7a818a <unknown>\n#6 0x55ecbc7b907c <unknown>\n#7 0x55ecbc7d17c1 <unknown>\n#8 0x55ecbc7d76bb <unknown>\n#9 0x55ecbc7a892d <unknown>\n#10 0x55ecbc7d15c2 <unknown>\n#11 0x55ecbc85c204 <unknown>\n#12 0x55ecbc83ce53 <unknown>\n#13 0x55ecbc804dd4 <unknown>\n#14 0x55ecbc8061de <unknown>\n#15 0x55ecbcacf531 <unknown>\n#16 0x55ecbcad3455 <unknown>\n#17 0x55ecbcabbf55 <unknown>\n#18 0x55ecbcad40ef <unknown>\n#19 0x55ecbca9f99f <unknown>\n#20 0x55ecbcaf8008 <unknown>\n#21 0x55ecbcaf81d7 <unknown>\n#22 0x55ecbcb0a124 <unknown>\n#23 0x7f6735894ac3 <unknown>","time":{"start":1703024900880,"stop":1703025205363,"duration":304483}},{"uid":"5a482b4fed4d04af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1278//#testresult/5a482b4fed4d04af","status":"passed","time":{"start":1703024924161,"stop":1703024931103,"duration":6942}},{"uid":"d76e35cea4d3c409","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1276//#testresult/d76e35cea4d3c409","status":"passed","time":{"start":1702948746995,"stop":1702948755547,"duration":8552}},{"uid":"2679784b8ad7b668","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1275//#testresult/2679784b8ad7b668","status":"passed","time":{"start":1702862407684,"stop":1702862415239,"duration":7555}},{"uid":"adf5f68bbbb18e2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1274//#testresult/adf5f68bbbb18e2b","status":"passed","time":{"start":1702859998063,"stop":1702860012151,"duration":14088}},{"uid":"2ed272e5ceba0a88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1272//#testresult/2ed272e5ceba0a88","status":"passed","time":{"start":1702843619180,"stop":1702843627350,"duration":8170}},{"uid":"a1258845150f37f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1270//#testresult/a1258845150f37f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x55d5b3a56d33 <unknown>\n#1 0x55d5b3713f87 <unknown>\n#2 0x55d5b36f99c8 <unknown>\n#3 0x55d5b36f96fa <unknown>\n#4 0x55d5b36f7a99 <unknown>\n#5 0x55d5b36f843a <unknown>\n#6 0x55d5b370930c <unknown>\n#7 0x55d5b3721a51 <unknown>\n#8 0x55d5b372793b <unknown>\n#9 0x55d5b36f8bdd <unknown>\n#10 0x55d5b3721852 <unknown>\n#11 0x55d5b37ac496 <unknown>\n#12 0x55d5b378d0e3 <unknown>\n#13 0x55d5b3755044 <unknown>\n#14 0x55d5b375644e <unknown>\n#15 0x55d5b3a1b861 <unknown>\n#16 0x55d5b3a1f785 <unknown>\n#17 0x55d5b3a09285 <unknown>\n#18 0x55d5b3a2041f <unknown>\n#19 0x55d5b39ed20f <unknown>\n#20 0x55d5b3a44028 <unknown>\n#21 0x55d5b3a441f7 <unknown>\n#22 0x55d5b3a55ed4 <unknown>\n#23 0x7f184e894ac3 <unknown>","time":{"start":1702809430685,"stop":1702809734895,"duration":304210}},{"uid":"29a85f1389dcc569","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1247//#testresult/29a85f1389dcc569","status":"passed","time":{"start":1702657192601,"stop":1702657201087,"duration":8486}},{"uid":"dbbd282f70e660d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1248//#testresult/dbbd282f70e660d4","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x565317e25d33 <unknown>\n#1 0x565317ae2f87 <unknown>\n#2 0x565317ac89c8 <unknown>\n#3 0x565317ac86fa <unknown>\n#4 0x565317ac6a99 <unknown>\n#5 0x565317ac743a <unknown>\n#6 0x565317ad830c <unknown>\n#7 0x565317af0a51 <unknown>\n#8 0x565317af693b <unknown>\n#9 0x565317ac7bdd <unknown>\n#10 0x565317af0852 <unknown>\n#11 0x565317b7b496 <unknown>\n#12 0x565317b5c0e3 <unknown>\n#13 0x565317b24044 <unknown>\n#14 0x565317b2544e <unknown>\n#15 0x565317dea861 <unknown>\n#16 0x565317dee785 <unknown>\n#17 0x565317dd8285 <unknown>\n#18 0x565317def41f <unknown>\n#19 0x565317dbc20f <unknown>\n#20 0x565317e13028 <unknown>\n#21 0x565317e131f7 <unknown>\n#22 0x565317e24ed4 <unknown>\n#23 0x7f173be94ac3 <unknown>","time":{"start":1702657218465,"stop":1702657522553,"duration":304088}},{"uid":"c3c2fcc4da3a608c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1244//#testresult/c3c2fcc4da3a608c","status":"passed","time":{"start":1702603170317,"stop":1702603199017,"duration":28700}},{"uid":"e7649cf9c287237d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1243//#testresult/e7649cf9c287237d","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=119.0.6045.199)\nStacktrace:\n#0 0x563797c565e3 <unknown>\n#1 0x5637979190b7 <unknown>\n#2 0x5637978ff23a <unknown>\n#3 0x5637978ff0a9 <unknown>\n#4 0x5637978fd481 <unknown>\n#5 0x5637978fde39 <unknown>\n#6 0x56379790e8ac <unknown>\n#7 0x5637979264c1 <unknown>\n#8 0x56379792c13b <unknown>\n#9 0x5637978fe5ce <unknown>\n#10 0x5637979262c4 <unknown>\n#11 0x5637979a9d42 <unknown>\n#12 0x56379798dcc3 <unknown>\n#13 0x5637979590e4 <unknown>\n#14 0x56379795a0ae <unknown>\n#15 0x563797c1cce1 <unknown>\n#16 0x563797c20b7e <unknown>\n#17 0x563797c0a4b5 <unknown>\n#18 0x563797c217d6 <unknown>\n#19 0x563797beddbf <unknown>\n#20 0x563797c44748 <unknown>\n#21 0x563797c44917 <unknown>\n#22 0x563797c55773 <unknown>\n#23 0x7f73ad694ac3 <unknown>","time":{"start":1702540032183,"stop":1702540336637,"duration":304454}},{"uid":"5cdd341c39037730","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1241//#testresult/5cdd341c39037730","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=119.0.6045.199)\nStacktrace:\n#0 0x55d53465d5e3 <unknown>\n#1 0x55d5343200b7 <unknown>\n#2 0x55d53430623a <unknown>\n#3 0x55d5343060a9 <unknown>\n#4 0x55d534304481 <unknown>\n#5 0x55d534304e39 <unknown>\n#6 0x55d5343158ac <unknown>\n#7 0x55d53432d4c1 <unknown>\n#8 0x55d53433313b <unknown>\n#9 0x55d5343055ce <unknown>\n#10 0x55d53432d2c4 <unknown>\n#11 0x55d5343b0d42 <unknown>\n#12 0x55d534394cc3 <unknown>\n#13 0x55d5343600e4 <unknown>\n#14 0x55d5343610ae <unknown>\n#15 0x55d534623ce1 <unknown>\n#16 0x55d534627b7e <unknown>\n#17 0x55d5346114b5 <unknown>\n#18 0x55d5346287d6 <unknown>\n#19 0x55d5345f4dbf <unknown>\n#20 0x55d53464b748 <unknown>\n#21 0x55d53464b917 <unknown>\n#22 0x55d53465c773 <unknown>\n#23 0x7fe928694ac3 <unknown>","time":{"start":1702516664858,"stop":1702516969679,"duration":304821}},{"uid":"60ecd58c181c178a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1238//#testresult/60ecd58c181c178a","status":"passed","time":{"start":1702447460989,"stop":1702447467729,"duration":6740}},{"uid":"e2b8fd3c13657b62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1236//#testresult/e2b8fd3c13657b62","status":"passed","time":{"start":1702430346561,"stop":1702430354550,"duration":7989}},{"uid":"f42a51217cc2f061","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1232//#testresult/f42a51217cc2f061","status":"passed","time":{"start":1702366501941,"stop":1702366510575,"duration":8634}},{"uid":"7ab1fba96893a1c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1231//#testresult/7ab1fba96893a1c5","status":"passed","time":{"start":1702343973560,"stop":1702343981122,"duration":7562}}]},"tags":[]},"source":"484c8d79cef71672.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}