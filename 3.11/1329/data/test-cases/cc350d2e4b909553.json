{"uid":"cc350d2e4b909553","name":"Validate Council Output [GedlingBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"ea056f0de9fa4e978146da5c02648bd9","time":{"start":1704072306389,"stop":1704072307531,"duration":1142},"status":"failed","statusMessage":"Exception: No results for address lookup found. If correct address is being used, please raise a GitHub issue","statusTrace":"self = <GedlingBoroughCouncil.CouncilClass object at 0x7fd128f22c90>, page = ''\nkwargs = {'paon': 'Valeside Gardens', 'postcode': None, 'uprn': None, 'url': 'https://www.gedling.gov.uk/', ...}\ndata = {'bins': []}\nuser_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'}\naddress_street = 'Valeside Gardens'\nstage1_url = 'https://apps.gedling.gov.uk/refuse/search.aspx'\nstage1_data = <Response [200]>\nsoup = <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n\n<html><head>\n<title>403 Forbidden</title>\n</head><body>\n<h1>Forbidden</h1>\n<p>You don't have permission to access this resource.</p>\n</body></html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n    \n        data = {\"bins\": []}\n    \n        user_agent = (\n            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) \"\n            \"Chrome/108.0.0.0 Safari/537.36\"\n        )\n        headers = {\"User-Agent\": user_agent}\n    \n        address_street = kwargs.get(\"paon\")\n    \n        # Stage 1 - Fetch initial page to get hidden form values needed for submission\n        stage1_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        stage1_data = requests.get(\n            \"https://apps.gedling.gov.uk/refuse/search.aspx\", headers=headers\n        )\n    \n        soup = BeautifulSoup(stage1_data.text, features=\"html.parser\")\n        try:\n            value_viewstate = soup.find_all(\"input\", {\"id\": \"__VIEWSTATE\"})[0][\"value\"]\n            value_viewstategenerator = soup.find_all(\n                \"input\", {\"id\": \"__VIEWSTATEGENERATOR\"}\n            )[0][\"value\"]\n            value_eventvalidation = soup.find_all(\"input\", {\"id\": \"__EVENTVALIDATION\"})[\n                0\n            ][\"value\"]\n        except:\n            raise Exception(\n                \"Beautiful Soup was not able to get the data back from the Stage 1 URL that we were expecting. Please raise an issue in GitHub\"\n            )\n    \n        # Stage 2 - Now POST the query to get the bin data back\n        stage2_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        post_data = {\n            \"__VIEWSTATE\": value_viewstate,\n            \"__VIEWSTATEGENERATOR\": value_viewstategenerator,\n            \"__EVENTVALIDATION\": value_eventvalidation,\n            \"ctl00$MainContent$street\": address_street,\n            \"ctl00$MainContent$mybutton\": \"Search\",\n        }\n    \n        stage2_request = requests.post(stage2_url, data=post_data, headers=headers)\n    \n        soup = BeautifulSoup(stage2_request.text, features=\"html.parser\")\n        try:\n            bin_refuse_calendar = os.path.basename(\n>               soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_streetgridview_ctl02_calendar1\"}\n                )[0][\"href\"]\n            )\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/GedlingBoroughCouncil.py:64: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nfixturefunc = <function scrape_step at 0x7fd128ec0c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[GedlingBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd1284a2890>, 'council': 'GedlingBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <GedlingBoroughCouncil.CouncilClass object at 0x7fd128f22c90>, page = ''\nkwargs = {'paon': 'Valeside Gardens', 'postcode': None, 'uprn': None, 'url': 'https://www.gedling.gov.uk/', ...}\ndata = {'bins': []}\nuser_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'}\naddress_street = 'Valeside Gardens'\nstage1_url = 'https://apps.gedling.gov.uk/refuse/search.aspx'\nstage1_data = <Response [200]>\nsoup = <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n\n<html><head>\n<title>403 Forbidden</title>\n</head><body>\n<h1>Forbidden</h1>\n<p>You don't have permission to access this resource.</p>\n</body></html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n    \n        data = {\"bins\": []}\n    \n        user_agent = (\n            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) \"\n            \"Chrome/108.0.0.0 Safari/537.36\"\n        )\n        headers = {\"User-Agent\": user_agent}\n    \n        address_street = kwargs.get(\"paon\")\n    \n        # Stage 1 - Fetch initial page to get hidden form values needed for submission\n        stage1_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        stage1_data = requests.get(\n            \"https://apps.gedling.gov.uk/refuse/search.aspx\", headers=headers\n        )\n    \n        soup = BeautifulSoup(stage1_data.text, features=\"html.parser\")\n        try:\n            value_viewstate = soup.find_all(\"input\", {\"id\": \"__VIEWSTATE\"})[0][\"value\"]\n            value_viewstategenerator = soup.find_all(\n                \"input\", {\"id\": \"__VIEWSTATEGENERATOR\"}\n            )[0][\"value\"]\n            value_eventvalidation = soup.find_all(\"input\", {\"id\": \"__EVENTVALIDATION\"})[\n                0\n            ][\"value\"]\n        except:\n            raise Exception(\n                \"Beautiful Soup was not able to get the data back from the Stage 1 URL that we were expecting. Please raise an issue in GitHub\"\n            )\n    \n        # Stage 2 - Now POST the query to get the bin data back\n        stage2_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        post_data = {\n            \"__VIEWSTATE\": value_viewstate,\n            \"__VIEWSTATEGENERATOR\": value_viewstategenerator,\n            \"__EVENTVALIDATION\": value_eventvalidation,\n            \"ctl00$MainContent$street\": address_street,\n            \"ctl00$MainContent$mybutton\": \"Search\",\n        }\n    \n        stage2_request = requests.post(stage2_url, data=post_data, headers=headers)\n    \n        soup = BeautifulSoup(stage2_request.text, features=\"html.parser\")\n        try:\n            bin_refuse_calendar = os.path.basename(\n                soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_streetgridview_ctl02_calendar1\"}\n                )[0][\"href\"]\n            )\n            bin_garden_calendar = os.path.basename(\n                soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_gardenGridView_ctl02_calendar2\"}\n                )[0][\"href\"]\n            )\n        except:\n>           raise Exception(\n                \"No results for address lookup found. If correct address is being used, please raise a GitHub issue\"\n            )\nE           Exception: No results for address lookup found. If correct address is being used, please raise a GitHub issue\n\nuk_bin_collection/uk_bin_collection/councils/GedlingBoroughCouncil.py:74: Exception","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Exception: No results for address lookup found. If correct address is being used, please raise a GitHub issue","statusTrace":"self = <GedlingBoroughCouncil.CouncilClass object at 0x7fd128f22c90>, page = ''\nkwargs = {'paon': 'Valeside Gardens', 'postcode': None, 'uprn': None, 'url': 'https://www.gedling.gov.uk/', ...}\ndata = {'bins': []}\nuser_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'}\naddress_street = 'Valeside Gardens'\nstage1_url = 'https://apps.gedling.gov.uk/refuse/search.aspx'\nstage1_data = <Response [200]>\nsoup = <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n\n<html><head>\n<title>403 Forbidden</title>\n</head><body>\n<h1>Forbidden</h1>\n<p>You don't have permission to access this resource.</p>\n</body></html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n    \n        data = {\"bins\": []}\n    \n        user_agent = (\n            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) \"\n            \"Chrome/108.0.0.0 Safari/537.36\"\n        )\n        headers = {\"User-Agent\": user_agent}\n    \n        address_street = kwargs.get(\"paon\")\n    \n        # Stage 1 - Fetch initial page to get hidden form values needed for submission\n        stage1_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        stage1_data = requests.get(\n            \"https://apps.gedling.gov.uk/refuse/search.aspx\", headers=headers\n        )\n    \n        soup = BeautifulSoup(stage1_data.text, features=\"html.parser\")\n        try:\n            value_viewstate = soup.find_all(\"input\", {\"id\": \"__VIEWSTATE\"})[0][\"value\"]\n            value_viewstategenerator = soup.find_all(\n                \"input\", {\"id\": \"__VIEWSTATEGENERATOR\"}\n            )[0][\"value\"]\n            value_eventvalidation = soup.find_all(\"input\", {\"id\": \"__EVENTVALIDATION\"})[\n                0\n            ][\"value\"]\n        except:\n            raise Exception(\n                \"Beautiful Soup was not able to get the data back from the Stage 1 URL that we were expecting. Please raise an issue in GitHub\"\n            )\n    \n        # Stage 2 - Now POST the query to get the bin data back\n        stage2_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        post_data = {\n            \"__VIEWSTATE\": value_viewstate,\n            \"__VIEWSTATEGENERATOR\": value_viewstategenerator,\n            \"__EVENTVALIDATION\": value_eventvalidation,\n            \"ctl00$MainContent$street\": address_street,\n            \"ctl00$MainContent$mybutton\": \"Search\",\n        }\n    \n        stage2_request = requests.post(stage2_url, data=post_data, headers=headers)\n    \n        soup = BeautifulSoup(stage2_request.text, features=\"html.parser\")\n        try:\n            bin_refuse_calendar = os.path.basename(\n>               soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_streetgridview_ctl02_calendar1\"}\n                )[0][\"href\"]\n            )\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/GedlingBoroughCouncil.py:64: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nfixturefunc = <function scrape_step at 0x7fd128ec0c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[GedlingBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd1284a2890>, 'council': 'GedlingBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <GedlingBoroughCouncil.CouncilClass object at 0x7fd128f22c90>, page = ''\nkwargs = {'paon': 'Valeside Gardens', 'postcode': None, 'uprn': None, 'url': 'https://www.gedling.gov.uk/', ...}\ndata = {'bins': []}\nuser_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'\nheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'}\naddress_street = 'Valeside Gardens'\nstage1_url = 'https://apps.gedling.gov.uk/refuse/search.aspx'\nstage1_data = <Response [200]>\nsoup = <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n\n<html><head>\n<title>403 Forbidden</title>\n</head><body>\n<h1>Forbidden</h1>\n<p>You don't have permission to access this resource.</p>\n</body></html>\n\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n    \n        data = {\"bins\": []}\n    \n        user_agent = (\n            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) \"\n            \"Chrome/108.0.0.0 Safari/537.36\"\n        )\n        headers = {\"User-Agent\": user_agent}\n    \n        address_street = kwargs.get(\"paon\")\n    \n        # Stage 1 - Fetch initial page to get hidden form values needed for submission\n        stage1_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        stage1_data = requests.get(\n            \"https://apps.gedling.gov.uk/refuse/search.aspx\", headers=headers\n        )\n    \n        soup = BeautifulSoup(stage1_data.text, features=\"html.parser\")\n        try:\n            value_viewstate = soup.find_all(\"input\", {\"id\": \"__VIEWSTATE\"})[0][\"value\"]\n            value_viewstategenerator = soup.find_all(\n                \"input\", {\"id\": \"__VIEWSTATEGENERATOR\"}\n            )[0][\"value\"]\n            value_eventvalidation = soup.find_all(\"input\", {\"id\": \"__EVENTVALIDATION\"})[\n                0\n            ][\"value\"]\n        except:\n            raise Exception(\n                \"Beautiful Soup was not able to get the data back from the Stage 1 URL that we were expecting. Please raise an issue in GitHub\"\n            )\n    \n        # Stage 2 - Now POST the query to get the bin data back\n        stage2_url = \"https://apps.gedling.gov.uk/refuse/search.aspx\"\n        post_data = {\n            \"__VIEWSTATE\": value_viewstate,\n            \"__VIEWSTATEGENERATOR\": value_viewstategenerator,\n            \"__EVENTVALIDATION\": value_eventvalidation,\n            \"ctl00$MainContent$street\": address_street,\n            \"ctl00$MainContent$mybutton\": \"Search\",\n        }\n    \n        stage2_request = requests.post(stage2_url, data=post_data, headers=headers)\n    \n        soup = BeautifulSoup(stage2_request.text, features=\"html.parser\")\n        try:\n            bin_refuse_calendar = os.path.basename(\n                soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_streetgridview_ctl02_calendar1\"}\n                )[0][\"href\"]\n            )\n            bin_garden_calendar = os.path.basename(\n                soup.find_all(\n                    \"a\", {\"id\": \"ctl00_MainContent_gardenGridView_ctl02_calendar2\"}\n                )[0][\"href\"]\n            )\n        except:\n>           raise Exception(\n                \"No results for address lookup found. If correct address is being used, please raise a GitHub issue\"\n            )\nE           Exception: No results for address lookup found. If correct address is being used, please raise a GitHub issue\n\nuk_bin_collection/uk_bin_collection/councils/GedlingBoroughCouncil.py:74: Exception","steps":[{"name":"Given the council: GedlingBoroughCouncil","time":{"start":1704072306390,"stop":1704072306390,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GedlingBoroughCouncil using None and the None is set","time":{"start":1704072306390,"stop":1704072307531,"duration":1141},"status":"failed","statusMessage":"No results for address lookup found. If correct address is being used, please raise a GitHub issue","statusTrace":"Exception: No results for address lookup found. If correct address is being used, please raise a GitHub issue\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1382-721"},{"name":"thread","value":"2730-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GedlingBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":12},"items":[{"uid":"173e7263469d2e2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1327//#testresult/173e7263469d2e2f","status":"passed","time":{"start":1704050746479,"stop":1704050748467,"duration":1988}},{"uid":"43c6d42876276f92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1325//#testresult/43c6d42876276f92","status":"passed","time":{"start":1704043872377,"stop":1704043873760,"duration":1383}},{"uid":"bc93fc25261c0d7f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1320//#testresult/bc93fc25261c0d7f","status":"passed","time":{"start":1703985748206,"stop":1703985749985,"duration":1779}},{"uid":"4bb449ece4bde29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1316//#testresult/4bb449ece4bde29","status":"passed","time":{"start":1703898907334,"stop":1703898908474,"duration":1140}},{"uid":"881eadb5210a6838","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1314//#testresult/881eadb5210a6838","status":"passed","time":{"start":1703853459796,"stop":1703853461968,"duration":2172}},{"uid":"deea89fea93a5321","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1311//#testresult/deea89fea93a5321","status":"passed","time":{"start":1703851078707,"stop":1703851080204,"duration":1497}},{"uid":"ef04969d4e0ae4c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1309//#testresult/ef04969d4e0ae4c0","status":"passed","time":{"start":1703812020731,"stop":1703812021919,"duration":1188}},{"uid":"7a103430bad9bc1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1306//#testresult/7a103430bad9bc1f","status":"passed","time":{"start":1703756150509,"stop":1703756152066,"duration":1557}},{"uid":"ba6a0141907e4e13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1305//#testresult/ba6a0141907e4e13","status":"passed","time":{"start":1703726131882,"stop":1703726133082,"duration":1200}},{"uid":"4f0333b98bf1e956","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1304//#testresult/4f0333b98bf1e956","status":"passed","time":{"start":1703717305527,"stop":1703717306813,"duration":1286}},{"uid":"e097a096b371f31","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1303//#testresult/e097a096b371f31","status":"passed","time":{"start":1703717268163,"stop":1703717269342,"duration":1179}}]},"tags":[]},"source":"cc350d2e4b909553.json","parameterValues":["GedlingBoroughCouncil","None","None"]}