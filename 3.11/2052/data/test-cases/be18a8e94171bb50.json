{"uid":"be18a8e94171bb50","name":"Validate Council Output [BedfordBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"4d48486dc2c0a9c252d5ac44f0d62a3d","time":{"start":1725062831883,"stop":1725062892850,"duration":60967},"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7f49590da660>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f4958f61950>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7f4958e0dc90>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionError: Could not get latest data!","statusTrace":"fixturefunc = <function scrape_step at 0x7f49590da660>\nrequest = <FixtureRequest for <Function test_scenario_outline[BedfordBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f4958f61950>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BedfordBoroughCouncil.CouncilClass object at 0x7f4958e0dc90>, page = ''\nkwargs = {'council_module_str': 'BedfordBoroughCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuser_uprn = '10024232065'\napi_url = 'https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/10024232065/35'\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        api_url = f\"https://bbaz-as-prod-bartecapi.azurewebsites.net/api/bincollections/residential/getbyuprn/{user_uprn}/35\"\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(api_url)\n    \n        if response.status_code != 200:\n>           raise ConnectionError(\"Could not get latest data!\")\nE           ConnectionError: Could not get latest data!\n\nuk_bin_collection/uk_bin_collection/councils/BedfordBoroughCouncil.py:26: ConnectionError","steps":[{"name":"Given the council","time":{"start":1725062831883,"stop":1725062831884,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1725062831884,"stop":1725062892850,"duration":60966},"status":"failed","statusMessage":"Could not get latest data!","statusTrace":"ConnectionError: Could not get latest data!\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"177c3ba3c7fa0287","name":"stdout","source":"177c3ba3c7fa0287.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1040-191"},{"name":"thread","value":"2741-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BedfordBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":110,"unknown":0,"total":114},"items":[{"uid":"bf016e7c9f3c0a12","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2051//#testresult/bf016e7c9f3c0a12","status":"passed","time":{"start":1724976430446,"stop":1724976440641,"duration":10195}},{"uid":"22afc5bffff3968e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2049//#testresult/22afc5bffff3968e","status":"passed","time":{"start":1724890194536,"stop":1724890197727,"duration":3191}},{"uid":"e1a94eba2b077292","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2048//#testresult/e1a94eba2b077292","status":"passed","time":{"start":1724803623776,"stop":1724803640593,"duration":16817}},{"uid":"86ffd924748f57d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2043//#testresult/86ffd924748f57d5","status":"passed","time":{"start":1724717259007,"stop":1724717268388,"duration":9381}},{"uid":"65e69f67df84c54f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2039//#testresult/65e69f67df84c54f","status":"passed","time":{"start":1724630841187,"stop":1724630844172,"duration":2985}},{"uid":"e9d6a25bb85c0527","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2038//#testresult/e9d6a25bb85c0527","status":"passed","time":{"start":1724544437213,"stop":1724544441966,"duration":4753}},{"uid":"ac7cbf21fc846ea3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2037//#testresult/ac7cbf21fc846ea3","status":"passed","time":{"start":1724458096015,"stop":1724458102644,"duration":6629}},{"uid":"6f2a4fe4e19ae758","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2036//#testresult/6f2a4fe4e19ae758","status":"passed","time":{"start":1724371636840,"stop":1724371649525,"duration":12685}},{"uid":"34fa03d2a4354fab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2034//#testresult/34fa03d2a4354fab","status":"passed","time":{"start":1724285233118,"stop":1724285236247,"duration":3129}},{"uid":"a8c0896b654d86ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2033//#testresult/a8c0896b654d86ee","status":"passed","time":{"start":1724198891935,"stop":1724198893995,"duration":2060}},{"uid":"a244a520a40f596d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2032//#testresult/a244a520a40f596d","status":"passed","time":{"start":1724112497971,"stop":1724112504181,"duration":6210}},{"uid":"2425d3d271827241","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2031//#testresult/2425d3d271827241","status":"passed","time":{"start":1724026016778,"stop":1724026024771,"duration":7993}},{"uid":"b6c96110d641f9b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2030//#testresult/b6c96110d641f9b9","status":"passed","time":{"start":1723939701322,"stop":1723939705953,"duration":4631}},{"uid":"8858a30b36609bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2029//#testresult/8858a30b36609bd","status":"passed","time":{"start":1723853226613,"stop":1723853232802,"duration":6189}},{"uid":"fb4beac64542321c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2028//#testresult/fb4beac64542321c","status":"passed","time":{"start":1723766837119,"stop":1723766851095,"duration":13976}},{"uid":"93a99ff74a985c2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2027//#testresult/93a99ff74a985c2c","status":"passed","time":{"start":1723680169542,"stop":1723680173762,"duration":4220}},{"uid":"829b062f51ac2026","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2026//#testresult/829b062f51ac2026","status":"passed","time":{"start":1723594092045,"stop":1723594096764,"duration":4719}},{"uid":"832624c457534b8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2025//#testresult/832624c457534b8b","status":"passed","time":{"start":1723507847049,"stop":1723507851175,"duration":4126}},{"uid":"1047ebbbb85a0fe7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2024//#testresult/1047ebbbb85a0fe7","status":"passed","time":{"start":1723421361880,"stop":1723421364938,"duration":3058}},{"uid":"354d9610fa0e82d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2022//#testresult/354d9610fa0e82d","status":"passed","time":{"start":1723334974585,"stop":1723334977746,"duration":3161}}]},"tags":[]},"source":"be18a8e94171bb50.json","parameterValues":["BedfordBoroughCouncil"]}