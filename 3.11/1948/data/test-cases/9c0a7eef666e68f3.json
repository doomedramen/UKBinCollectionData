{"uid":"9c0a7eef666e68f3","name":"Validate Council Output [CroydonCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cc336f6dd92ae6b8042805cd6f13d13e","time":{"start":1718843338945,"stop":1718843344223,"duration":5278},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"fixturefunc = <function scrape_step at 0x7fd260c53a60>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd260ef5f50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7fd260349550>, page = ''\nkwargs = {'council_module_str': 'CroydonCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ns = <requests.sessions.Session object at 0x7fd262a2c150>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '524d3c457a1cbac40d63972618f19ed41a6e7f2b', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:275: AttributeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"fixturefunc = <function scrape_step at 0x7fd260c53a60>\nrequest = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd260ef5f50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7fd260349550>, page = ''\nkwargs = {'council_module_str': 'CroydonCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\ns = <requests.sessions.Session object at 0x7fd262a2c150>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '524d3c457a1cbac40d63972618f19ed41a6e7f2b', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:275: AttributeError","steps":[{"name":"Given the council","time":{"start":1718843338945,"stop":1718843338946,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1718843338946,"stop":1718843344223,"duration":5277},"status":"failed","statusMessage":"'NoneType' object has no attribute 'attrs'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'attrs'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"faf15238a441dc04","name":"stdout","source":"faf15238a441dc04.txt","type":"text/plain","size":41}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1146-433"},{"name":"thread","value":"2762-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":130,"broken":0,"skipped":0,"passed":93,"unknown":0,"total":223},"items":[{"uid":"a01221a63568e17e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1947//#testresult/a01221a63568e17e","status":"passed","time":{"start":1718757021913,"stop":1718757033856,"duration":11943}},{"uid":"b38246767da15310","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1946//#testresult/b38246767da15310","status":"passed","time":{"start":1718670587724,"stop":1718670593063,"duration":5339}},{"uid":"3b10109d43c80bb0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1945//#testresult/3b10109d43c80bb0","status":"passed","time":{"start":1718584362454,"stop":1718584368208,"duration":5754}},{"uid":"af1b171048719d2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1944//#testresult/af1b171048719d2a","status":"passed","time":{"start":1718498010717,"stop":1718498015804,"duration":5087}},{"uid":"33007bafbb81d2ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1943//#testresult/33007bafbb81d2ea","status":"passed","time":{"start":1718411365811,"stop":1718411370777,"duration":4966}},{"uid":"8f5d23840c61fb1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1942//#testresult/8f5d23840c61fb1f","status":"passed","time":{"start":1718324955659,"stop":1718324960857,"duration":5198}},{"uid":"62d131721e05cd06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1939//#testresult/62d131721e05cd06","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1718238562856,"stop":1718238567875,"duration":5019}},{"uid":"92530475003e516d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1938//#testresult/92530475003e516d","status":"passed","time":{"start":1718152178299,"stop":1718152183122,"duration":4823}},{"uid":"c5f31470903ece8d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1937//#testresult/c5f31470903ece8d","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1718065781861,"stop":1718065783877,"duration":2016}},{"uid":"f21e00054cf5cb12","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1936//#testresult/f21e00054cf5cb12","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1717979481492,"stop":1717979482684,"duration":1192}},{"uid":"c5c6ce7b192139a5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1934//#testresult/c5c6ce7b192139a5","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1717893186757,"stop":1717893188060,"duration":1303}},{"uid":"c7e4f2516ad2630c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1933//#testresult/c7e4f2516ad2630c","status":"passed","time":{"start":1717806623545,"stop":1717806641820,"duration":18275}},{"uid":"ec7f42eb0045e544","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1932//#testresult/ec7f42eb0045e544","status":"passed","time":{"start":1717720209286,"stop":1717720217830,"duration":8544}},{"uid":"8229e631d7b6c0d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1927//#testresult/8229e631d7b6c0d1","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1717633809439,"stop":1717633810930,"duration":1491}},{"uid":"de82015cd2dea68b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1924//#testresult/de82015cd2dea68b","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1717547377628,"stop":1717547378965,"duration":1337}},{"uid":"763aa52465a15e14","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1923//#testresult/763aa52465a15e14","status":"passed","time":{"start":1717460936560,"stop":1717460941123,"duration":4563}},{"uid":"99e800531b27da71","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1921//#testresult/99e800531b27da71","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1717374662817,"stop":1717374664853,"duration":2036}},{"uid":"c55e420f5033f153","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1919//#testresult/c55e420f5033f153","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1717331847962,"stop":1717331849726,"duration":1764}},{"uid":"4278ac21f3f49ffd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1911//#testresult/4278ac21f3f49ffd","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1717316328779,"stop":1717316330017,"duration":1238}},{"uid":"30ce144e7f71f279","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1908//#testresult/30ce144e7f71f279","status":"passed","time":{"start":1717288301657,"stop":1717288307379,"duration":5722}}]},"tags":[]},"source":"9c0a7eef666e68f3.json","parameterValues":["CroydonCouncil"]}