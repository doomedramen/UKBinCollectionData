{"uid":"3d1e48556a540a0f","name":"Validate Council Output [YorkCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"5fed61e89778a9cbbd6ff59686ec6418","time":{"start":1706574507362,"stop":1706574508039,"duration":677},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f57123607c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[YorkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f571197c850>, 'council': 'YorkCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/YorkCouncil.py:26: in parse_data\n    json_response = json.loads(response.content)[\"services\"]\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f5725fb0950>\ns = '<!DOCTYPE html>\\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\\n<!--[if IE 7]>    <html ...istener(\"DOMContentLoaded\",d)})();</script>\\n</div><!-- /.error-footer -->\\n\\n\\n    </div>\\n</div>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f57123607c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[YorkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f571197c850>, 'council': 'YorkCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/YorkCouncil.py:26: in parse_data\n    json_response = json.loads(response.content)[\"services\"]\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f5725fb0950>\ns = '<!DOCTYPE html>\\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\\n<!--[if IE 7]>    <html ...istener(\"DOMContentLoaded\",d)})();</script>\\n</div><!-- /.error-footer -->\\n\\n\\n    </div>\\n</div>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: YorkCouncil","time":{"start":1706574507363,"stop":1706574507363,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from YorkCouncil using None and the None is set","time":{"start":1706574507363,"stop":1706574508039,"duration":676},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az525-874"},{"name":"thread","value":"2751-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"YorkCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":176,"unknown":0,"total":177},"items":[{"uid":"fb9e9bb6d44f8e92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1534//#testresult/fb9e9bb6d44f8e92","status":"passed","time":{"start":1706488328180,"stop":1706488328770,"duration":590}},{"uid":"8cb458efdd97e086","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1531//#testresult/8cb458efdd97e086","status":"passed","time":{"start":1706401884814,"stop":1706401887460,"duration":2646}},{"uid":"61f41751fc117c1a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1529//#testresult/61f41751fc117c1a","status":"passed","time":{"start":1706315416932,"stop":1706315417519,"duration":587}},{"uid":"eb7f901298614abd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1528//#testresult/eb7f901298614abd","status":"passed","time":{"start":1706228979146,"stop":1706228983444,"duration":4298}},{"uid":"e9df804b38def4e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1523//#testresult/e9df804b38def4e0","status":"passed","time":{"start":1706142819687,"stop":1706142820287,"duration":600}},{"uid":"8f1b1b97bd21c0fe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1522//#testresult/8f1b1b97bd21c0fe","status":"passed","time":{"start":1706056331426,"stop":1706056332358,"duration":932}},{"uid":"b18a40375e54a28f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1521//#testresult/b18a40375e54a28f","status":"passed","time":{"start":1705969917533,"stop":1705969918142,"duration":609}},{"uid":"feac6daad3c8c5ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1520//#testresult/feac6daad3c8c5ba","status":"passed","time":{"start":1705883592939,"stop":1705883595486,"duration":2547}},{"uid":"7c547485eef9c90d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1519//#testresult/7c547485eef9c90d","status":"passed","time":{"start":1705797236259,"stop":1705797238728,"duration":2469}},{"uid":"967446e30dfbe675","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1515//#testresult/967446e30dfbe675","status":"passed","time":{"start":1705710647481,"stop":1705710650402,"duration":2921}},{"uid":"6c4af4fc304e2e26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1511//#testresult/6c4af4fc304e2e26","status":"passed","time":{"start":1705624304398,"stop":1705624304891,"duration":493}},{"uid":"2c020c8a4f17da2d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/2c020c8a4f17da2d","status":"passed","time":{"start":1705537798485,"stop":1705537801310,"duration":2825}},{"uid":"a8bde6b0590655b5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/a8bde6b0590655b5","status":"passed","time":{"start":1705451424629,"stop":1705451426751,"duration":2122}},{"uid":"ca7afeb43d050a12","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1499//#testresult/ca7afeb43d050a12","status":"passed","time":{"start":1705365185893,"stop":1705365186425,"duration":532}},{"uid":"81224fcadadd9172","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1492//#testresult/81224fcadadd9172","status":"passed","time":{"start":1705295769987,"stop":1705295770815,"duration":828}},{"uid":"a48f910ea702a300","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1491//#testresult/a48f910ea702a300","status":"passed","time":{"start":1705295194266,"stop":1705295196892,"duration":2626}},{"uid":"9336498c02dacd49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1490//#testresult/9336498c02dacd49","status":"passed","time":{"start":1705278626587,"stop":1705278629027,"duration":2440}},{"uid":"302254eb86565a7a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1485//#testresult/302254eb86565a7a","status":"passed","time":{"start":1705192294505,"stop":1705192297507,"duration":3002}},{"uid":"6708afa58922be2d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1484//#testresult/6708afa58922be2d","status":"passed","time":{"start":1705105748756,"stop":1705105750058,"duration":1302}},{"uid":"5966307e2816ca86","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1482//#testresult/5966307e2816ca86","status":"passed","time":{"start":1705019325779,"stop":1705019328085,"duration":2306}}]},"tags":[]},"source":"3d1e48556a540a0f.json","parameterValues":["YorkCouncil","None","None"]}