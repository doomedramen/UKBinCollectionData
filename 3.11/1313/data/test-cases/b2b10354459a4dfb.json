{"uid":"b2b10354459a4dfb","name":"Validate Council Output [MidSussexDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"603913cb01d56f40fcd70fa6d1ec6273","time":{"start":1703853488931,"stop":1703853489941,"duration":1010},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7f8dc84e0c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8dc7abfc10>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7f8dc75ffd90>\npage = ''\nkwargs = {'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, 'url': 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/', ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:63: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7f8dc84e0c20>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8dc7abfc10>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:82: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:69: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:69: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7f8dc75ffd90>\npage = ''\nkwargs = {'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, 'url': 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/', ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:63: AttributeError","steps":[{"name":"Given the council: MidSussexDistrictCouncil","time":{"start":1703853488931,"stop":1703853488932,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MidSussexDistrictCouncil using None and the None is set","time":{"start":1703853488932,"stop":1703853489941,"duration":1009},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all_next'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all_next'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az802-323"},{"name":"thread","value":"2706-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MidSussexDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":104,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":104},"items":[{"uid":"e41e8cf55844d50b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1311//#testresult/e41e8cf55844d50b","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703851108062,"stop":1703851108820,"duration":758}},{"uid":"237e78c1a39e9bfa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1309//#testresult/237e78c1a39e9bfa","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703812060428,"stop":1703812061294,"duration":866}},{"uid":"db7705b263716553","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1306//#testresult/db7705b263716553","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703756213702,"stop":1703756215600,"duration":1898}},{"uid":"70d83205f4e565dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1305//#testresult/70d83205f4e565dc","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703726176485,"stop":1703726177498,"duration":1013}},{"uid":"76aeb66701b8b2e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1304//#testresult/76aeb66701b8b2e8","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703717351380,"stop":1703717353001,"duration":1621}},{"uid":"6560729ed7f5d7b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1303//#testresult/6560729ed7f5d7b6","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703717314625,"stop":1703717315368,"duration":743}},{"uid":"3b666eae3fd64f1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1301//#testresult/3b666eae3fd64f1c","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703639776045,"stop":1703639776771,"duration":726}},{"uid":"224fac5ba87183dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1300//#testresult/224fac5ba87183dc","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703553370470,"stop":1703553371216,"duration":746}},{"uid":"f9efc90e5ddf59c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1298//#testresult/f9efc90e5ddf59c3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703541157886,"stop":1703541158843,"duration":957}},{"uid":"262a988913338524","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1295//#testresult/262a988913338524","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703467131472,"stop":1703467132444,"duration":972}},{"uid":"f38ec2720a8d8fd7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1292//#testresult/f38ec2720a8d8fd7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703416444967,"stop":1703416446108,"duration":1141}},{"uid":"75fe4d6ee3a3326a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1291//#testresult/75fe4d6ee3a3326a","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703416414506,"stop":1703416415382,"duration":876}},{"uid":"b4c03a8ab5ece5c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1289//#testresult/b4c03a8ab5ece5c5","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703380981610,"stop":1703380982671,"duration":1061}},{"uid":"7fb28e17d886dd98","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1287//#testresult/7fb28e17d886dd98","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703294107550,"stop":1703294109177,"duration":1627}},{"uid":"326d0fd8e350bf9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1282//#testresult/326d0fd8e350bf9b","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703207836742,"stop":1703207837962,"duration":1220}},{"uid":"f5f3188d05bdf1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1281//#testresult/f5f3188d05bdf1","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703121475670,"stop":1703121476429,"duration":759}},{"uid":"a512fe295c6349f7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1280//#testresult/a512fe295c6349f7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703034295018,"stop":1703034295856,"duration":838}},{"uid":"aa16bc61d6950a64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1279//#testresult/aa16bc61d6950a64","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703024936778,"stop":1703024937510,"duration":732}},{"uid":"8a14af331cf02661","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1278//#testresult/8a14af331cf02661","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1703024905411,"stop":1703024906158,"duration":747}},{"uid":"aa5ad127a2db2271","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1276//#testresult/aa5ad127a2db2271","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1702948723430,"stop":1702948724559,"duration":1129}}]},"tags":[]},"source":"b2b10354459a4dfb.json","parameterValues":["MidSussexDistrictCouncil","None","None"]}