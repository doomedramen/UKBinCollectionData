{"uid":"a5395d3415e3f969","name":"Validate Council Output [LiverpoolCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"fa4aaa0dd252fd9a79edc6c4503ba92d","time":{"start":1705969726148,"stop":1705969727291,"duration":1143},"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fcf1f4a4ae0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LiverpoolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fcf1eaecc50>, 'council': 'LiverpoolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/LiverpoolCityCouncil.py:38: in parse_data\n    bin_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%A, %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"fixturefunc = <function scrape_step at 0x7fcf1f4a4ae0>\nrequest = <FixtureRequest for <Function test_scenario_outline[LiverpoolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fcf1eaecc50>, 'council': 'LiverpoolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/LiverpoolCityCouncil.py:38: in parse_data\n    bin_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%A, %d %B'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: LiverpoolCityCouncil","time":{"start":1705969726149,"stop":1705969726149,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"When we scrape the data from LiverpoolCityCouncil using None and the None is set","time":{"start":1705969726149,"stop":1705969727291,"duration":1142},"status":"failed","statusMessage":"time data 'Tomorrow' does not match format '%A, %d %B'","statusTrace":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":2},"afterStages":[],"labels":[{"name":"host","value":"fv-az975-244"},{"name":"thread","value":"2729-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LiverpoolCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":112,"broken":0,"skipped":0,"passed":52,"unknown":0,"total":164},"items":[{"uid":"101734781855dc01","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1520//#testresult/101734781855dc01","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='liverpool.gov.uk', port=443): Max retries exceeded with url: /Bins/BinDatesTable?UPRN=38164600&User-Agent=Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F108.0.0.0+Safari%2F537.36 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7ff7ef964690>, 'Connection to liverpool.gov.uk timed out. (connect timeout=None)'))","time":{"start":1705883384914,"stop":1705883515013,"duration":130099}},{"uid":"db5b420a49b44728","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1519//#testresult/db5b420a49b44728","status":"passed","time":{"start":1705797050949,"stop":1705797052233,"duration":1284}},{"uid":"a6f0ee3073581d49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1515//#testresult/a6f0ee3073581d49","status":"passed","time":{"start":1705710459428,"stop":1705710461101,"duration":1673}},{"uid":"1c52a8ee75f3bc89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1511//#testresult/1c52a8ee75f3bc89","status":"passed","time":{"start":1705624106914,"stop":1705624108273,"duration":1359}},{"uid":"7d0bb31907cb9d40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/7d0bb31907cb9d40","status":"passed","time":{"start":1705537675908,"stop":1705537677147,"duration":1239}},{"uid":"d690b4cadae9df99","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/d690b4cadae9df99","status":"passed","time":{"start":1705451287295,"stop":1705451288422,"duration":1127}},{"uid":"45fa68b1756cef13","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1499//#testresult/45fa68b1756cef13","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='liverpool.gov.uk', port=443): Max retries exceeded with url: /Bins/BinDatesTable?UPRN=38164600&User-Agent=Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F108.0.0.0+Safari%2F537.36 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f1cd31d16d0>, 'Connection to liverpool.gov.uk timed out. (connect timeout=None)'))","time":{"start":1705364953033,"stop":1705365083085,"duration":130052}},{"uid":"ac0f2b9d112f9490","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1492//#testresult/ac0f2b9d112f9490","status":"passed","time":{"start":1705295635527,"stop":1705295636950,"duration":1423}},{"uid":"4d55a3715c3db83f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1491//#testresult/4d55a3715c3db83f","status":"passed","time":{"start":1705295145795,"stop":1705295146996,"duration":1201}},{"uid":"fc4e1352af363946","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1490//#testresult/fc4e1352af363946","status":"passed","time":{"start":1705278553594,"stop":1705278554930,"duration":1336}},{"uid":"e148ba91e95e9480","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1485//#testresult/e148ba91e95e9480","status":"passed","time":{"start":1705192215984,"stop":1705192217202,"duration":1218}},{"uid":"7ffe5690e0e2780f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1484//#testresult/7ffe5690e0e2780f","status":"passed","time":{"start":1705105663169,"stop":1705105664169,"duration":1000}},{"uid":"ea3e7f3aae09fc47","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1482//#testresult/ea3e7f3aae09fc47","status":"passed","time":{"start":1705019261901,"stop":1705019263637,"duration":1736}},{"uid":"bd7b855bba01d4a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1478//#testresult/bd7b855bba01d4a6","status":"passed","time":{"start":1704932840469,"stop":1704932841393,"duration":924}},{"uid":"8763d9fdb1e01b5f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1472//#testresult/8763d9fdb1e01b5f","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%A, %d %B'","time":{"start":1704846444872,"stop":1704846446295,"duration":1423}},{"uid":"8b0a83e42ede2372","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1456//#testresult/8b0a83e42ede2372","status":"passed","time":{"start":1704760192172,"stop":1704760194252,"duration":2080}},{"uid":"5d637d4e0a7d7d4e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1452//#testresult/5d637d4e0a7d7d4e","status":"passed","time":{"start":1704711526520,"stop":1704711527739,"duration":1219}},{"uid":"73d80427b0cb552c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1450//#testresult/73d80427b0cb552c","status":"passed","time":{"start":1704710742144,"stop":1704710743317,"duration":1173}},{"uid":"f280cb25deb900db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1448//#testresult/f280cb25deb900db","status":"passed","time":{"start":1704710149266,"stop":1704710151188,"duration":1922}},{"uid":"3999633d6c28f96","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1446//#testresult/3999633d6c28f96","status":"passed","time":{"start":1704709619498,"stop":1704709620946,"duration":1448}}]},"tags":[]},"source":"a5395d3415e3f969.json","parameterValues":["LiverpoolCityCouncil","None","None"]}