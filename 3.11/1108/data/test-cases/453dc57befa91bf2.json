{"uid":"453dc57befa91bf2","name":"Validate Council Output [RushmoorCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9700dde83050a915705bb73b0a95103e","time":{"start":1699101572184,"stop":1699101572963,"duration":779},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f720de263e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f71ffa22050>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f71ffa22050>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f720de263e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[RushmoorCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f71ffa22050>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:94: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f71ffa22050>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:89: AssertionError","steps":[{"name":"Given the council: RushmoorCouncil","time":{"start":1699101572184,"stop":1699101572185,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from RushmoorCouncil","time":{"start":1699101572185,"stop":1699101572960,"duration":775},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699101572960,"stop":1699101572960,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699101572960,"stop":1699101572963,"duration":3},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az950-465"},{"name":"thread","value":"2595-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"RushmoorCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":164,"unknown":0,"total":178},"items":[{"uid":"7e13c949775dfaf8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1106//#testresult/7e13c949775dfaf8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699060595669,"stop":1699060596264,"duration":595}},{"uid":"61e8f76c342d925e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1100//#testresult/61e8f76c342d925e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699007651766,"stop":1699007652571,"duration":805}},{"uid":"ab402dd197ff50f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1095//#testresult/ab402dd197ff50f5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698988788785,"stop":1698988789433,"duration":648}},{"uid":"2cf19c0cb6eec836","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1094//#testresult/2cf19c0cb6eec836","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698974419168,"stop":1698974420065,"duration":897}},{"uid":"9814797c8bfce7ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1091//#testresult/9814797c8bfce7ed","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698887701963,"stop":1698887705545,"duration":3582}},{"uid":"3982700178024da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1090//#testresult/3982700178024da","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878528634,"stop":1698878529239,"duration":605}},{"uid":"9167bf023115a8d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1089//#testresult/9167bf023115a8d8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698878289287,"stop":1698878289914,"duration":627}},{"uid":"f60adb1716ec3b80","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1086//#testresult/f60adb1716ec3b80","status":"failed","statusDetails":"AssertionError: True","time":{"start":1698867788321,"stop":1698867789040,"duration":719}},{"uid":"b633f2ab98532d40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1081//#testresult/b633f2ab98532d40","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698801580299,"stop":1698801580999,"duration":700}},{"uid":"7d212922300f4d4e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1079//#testresult/7d212922300f4d4e","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1698788715916,"stop":1698788717195,"duration":1279}},{"uid":"939d28c5b6414d3a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1077//#testresult/939d28c5b6414d3a","status":"passed","time":{"start":1698715204704,"stop":1698715205665,"duration":961}},{"uid":"11235508404d4bc3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1075//#testresult/11235508404d4bc3","status":"passed","time":{"start":1698701541996,"stop":1698701542769,"duration":773}},{"uid":"d008835af5c77156","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1073//#testresult/d008835af5c77156","status":"passed","time":{"start":1698700434440,"stop":1698700435339,"duration":899}},{"uid":"e0ecf03dfd8b17f6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1070//#testresult/e0ecf03dfd8b17f6","status":"passed","time":{"start":1698693198231,"stop":1698693199164,"duration":933}},{"uid":"c3d5442755021a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1069//#testresult/c3d5442755021a3","status":"passed","time":{"start":1698692953692,"stop":1698692954680,"duration":988}},{"uid":"b8dc449acd552444","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1066//#testresult/b8dc449acd552444","status":"passed","time":{"start":1698646552972,"stop":1698646553953,"duration":981}},{"uid":"e825064267c81819","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1067//#testresult/e825064267c81819","status":"passed","time":{"start":1698646522711,"stop":1698646523558,"duration":847}},{"uid":"129874c1766ed417","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1064//#testresult/129874c1766ed417","status":"passed","time":{"start":1698628912968,"stop":1698628913747,"duration":779}},{"uid":"67ed2b547cddb6d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1062//#testresult/67ed2b547cddb6d9","status":"passed","time":{"start":1698615354397,"stop":1698615355178,"duration":781}},{"uid":"16208ba8ff1b5035","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1063//#testresult/16208ba8ff1b5035","status":"passed","time":{"start":1698615592082,"stop":1698615592862,"duration":780}}]},"tags":[]},"source":"453dc57befa91bf2.json","parameterValues":["RushmoorCouncil"]}