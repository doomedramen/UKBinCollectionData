{"uid":"44657b81bf805ac1","name":"Validate Council Output [SouthOxfordshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7f57931d644fea4dd7a0419f9995c47e","time":{"start":1704158445383,"stop":1704158548751,"duration":103368},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f77ea067740>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77e9db5110>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f77e9db5110>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f77ea067740>\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f77e9db5110>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f77e9db5110>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: SouthOxfordshireCouncil","time":{"start":1704158445383,"stop":1704158445383,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from SouthOxfordshireCouncil using None and the None is set","time":{"start":1704158445383,"stop":1704158548749,"duration":103366},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Then the result is valid json","time":{"start":1704158548749,"stop":1704158548749,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"And the output should validate against the schema","time":{"start":1704158548749,"stop":1704158548751,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az777-743"},{"name":"thread","value":"2679-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthOxfordshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":34,"broken":0,"skipped":0,"passed":86,"unknown":0,"total":120},"items":[{"uid":"8c8e318c4d7e800d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1345//#testresult/8c8e318c4d7e800d","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704114758989,"stop":1704114762472,"duration":3483}},{"uid":"38e9b2693c551b81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1343//#testresult/38e9b2693c551b81","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704113907556,"stop":1704113912333,"duration":4777}},{"uid":"56622caa43ebc08b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1342//#testresult/56622caa43ebc08b","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704113788616,"stop":1704113791858,"duration":3242}},{"uid":"2dadc4bda4e8b283","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1341//#testresult/2dadc4bda4e8b283","status":"failed","statusDetails":"AssertionError: True","time":{"start":1704112387252,"stop":1704112389469,"duration":2217}},{"uid":"777e273928d9a80b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1339//#testresult/777e273928d9a80b","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704112283637,"stop":1704112288646,"duration":5009}},{"uid":"ffb35346a5c7849f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1336//#testresult/ffb35346a5c7849f","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704112053550,"stop":1704112058974,"duration":5424}},{"uid":"867e270696a1bec5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1337//#testresult/867e270696a1bec5","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704112021519,"stop":1704112026163,"duration":4644}},{"uid":"d3d51853f51bec71","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1335//#testresult/d3d51853f51bec71","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704111644048,"stop":1704111648121,"duration":4073}},{"uid":"6d1d27170a40d917","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1332//#testresult/6d1d27170a40d917","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704111499910,"stop":1704111505006,"duration":5096}},{"uid":"f6a57f877f2bf599","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1330//#testresult/f6a57f877f2bf599","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704100087531,"stop":1704100091610,"duration":4079}},{"uid":"bbabeec7ee6b7eb2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1329//#testresult/bbabeec7ee6b7eb2","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2024' does not match format '%A %d %B %Y'","time":{"start":1704072488979,"stop":1704072493381,"duration":4402}},{"uid":"84e5ad6ee3499cc4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1327//#testresult/84e5ad6ee3499cc4","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1704050633098,"stop":1704050637911,"duration":4813}},{"uid":"583ec55e97cd53fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1325//#testresult/583ec55e97cd53fd","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1704044067157,"stop":1704044070925,"duration":3768}},{"uid":"a4a5e513d7483afc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1320//#testresult/a4a5e513d7483afc","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703985971995,"stop":1703985976273,"duration":4278}},{"uid":"93b563ca83c48494","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1316//#testresult/93b563ca83c48494","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekTuesday 2 January 2023' does not match format '%A %d %B %Y'","time":{"start":1703899113157,"stop":1703899117319,"duration":4162}},{"uid":"2a89f856669ce8c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1314//#testresult/2a89f856669ce8c2","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703853606479,"stop":1703853710322,"duration":103843}},{"uid":"62c98c99b0f83a9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1311//#testresult/62c98c99b0f83a9b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703851217766,"stop":1703851321113,"duration":103347}},{"uid":"9089faccff32ea08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1309//#testresult/9089faccff32ea08","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703812163617,"stop":1703812266762,"duration":103145}},{"uid":"196224aae278bac8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1306//#testresult/196224aae278bac8","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703756328737,"stop":1703756432422,"duration":103685}},{"uid":"4940cb7be5bfcb9b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1305//#testresult/4940cb7be5bfcb9b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1703726291111,"stop":1703726394449,"duration":103338}}]},"tags":[]},"source":"44657b81bf805ac1.json","parameterValues":["SouthOxfordshireCouncil","None","None"]}