{"uid":"f711af677ed914a7","name":"Validate Council Output [KingstonUponThamesCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c71a5e41515c8e4d6c2924d94d56bebb","time":{"start":1700646353882,"stop":1700646354484,"duration":602},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fedaa63c400>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fed96b88050>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fed96b88050>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fedaa63c400>\nrequest = <FixtureRequest for <Function test_scenario_outline[KingstonUponThamesCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fed96b88050>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fed96b88050>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: KingstonUponThamesCouncil","time":{"start":1700646353883,"stop":1700646353883,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from KingstonUponThamesCouncil using None and the None is set","time":{"start":1700646353883,"stop":1700646354482,"duration":599},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1700646354482,"stop":1700646354482,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1700646354482,"stop":1700646354484,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1210-115"},{"name":"thread","value":"2706-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"KingstonUponThamesCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":20,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":24},"items":[{"uid":"37c45580b4697812","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1144//#testresult/37c45580b4697812","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646399694,"stop":1700646400504,"duration":810}},{"uid":"7a3aa11b9f278c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1141//#testresult/7a3aa11b9f278c9","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700616044917,"stop":1700616046028,"duration":1111}},{"uid":"10b457185053a44b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1136//#testresult/10b457185053a44b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700529670326,"stop":1700529671218,"duration":892}},{"uid":"4a97bf026784913e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1135//#testresult/4a97bf026784913e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443173017,"stop":1700443173771,"duration":754}},{"uid":"de134e7cef96e508","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1134//#testresult/de134e7cef96e508","status":"passed","time":{"start":1700357181079,"stop":1700357182781,"duration":1702}},{"uid":"c455a6a3508658da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1133//#testresult/c455a6a3508658da","status":"passed","time":{"start":1700270268662,"stop":1700270270238,"duration":1576}},{"uid":"d3120211eb5d42e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1132//#testresult/d3120211eb5d42e9","status":"passed","time":{"start":1700183892219,"stop":1700183893885,"duration":1666}},{"uid":"8396803695971149","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1131//#testresult/8396803695971149","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097555528,"stop":1700097556329,"duration":801}},{"uid":"68c859fbd04ca1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1129//#testresult/68c859fbd04ca1c","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700011055554,"stop":1700011072900,"duration":17346}},{"uid":"8ca58b09b5c89dcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1128//#testresult/8ca58b09b5c89dcd","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699924647932,"stop":1699924648884,"duration":952}},{"uid":"4739f94c6bf614a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1127//#testresult/4739f94c6bf614a0","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699838287324,"stop":1699838288274,"duration":950}},{"uid":"22ca71a85ddaea4e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1126//#testresult/22ca71a85ddaea4e","status":"passed","time":{"start":1699752063294,"stop":1699752065252,"duration":1958}},{"uid":"9dbf85a3f260fc94","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/9dbf85a3f260fc94","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699669017609,"stop":1699669023120,"duration":5511}},{"uid":"d073ccaf83077c9a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/d073ccaf83077c9a","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699578932180,"stop":1699578932762,"duration":582}},{"uid":"c201ccc9f737c60f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/c201ccc9f737c60f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699492616899,"stop":1699492617944,"duration":1045}},{"uid":"54d7ff96617e505e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/54d7ff96617e505e","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 8 November\\n              \\n              (In progress) 2023' does not match format '%A, %d %B %Y'","time":{"start":1699481359474,"stop":1699481361298,"duration":1824}},{"uid":"bb74e4b7b1058314","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/bb74e4b7b1058314","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699481366663,"stop":1699481367225,"duration":562}},{"uid":"19f12253775ba152","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/19f12253775ba152","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 8 November\\n              \\n              (In progress) 2023' does not match format '%A, %d %B %Y'","time":{"start":1699445085059,"stop":1699445086614,"duration":1555}},{"uid":"ce570133787e5fef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1115//#testresult/ce570133787e5fef","status":"failed","statusDetails":"ValueError: time data 'Wednesday, 8 November\\n              \\n              (In progress) 2023' does not match format '%A, %d %B %Y'","time":{"start":1699406156243,"stop":1699406157981,"duration":1738}},{"uid":"9732a18c1753a1d7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1114//#testresult/9732a18c1753a1d7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699319839444,"stop":1699319839986,"duration":542}}]},"tags":[]},"source":"f711af677ed914a7.json","parameterValues":["KingstonUponThamesCouncil","None","None"]}