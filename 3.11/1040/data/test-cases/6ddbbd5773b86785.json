{"uid":"6ddbbd5773b86785","name":"Validate Council Output [NeathPortTalbotCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"6a7795e00df27bb2a2723cbd96dd78a1","time":{"start":1697937753320,"stop":1697937758772,"duration":5452},"status":"failed","statusMessage":"ValueError: time data 'Monday, 23\\xa0October (Tomorrow) 2023' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f57525ad260>\nrequest = <FixtureRequest for <Function test_scenario_outline[NeathPortTalbotCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5744c8c190>, 'council': 'NeathPortTalbotCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NeathPortTalbotCouncil.py:97: in parse_data\n    bin_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Monday, 23\\xa0October (Tomorrow) 2023', format = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Monday, 23\\xa0October (Tomorrow) 2023' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Monday, 23\\xa0October (Tomorrow) 2023' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f57525ad260>\nrequest = <FixtureRequest for <Function test_scenario_outline[NeathPortTalbotCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5744c8c190>, 'council': 'NeathPortTalbotCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NeathPortTalbotCouncil.py:97: in parse_data\n    bin_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Monday, 23\\xa0October (Tomorrow) 2023', format = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Monday, 23\\xa0October (Tomorrow) 2023' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: NeathPortTalbotCouncil","time":{"start":1697937753320,"stop":1697937753320,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from NeathPortTalbotCouncil","time":{"start":1697937753320,"stop":1697937758772,"duration":5452},"status":"failed","statusMessage":"time data 'Monday, 23\\xa0October (Tomorrow) 2023' does not match format '%A, %d %B %Y'","statusTrace":"ValueError: time data 'Monday, 23\\xa0October (Tomorrow) 2023' does not match format '%A, %d %B %Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az173-634"},{"name":"thread","value":"2201-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NeathPortTalbotCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":10},"items":[{"uid":"9ffda93ef67135a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1039//#testresult/9ffda93ef67135a2","status":"passed","time":{"start":1697850910621,"stop":1697850916519,"duration":5898}},{"uid":"976ed04f776cccb9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1037//#testresult/976ed04f776cccb9","status":"passed","time":{"start":1697790402434,"stop":1697790409470,"duration":7036}},{"uid":"97252c68ac6d5521","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1034//#testresult/97252c68ac6d5521","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (589, 636)\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x55aefc076fb3 <unknown>\n#1 0x55aefbd4a4a7 <unknown>\n#2 0x55aefbd97ecd <unknown>\n#3 0x55aefbd9626d <unknown>\n#4 0x55aefbd94028 <unknown>\n#5 0x55aefbd93097 <unknown>\n#6 0x55aefbd87d59 <unknown>\n#7 0x55aefbdb3942 <unknown>\n#8 0x55aefbd87776 <unknown>\n#9 0x55aefbdb3b0e <unknown>\n#10 0x55aefbdccc02 <unknown>\n#11 0x55aefbdb3713 <unknown>\n#12 0x55aefbd8618b <unknown>\n#13 0x55aefbd86f7e <unknown>\n#14 0x55aefc03c8d8 <unknown>\n#15 0x55aefc040800 <unknown>\n#16 0x55aefc04acfc <unknown>\n#17 0x55aefc041418 <unknown>\n#18 0x55aefc00e42f <unknown>\n#19 0x55aefc0654e8 <unknown>\n#20 0x55aefc0656b4 <unknown>\n#21 0x55aefc076143 <unknown>\n#22 0x7f94a3694ac3 <unknown>","time":{"start":1697764482366,"stop":1697764487243,"duration":4877}},{"uid":"55b6252728ef252e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1033//#testresult/55b6252728ef252e","status":"passed","time":{"start":1697706639382,"stop":1697706645281,"duration":5899}},{"uid":"200b8f98297ac44f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1032//#testresult/200b8f98297ac44f","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (589, 642)\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x55aed4331fb3 <unknown>\n#1 0x55aed40054a7 <unknown>\n#2 0x55aed4052ecd <unknown>\n#3 0x55aed405126d <unknown>\n#4 0x55aed404f028 <unknown>\n#5 0x55aed404e097 <unknown>\n#6 0x55aed4042d59 <unknown>\n#7 0x55aed406e942 <unknown>\n#8 0x55aed4042776 <unknown>\n#9 0x55aed406eb0e <unknown>\n#10 0x55aed4087c02 <unknown>\n#11 0x55aed406e713 <unknown>\n#12 0x55aed404118b <unknown>\n#13 0x55aed4041f7e <unknown>\n#14 0x55aed42f78d8 <unknown>\n#15 0x55aed42fb800 <unknown>\n#16 0x55aed4305cfc <unknown>\n#17 0x55aed42fc418 <unknown>\n#18 0x55aed42c942f <unknown>\n#19 0x55aed43204e8 <unknown>\n#20 0x55aed43206b4 <unknown>\n#21 0x55aed4331143 <unknown>\n#22 0x7fb8af694ac3 <unknown>","time":{"start":1697706588351,"stop":1697706592108,"duration":3757}},{"uid":"6ac1c0ec4334bc10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1030//#testresult/6ac1c0ec4334bc10","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","time":{"start":1697702045485,"stop":1697702045486,"duration":1}},{"uid":"4e6a0decee5f3236","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/4e6a0decee5f3236","status":"passed","time":{"start":1697696153727,"stop":1697696160233,"duration":6506}},{"uid":"ef49d3e7a081af72","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/ef49d3e7a081af72","status":"failed","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: Cannot locate option with value: 10023947752; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception","time":{"start":1697678095043,"stop":1697678100769,"duration":5726}},{"uid":"7a459c330dc39ae5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/7a459c330dc39ae5","status":"passed","time":{"start":1697666563514,"stop":1697666568482,"duration":4968}}]},"tags":[]},"source":"6ddbbd5773b86785.json","parameterValues":["NeathPortTalbotCouncil"]}