{"uid":"c7ea90a270cf8ea6","name":"Validate Council Output [SwaleBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"af246d65f1eea891cf11ee497308965a","time":{"start":1697937810768,"stop":1697937842577,"duration":31809},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f57525ad260>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5744a84050>, 'council': 'SwaleBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f57442c2b10>, page = ''\nkwargs = {'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', 'url': 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:42: AttributeError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7f57525ad260>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwaleBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f5744a84050>, 'council': 'SwaleBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SwaleBoroughCouncil.CouncilClass object at 0x7f57442c2b10>, page = ''\nkwargs = {'paon': None, 'postcode': 'ME12 2NQ', 'uprn': '100061081168', 'url': 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days', ...}\nuser_postcode = 'ME12 2NQ', user_uprn = '100061081168'\ncouncil_url = 'https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit='\nresponse = <Response [200]>\nsoup = <!--// Edit plus -->\n<!--// Edit plus end -->\n<!DOCTYPE html>\n\n<html lang=\"en-gb\" xmlns=\"http://www.w3.org/1999/xhtml\"...    //--> End cookies\n               \n            });\n        </script>\n<!--// EU Cookie banner end -->\n</body>\n</html>\ndata = {'bins': []}, form_area = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Get postcode and UPRN from kwargs\n        user_postcode = kwargs.get(\"postcode\")\n        user_uprn = kwargs.get(\"uprn\")\n        check_postcode(user_postcode)\n        check_uprn(user_uprn)\n    \n        # Build URL to parse\n        council_url = f\"https://swale.gov.uk/bins-littering-and-the-environment/bins/collection-days?postcode={user_postcode.replace(' ', '+')}&addresses={user_uprn}&address-submit=\"\n    \n        # Parse URL and read if connection successful\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(council_url, verify=False)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.text, features=\"html.parser\")\n            soup.prettify()\n        else:\n            raise ConnectionAbortedError(\"Could not parse council website.\")\n    \n        data = {\"bins\": []}\n    \n        # Get the collection bullet points on the page and parse them\n        form_area = soup.find(\"form\", {\"class\": \"integration bin-lookup\"})\n        collections = [\n>           item.text.strip().split(\",\") for item in form_area.find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/SwaleBoroughCouncil.py:42: AttributeError","steps":[{"name":"Given the council: SwaleBoroughCouncil","time":{"start":1697937810768,"stop":1697937810769,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from SwaleBoroughCouncil","time":{"start":1697937810769,"stop":1697937842577,"duration":31808},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az173-634"},{"name":"thread","value":"2201-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwaleBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":139,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":146},"items":[{"uid":"17cd7fd4a3d91404","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1039//#testresult/17cd7fd4a3d91404","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1697850995948,"stop":1697851028145,"duration":32197}},{"uid":"e436e12c0838f6b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1037//#testresult/e436e12c0838f6b8","status":"passed","time":{"start":1697790487127,"stop":1697790489286,"duration":2159}},{"uid":"8014c1be64fddcb2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1034//#testresult/8014c1be64fddcb2","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1697764591133,"stop":1697764623255,"duration":32122}},{"uid":"2fb2de804277921e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1033//#testresult/2fb2de804277921e","status":"passed","time":{"start":1697706719051,"stop":1697706720893,"duration":1842}},{"uid":"f714ba475842ecc7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1032//#testresult/f714ba475842ecc7","status":"passed","time":{"start":1697706655892,"stop":1697706656883,"duration":991}},{"uid":"5557cce48ba4aade","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1030//#testresult/5557cce48ba4aade","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting ',' delimiter: line 181 column 5 (char 9185)","time":{"start":1697702046145,"stop":1697702046146,"duration":1}},{"uid":"671e1eae15748c58","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1027//#testresult/671e1eae15748c58","status":"passed","time":{"start":1697696379052,"stop":1697696391665,"duration":12613}},{"uid":"7aaed65a4149d4b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1025//#testresult/7aaed65a4149d4b3","status":"passed","time":{"start":1697678362178,"stop":1697678364271,"duration":2093}},{"uid":"4aa15dd91e2fcde","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1023//#testresult/4aa15dd91e2fcde","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697666754384,"stop":1697666755464,"duration":1080}},{"uid":"33c69f78e3555dfe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1020//#testresult/33c69f78e3555dfe","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697657048332,"stop":1697657049675,"duration":1343}},{"uid":"18555ec08c00b3a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1016//#testresult/18555ec08c00b3a3","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697650225431,"stop":1697650228588,"duration":3157}},{"uid":"e729e284ba933290","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1014//#testresult/e729e284ba933290","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697618481304,"stop":1697618482754,"duration":1450}},{"uid":"4ed4aa1eff8868df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1010//#testresult/4ed4aa1eff8868df","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697591944750,"stop":1697591954052,"duration":9302}},{"uid":"8d759db771494f7f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1009//#testresult/8d759db771494f7f","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697542763695,"stop":1697542766571,"duration":2876}},{"uid":"40b204701ca1aa92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1008//#testresult/40b204701ca1aa92","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1697505583108,"stop":1697505588251,"duration":5143}},{"uid":"5ab5eaab91698ab3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1006//#testresult/5ab5eaab91698ab3","status":"passed","time":{"start":1697484866366,"stop":1697484867743,"duration":1377}},{"uid":"c3327250657043e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1005//#testresult/c3327250657043e0","status":"passed","time":{"start":1697484772090,"stop":1697484801047,"duration":28957}},{"uid":"4ac945f6fccc449","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1004//#testresult/4ac945f6fccc449","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697419203192,"stop":1697419204050,"duration":858}},{"uid":"f9049b6d6a28dcb6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1001//#testresult/f9049b6d6a28dcb6","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697403337959,"stop":1697403338598,"duration":639}},{"uid":"a29a01fc64c88d26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/998//#testresult/a29a01fc64c88d26","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='swale.gov.uk', port=443): Max retries exceeded with url: /bins-littering-and-the-environment/bins/collection-days?postcode=ME12+2NQ&addresses=100061081168&address-submit= (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1006)')))","time":{"start":1697399953499,"stop":1697399954571,"duration":1072}}]},"tags":[]},"source":"c7ea90a270cf8ea6.json","parameterValues":["SwaleBoroughCouncil"]}