{"uid":"4ca680ffe2971e56","name":"Validate Council Output [ValeofGlamorganCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"9cf2d3433b0a6f80c8b05ae26d0f9f5e","time":{"start":1711845164907,"stop":1711845166137,"duration":1230},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fe2f8b54400>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe2f80be090>, 'council': 'ValeofGlamorganCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fe30c75fd90>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fe2f8b54400>\nrequest = <FixtureRequest for <Function test_scenario_outline[ValeofGlamorganCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fe2f80be090>, 'council': 'ValeofGlamorganCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ValeofGlamorganCouncil.py:52: in parse_data\n    json.loads(response)[\"Results\"][\"Refuse_HIDE2\"][\"Your_Refuse_round_is\"]\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fe30c75fd90>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: ValeofGlamorganCouncil","time":{"start":1711845164907,"stop":1711845164907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from ValeofGlamorganCouncil using None and the None is set","time":{"start":1711845164907,"stop":1711845166136,"duration":1229},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az887-81"},{"name":"thread","value":"2804-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ValeofGlamorganCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":219,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":232},"items":[{"uid":"9c48d50e610165d9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1649//#testresult/9c48d50e610165d9","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1711672184330,"stop":1711672185605,"duration":1275}},{"uid":"3bdad4e303e1f693","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1648//#testresult/3bdad4e303e1f693","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1711585844111,"stop":1711585845371,"duration":1260}},{"uid":"56544fb2bc6b68df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1646//#testresult/56544fb2bc6b68df","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1711499371119,"stop":1711499372467,"duration":1348}},{"uid":"69ee2adb0dec5a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1645//#testresult/69ee2adb0dec5a8","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1711412906578,"stop":1711412907578,"duration":1000}},{"uid":"c78e6ec1513b23ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1641//#testresult/c78e6ec1513b23ef","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1711326639792,"stop":1711326640675,"duration":883}},{"uid":"a9d80ccb52cedc4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1634//#testresult/a9d80ccb52cedc4b","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1711240353001,"stop":1711240354206,"duration":1205}},{"uid":"b82a1bb8a938d79e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1626//#testresult/b82a1bb8a938d79e","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7ffb798e5990>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1711153711676,"stop":1711153845357,"duration":133681}},{"uid":"6f8b12dc3dc0353d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1625//#testresult/6f8b12dc3dc0353d","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fd207d2e790>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1711067319803,"stop":1711067455109,"duration":135306}},{"uid":"50467c162b68ed9f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1624//#testresult/50467c162b68ed9f","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710981024029,"stop":1710981025131,"duration":1102}},{"uid":"23bc3d0a536065af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1621//#testresult/23bc3d0a536065af","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710971058659,"stop":1710971059562,"duration":903}},{"uid":"45dc42f63b95d9ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1619//#testresult/45dc42f63b95d9ac","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710894502054,"stop":1710894503216,"duration":1162}},{"uid":"3e45275b14bcb7ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1615//#testresult/3e45275b14bcb7ad","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710808149184,"stop":1710808150577,"duration":1393}},{"uid":"b84ccf56ed009a1b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1609//#testresult/b84ccf56ed009a1b","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='myvale.valeofglamorgan.gov.uk', port=443): Max retries exceeded with url: /getdata.aspx?RequestType=LocalInfo&ms=ValeOfGlamorgan%2FAllMaps&group=Community+and+Living%7CRefuse+HIDE2&type=json&callback=AddressInfoCallback&uid=64029020&import=jQuery35108514154283927682_1673022974838&_=1673022974840 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7ae43dc3a690>, 'Connection to myvale.valeofglamorgan.gov.uk timed out. (connect timeout=None)'))","time":{"start":1710721846543,"stop":1710721980604,"duration":134061}},{"uid":"c00922b14a734cf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1608//#testresult/c00922b14a734cf6","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710635512279,"stop":1710635513342,"duration":1063}},{"uid":"783ac049c3167f80","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1607//#testresult/783ac049c3167f80","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710548864597,"stop":1710548866404,"duration":1807}},{"uid":"da733789e649ff00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1605//#testresult/da733789e649ff00","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710462547428,"stop":1710462548655,"duration":1227}},{"uid":"73c7ab1a98479b7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1604//#testresult/73c7ab1a98479b7e","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710452970311,"stop":1710452971711,"duration":1400}},{"uid":"47c4f40feb32edbe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1602//#testresult/47c4f40feb32edbe","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710376122706,"stop":1710376125253,"duration":2547}},{"uid":"34b9bf2abebda6c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1601//#testresult/34b9bf2abebda6c3","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710289687781,"stop":1710289689116,"duration":1335}},{"uid":"12731f6adc4c7c00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1600//#testresult/12731f6adc4c7c00","status":"failed","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1710203331676,"stop":1710203333051,"duration":1375}}]},"tags":[]},"source":"4ca680ffe2971e56.json","parameterValues":["ValeofGlamorganCouncil","None","None"]}