{"uid":"c0a848cf382cd5cf","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1704180222224,"stop":1704180528012,"duration":305788},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55a14c093f83 <unknown>\n#1 0x55a14bd4ccf7 <unknown>\n#2 0x55a14bd327a1 <unknown>\n#3 0x55a14bd3244a <unknown>\n#4 0x55a14bd307e1 <unknown>\n#5 0x55a14bd3118a <unknown>\n#6 0x55a14bd4207c <unknown>\n#7 0x55a14bd5a7c1 <unknown>\n#8 0x55a14bd606bb <unknown>\n#9 0x55a14bd3192d <unknown>\n#10 0x55a14bd5a5c2 <unknown>\n#11 0x55a14bde5204 <unknown>\n#12 0x55a14bdc5e53 <unknown>\n#13 0x55a14bd8ddd4 <unknown>\n#14 0x55a14bd8f1de <unknown>\n#15 0x55a14c058531 <unknown>\n#16 0x55a14c05c455 <unknown>\n#17 0x55a14c044f55 <unknown>\n#18 0x55a14c05d0ef <unknown>\n#19 0x55a14c02899f <unknown>\n#20 0x55a14c081008 <unknown>\n#21 0x55a14c0811d7 <unknown>\n#22 0x55a14c093124 <unknown>\n#23 0x7f4db1894ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7faa79e5fe20>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faa79d543d0>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:58: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7faa79457150>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55a14c0811d7 \\\\u003Cunknown>\\\\n#22 0x55a14c093124 \\\\u003Cunknown>\\\\n#23 0x7f4db1894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55a14c093f83 <unknown>\nE       #1 0x55a14bd4ccf7 <unknown>\nE       #2 0x55a14bd327a1 <unknown>\nE       #3 0x55a14bd3244a <unknown>\nE       #4 0x55a14bd307e1 <unknown>\nE       #5 0x55a14bd3118a <unknown>\nE       #6 0x55a14bd4207c <unknown>\nE       #7 0x55a14bd5a7c1 <unknown>\nE       #8 0x55a14bd606bb <unknown>\nE       #9 0x55a14bd3192d <unknown>\nE       #10 0x55a14bd5a5c2 <unknown>\nE       #11 0x55a14bde5204 <unknown>\nE       #12 0x55a14bdc5e53 <unknown>\nE       #13 0x55a14bd8ddd4 <unknown>\nE       #14 0x55a14bd8f1de <unknown>\nE       #15 0x55a14c058531 <unknown>\nE       #16 0x55a14c05c455 <unknown>\nE       #17 0x55a14c044f55 <unknown>\nE       #18 0x55a14c05d0ef <unknown>\nE       #19 0x55a14c02899f <unknown>\nE       #20 0x55a14c081008 <unknown>\nE       #21 0x55a14c0811d7 <unknown>\nE       #22 0x55a14c093124 <unknown>\nE       #23 0x7f4db1894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55a14c093f83 <unknown>\n#1 0x55a14bd4ccf7 <unknown>\n#2 0x55a14bd327a1 <unknown>\n#3 0x55a14bd3244a <unknown>\n#4 0x55a14bd307e1 <unknown>\n#5 0x55a14bd3118a <unknown>\n#6 0x55a14bd4207c <unknown>\n#7 0x55a14bd5a7c1 <unknown>\n#8 0x55a14bd606bb <unknown>\n#9 0x55a14bd3192d <unknown>\n#10 0x55a14bd5a5c2 <unknown>\n#11 0x55a14bde5204 <unknown>\n#12 0x55a14bdc5e53 <unknown>\n#13 0x55a14bd8ddd4 <unknown>\n#14 0x55a14bd8f1de <unknown>\n#15 0x55a14c058531 <unknown>\n#16 0x55a14c05c455 <unknown>\n#17 0x55a14c044f55 <unknown>\n#18 0x55a14c05d0ef <unknown>\n#19 0x55a14c02899f <unknown>\n#20 0x55a14c081008 <unknown>\n#21 0x55a14c0811d7 <unknown>\n#22 0x55a14c093124 <unknown>\n#23 0x7f4db1894ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7faa79e5fe20>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faa79d543d0>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:58: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7faa79457150>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55a14c0811d7 \\\\u003Cunknown>\\\\n#22 0x55a14c093124 \\\\u003Cunknown>\\\\n#23 0x7f4db1894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55a14c093f83 <unknown>\nE       #1 0x55a14bd4ccf7 <unknown>\nE       #2 0x55a14bd327a1 <unknown>\nE       #3 0x55a14bd3244a <unknown>\nE       #4 0x55a14bd307e1 <unknown>\nE       #5 0x55a14bd3118a <unknown>\nE       #6 0x55a14bd4207c <unknown>\nE       #7 0x55a14bd5a7c1 <unknown>\nE       #8 0x55a14bd606bb <unknown>\nE       #9 0x55a14bd3192d <unknown>\nE       #10 0x55a14bd5a5c2 <unknown>\nE       #11 0x55a14bde5204 <unknown>\nE       #12 0x55a14bdc5e53 <unknown>\nE       #13 0x55a14bd8ddd4 <unknown>\nE       #14 0x55a14bd8f1de <unknown>\nE       #15 0x55a14c058531 <unknown>\nE       #16 0x55a14c05c455 <unknown>\nE       #17 0x55a14c044f55 <unknown>\nE       #18 0x55a14c05d0ef <unknown>\nE       #19 0x55a14c02899f <unknown>\nE       #20 0x55a14c081008 <unknown>\nE       #21 0x55a14c0811d7 <unknown>\nE       #22 0x55a14c093124 <unknown>\nE       #23 0x7f4db1894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1704180222224,"stop":1704180222224,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1704180222224,"stop":1704180528012,"duration":305788},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55a14c093f83 <unknown>\n#1 0x55a14bd4ccf7 <unknown>\n#2 0x55a14bd327a1 <unknown>\n#3 0x55a14bd3244a <unknown>\n#4 0x55a14bd307e1 <unknown>\n#5 0x55a14bd3118a <unknown>\n#6 0x55a14bd4207c <unknown>\n#7 0x55a14bd5a7c1 <unknown>\n#8 0x55a14bd606bb <unknown>\n#9 0x55a14bd3192d <unknown>\n#10 0x55a14bd5a5c2 <unknown>\n#11 0x55a14bde5204 <unknown>\n#12 0x55a14bdc5e53 <unknown>\n#13 0x55a14bd8ddd4 <unknown>\n#14 0x55a14bd8f1de <unknown>\n#15 0x55a14c058531 <unknown>\n#16 0x55a14c05c455 <unknown>\n#17 0x55a14c044f55 <unknown>\n#18 0x55a14c05d0ef <unknown>\n#19 0x55a14c02899f <unknown>\n#20 0x55a14c081008 <unknown>\n#21 0x55a14c0811d7 <unknown>\n#22 0x55a14c093124 <unknown>\n#23 0x7f4db1894ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55a14c093f83 <unknown>\n#1 0x55a14bd4ccf7 <unknown>\n#2 0x55a14bd327a1 <unknown>\n#3 0x55a14bd3244a <unknown>\n#4 0x55a14bd307e1 <unknown>\n#5 0x55a14bd3118a <unknown>\n#6 0x55a14bd4207c <unknown>\n#7 0x55a14bd5a7c1 <unknown>\n#8 0x55a14bd606bb <unknown>\n#9 0x55a14bd3192d <unknown>\n#10 0x55a14bd5a5c2 <unknown>\n#11 0x55a14bde5204 <unknown>\n#12 0x55a14bdc5e53 <unknown>\n#13 0x55a14bd8ddd4 <unknown>\n#14 0x55a14bd8f1de <unknown>\n#15 0x55a14c058531 <unknown>\n#16 0x55a14c05c455 <unknown>\n#17 0x55a14c044f55 <unknown>\n#18 0x55a14c05d0ef <unknown>\n#19 0x55a14c02899f <unknown>\n#20 0x55a14c081008 <unknown>\n#21 0x55a14c0811d7 <unknown>\n#22 0x55a14c093124 <unknown>\n#23 0x7f4db1894ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az568-328"},{"name":"thread","value":"2678-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":17,"broken":0,"skipped":0,"passed":104,"unknown":0,"total":121},"items":[{"uid":"8dbf3334e828b0cc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1346//#testresult/8dbf3334e828b0cc","status":"passed","time":{"start":1704158302140,"stop":1704158309538,"duration":7398}},{"uid":"78eafb03222292f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1345//#testresult/78eafb03222292f4","status":"passed","time":{"start":1704114615082,"stop":1704114625107,"duration":10025}},{"uid":"c276ee6b04ca0eba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1343//#testresult/c276ee6b04ca0eba","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55e242482f83 <unknown>\n#1 0x55e24213bcf7 <unknown>\n#2 0x55e2421217a1 <unknown>\n#3 0x55e24212144a <unknown>\n#4 0x55e24211f7e1 <unknown>\n#5 0x55e24212018a <unknown>\n#6 0x55e24213107c <unknown>\n#7 0x55e2421497c1 <unknown>\n#8 0x55e24214f6bb <unknown>\n#9 0x55e24212092d <unknown>\n#10 0x55e2421495c2 <unknown>\n#11 0x55e2421d4204 <unknown>\n#12 0x55e2421b4e53 <unknown>\n#13 0x55e24217cdd4 <unknown>\n#14 0x55e24217e1de <unknown>\n#15 0x55e242447531 <unknown>\n#16 0x55e24244b455 <unknown>\n#17 0x55e242433f55 <unknown>\n#18 0x55e24244c0ef <unknown>\n#19 0x55e24241799f <unknown>\n#20 0x55e242470008 <unknown>\n#21 0x55e2424701d7 <unknown>\n#22 0x55e242482124 <unknown>\n#23 0x7fd92b294ac3 <unknown>","time":{"start":1704113770661,"stop":1704114075777,"duration":305116}},{"uid":"211294de7df7e5f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1342//#testresult/211294de7df7e5f","status":"passed","time":{"start":1704113668424,"stop":1704113676039,"duration":7615}},{"uid":"435ef946e3a8e135","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1341//#testresult/435ef946e3a8e135","status":"passed","time":{"start":1704112239249,"stop":1704112248241,"duration":8992}},{"uid":"168f197c1e5b28c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1339//#testresult/168f197c1e5b28c2","status":"passed","time":{"start":1704112091911,"stop":1704112100997,"duration":9086}},{"uid":"84e561c57d8f9e15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1336//#testresult/84e561c57d8f9e15","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x561d0165cf83 <unknown>\n#1 0x561d01315cf7 <unknown>\n#2 0x561d012fb7a1 <unknown>\n#3 0x561d012fb44a <unknown>\n#4 0x561d012f97e1 <unknown>\n#5 0x561d012fa18a <unknown>\n#6 0x561d0130b07c <unknown>\n#7 0x561d013237c1 <unknown>\n#8 0x561d013296bb <unknown>\n#9 0x561d012fa92d <unknown>\n#10 0x561d013235c2 <unknown>\n#11 0x561d013ae204 <unknown>\n#12 0x561d0138ee53 <unknown>\n#13 0x561d01356dd4 <unknown>\n#14 0x561d013581de <unknown>\n#15 0x561d01621531 <unknown>\n#16 0x561d01625455 <unknown>\n#17 0x561d0160df55 <unknown>\n#18 0x561d016260ef <unknown>\n#19 0x561d015f199f <unknown>\n#20 0x561d0164a008 <unknown>\n#21 0x561d0164a1d7 <unknown>\n#22 0x561d0165c124 <unknown>\n#23 0x7f4415a94ac3 <unknown>","time":{"start":1704111909605,"stop":1704112214906,"duration":305301}},{"uid":"60ed5823c3b1ff52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1337//#testresult/60ed5823c3b1ff52","status":"passed","time":{"start":1704111911940,"stop":1704111920210,"duration":8270}},{"uid":"6d1dc29ff49f5008","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1335//#testresult/6d1dc29ff49f5008","status":"passed","time":{"start":1704111499550,"stop":1704111522406,"duration":22856}},{"uid":"da61bedbd3802196","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1332//#testresult/da61bedbd3802196","status":"passed","time":{"start":1704111338883,"stop":1704111348597,"duration":9714}},{"uid":"b17bf8ea6fb85512","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1330//#testresult/b17bf8ea6fb85512","status":"passed","time":{"start":1704099951218,"stop":1704099960780,"duration":9562}},{"uid":"a762472ada067390","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1329//#testresult/a762472ada067390","status":"passed","time":{"start":1704072299372,"stop":1704072306388,"duration":7016}},{"uid":"ba46e3391a61b90b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1327//#testresult/ba46e3391a61b90b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x56349fc5af83 <unknown>\n#1 0x56349f913cf7 <unknown>\n#2 0x56349f8f97a1 <unknown>\n#3 0x56349f8f944a <unknown>\n#4 0x56349f8f77e1 <unknown>\n#5 0x56349f8f818a <unknown>\n#6 0x56349f90907c <unknown>\n#7 0x56349f9217c1 <unknown>\n#8 0x56349f9276bb <unknown>\n#9 0x56349f8f892d <unknown>\n#10 0x56349f9215c2 <unknown>\n#11 0x56349f9ac204 <unknown>\n#12 0x56349f98ce53 <unknown>\n#13 0x56349f954dd4 <unknown>\n#14 0x56349f9561de <unknown>\n#15 0x56349fc1f531 <unknown>\n#16 0x56349fc23455 <unknown>\n#17 0x56349fc0bf55 <unknown>\n#18 0x56349fc240ef <unknown>\n#19 0x56349fbef99f <unknown>\n#20 0x56349fc48008 <unknown>\n#21 0x56349fc481d7 <unknown>\n#22 0x56349fc5a124 <unknown>\n#23 0x7fe3bc094ac3 <unknown>","time":{"start":1704050441278,"stop":1704050746349,"duration":305071}},{"uid":"f07eba669e3d71a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1325//#testresult/f07eba669e3d71a6","status":"passed","time":{"start":1704043865572,"stop":1704043872375,"duration":6803}},{"uid":"962ff08234b5cd9f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1320//#testresult/962ff08234b5cd9f","status":"passed","time":{"start":1703985739297,"stop":1703985748204,"duration":8907}},{"uid":"d25164452ced64fd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1316//#testresult/d25164452ced64fd","status":"passed","time":{"start":1703898893159,"stop":1703898907331,"duration":14172}},{"uid":"859b2b67a1087242","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1314//#testresult/859b2b67a1087242","status":"passed","time":{"start":1703853450718,"stop":1703853459793,"duration":9075}},{"uid":"e25fd7dddc4ab137","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1311//#testresult/e25fd7dddc4ab137","status":"passed","time":{"start":1703851071008,"stop":1703851078705,"duration":7697}},{"uid":"9ab2c8098019516","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1309//#testresult/9ab2c8098019516","status":"passed","time":{"start":1703812013647,"stop":1703812020729,"duration":7082}},{"uid":"8b330da1c81f3e69","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1306//#testresult/8b330da1c81f3e69","status":"passed","time":{"start":1703756141610,"stop":1703756150507,"duration":8897}}]},"tags":[]},"source":"c0a848cf382cd5cf.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}