{"uid":"700d2c08e897da47","name":"Validate Council Output [HuntingdonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"c2822894b8c5df9c3b14f6331988dcc1","time":{"start":1700529668649,"stop":1700529670303,"duration":1654},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f03c8260400>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f03b484dbd0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f03b484dbd0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f03c8260400>\nrequest = <FixtureRequest for <Function test_scenario_outline[HuntingdonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f03b484dbd0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f03b484dbd0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: HuntingdonDistrictCouncil","time":{"start":1700529668649,"stop":1700529668649,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from HuntingdonDistrictCouncil using None and the None is set","time":{"start":1700529668649,"stop":1700529670300,"duration":1651},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1700529670300,"stop":1700529670301,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1700529670301,"stop":1700529670302,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az773-728"},{"name":"thread","value":"2724-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"HuntingdonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":21},"items":[{"uid":"bb38672b764ea107","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1135//#testresult/bb38672b764ea107","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443171757,"stop":1700443172990,"duration":1233}},{"uid":"e2709243732ced52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1134//#testresult/e2709243732ced52","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700356997596,"stop":1700356999788,"duration":2192}},{"uid":"648cf968591839b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1133//#testresult/648cf968591839b1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270273384,"stop":1700270274544,"duration":1160}},{"uid":"cf7aa603fd691f76","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1132//#testresult/cf7aa603fd691f76","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700183933476,"stop":1700183934677,"duration":1201}},{"uid":"54d995ff28f54e91","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1131//#testresult/54d995ff28f54e91","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097554320,"stop":1700097555506,"duration":1186}},{"uid":"1ebf1169a1b106aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1129//#testresult/1ebf1169a1b106aa","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700011054356,"stop":1700011055474,"duration":1118}},{"uid":"9ff3b109a80474d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1128//#testresult/9ff3b109a80474d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699924646256,"stop":1699924647896,"duration":1640}},{"uid":"b2d5585583c758ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1127//#testresult/b2d5585583c758ef","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699838301436,"stop":1699838303014,"duration":1578}},{"uid":"a347c21f4ae8cb86","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1126//#testresult/a347c21f4ae8cb86","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699752082929,"stop":1699752084644,"duration":1715}},{"uid":"a5849e5528fa1624","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/a5849e5528fa1624","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699669013563,"stop":1699669017573,"duration":4010}},{"uid":"9af8811c4c934b57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/9af8811c4c934b57","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699578930869,"stop":1699578932097,"duration":1228}},{"uid":"47412a2f7b6cdb39","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/47412a2f7b6cdb39","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699492613760,"stop":1699492616876,"duration":3116}},{"uid":"610f1312c6806892","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/610f1312c6806892","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699481357709,"stop":1699481359347,"duration":1638}},{"uid":"81b9ca0138d77593","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/81b9ca0138d77593","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699481365486,"stop":1699481366569,"duration":1083}},{"uid":"8783d9cb5fa042e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/8783d9cb5fa042e7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699445083138,"stop":1699445085036,"duration":1898}},{"uid":"849611299e146824","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1115//#testresult/849611299e146824","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699406154986,"stop":1699406156213,"duration":1227}},{"uid":"176a8398e8ddd133","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1114//#testresult/176a8398e8ddd133","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699319837368,"stop":1699319839412,"duration":2044}},{"uid":"a252e705d04b5845","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1113//#testresult/a252e705d04b5845","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699233506963,"stop":1699233508389,"duration":1426}},{"uid":"f51e1059d37db0ee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1111//#testresult/f51e1059d37db0ee","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699171051109,"stop":1699171052778,"duration":1669}},{"uid":"ad0b7edfd3590a2e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1112//#testresult/ad0b7edfd3590a2e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699170748587,"stop":1699170749658,"duration":1071}}]},"tags":[]},"source":"700d2c08e897da47.json","parameterValues":["HuntingdonDistrictCouncil","None","None"]}