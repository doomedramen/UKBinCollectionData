{"uid":"8edaabcf724abeaa","name":"Validate Council Output [LondonBoroughHounslow-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2d5d41f2f80a2dfc213e6858543e98d5","time":{"start":1701279327705,"stop":1701279331180,"duration":3475},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f4afd64f060>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4ae9d262d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f4ae9d262d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f4afd64f060>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4ae9d262d0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f4ae9d262d0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: LondonBoroughHounslow","time":{"start":1701279327705,"stop":1701279327705,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from LondonBoroughHounslow using None and the None is set","time":{"start":1701279327705,"stop":1701279331178,"duration":3473},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1701279331178,"stop":1701279331178,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1701279331178,"stop":1701279331180,"duration":2},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1198-343"},{"name":"thread","value":"2725-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":34,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":34},"items":[{"uid":"1d0499679e2ce0c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1156//#testresult/1d0499679e2ce0c1","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701220757075,"stop":1701220759976,"duration":2901}},{"uid":"b6ed4949feefff2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1155//#testresult/b6ed4949feefff2f","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701134366499,"stop":1701134370286,"duration":3787}},{"uid":"a7893de3baa49e15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1152//#testresult/a7893de3baa49e15","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701047921358,"stop":1701047924687,"duration":3329}},{"uid":"ec6c47559db91dec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1151//#testresult/ec6c47559db91dec","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036170482,"stop":1701036172984,"duration":2502}},{"uid":"44a8536d124954bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1150//#testresult/44a8536d124954bb","status":"failed","statusDetails":"AssertionError: True","time":{"start":1701036137354,"stop":1701036140270,"duration":2916}},{"uid":"ff3bad86b5f2e1c5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1148//#testresult/ff3bad86b5f2e1c5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700961739728,"stop":1700961743742,"duration":4014}},{"uid":"97a4b93b3c0af61d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1147//#testresult/97a4b93b3c0af61d","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700874921496,"stop":1700874956689,"duration":35193}},{"uid":"8e88709c8b4108bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1146//#testresult/8e88709c8b4108bc","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700788683620,"stop":1700788687105,"duration":3485}},{"uid":"47b9ef51b569de54","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1145//#testresult/47b9ef51b569de54","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700702283610,"stop":1700702289323,"duration":5713}},{"uid":"8a2febcf5b8fe4ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1143//#testresult/8a2febcf5b8fe4ef","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646369105,"stop":1700646372179,"duration":3074}},{"uid":"22ca5f0c50b230dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1144//#testresult/22ca5f0c50b230dd","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700646553857,"stop":1700646556910,"duration":3053}},{"uid":"88162dd377004aa4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1141//#testresult/88162dd377004aa4","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700616064408,"stop":1700616068507,"duration":4099}},{"uid":"4c9d65887b1b6a2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1136//#testresult/4c9d65887b1b6a2b","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700529688791,"stop":1700529692863,"duration":4072}},{"uid":"180fb3171013b215","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1135//#testresult/180fb3171013b215","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700443188529,"stop":1700443191095,"duration":2566}},{"uid":"e1e11e2a4a0df6ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1134//#testresult/e1e11e2a4a0df6ed","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700356993887,"stop":1700356997388,"duration":3501}},{"uid":"695c3917128f2c90","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1133//#testresult/695c3917128f2c90","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700270394558,"stop":1700270411015,"duration":16457}},{"uid":"8551e5356ac6e170","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1132//#testresult/8551e5356ac6e170","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700184049937,"stop":1700184053544,"duration":3607}},{"uid":"9b2e901b8804bd6e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1131//#testresult/9b2e901b8804bd6e","status":"failed","statusDetails":"AssertionError: True","time":{"start":1700097570543,"stop":1700097574069,"duration":3526}},{"uid":"76cf48b4fa2f77f1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1129//#testresult/76cf48b4fa2f77f1","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all'","time":{"start":1700011072248,"stop":1700011132735,"duration":60487}},{"uid":"ee8fa59daa2c464a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1128//#testresult/ee8fa59daa2c464a","status":"failed","statusDetails":"requests.exceptions.ConnectionError: HTTPSConnectionPool(host='www.hounslow.gov.uk', port=443): Max retries exceeded with url: /homepage/86/recycling_and_waste_collection_day_finder (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x7f060971f710>: Failed to resolve 'www.hounslow.gov.uk' ([Errno -3] Temporary failure in name resolution)\"))","time":{"start":1699924877166,"stop":1699924892204,"duration":15038}}]},"tags":[]},"source":"8edaabcf724abeaa.json","parameterValues":["LondonBoroughHounslow","None","None"]}