{"uid":"2d4649d8560e4668","name":"Validate Council Output [BexleyCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e37348090e3151d6f19f6376e979240","time":{"start":1714232691496,"stop":1714232702359,"duration":10863},"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55ca0411bcb3 <unknown>\n#1 0x55ca03e0a2f7 <unknown>\n#2 0x55ca03e4f40f <unknown>\n#3 0x55ca03e4d846 <unknown>\n#4 0x55ca03e77412 <unknown>\n#5 0x55ca03e49b58 <unknown>\n#6 0x55ca03e775de <unknown>\n#7 0x55ca03e95be9 <unknown>\n#8 0x55ca03e771b3 <unknown>\n#9 0x55ca03e4824a <unknown>\n#10 0x55ca03e48c1e <unknown>\n#11 0x55ca040dffdb <unknown>\n#12 0x55ca040e3f2b <unknown>\n#13 0x55ca040cc0f1 <unknown>\n#14 0x55ca040e4a92 <unknown>\n#15 0x55ca040b0faf <unknown>\n#16 0x55ca0410ae08 <unknown>\n#17 0x55ca0410afe0 <unknown>\n#18 0x55ca0411ae04 <unknown>\n#19 0x7ff70d294ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f0a01dc8a40>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0a01c1ce10>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0a01d53110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55ca0410afe0 \\\\u003Cunknown>\\\\n#18 0x55ca0411ae04 \\\\u003Cunknown>\\\\n#19 0x7ff70d294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x55ca0411bcb3 <unknown>\nE       #1 0x55ca03e0a2f7 <unknown>\nE       #2 0x55ca03e4f40f <unknown>\nE       #3 0x55ca03e4d846 <unknown>\nE       #4 0x55ca03e77412 <unknown>\nE       #5 0x55ca03e49b58 <unknown>\nE       #6 0x55ca03e775de <unknown>\nE       #7 0x55ca03e95be9 <unknown>\nE       #8 0x55ca03e771b3 <unknown>\nE       #9 0x55ca03e4824a <unknown>\nE       #10 0x55ca03e48c1e <unknown>\nE       #11 0x55ca040dffdb <unknown>\nE       #12 0x55ca040e3f2b <unknown>\nE       #13 0x55ca040cc0f1 <unknown>\nE       #14 0x55ca040e4a92 <unknown>\nE       #15 0x55ca040b0faf <unknown>\nE       #16 0x55ca0410ae08 <unknown>\nE       #17 0x55ca0410afe0 <unknown>\nE       #18 0x55ca0411ae04 <unknown>\nE       #19 0x7ff70d294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55ca0411bcb3 <unknown>\n#1 0x55ca03e0a2f7 <unknown>\n#2 0x55ca03e4f40f <unknown>\n#3 0x55ca03e4d846 <unknown>\n#4 0x55ca03e77412 <unknown>\n#5 0x55ca03e49b58 <unknown>\n#6 0x55ca03e775de <unknown>\n#7 0x55ca03e95be9 <unknown>\n#8 0x55ca03e771b3 <unknown>\n#9 0x55ca03e4824a <unknown>\n#10 0x55ca03e48c1e <unknown>\n#11 0x55ca040dffdb <unknown>\n#12 0x55ca040e3f2b <unknown>\n#13 0x55ca040cc0f1 <unknown>\n#14 0x55ca040e4a92 <unknown>\n#15 0x55ca040b0faf <unknown>\n#16 0x55ca0410ae08 <unknown>\n#17 0x55ca0410afe0 <unknown>\n#18 0x55ca0411ae04 <unknown>\n#19 0x7ff70d294ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f0a01dc8a40>\nrequest = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f0a01c1ce10>, 'council': 'BexleyCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:81: in parse_data\n    dropdown_input.send_keys(user_paon)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0a01d53110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55ca0410afe0 \\\\u003Cunknown>\\\\n#18 0x55ca0411ae04 \\\\u003Cunknown>\\\\n#19 0x7ff70d294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x55ca0411bcb3 <unknown>\nE       #1 0x55ca03e0a2f7 <unknown>\nE       #2 0x55ca03e4f40f <unknown>\nE       #3 0x55ca03e4d846 <unknown>\nE       #4 0x55ca03e77412 <unknown>\nE       #5 0x55ca03e49b58 <unknown>\nE       #6 0x55ca03e775de <unknown>\nE       #7 0x55ca03e95be9 <unknown>\nE       #8 0x55ca03e771b3 <unknown>\nE       #9 0x55ca03e4824a <unknown>\nE       #10 0x55ca03e48c1e <unknown>\nE       #11 0x55ca040dffdb <unknown>\nE       #12 0x55ca040e3f2b <unknown>\nE       #13 0x55ca040cc0f1 <unknown>\nE       #14 0x55ca040e4a92 <unknown>\nE       #15 0x55ca040b0faf <unknown>\nE       #16 0x55ca0410ae08 <unknown>\nE       #17 0x55ca0410afe0 <unknown>\nE       #18 0x55ca0411ae04 <unknown>\nE       #19 0x7ff70d294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1714232691496,"stop":1714232691497,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BexleyCouncil using local and the http://selenium:4444 is set","time":{"start":1714232691497,"stop":1714232702359,"duration":10862},"status":"failed","statusMessage":"Message: element not interactable\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55ca0411bcb3 <unknown>\n#1 0x55ca03e0a2f7 <unknown>\n#2 0x55ca03e4f40f <unknown>\n#3 0x55ca03e4d846 <unknown>\n#4 0x55ca03e77412 <unknown>\n#5 0x55ca03e49b58 <unknown>\n#6 0x55ca03e775de <unknown>\n#7 0x55ca03e95be9 <unknown>\n#8 0x55ca03e771b3 <unknown>\n#9 0x55ca03e4824a <unknown>\n#10 0x55ca03e48c1e <unknown>\n#11 0x55ca040dffdb <unknown>\n#12 0x55ca040e3f2b <unknown>\n#13 0x55ca040cc0f1 <unknown>\n#14 0x55ca040e4a92 <unknown>\n#15 0x55ca040b0faf <unknown>\n#16 0x55ca0410ae08 <unknown>\n#17 0x55ca0410afe0 <unknown>\n#18 0x55ca0411ae04 <unknown>\n#19 0x7ff70d294ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55ca0411bcb3 <unknown>\n#1 0x55ca03e0a2f7 <unknown>\n#2 0x55ca03e4f40f <unknown>\n#3 0x55ca03e4d846 <unknown>\n#4 0x55ca03e77412 <unknown>\n#5 0x55ca03e49b58 <unknown>\n#6 0x55ca03e775de <unknown>\n#7 0x55ca03e95be9 <unknown>\n#8 0x55ca03e771b3 <unknown>\n#9 0x55ca03e4824a <unknown>\n#10 0x55ca03e48c1e <unknown>\n#11 0x55ca040dffdb <unknown>\n#12 0x55ca040e3f2b <unknown>\n#13 0x55ca040cc0f1 <unknown>\n#14 0x55ca040e4a92 <unknown>\n#15 0x55ca040b0faf <unknown>\n#16 0x55ca0410ae08 <unknown>\n#17 0x55ca0410afe0 <unknown>\n#18 0x55ca0411ae04 <unknown>\n#19 0x7ff70d294ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az692-549"},{"name":"thread","value":"2624-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":64,"broken":0,"skipped":0,"passed":112,"unknown":0,"total":176},"items":[{"uid":"547adf5e15ce3dc2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1713//#testresult/547adf5e15ce3dc2","status":"passed","time":{"start":1714177555717,"stop":1714177596362,"duration":40645}},{"uid":"5544ef240f81e56","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1712//#testresult/5544ef240f81e56","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5649ad002cb3 <unknown>\n#1 0x5649accf14a7 <unknown>\n#2 0x5649acd3c31d <unknown>\n#3 0x5649acd3c3d1 <unknown>\n#4 0x5649acd7f734 <unknown>\n#5 0x5649acd5e43d <unknown>\n#6 0x5649acd7cbe9 <unknown>\n#7 0x5649acd5e1b3 <unknown>\n#8 0x5649acd2f24a <unknown>\n#9 0x5649acd2fc1e <unknown>\n#10 0x5649acfc6fdb <unknown>\n#11 0x5649acfcaf2b <unknown>\n#12 0x5649acfb30f1 <unknown>\n#13 0x5649acfcba92 <unknown>\n#14 0x5649acf97faf <unknown>\n#15 0x5649acff1e08 <unknown>\n#16 0x5649acff1fe0 <unknown>\n#17 0x5649ad001e04 <unknown>\n#18 0x7ff955294ac3 <unknown>","time":{"start":1714091181767,"stop":1714091255846,"duration":74079}},{"uid":"b2a30edf967ba1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1711//#testresult/b2a30edf967ba1f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5588a9c25ce3 <unknown>\n#1 0x5588a99144a7 <unknown>\n#2 0x5588a995f31d <unknown>\n#3 0x5588a995f3d1 <unknown>\n#4 0x5588a99a2734 <unknown>\n#5 0x5588a998143d <unknown>\n#6 0x5588a999fbe9 <unknown>\n#7 0x5588a99811b3 <unknown>\n#8 0x5588a995224a <unknown>\n#9 0x5588a9952c1e <unknown>\n#10 0x5588a9bea00b <unknown>\n#11 0x5588a9bedf5b <unknown>\n#12 0x5588a9bd6121 <unknown>\n#13 0x5588a9beeac2 <unknown>\n#14 0x5588a9bbafdf <unknown>\n#15 0x5588a9c14e38 <unknown>\n#16 0x5588a9c15010 <unknown>\n#17 0x5588a9c24e34 <unknown>\n#18 0x7f4394494ac3 <unknown>","time":{"start":1714006422044,"stop":1714006500628,"duration":78584}},{"uid":"f596b3892f355997","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1710//#testresult/f596b3892f355997","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d663131ce3 <unknown>\n#1 0x55d662e204a7 <unknown>\n#2 0x55d662e6b31d <unknown>\n#3 0x55d662e6b3d1 <unknown>\n#4 0x55d662eae734 <unknown>\n#5 0x55d662e8d43d <unknown>\n#6 0x55d662eabbe9 <unknown>\n#7 0x55d662e8d1b3 <unknown>\n#8 0x55d662e5e24a <unknown>\n#9 0x55d662e5ec1e <unknown>\n#10 0x55d6630f600b <unknown>\n#11 0x55d6630f9f5b <unknown>\n#12 0x55d6630e2121 <unknown>\n#13 0x55d6630faac2 <unknown>\n#14 0x55d6630c6fdf <unknown>\n#15 0x55d663120e38 <unknown>\n#16 0x55d663121010 <unknown>\n#17 0x55d663130e34 <unknown>\n#18 0x7f94cb894ac3 <unknown>","time":{"start":1713918389839,"stop":1713918474454,"duration":84615}},{"uid":"5a52ecdb348b2a3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1709//#testresult/5a52ecdb348b2a3c","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1713832034930,"stop":1713832089085,"duration":54155}},{"uid":"ddc3280fda275ef0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1708//#testresult/ddc3280fda275ef0","status":"passed","time":{"start":1713745665204,"stop":1713745690214,"duration":25010}},{"uid":"351ad0abb21dd8dd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1707//#testresult/351ad0abb21dd8dd","status":"passed","time":{"start":1713659318200,"stop":1713659335682,"duration":17482}},{"uid":"8113feaabdbc8623","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1706//#testresult/8113feaabdbc8623","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d49dea5863 <unknown>\n#1 0x55d49db9b8c6 <unknown>\n#2 0x55d49dbe6618 <unknown>\n#3 0x55d49dbe66d1 <unknown>\n#4 0x55d49dc29744 <unknown>\n#5 0x55d49dc085cd <unknown>\n#6 0x55d49dc26c19 <unknown>\n#7 0x55d49dc08343 <unknown>\n#8 0x55d49dbd9593 <unknown>\n#9 0x55d49dbd9f5e <unknown>\n#10 0x55d49de6984b <unknown>\n#11 0x55d49de6d7a5 <unknown>\n#12 0x55d49de57571 <unknown>\n#13 0x55d49de6e332 <unknown>\n#14 0x55d49de3c87f <unknown>\n#15 0x55d49de94728 <unknown>\n#16 0x55d49de948fb <unknown>\n#17 0x55d49dea49b4 <unknown>\n#18 0x7fa577894ac3 <unknown>","time":{"start":1713572734168,"stop":1713572804709,"duration":70541}},{"uid":"52576b8b2b48456f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1702//#testresult/52576b8b2b48456f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55c77efff863 <unknown>\n#1 0x55c77ecf58c6 <unknown>\n#2 0x55c77ed40618 <unknown>\n#3 0x55c77ed406d1 <unknown>\n#4 0x55c77ed83744 <unknown>\n#5 0x55c77ed625cd <unknown>\n#6 0x55c77ed80c19 <unknown>\n#7 0x55c77ed62343 <unknown>\n#8 0x55c77ed33593 <unknown>\n#9 0x55c77ed33f5e <unknown>\n#10 0x55c77efc384b <unknown>\n#11 0x55c77efc77a5 <unknown>\n#12 0x55c77efb1571 <unknown>\n#13 0x55c77efc8332 <unknown>\n#14 0x55c77ef9687f <unknown>\n#15 0x55c77efee728 <unknown>\n#16 0x55c77efee8fb <unknown>\n#17 0x55c77effe9b4 <unknown>\n#18 0x7f7fe1494ac3 <unknown>","time":{"start":1713486384409,"stop":1713486471598,"duration":87189}},{"uid":"30ddb857068803a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1698//#testresult/30ddb857068803a2","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d3b7e45863 <unknown>\n#1 0x55d3b7b3b8c6 <unknown>\n#2 0x55d3b7b86618 <unknown>\n#3 0x55d3b7b866d1 <unknown>\n#4 0x55d3b7bc9744 <unknown>\n#5 0x55d3b7ba85cd <unknown>\n#6 0x55d3b7bc6c19 <unknown>\n#7 0x55d3b7ba8343 <unknown>\n#8 0x55d3b7b79593 <unknown>\n#9 0x55d3b7b79f5e <unknown>\n#10 0x55d3b7e0984b <unknown>\n#11 0x55d3b7e0d7a5 <unknown>\n#12 0x55d3b7df7571 <unknown>\n#13 0x55d3b7e0e332 <unknown>\n#14 0x55d3b7ddc87f <unknown>\n#15 0x55d3b7e34728 <unknown>\n#16 0x55d3b7e348fb <unknown>\n#17 0x55d3b7e449b4 <unknown>\n#18 0x7f5a40894ac3 <unknown>","time":{"start":1713399951585,"stop":1713400017963,"duration":66378}},{"uid":"2699b38f7c2ccf83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1697//#testresult/2699b38f7c2ccf83","status":"passed","time":{"start":1713313604892,"stop":1713313624131,"duration":19239}},{"uid":"cf3111363b617076","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1696//#testresult/cf3111363b617076","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1713252700566,"stop":1713252723807,"duration":23241}},{"uid":"54c9c0a536c5f44b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1695//#testresult/54c9c0a536c5f44b","status":"failed","statusDetails":"ValueError: time data 'Being collected today' does not match format '%A %d %B'","time":{"start":1713227134431,"stop":1713227151013,"duration":16582}},{"uid":"c34b006d75fc7fcb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1692//#testresult/c34b006d75fc7fcb","status":"passed","time":{"start":1713207719453,"stop":1713207747501,"duration":28048}},{"uid":"37bbf20763e3e310","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1683//#testresult/37bbf20763e3e310","status":"passed","time":{"start":1713188253938,"stop":1713188282074,"duration":28136}},{"uid":"2d80d80940f9ee05","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1682//#testresult/2d80d80940f9ee05","status":"passed","time":{"start":1713149744154,"stop":1713149765295,"duration":21141}},{"uid":"92f6d5dbc0673622","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1681//#testresult/92f6d5dbc0673622","status":"passed","time":{"start":1713053248401,"stop":1713053279160,"duration":30759}},{"uid":"aa6376185ad91c67","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1677//#testresult/aa6376185ad91c67","status":"passed","time":{"start":1712967746718,"stop":1712967778398,"duration":31680}},{"uid":"483a1ce9062dc662","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1675//#testresult/483a1ce9062dc662","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564d112c1863 <unknown>\n#1 0x564d10fb78c6 <unknown>\n#2 0x564d11002618 <unknown>\n#3 0x564d110026d1 <unknown>\n#4 0x564d11045744 <unknown>\n#5 0x564d110245cd <unknown>\n#6 0x564d11042c19 <unknown>\n#7 0x564d11024343 <unknown>\n#8 0x564d10ff5593 <unknown>\n#9 0x564d10ff5f5e <unknown>\n#10 0x564d1128584b <unknown>\n#11 0x564d112897a5 <unknown>\n#12 0x564d11273571 <unknown>\n#13 0x564d1128a332 <unknown>\n#14 0x564d1125887f <unknown>\n#15 0x564d112b0728 <unknown>\n#16 0x564d112b08fb <unknown>\n#17 0x564d112c09b4 <unknown>\n#18 0x7f3592894ac3 <unknown>","time":{"start":1712881602717,"stop":1712881675203,"duration":72486}},{"uid":"d3cfa26eca7ca32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1674//#testresult/d3cfa26eca7ca32","status":"passed","time":{"start":1712795322172,"stop":1712795347029,"duration":24857}}]},"tags":[]},"source":"2d4649d8560e4668.json","parameterValues":["BexleyCouncil","local","http://selenium:4444"]}