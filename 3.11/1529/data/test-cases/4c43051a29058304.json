{"uid":"4c43051a29058304","name":"Validate Council Output [FenlandDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"07f2231fc726086b1d0d561ac97c3485","time":{"start":1706315178380,"stop":1706315189220,"duration":10840},"status":"failed","statusMessage":"KeyError: 'features'","statusTrace":"fixturefunc = <function scrape_step at 0x7f4ea865c720>\nrequest = <FixtureRequest for <Function test_scenario_outline[FenlandDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4ea851e950>, 'council': 'FenlandDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <FenlandDistrictCouncil.CouncilClass object at 0x7f4ea837fe10>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '200002981143', ...}\nuser_uprn = '200002981143'\nheaders = {'Accept': 'application/json, text/javascript, */*; q=0.01', 'Accept-Language': 'en-GB,en;q=0.7', 'Connection': 'keep-alive', 'Content-Type': 'application/json; charset=utf-8', ...}\nparams = {'lat': '0.000000000001', 'layerId': '2', 'lng': '0.000000000001', 'type': 'loadlayer', ...}\nresponse = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"Accept\": \"application/json, text/javascript, */*; q=0.01\",\n            \"Accept-Language\": \"en-GB,en;q=0.7\",\n            \"Connection\": \"keep-alive\",\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            \"Referer\": \"https://www.fenland.gov.uk/article/13114/?uprn=200002981143&lat=52.665569590474&lng=0.177905443639&postcode=PE13+3SL&line1=20+Felsted+Avenue&rad=5m&layers=2%2C3%2C1\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"same-origin\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"X-Requested-With\": \"XMLHttpRequest\",\n        }\n    \n        # It needs lat and lng for point data, but we don't need it >:)\n        params = {\n            \"type\": \"loadlayer\",\n            \"layerId\": \"2\",\n            \"uprn\": user_uprn,\n            \"lat\": \"0.000000000001\",\n            \"lng\": \"0.000000000001\",\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://www.fenland.gov.uk/article/13114/\", params=params, headers=headers\n        )\n    \n        # Returned data is just json, so we can get what we need\n>       json_data = json.loads(response.text)[\"features\"][0][\"properties\"][\"upcoming\"]\nE       KeyError: 'features'\n\nuk_bin_collection/uk_bin_collection/councils/FenlandDistrictCouncil.py:49: KeyError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"KeyError: 'features'","statusTrace":"fixturefunc = <function scrape_step at 0x7f4ea865c720>\nrequest = <FixtureRequest for <Function test_scenario_outline[FenlandDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f4ea851e950>, 'council': 'FenlandDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <FenlandDistrictCouncil.CouncilClass object at 0x7f4ea837fe10>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '200002981143', ...}\nuser_uprn = '200002981143'\nheaders = {'Accept': 'application/json, text/javascript, */*; q=0.01', 'Accept-Language': 'en-GB,en;q=0.7', 'Connection': 'keep-alive', 'Content-Type': 'application/json; charset=utf-8', ...}\nparams = {'lat': '0.000000000001', 'layerId': '2', 'lng': '0.000000000001', 'type': 'loadlayer', ...}\nresponse = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        headers = {\n            \"Accept\": \"application/json, text/javascript, */*; q=0.01\",\n            \"Accept-Language\": \"en-GB,en;q=0.7\",\n            \"Connection\": \"keep-alive\",\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            \"Referer\": \"https://www.fenland.gov.uk/article/13114/?uprn=200002981143&lat=52.665569590474&lng=0.177905443639&postcode=PE13+3SL&line1=20+Felsted+Avenue&rad=5m&layers=2%2C3%2C1\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"same-origin\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n            \"X-Requested-With\": \"XMLHttpRequest\",\n        }\n    \n        # It needs lat and lng for point data, but we don't need it >:)\n        params = {\n            \"type\": \"loadlayer\",\n            \"layerId\": \"2\",\n            \"uprn\": user_uprn,\n            \"lat\": \"0.000000000001\",\n            \"lng\": \"0.000000000001\",\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://www.fenland.gov.uk/article/13114/\", params=params, headers=headers\n        )\n    \n        # Returned data is just json, so we can get what we need\n>       json_data = json.loads(response.text)[\"features\"][0][\"properties\"][\"upcoming\"]\nE       KeyError: 'features'\n\nuk_bin_collection/uk_bin_collection/councils/FenlandDistrictCouncil.py:49: KeyError","steps":[{"name":"Given the council: FenlandDistrictCouncil","time":{"start":1706315178380,"stop":1706315178381,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from FenlandDistrictCouncil using None and the None is set","time":{"start":1706315178381,"stop":1706315189220,"duration":10839},"status":"failed","statusMessage":"'features'","statusTrace":"KeyError: 'features'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az520-539"},{"name":"thread","value":"3012-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"FenlandDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":170,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":174},"items":[{"uid":"151c7ce99cd639c9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1528//#testresult/151c7ce99cd639c9","status":"passed","time":{"start":1706228813619,"stop":1706228818340,"duration":4721}},{"uid":"94c1f19ae23b5897","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1523//#testresult/94c1f19ae23b5897","status":"passed","time":{"start":1706142507205,"stop":1706142511158,"duration":3953}},{"uid":"6f478726f814c542","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1522//#testresult/6f478726f814c542","status":"passed","time":{"start":1706056121679,"stop":1706056125252,"duration":3573}},{"uid":"634b59764791d718","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1521//#testresult/634b59764791d718","status":"passed","time":{"start":1705969725585,"stop":1705969728628,"duration":3043}},{"uid":"bac771bb1c32e1ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1520//#testresult/bac771bb1c32e1ab","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705883384759,"stop":1705883385351,"duration":592}},{"uid":"8913a926fa2075ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1519//#testresult/8913a926fa2075ea","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705797084251,"stop":1705797085101,"duration":850}},{"uid":"1177f52d3e5a2394","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1515//#testresult/1177f52d3e5a2394","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705710471656,"stop":1705710472714,"duration":1058}},{"uid":"9444dfcb5228caf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1511//#testresult/9444dfcb5228caf6","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705624209886,"stop":1705624210483,"duration":597}},{"uid":"37434a8708e2bc84","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1505//#testresult/37434a8708e2bc84","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705537676428,"stop":1705537676990,"duration":562}},{"uid":"eedcd3ced557da54","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1500//#testresult/eedcd3ced557da54","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705451273896,"stop":1705451274508,"duration":612}},{"uid":"41e72b69bd528404","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1499//#testresult/41e72b69bd528404","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705364883745,"stop":1705364884381,"duration":636}},{"uid":"347351ddce1d76c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1492//#testresult/347351ddce1d76c","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705295638948,"stop":1705295639805,"duration":857}},{"uid":"1deb07a94310788d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1491//#testresult/1deb07a94310788d","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705295137903,"stop":1705295138733,"duration":830}},{"uid":"4d0f0082b9faefd2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1490//#testresult/4d0f0082b9faefd2","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705278543453,"stop":1705278544135,"duration":682}},{"uid":"f3e5c098feb2b7e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1485//#testresult/f3e5c098feb2b7e1","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705192217000,"stop":1705192217497,"duration":497}},{"uid":"bb831f5129e5a4e4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1484//#testresult/bb831f5129e5a4e4","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705105664196,"stop":1705105664791,"duration":595}},{"uid":"6208696f8d1c3af9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1482//#testresult/6208696f8d1c3af9","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1705019249546,"stop":1705019250488,"duration":942}},{"uid":"df3e1eac2d5b0ee5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1478//#testresult/df3e1eac2d5b0ee5","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1704932837427,"stop":1704932837933,"duration":506}},{"uid":"bba08f36a058fbb1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1472//#testresult/bba08f36a058fbb1","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1704846440365,"stop":1704846440986,"duration":621}},{"uid":"e3f34dcf6f458b2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1456//#testresult/e3f34dcf6f458b2c","status":"failed","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))","time":{"start":1704760195805,"stop":1704760196560,"duration":755}}]},"tags":[]},"source":"4c43051a29058304.json","parameterValues":["FenlandDistrictCouncil","None","None"]}