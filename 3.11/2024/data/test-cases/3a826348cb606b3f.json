{"uid":"3a826348cb606b3f","name":"Validate Council Output [ThreeRiversDistrictCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e3654e30da7afdc28f7fe7f42f4ffd96","time":{"start":1723422447314,"stop":1723422462942,"duration":15628},"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5600341546ba <unknown>\n#1 0x560033e24730 <unknown>\n#2 0x560033e2a5c1 <unknown>\n#3 0x560033e2c1f5 <unknown>\n#4 0x560033e2c27c <unknown>\n#5 0x560033e6e6b2 <unknown>\n#6 0x560033e96a52 <unknown>\n#7 0x560033e68719 <unknown>\n#8 0x560033e96c1e <unknown>\n#9 0x560033eb51ca <unknown>\n#10 0x560033e967f3 <unknown>\n#11 0x560033e66ec9 <unknown>\n#12 0x560033e6791e <unknown>\n#13 0x56003411a9eb <unknown>\n#14 0x56003411e972 <unknown>\n#15 0x560034107e15 <unknown>\n#16 0x56003411f502 <unknown>\n#17 0x5600340ecd2f <unknown>\n#18 0x560034143578 <unknown>\n#19 0x560034143750 <unknown>\n#20 0x56003415348c <unknown>\n#21 0x7f3badb3ba94 <unknown>\n#22 0x7f3badbc8a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7ff6dfa03d80>\nrequest = <FixtureRequest for <Function test_scenario_outline[ThreeRiversDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7ff6df886010>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/ThreeRiversDistrictCouncil.py:75: in parse_data\n    drop_down_values.select_by_value(str(user_uprn))\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/select.py:79: in select_by_value\n    self._set_selected(opt)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/select.py:211: in _set_selected\n    if not option.is_selected():\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:188: in is_selected\n    return self._execute(Command.IS_ELEMENT_SELECTED)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff6df4e8990>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...unknown>\\\\n#20 0x56003415348c \\\\u003Cunknown>\\\\n#21 0x7f3badb3ba94 \\\\u003Cunknown>\\\\n#22 0x7f3badbc8a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5600341546ba <unknown>\nE       #1 0x560033e24730 <unknown>\nE       #2 0x560033e2a5c1 <unknown>\nE       #3 0x560033e2c1f5 <unknown>\nE       #4 0x560033e2c27c <unknown>\nE       #5 0x560033e6e6b2 <unknown>\nE       #6 0x560033e96a52 <unknown>\nE       #7 0x560033e68719 <unknown>\nE       #8 0x560033e96c1e <unknown>\nE       #9 0x560033eb51ca <unknown>\nE       #10 0x560033e967f3 <unknown>\nE       #11 0x560033e66ec9 <unknown>\nE       #12 0x560033e6791e <unknown>\nE       #13 0x56003411a9eb <unknown>\nE       #14 0x56003411e972 <unknown>\nE       #15 0x560034107e15 <unknown>\nE       #16 0x56003411f502 <unknown>\nE       #17 0x5600340ecd2f <unknown>\nE       #18 0x560034143578 <unknown>\nE       #19 0x560034143750 <unknown>\nE       #20 0x56003415348c <unknown>\nE       #21 0x7f3badb3ba94 <unknown>\nE       #22 0x7f3badbc8a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5600341546ba <unknown>\n#1 0x560033e24730 <unknown>\n#2 0x560033e2a5c1 <unknown>\n#3 0x560033e2c1f5 <unknown>\n#4 0x560033e2c27c <unknown>\n#5 0x560033e6e6b2 <unknown>\n#6 0x560033e96a52 <unknown>\n#7 0x560033e68719 <unknown>\n#8 0x560033e96c1e <unknown>\n#9 0x560033eb51ca <unknown>\n#10 0x560033e967f3 <unknown>\n#11 0x560033e66ec9 <unknown>\n#12 0x560033e6791e <unknown>\n#13 0x56003411a9eb <unknown>\n#14 0x56003411e972 <unknown>\n#15 0x560034107e15 <unknown>\n#16 0x56003411f502 <unknown>\n#17 0x5600340ecd2f <unknown>\n#18 0x560034143578 <unknown>\n#19 0x560034143750 <unknown>\n#20 0x56003415348c <unknown>\n#21 0x7f3badb3ba94 <unknown>\n#22 0x7f3badbc8a34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7ff6dfa03d80>\nrequest = <FixtureRequest for <Function test_scenario_outline[ThreeRiversDistrictCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7ff6df886010>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/ThreeRiversDistrictCouncil.py:75: in parse_data\n    drop_down_values.select_by_value(str(user_uprn))\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/select.py:79: in select_by_value\n    self._set_selected(opt)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/select.py:211: in _set_selected\n    if not option.is_selected():\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:188: in is_selected\n    return self._execute(Command.IS_ELEMENT_SELECTED)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff6df4e8990>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...unknown>\\\\n#20 0x56003415348c \\\\u003Cunknown>\\\\n#21 0x7f3badb3ba94 \\\\u003Cunknown>\\\\n#22 0x7f3badbc8a34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5600341546ba <unknown>\nE       #1 0x560033e24730 <unknown>\nE       #2 0x560033e2a5c1 <unknown>\nE       #3 0x560033e2c1f5 <unknown>\nE       #4 0x560033e2c27c <unknown>\nE       #5 0x560033e6e6b2 <unknown>\nE       #6 0x560033e96a52 <unknown>\nE       #7 0x560033e68719 <unknown>\nE       #8 0x560033e96c1e <unknown>\nE       #9 0x560033eb51ca <unknown>\nE       #10 0x560033e967f3 <unknown>\nE       #11 0x560033e66ec9 <unknown>\nE       #12 0x560033e6791e <unknown>\nE       #13 0x56003411a9eb <unknown>\nE       #14 0x56003411e972 <unknown>\nE       #15 0x560034107e15 <unknown>\nE       #16 0x56003411f502 <unknown>\nE       #17 0x5600340ecd2f <unknown>\nE       #18 0x560034143578 <unknown>\nE       #19 0x560034143750 <unknown>\nE       #20 0x56003415348c <unknown>\nE       #21 0x7f3badb3ba94 <unknown>\nE       #22 0x7f3badbc8a34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Given the council","time":{"start":1723422447314,"stop":1723422447315,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1723422447315,"stop":1723422462942,"duration":15627},"status":"failed","statusMessage":"Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5600341546ba <unknown>\n#1 0x560033e24730 <unknown>\n#2 0x560033e2a5c1 <unknown>\n#3 0x560033e2c1f5 <unknown>\n#4 0x560033e2c27c <unknown>\n#5 0x560033e6e6b2 <unknown>\n#6 0x560033e96a52 <unknown>\n#7 0x560033e68719 <unknown>\n#8 0x560033e96c1e <unknown>\n#9 0x560033eb51ca <unknown>\n#10 0x560033e967f3 <unknown>\n#11 0x560033e66ec9 <unknown>\n#12 0x560033e6791e <unknown>\n#13 0x56003411a9eb <unknown>\n#14 0x56003411e972 <unknown>\n#15 0x560034107e15 <unknown>\n#16 0x56003411f502 <unknown>\n#17 0x5600340ecd2f <unknown>\n#18 0x560034143578 <unknown>\n#19 0x560034143750 <unknown>\n#20 0x56003415348c <unknown>\n#21 0x7f3badb3ba94 <unknown>\n#22 0x7f3badbc8a34 __clone\n","statusTrace":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5600341546ba <unknown>\n#1 0x560033e24730 <unknown>\n#2 0x560033e2a5c1 <unknown>\n#3 0x560033e2c1f5 <unknown>\n#4 0x560033e2c27c <unknown>\n#5 0x560033e6e6b2 <unknown>\n#6 0x560033e96a52 <unknown>\n#7 0x560033e68719 <unknown>\n#8 0x560033e96c1e <unknown>\n#9 0x560033eb51ca <unknown>\n#10 0x560033e967f3 <unknown>\n#11 0x560033e66ec9 <unknown>\n#12 0x560033e6791e <unknown>\n#13 0x56003411a9eb <unknown>\n#14 0x56003411e972 <unknown>\n#15 0x560034107e15 <unknown>\n#16 0x56003411f502 <unknown>\n#17 0x5600340ecd2f <unknown>\n#18 0x560034143578 <unknown>\n#19 0x560034143750 <unknown>\n#20 0x56003415348c <unknown>\n#21 0x7f3badb3ba94 <unknown>\n#22 0x7f3badbc8a34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b8f456138ddf0f32","name":"log","source":"b8f456138ddf0f32.txt","type":"text/plain","size":1020},{"uid":"65fbce05e9a4d405","name":"stdout","source":"65fbce05e9a4d405.txt","type":"text/plain","size":53}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1121-511"},{"name":"thread","value":"2786-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ThreeRiversDistrictCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":70,"unknown":0,"total":72},"items":[{"uid":"9210b18cbba6d64a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2022//#testresult/9210b18cbba6d64a","status":"passed","time":{"start":1723336001070,"stop":1723336052179,"duration":51109}},{"uid":"951f9796ccf8c9f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2020//#testresult/951f9796ccf8c9f","status":"passed","time":{"start":1723249619962,"stop":1723249660555,"duration":40593}},{"uid":"1b7f6a5a452d03e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2019//#testresult/1b7f6a5a452d03e5","status":"passed","time":{"start":1723163215857,"stop":1723163255018,"duration":39161}},{"uid":"aeb799c5be244b34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2014//#testresult/aeb799c5be244b34","status":"passed","time":{"start":1723076733641,"stop":1723076766515,"duration":32874}},{"uid":"8191abe0cde1e1f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2012//#testresult/8191abe0cde1e1f","status":"passed","time":{"start":1722990296082,"stop":1722990313104,"duration":17022}},{"uid":"227ae2e3b25e35f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2007//#testresult/227ae2e3b25e35f8","status":"passed","time":{"start":1722903943221,"stop":1722903965811,"duration":22590}},{"uid":"a1c4c26a3b5ef4d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2006//#testresult/a1c4c26a3b5ef4d3","status":"passed","time":{"start":1722817805626,"stop":1722817846887,"duration":41261}},{"uid":"5ff866bdf10089ec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2005//#testresult/5ff866bdf10089ec","status":"passed","time":{"start":1722731148018,"stop":1722731163397,"duration":15379}},{"uid":"d304a0359b1f2f79","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2004//#testresult/d304a0359b1f2f79","status":"passed","time":{"start":1722644830492,"stop":1722644863149,"duration":32657}},{"uid":"5ff6229f5e573335","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2003//#testresult/5ff6229f5e573335","status":"passed","time":{"start":1722558375966,"stop":1722558398050,"duration":22084}},{"uid":"2ec2998f694ebbbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2002//#testresult/2ec2998f694ebbbc","status":"passed","time":{"start":1722471835112,"stop":1722471858544,"duration":23432}},{"uid":"fa93d78fd3994839","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1998//#testresult/fa93d78fd3994839","status":"passed","time":{"start":1722385521096,"stop":1722385552600,"duration":31504}},{"uid":"3755674d1093bfad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1997//#testresult/3755674d1093bfad","status":"passed","time":{"start":1722299063363,"stop":1722299078441,"duration":15078}},{"uid":"6e699afc2c72448b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1996//#testresult/6e699afc2c72448b","status":"passed","time":{"start":1722212649678,"stop":1722212662044,"duration":12366}},{"uid":"c8a87c601547a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1995//#testresult/c8a87c601547a4","status":"passed","time":{"start":1722126175368,"stop":1722126222086,"duration":46718}},{"uid":"454527f96be5908","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1994//#testresult/454527f96be5908","status":"passed","time":{"start":1722039945488,"stop":1722039989006,"duration":43518}},{"uid":"1f0067fb95b320d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1993//#testresult/1f0067fb95b320d8","status":"passed","time":{"start":1721953493005,"stop":1721953517862,"duration":24857}},{"uid":"c2e57f4fcce49901","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1992//#testresult/c2e57f4fcce49901","status":"passed","time":{"start":1721867083122,"stop":1721867099771,"duration":16649}},{"uid":"4ffd16abad693412","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1991//#testresult/4ffd16abad693412","status":"passed","time":{"start":1721780675876,"stop":1721780693946,"duration":18070}},{"uid":"616a292271bf3506","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1990//#testresult/616a292271bf3506","status":"passed","time":{"start":1721694211232,"stop":1721694227885,"duration":16653}}]},"tags":[]},"source":"3a826348cb606b3f.json","parameterValues":["ThreeRiversDistrictCouncil"]}