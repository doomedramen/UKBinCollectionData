{"uid":"345dc0b3ab50d194","name":"Validate Council Output [GatesheadCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"06e54311f2a0be18545214e444671747","time":{"start":1704496225443,"stop":1704496529333,"duration":303890},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5608e127ef83 <unknown>\n#1 0x5608e0f37cf7 <unknown>\n#2 0x5608e0f1d7a1 <unknown>\n#3 0x5608e0f1d44a <unknown>\n#4 0x5608e0f1b7e1 <unknown>\n#5 0x5608e0f1c18a <unknown>\n#6 0x5608e0f2d07c <unknown>\n#7 0x5608e0f457c1 <unknown>\n#8 0x5608e0f4b6bb <unknown>\n#9 0x5608e0f1c92d <unknown>\n#10 0x5608e0f455c2 <unknown>\n#11 0x5608e0fd0204 <unknown>\n#12 0x5608e0fb0e53 <unknown>\n#13 0x5608e0f78dd4 <unknown>\n#14 0x5608e0f7a1de <unknown>\n#15 0x5608e1243531 <unknown>\n#16 0x5608e1247455 <unknown>\n#17 0x5608e122ff55 <unknown>\n#18 0x5608e12480ef <unknown>\n#19 0x5608e121399f <unknown>\n#20 0x5608e126c008 <unknown>\n#21 0x5608e126c1d7 <unknown>\n#22 0x5608e127e124 <unknown>\n#23 0x7fc7b7494ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f08a5e240e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f08a51c8090>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:58: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f08a520c610>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x5608e126c1d7 \\\\u003Cunknown>\\\\n#22 0x5608e127e124 \\\\u003Cunknown>\\\\n#23 0x7fc7b7494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x5608e127ef83 <unknown>\nE       #1 0x5608e0f37cf7 <unknown>\nE       #2 0x5608e0f1d7a1 <unknown>\nE       #3 0x5608e0f1d44a <unknown>\nE       #4 0x5608e0f1b7e1 <unknown>\nE       #5 0x5608e0f1c18a <unknown>\nE       #6 0x5608e0f2d07c <unknown>\nE       #7 0x5608e0f457c1 <unknown>\nE       #8 0x5608e0f4b6bb <unknown>\nE       #9 0x5608e0f1c92d <unknown>\nE       #10 0x5608e0f455c2 <unknown>\nE       #11 0x5608e0fd0204 <unknown>\nE       #12 0x5608e0fb0e53 <unknown>\nE       #13 0x5608e0f78dd4 <unknown>\nE       #14 0x5608e0f7a1de <unknown>\nE       #15 0x5608e1243531 <unknown>\nE       #16 0x5608e1247455 <unknown>\nE       #17 0x5608e122ff55 <unknown>\nE       #18 0x5608e12480ef <unknown>\nE       #19 0x5608e121399f <unknown>\nE       #20 0x5608e126c008 <unknown>\nE       #21 0x5608e126c1d7 <unknown>\nE       #22 0x5608e127e124 <unknown>\nE       #23 0x7fc7b7494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5608e127ef83 <unknown>\n#1 0x5608e0f37cf7 <unknown>\n#2 0x5608e0f1d7a1 <unknown>\n#3 0x5608e0f1d44a <unknown>\n#4 0x5608e0f1b7e1 <unknown>\n#5 0x5608e0f1c18a <unknown>\n#6 0x5608e0f2d07c <unknown>\n#7 0x5608e0f457c1 <unknown>\n#8 0x5608e0f4b6bb <unknown>\n#9 0x5608e0f1c92d <unknown>\n#10 0x5608e0f455c2 <unknown>\n#11 0x5608e0fd0204 <unknown>\n#12 0x5608e0fb0e53 <unknown>\n#13 0x5608e0f78dd4 <unknown>\n#14 0x5608e0f7a1de <unknown>\n#15 0x5608e1243531 <unknown>\n#16 0x5608e1247455 <unknown>\n#17 0x5608e122ff55 <unknown>\n#18 0x5608e12480ef <unknown>\n#19 0x5608e121399f <unknown>\n#20 0x5608e126c008 <unknown>\n#21 0x5608e126c1d7 <unknown>\n#22 0x5608e127e124 <unknown>\n#23 0x7fc7b7494ac3 <unknown>","statusTrace":"fixturefunc = <function scrape_step at 0x7f08a5e240e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[GatesheadCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f08a51c8090>, 'council': 'GatesheadCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:89: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:76: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:76: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/GatesheadCouncil.py:58: in parse_data\n    ).click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f08a520c610>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x5608e126c1d7 \\\\u003Cunknown>\\\\n#22 0x5608e127e124 \\\\u003Cunknown>\\\\n#23 0x7fc7b7494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x5608e127ef83 <unknown>\nE       #1 0x5608e0f37cf7 <unknown>\nE       #2 0x5608e0f1d7a1 <unknown>\nE       #3 0x5608e0f1d44a <unknown>\nE       #4 0x5608e0f1b7e1 <unknown>\nE       #5 0x5608e0f1c18a <unknown>\nE       #6 0x5608e0f2d07c <unknown>\nE       #7 0x5608e0f457c1 <unknown>\nE       #8 0x5608e0f4b6bb <unknown>\nE       #9 0x5608e0f1c92d <unknown>\nE       #10 0x5608e0f455c2 <unknown>\nE       #11 0x5608e0fd0204 <unknown>\nE       #12 0x5608e0fb0e53 <unknown>\nE       #13 0x5608e0f78dd4 <unknown>\nE       #14 0x5608e0f7a1de <unknown>\nE       #15 0x5608e1243531 <unknown>\nE       #16 0x5608e1247455 <unknown>\nE       #17 0x5608e122ff55 <unknown>\nE       #18 0x5608e12480ef <unknown>\nE       #19 0x5608e121399f <unknown>\nE       #20 0x5608e126c008 <unknown>\nE       #21 0x5608e126c1d7 <unknown>\nE       #22 0x5608e127e124 <unknown>\nE       #23 0x7fc7b7494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Given the council: GatesheadCouncil","time":{"start":1704496225444,"stop":1704496225444,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from GatesheadCouncil using local and the http://selenium:4444 is set","time":{"start":1704496225444,"stop":1704496529333,"duration":303889},"status":"failed","statusMessage":"Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5608e127ef83 <unknown>\n#1 0x5608e0f37cf7 <unknown>\n#2 0x5608e0f1d7a1 <unknown>\n#3 0x5608e0f1d44a <unknown>\n#4 0x5608e0f1b7e1 <unknown>\n#5 0x5608e0f1c18a <unknown>\n#6 0x5608e0f2d07c <unknown>\n#7 0x5608e0f457c1 <unknown>\n#8 0x5608e0f4b6bb <unknown>\n#9 0x5608e0f1c92d <unknown>\n#10 0x5608e0f455c2 <unknown>\n#11 0x5608e0fd0204 <unknown>\n#12 0x5608e0fb0e53 <unknown>\n#13 0x5608e0f78dd4 <unknown>\n#14 0x5608e0f7a1de <unknown>\n#15 0x5608e1243531 <unknown>\n#16 0x5608e1247455 <unknown>\n#17 0x5608e122ff55 <unknown>\n#18 0x5608e12480ef <unknown>\n#19 0x5608e121399f <unknown>\n#20 0x5608e126c008 <unknown>\n#21 0x5608e126c1d7 <unknown>\n#22 0x5608e127e124 <unknown>\n#23 0x7fc7b7494ac3 <unknown>\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5608e127ef83 <unknown>\n#1 0x5608e0f37cf7 <unknown>\n#2 0x5608e0f1d7a1 <unknown>\n#3 0x5608e0f1d44a <unknown>\n#4 0x5608e0f1b7e1 <unknown>\n#5 0x5608e0f1c18a <unknown>\n#6 0x5608e0f2d07c <unknown>\n#7 0x5608e0f457c1 <unknown>\n#8 0x5608e0f4b6bb <unknown>\n#9 0x5608e0f1c92d <unknown>\n#10 0x5608e0f455c2 <unknown>\n#11 0x5608e0fd0204 <unknown>\n#12 0x5608e0fb0e53 <unknown>\n#13 0x5608e0f78dd4 <unknown>\n#14 0x5608e0f7a1de <unknown>\n#15 0x5608e1243531 <unknown>\n#16 0x5608e1247455 <unknown>\n#17 0x5608e122ff55 <unknown>\n#18 0x5608e12480ef <unknown>\n#19 0x5608e121399f <unknown>\n#20 0x5608e126c008 <unknown>\n#21 0x5608e126c1d7 <unknown>\n#22 0x5608e127e124 <unknown>\n#23 0x7fc7b7494ac3 <unknown>\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az570-420"},{"name":"thread","value":"2826-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GatesheadCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":25,"broken":0,"skipped":0,"passed":118,"unknown":0,"total":143},"items":[{"uid":"ef9ceaf891220e6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1406//#testresult/ef9ceaf891220e6c","status":"passed","time":{"start":1704453473724,"stop":1704453487107,"duration":13383}},{"uid":"b414ee1a88b64e4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1405//#testresult/b414ee1a88b64e4b","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55ee4675ff83 <unknown>\n#1 0x55ee46418cf7 <unknown>\n#2 0x55ee463fe7a1 <unknown>\n#3 0x55ee463fe44a <unknown>\n#4 0x55ee463fc7e1 <unknown>\n#5 0x55ee463fd18a <unknown>\n#6 0x55ee4640e07c <unknown>\n#7 0x55ee464267c1 <unknown>\n#8 0x55ee4642c6bb <unknown>\n#9 0x55ee463fd92d <unknown>\n#10 0x55ee464265c2 <unknown>\n#11 0x55ee464b1204 <unknown>\n#12 0x55ee46491e53 <unknown>\n#13 0x55ee46459dd4 <unknown>\n#14 0x55ee4645b1de <unknown>\n#15 0x55ee46724531 <unknown>\n#16 0x55ee46728455 <unknown>\n#17 0x55ee46710f55 <unknown>\n#18 0x55ee467290ef <unknown>\n#19 0x55ee466f499f <unknown>\n#20 0x55ee4674d008 <unknown>\n#21 0x55ee4674d1d7 <unknown>\n#22 0x55ee4675f124 <unknown>\n#23 0x7f43f3094ac3 <unknown>","time":{"start":1704452636622,"stop":1704452943127,"duration":306505}},{"uid":"7c4e55a7be726272","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1400//#testresult/7c4e55a7be726272","status":"passed","time":{"start":1704443808296,"stop":1704443848913,"duration":40617}},{"uid":"48bca674df5f4611","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1399//#testresult/48bca674df5f4611","status":"passed","time":{"start":1704443349847,"stop":1704443357266,"duration":7419}},{"uid":"55776de0190f3748","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1397//#testresult/55776de0190f3748","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5591e7fb1f83 <unknown>\n#1 0x5591e7c6acf7 <unknown>\n#2 0x5591e7c507a1 <unknown>\n#3 0x5591e7c5044a <unknown>\n#4 0x5591e7c4e7e1 <unknown>\n#5 0x5591e7c4f18a <unknown>\n#6 0x5591e7c6007c <unknown>\n#7 0x5591e7c787c1 <unknown>\n#8 0x5591e7c7e6bb <unknown>\n#9 0x5591e7c4f92d <unknown>\n#10 0x5591e7c785c2 <unknown>\n#11 0x5591e7d03204 <unknown>\n#12 0x5591e7ce3e53 <unknown>\n#13 0x5591e7cabdd4 <unknown>\n#14 0x5591e7cad1de <unknown>\n#15 0x5591e7f76531 <unknown>\n#16 0x5591e7f7a455 <unknown>\n#17 0x5591e7f62f55 <unknown>\n#18 0x5591e7f7b0ef <unknown>\n#19 0x5591e7f4699f <unknown>\n#20 0x5591e7f9f008 <unknown>\n#21 0x5591e7f9f1d7 <unknown>\n#22 0x5591e7fb1124 <unknown>\n#23 0x7f618c694ac3 <unknown>","time":{"start":1704442525987,"stop":1704442830344,"duration":304357}},{"uid":"85adbe506222758","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1396//#testresult/85adbe506222758","status":"passed","time":{"start":1704442502816,"stop":1704442511966,"duration":9150}},{"uid":"f8ee1ba3ef4de27f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1390//#testresult/f8ee1ba3ef4de27f","status":"passed","time":{"start":1704417570991,"stop":1704417578308,"duration":7317}},{"uid":"18a93058337f8b92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1379//#testresult/18a93058337f8b92","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55d10ae03f83 <unknown>\n#1 0x55d10aabccf7 <unknown>\n#2 0x55d10aaa27a1 <unknown>\n#3 0x55d10aaa244a <unknown>\n#4 0x55d10aaa07e1 <unknown>\n#5 0x55d10aaa118a <unknown>\n#6 0x55d10aab207c <unknown>\n#7 0x55d10aaca7c1 <unknown>\n#8 0x55d10aad06bb <unknown>\n#9 0x55d10aaa192d <unknown>\n#10 0x55d10aaca5c2 <unknown>\n#11 0x55d10ab55204 <unknown>\n#12 0x55d10ab35e53 <unknown>\n#13 0x55d10aafddd4 <unknown>\n#14 0x55d10aaff1de <unknown>\n#15 0x55d10adc8531 <unknown>\n#16 0x55d10adcc455 <unknown>\n#17 0x55d10adb4f55 <unknown>\n#18 0x55d10adcd0ef <unknown>\n#19 0x55d10ad9899f <unknown>\n#20 0x55d10adf1008 <unknown>\n#21 0x55d10adf11d7 <unknown>\n#22 0x55d10ae03124 <unknown>\n#23 0x7feb81494ac3 <unknown>","time":{"start":1704406078296,"stop":1704406382587,"duration":304291}},{"uid":"855f2d7dea3f8185","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1378//#testresult/855f2d7dea3f8185","status":"passed","time":{"start":1704406034829,"stop":1704406067006,"duration":32177}},{"uid":"acbda278a50450f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1376//#testresult/acbda278a50450f3","status":"passed","time":{"start":1704398867784,"stop":1704398876459,"duration":8675}},{"uid":"d5365d2678e86c3d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1375//#testresult/d5365d2678e86c3d","status":"passed","time":{"start":1704398819056,"stop":1704398826586,"duration":7530}},{"uid":"592374c8d9cde106","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1373//#testresult/592374c8d9cde106","status":"passed","time":{"start":1704388372478,"stop":1704388381625,"duration":9147}},{"uid":"91efaed9acc633a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1369//#testresult/91efaed9acc633a4","status":"passed","time":{"start":1704378392205,"stop":1704378400059,"duration":7854}},{"uid":"71f25459e62c8b0f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1367//#testresult/71f25459e62c8b0f","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x558e50459f83 <unknown>\n#1 0x558e50112cf7 <unknown>\n#2 0x558e500f87a1 <unknown>\n#3 0x558e500f844a <unknown>\n#4 0x558e500f67e1 <unknown>\n#5 0x558e500f718a <unknown>\n#6 0x558e5010807c <unknown>\n#7 0x558e501207c1 <unknown>\n#8 0x558e501266bb <unknown>\n#9 0x558e500f792d <unknown>\n#10 0x558e501205c2 <unknown>\n#11 0x558e501ab204 <unknown>\n#12 0x558e5018be53 <unknown>\n#13 0x558e50153dd4 <unknown>\n#14 0x558e501551de <unknown>\n#15 0x558e5041e531 <unknown>\n#16 0x558e50422455 <unknown>\n#17 0x558e5040af55 <unknown>\n#18 0x558e504230ef <unknown>\n#19 0x558e503ee99f <unknown>\n#20 0x558e50447008 <unknown>\n#21 0x558e504471d7 <unknown>\n#22 0x558e50459124 <unknown>\n#23 0x7f79d0894ac3 <unknown>","time":{"start":1704378182739,"stop":1704378487500,"duration":304761}},{"uid":"27a6e259b9675515","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1366//#testresult/27a6e259b9675515","status":"passed","time":{"start":1704375958123,"stop":1704375967788,"duration":9665}},{"uid":"e53bd77efd87a399","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1363//#testresult/e53bd77efd87a399","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x55c902f9cf83 <unknown>\n#1 0x55c902c55cf7 <unknown>\n#2 0x55c902c4d6ea <unknown>\n#3 0x55c902c3c5a1 <unknown>\n#4 0x55c902c3dd40 <unknown>\n#5 0x55c902c3c854 <unknown>\n#6 0x55c902c3b586 <unknown>\n#7 0x55c902c3b44a <unknown>\n#8 0x55c902c397e1 <unknown>\n#9 0x55c902c3a01a <unknown>\n#10 0x55c902c58bbe <unknown>\n#11 0x55c902cee7a5 <unknown>\n#12 0x55c902ccf0b2 <unknown>\n#13 0x55c902cee006 <unknown>\n#14 0x55c902ccee53 <unknown>\n#15 0x55c902c96dd4 <unknown>\n#16 0x55c902c981de <unknown>\n#17 0x55c902f61531 <unknown>\n#18 0x55c902f65455 <unknown>\n#19 0x55c902f4df55 <unknown>\n#20 0x55c902f660ef <unknown>\n#21 0x55c902f3199f <unknown>\n#22 0x55c902f8a008 <unknown>\n#23 0x55c902f8a1d7 <unknown>\n#24 0x55c902f9c124 <unknown>\n#25 0x7fce50a94ac3 <unknown>","time":{"start":1704356749965,"stop":1704356770907,"duration":20942}},{"uid":"ba326131d1821a83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1361//#testresult/ba326131d1821a83","status":"failed","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x556972ed0f83 <unknown>\n#1 0x556972b89cf7 <unknown>\n#2 0x556972b816ea <unknown>\n#3 0x556972b705a1 <unknown>\n#4 0x556972b71d40 <unknown>\n#5 0x556972b70854 <unknown>\n#6 0x556972b6f586 <unknown>\n#7 0x556972b6f44a <unknown>\n#8 0x556972b6d7e1 <unknown>\n#9 0x556972b6e01a <unknown>\n#10 0x556972b8cbbe <unknown>\n#11 0x556972c227a5 <unknown>\n#12 0x556972c030b2 <unknown>\n#13 0x556972c22006 <unknown>\n#14 0x556972c02e53 <unknown>\n#15 0x556972bcadd4 <unknown>\n#16 0x556972bcc1de <unknown>\n#17 0x556972e95531 <unknown>\n#18 0x556972e99455 <unknown>\n#19 0x556972e81f55 <unknown>\n#20 0x556972e9a0ef <unknown>\n#21 0x556972e6599f <unknown>\n#22 0x556972ebe008 <unknown>\n#23 0x556972ebe1d7 <unknown>\n#24 0x556972ed0124 <unknown>\n#25 0x7fb258894ac3 <unknown>","time":{"start":1704355896147,"stop":1704355917516,"duration":21369}},{"uid":"1a2ff2e291bf0951","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1359//#testresult/1a2ff2e291bf0951","status":"passed","time":{"start":1704331069886,"stop":1704331077257,"duration":7371}},{"uid":"5c359f18dcabc3ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1355//#testresult/5c359f18dcabc3ab","status":"passed","time":{"start":1704303709804,"stop":1704303718668,"duration":8864}},{"uid":"b103d3a59bd43cd6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1352//#testresult/b103d3a59bd43cd6","status":"passed","time":{"start":1704301393180,"stop":1704301402099,"duration":8919}}]},"tags":[]},"source":"345dc0b3ab50d194.json","parameterValues":["GatesheadCouncil","local","http://selenium:4444"]}