{"uid":"deb4ab68b338bd3f","name":"Validate Council Output [BristolCityCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"12cd5cff5f0b60d5399f518f476399d9","time":{"start":1699668891333,"stop":1699668896161,"duration":4828},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f23a5299080>\nrequest = <FixtureRequest for <Function test_scenario_outline[BristolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2397ab5110>, 'council': 'BristolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BristolCityCouncil.CouncilClass object at 0x7f2397c9f550>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '137547', 'url': 'https://bristolcouncil.powerappsportals.com/completedynamicformunauth/?servicetypeid=7dce896c-b3ba-ea11-a812-000d3a7f1cdc', ...}\nuser_uprn = '137547', s = <requests.sessions.Session object at 0x7f23a52ff850>\nservice_type_headers = {'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8', 'Accept-Language': 'en-GB,en;q=0.9', 'Cache-Control': 'max-age=0', 'Connection': 'keep-alive', ...}\nservice_type_params = {'servicetypeid': '7dce896c-b3ba-ea11-a812-000d3a7f1cdc'}\nresponse = <Response [200]>\nllpg_headers = {'Accept': '*/*', 'Accept-Language': 'en-GB,en;q=0.9', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '47ffd667d69c4a858f92fc38dc24b150', ...}\nllpg_uprn = 'UPRN137547'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n    \n        service_type_headers = {\n            \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,\"\n            \"image/webp,image/apng,*/*;q=0.8\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Cache-Control\": \"max-age=0\",\n            \"Connection\": \"keep-alive\",\n            \"Referer\": \"https://www.bristol.gov.uk/\",\n            \"Sec-Fetch-Dest\": \"document\",\n            \"Sec-Fetch-Mode\": \"navigate\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-Fetch-User\": \"?1\",\n            \"Sec-GPC\": \"1\",\n            \"Upgrade-Insecure-Requests\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, \"\n            \"like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        service_type_params = {\n            \"servicetypeid\": \"7dce896c-b3ba-ea11-a812-000d3a7f1cdc\",\n        }\n        response = s.get(\n            \"https://bristolcouncil.powerappsportals.com/completedynamicformunauth/\",\n            params=service_type_params,\n            headers=service_type_headers,\n        )\n    \n        llpg_headers = {\n            \"Accept\": \"*/*\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Connection\": \"keep-alive\",\n            \"Ocp-Apim-Subscription-Key\": \"47ffd667d69c4a858f92fc38dc24b150\",\n            \"Ocp-Apim-Trace\": \"true\",\n            \"Origin\": \"https://bristolcouncil.powerappsportals.com\",\n            \"Referer\": \"https://bristolcouncil.powerappsportals.com/\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, \"\n            \"like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        llpg_uprn = \"UPRN\" + user_uprn\n        llpg_json_data = {\n            \"Uprn\": llpg_uprn,\n        }\n        response = s.post(\n            \"https://bcprdapidyna002.azure-api.net/bcprdfundyna001-llpg/DetailedLLPG\",\n            headers=llpg_headers,\n            json=llpg_json_data,\n        )\n    \n        headers = {\n            \"Accept\": \"*/*\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Connection\": \"keep-alive\",\n            # Already added when you pass json=\n            # 'Content-Type': 'application/json',\n            \"Ocp-Apim-Subscription-Key\": \"47ffd667d69c4a858f92fc38dc24b150\",\n            \"Ocp-Apim-Trace\": \"true\",\n            \"Origin\": \"https://bristolcouncil.powerappsportals.com\",\n            \"Referer\": \"https://bristolcouncil.powerappsportals.com/\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        json_data = {\n            \"uprn\": user_uprn,\n        }\n        response = s.post(\n            \"https://bcprdapidyna002.azure-api.net/bcprdfundyna001-alloy/NextCollectionDates\",\n            headers=headers,\n            json=json_data,\n        )\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Soup returns API response rather than HTML, so parse those strings\n        string_data = soup.text.split(\"data\")[1]\n        collection_data = string_data.split(\"]}\")\n    \n        # Remove the spare ] and , characters at the of each list element\n        fixed_data = [i[1:] for i in collection_data]\n    \n        # Remove the last list element since it's garbage (funny since this is a bin project)\n        fixed_data.pop()\n        collection_data.clear()\n    \n        # Make some more changes:\n        idx = 0\n        for i in fixed_data:\n            if idx == 0:\n                # Remove two extra characters if it's the first element\n                i = i[2:]\n            # Append some characters to the end of each line to make to dict\n            i = i + \"]}\"\n            idx += 1\n            # Reuse the collection_data list to make a list of dictionaries - one for each bin\n            collection_data.append(ast.literal_eval(i))\n    \n        collections = []\n        for bin in collection_data:\n            bin_type = bin[\"containerName\"]\n            next_collection = datetime.strptime(\n>               bin[\"collection\"][0][\"nextCollectionDate\"], \"%Y-%m-%dT%H:%M:%S\"\n            ).strftime(date_format)\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/BristolCityCouncil.py:131: IndexError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f23a5299080>\nrequest = <FixtureRequest for <Function test_scenario_outline[BristolCityCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2397ab5110>, 'council': 'BristolCityCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BristolCityCouncil.CouncilClass object at 0x7f2397c9f550>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '137547', 'url': 'https://bristolcouncil.powerappsportals.com/completedynamicformunauth/?servicetypeid=7dce896c-b3ba-ea11-a812-000d3a7f1cdc', ...}\nuser_uprn = '137547', s = <requests.sessions.Session object at 0x7f23a52ff850>\nservice_type_headers = {'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8', 'Accept-Language': 'en-GB,en;q=0.9', 'Cache-Control': 'max-age=0', 'Connection': 'keep-alive', ...}\nservice_type_params = {'servicetypeid': '7dce896c-b3ba-ea11-a812-000d3a7f1cdc'}\nresponse = <Response [200]>\nllpg_headers = {'Accept': '*/*', 'Accept-Language': 'en-GB,en;q=0.9', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '47ffd667d69c4a858f92fc38dc24b150', ...}\nllpg_uprn = 'UPRN137547'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n    \n        service_type_headers = {\n            \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,\"\n            \"image/webp,image/apng,*/*;q=0.8\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Cache-Control\": \"max-age=0\",\n            \"Connection\": \"keep-alive\",\n            \"Referer\": \"https://www.bristol.gov.uk/\",\n            \"Sec-Fetch-Dest\": \"document\",\n            \"Sec-Fetch-Mode\": \"navigate\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-Fetch-User\": \"?1\",\n            \"Sec-GPC\": \"1\",\n            \"Upgrade-Insecure-Requests\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, \"\n            \"like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        service_type_params = {\n            \"servicetypeid\": \"7dce896c-b3ba-ea11-a812-000d3a7f1cdc\",\n        }\n        response = s.get(\n            \"https://bristolcouncil.powerappsportals.com/completedynamicformunauth/\",\n            params=service_type_params,\n            headers=service_type_headers,\n        )\n    \n        llpg_headers = {\n            \"Accept\": \"*/*\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Connection\": \"keep-alive\",\n            \"Ocp-Apim-Subscription-Key\": \"47ffd667d69c4a858f92fc38dc24b150\",\n            \"Ocp-Apim-Trace\": \"true\",\n            \"Origin\": \"https://bristolcouncil.powerappsportals.com\",\n            \"Referer\": \"https://bristolcouncil.powerappsportals.com/\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, \"\n            \"like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        llpg_uprn = \"UPRN\" + user_uprn\n        llpg_json_data = {\n            \"Uprn\": llpg_uprn,\n        }\n        response = s.post(\n            \"https://bcprdapidyna002.azure-api.net/bcprdfundyna001-llpg/DetailedLLPG\",\n            headers=llpg_headers,\n            json=llpg_json_data,\n        )\n    \n        headers = {\n            \"Accept\": \"*/*\",\n            \"Accept-Language\": \"en-GB,en;q=0.9\",\n            \"Connection\": \"keep-alive\",\n            # Already added when you pass json=\n            # 'Content-Type': 'application/json',\n            \"Ocp-Apim-Subscription-Key\": \"47ffd667d69c4a858f92fc38dc24b150\",\n            \"Ocp-Apim-Trace\": \"true\",\n            \"Origin\": \"https://bristolcouncil.powerappsportals.com\",\n            \"Referer\": \"https://bristolcouncil.powerappsportals.com/\",\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"cross-site\",\n            \"Sec-GPC\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36\",\n        }\n        json_data = {\n            \"uprn\": user_uprn,\n        }\n        response = s.post(\n            \"https://bcprdapidyna002.azure-api.net/bcprdfundyna001-alloy/NextCollectionDates\",\n            headers=headers,\n            json=json_data,\n        )\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Soup returns API response rather than HTML, so parse those strings\n        string_data = soup.text.split(\"data\")[1]\n        collection_data = string_data.split(\"]}\")\n    \n        # Remove the spare ] and , characters at the of each list element\n        fixed_data = [i[1:] for i in collection_data]\n    \n        # Remove the last list element since it's garbage (funny since this is a bin project)\n        fixed_data.pop()\n        collection_data.clear()\n    \n        # Make some more changes:\n        idx = 0\n        for i in fixed_data:\n            if idx == 0:\n                # Remove two extra characters if it's the first element\n                i = i[2:]\n            # Append some characters to the end of each line to make to dict\n            i = i + \"]}\"\n            idx += 1\n            # Reuse the collection_data list to make a list of dictionaries - one for each bin\n            collection_data.append(ast.literal_eval(i))\n    \n        collections = []\n        for bin in collection_data:\n            bin_type = bin[\"containerName\"]\n            next_collection = datetime.strptime(\n>               bin[\"collection\"][0][\"nextCollectionDate\"], \"%Y-%m-%dT%H:%M:%S\"\n            ).strftime(date_format)\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/BristolCityCouncil.py:131: IndexError","steps":[{"name":"Given the council: BristolCityCouncil","time":{"start":1699668891334,"stop":1699668891335,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BristolCityCouncil using None and the None is set","time":{"start":1699668891335,"stop":1699668896161,"duration":4826},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az452-277"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BristolCityCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":11},"items":[{"uid":"3f7b245870320cf9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/3f7b245870320cf9","status":"passed","time":{"start":1699578916435,"stop":1699578921306,"duration":4871}},{"uid":"85a1057bfecc7350","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/85a1057bfecc7350","status":"passed","time":{"start":1699492585370,"stop":1699492590369,"duration":4999}},{"uid":"18ef49d5868d4187","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/18ef49d5868d4187","status":"passed","time":{"start":1699481264523,"stop":1699481269901,"duration":5378}},{"uid":"aa06bc947ab70839","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/aa06bc947ab70839","status":"passed","time":{"start":1699481286942,"stop":1699481291901,"duration":4959}},{"uid":"96f901b7a700e1eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/96f901b7a700e1eb","status":"passed","time":{"start":1699445052267,"stop":1699445057632,"duration":5365}},{"uid":"2ad92ec54a8c0033","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1115//#testresult/2ad92ec54a8c0033","status":"passed","time":{"start":1699406124370,"stop":1699406129152,"duration":4782}},{"uid":"3af7dca5758e4ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1114//#testresult/3af7dca5758e4ff","status":"passed","time":{"start":1699319787526,"stop":1699319792241,"duration":4715}},{"uid":"fd5e0619067735c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1113//#testresult/fd5e0619067735c3","status":"passed","time":{"start":1699233450984,"stop":1699233458760,"duration":7776}},{"uid":"21210ccc0a06bdab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1111//#testresult/21210ccc0a06bdab","status":"passed","time":{"start":1699170664467,"stop":1699170770664,"duration":106197}},{"uid":"3ef560f909784aa5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1112//#testresult/3ef560f909784aa5","status":"passed","time":{"start":1699170678659,"stop":1699170714134,"duration":35475}}]},"tags":[]},"source":"deb4ab68b338bd3f.json","parameterValues":["BristolCityCouncil","None","None"]}