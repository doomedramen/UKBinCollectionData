{"uid":"7ea33d0df9f58436","name":"Validate Council Output [BracknellForestCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"00315a6608330e025d94870d2a74e0d6","time":{"start":1718152190929,"stop":1718152190932,"duration":3},"status":"failed","statusMessage":"SystemExit: 1","statusTrace":"paon = None\n\n    def check_paon(paon: str):\n        \"\"\"\n        Checks that PAON data exists\n            :param paon: PAON data to check, usually house number\n        \"\"\"\n        try:\n            if paon is None:\n>               raise ValueError(\"Invalid house number\")\nE               ValueError: Invalid house number\n\nuk_bin_collection/uk_bin_collection/common.py:59: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\nfixturefunc = <function scrape_step at 0x7f86174214e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BracknellForestCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f86170c4050>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BracknellForestCouncil.py:210: in parse_data\n    check_paon(paon)\nuk_bin_collection/uk_bin_collection/common.py:64: in check_paon\n    exit(1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Use exit() or Ctrl-D (i.e. EOF) to exit, code = 1\n\n>   ???\nE   SystemExit: 1\n\n<frozen _sitebuiltins>:26: SystemExit","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"SystemExit: 1","statusTrace":"paon = None\n\n    def check_paon(paon: str):\n        \"\"\"\n        Checks that PAON data exists\n            :param paon: PAON data to check, usually house number\n        \"\"\"\n        try:\n            if paon is None:\n>               raise ValueError(\"Invalid house number\")\nE               ValueError: Invalid house number\n\nuk_bin_collection/uk_bin_collection/common.py:59: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\nfixturefunc = <function scrape_step at 0x7f86174214e0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BracknellForestCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f86170c4050>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:102: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:80: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/BracknellForestCouncil.py:210: in parse_data\n    check_paon(paon)\nuk_bin_collection/uk_bin_collection/common.py:64: in check_paon\n    exit(1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Use exit() or Ctrl-D (i.e. EOF) to exit, code = 1\n\n>   ???\nE   SystemExit: 1\n\n<frozen _sitebuiltins>:26: SystemExit","steps":[{"name":"Given the council","time":{"start":1718152190929,"stop":1718152190930,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1718152190930,"stop":1718152191048,"duration":118},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"5f8bd22f6c9e6db1","name":"stdout","source":"5f8bd22f6c9e6db1.txt","type":"text/plain","size":133}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az523-713"},{"name":"thread","value":"2776-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BracknellForestCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":21},"items":[{"uid":"70a146d41e962430","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1937//#testresult/70a146d41e962430","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1718065792081,"stop":1718065792084,"duration":3}},{"uid":"6d5ec6329827b49e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1936//#testresult/6d5ec6329827b49e","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717979490952,"stop":1717979490955,"duration":3}},{"uid":"736f3f0ae070f74e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1934//#testresult/736f3f0ae070f74e","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717893193171,"stop":1717893193174,"duration":3}},{"uid":"6099f8306c704cfe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1933//#testresult/6099f8306c704cfe","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717806618368,"stop":1717806618371,"duration":3}},{"uid":"3b1c44374ab60c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1932//#testresult/3b1c44374ab60c1","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717720219772,"stop":1717720219775,"duration":3}},{"uid":"422de574b5bf8be5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1927//#testresult/422de574b5bf8be5","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717633817751,"stop":1717633817755,"duration":4}},{"uid":"dfa5e203b15cc43a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1924//#testresult/dfa5e203b15cc43a","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717547388181,"stop":1717547388185,"duration":4}},{"uid":"7fc2dcdba38128c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1923//#testresult/7fc2dcdba38128c1","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717460947773,"stop":1717460947777,"duration":4}},{"uid":"1420feca62b3d85f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1921//#testresult/1420feca62b3d85f","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717374671418,"stop":1717374671421,"duration":3}},{"uid":"595c0ba79312e9d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1919//#testresult/595c0ba79312e9d4","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717331847193,"stop":1717331847196,"duration":3}},{"uid":"4ad8026591fb531f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1911//#testresult/4ad8026591fb531f","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717316334914,"stop":1717316334917,"duration":3}},{"uid":"b081aedeeea4953c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1908//#testresult/b081aedeeea4953c","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717288303835,"stop":1717288303838,"duration":3}},{"uid":"c22bf9fbe7187102","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1905//#testresult/c22bf9fbe7187102","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717201918429,"stop":1717201918432,"duration":3}},{"uid":"76aaaed434b1c1b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1904//#testresult/76aaaed434b1c1b6","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717115309330,"stop":1717115309333,"duration":3}},{"uid":"a78014ed97471bc4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1903//#testresult/a78014ed97471bc4","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1717028973823,"stop":1717028973827,"duration":4}},{"uid":"dfb1121bb4a7a8ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1898//#testresult/dfb1121bb4a7a8ac","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1716942697606,"stop":1716942697609,"duration":3}},{"uid":"98c2f215b843ae7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1893//#testresult/98c2f215b843ae7c","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1716856135300,"stop":1716856135303,"duration":3}},{"uid":"9d3f0c40975afd09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1883//#testresult/9d3f0c40975afd09","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1716769837168,"stop":1716769837171,"duration":3}},{"uid":"901e73ab6547d42f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1881//#testresult/901e73ab6547d42f","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1716753174385,"stop":1716753174390,"duration":5}},{"uid":"acc4d9614027da99","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1877//#testresult/acc4d9614027da99","status":"failed","statusDetails":"SystemExit: 1","time":{"start":1716743316744,"stop":1716743316748,"duration":4}}]},"tags":[]},"source":"7ea33d0df9f58436.json","parameterValues":["BracknellForestCouncil"]}