{"uid":"9066918ed2e024b9","name":"Validate Council Output [SwanseaCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2cd79e784bcbfa4417889a1e970aa426","time":{"start":1720572666545,"stop":1720572709226,"duration":42681},"status":"failed","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"fixturefunc = <function scrape_step at 0x7f558b4c6fc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwanseaCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f558c8f8310>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SwanseaCouncil.py:38: in parse_data\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"fixturefunc = <function scrape_step at 0x7f558b4c6fc0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwanseaCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f558c8f8310>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:887: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SwanseaCouncil.py:38: in parse_data\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"Given the council","time":{"start":1720572666545,"stop":1720572666546,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1720572666546,"stop":1720572709226,"duration":42680},"status":"failed","statusMessage":"502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"99923b52126983af","name":"stdout","source":"99923b52126983af.txt","type":"text/plain","size":41}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1383-17"},{"name":"thread","value":"2790-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwanseaCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":38},"items":[{"uid":"44f4bc6f511af09a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1976//#testresult/44f4bc6f511af09a","status":"passed","time":{"start":1720485895830,"stop":1720485897372,"duration":1542}},{"uid":"47dd8b8afe8f5ff2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1975//#testresult/47dd8b8afe8f5ff2","status":"passed","time":{"start":1720399349345,"stop":1720399350344,"duration":999}},{"uid":"2b964ae7cf0edf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1971//#testresult/2b964ae7cf0edf","status":"passed","time":{"start":1720313287124,"stop":1720313289356,"duration":2232}},{"uid":"158a9b20ee61b414","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1970//#testresult/158a9b20ee61b414","status":"passed","time":{"start":1720226752414,"stop":1720226753549,"duration":1135}},{"uid":"f71ce5a991c84273","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1969//#testresult/f71ce5a991c84273","status":"passed","time":{"start":1720139990605,"stop":1720139991637,"duration":1032}},{"uid":"962cec740006b675","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1968//#testresult/962cec740006b675","status":"passed","time":{"start":1720053641323,"stop":1720053642829,"duration":1506}},{"uid":"8328c250681d3a7c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1967//#testresult/8328c250681d3a7c","status":"passed","time":{"start":1719967089247,"stop":1719967090355,"duration":1108}},{"uid":"146b50df67420f0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1966//#testresult/146b50df67420f0a","status":"passed","time":{"start":1719880994597,"stop":1719880995761,"duration":1164}},{"uid":"f0ffc3944b757d15","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1965//#testresult/f0ffc3944b757d15","status":"passed","time":{"start":1719794883871,"stop":1719794885050,"duration":1179}},{"uid":"1951e093bdb91059","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1964//#testresult/1951e093bdb91059","status":"passed","time":{"start":1719708520889,"stop":1719708521948,"duration":1059}},{"uid":"66834f8807fb4b1b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1962//#testresult/66834f8807fb4b1b","status":"passed","time":{"start":1719621485825,"stop":1719621486991,"duration":1166}},{"uid":"40d9a5b998b5e091","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1958//#testresult/40d9a5b998b5e091","status":"passed","time":{"start":1719535054599,"stop":1719535055694,"duration":1095}},{"uid":"cccaeca08b0b0b2f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1954//#testresult/cccaeca08b0b0b2f","status":"passed","time":{"start":1719362736610,"stop":1719362737667,"duration":1057}},{"uid":"c7e8993ea77af2a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1953//#testresult/c7e8993ea77af2a2","status":"passed","time":{"start":1719276254298,"stop":1719276255139,"duration":841}},{"uid":"8fff05e43eb449ca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1952//#testresult/8fff05e43eb449ca","status":"passed","time":{"start":1719190031004,"stop":1719190032258,"duration":1254}},{"uid":"f3c0665917a82504","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1951//#testresult/f3c0665917a82504","status":"passed","time":{"start":1719103546396,"stop":1719103547331,"duration":935}},{"uid":"d58f7a30de1c0498","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1950//#testresult/d58f7a30de1c0498","status":"passed","time":{"start":1719017132337,"stop":1719017133404,"duration":1067}},{"uid":"c3c4e40a4e193d5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1949//#testresult/c3c4e40a4e193d5c","status":"passed","time":{"start":1718930771897,"stop":1718930772942,"duration":1045}},{"uid":"27cce65ec2512f3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1948//#testresult/27cce65ec2512f3f","status":"passed","time":{"start":1718844228687,"stop":1718844229915,"duration":1228}},{"uid":"b9d28c5d5067eb4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1947//#testresult/b9d28c5d5067eb4b","status":"passed","time":{"start":1718757947321,"stop":1718757948820,"duration":1499}}]},"tags":[]},"source":"9066918ed2e024b9.json","parameterValues":["SwanseaCouncil"]}