{"uid":"13649711af4e1416","name":"Validate Council Output [BromleyBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"f99c7ea76f01e7f999185ee0dfc6d3a7","time":{"start":1699492590371,"stop":1699492594894,"duration":4523},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f22e8024f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f22d4a1b890>, 'council': 'BromleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BromleyBoroughCouncil.CouncilClass object at 0x7f22d48bd290>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://recyclingservices.bromley.gov.uk/waste/6087017', ...}\nsoup = \n<!DOCTYPE html>\n\n<!--[if IE 9]>   <html class=\"no-js ie9\" lang=\"en-gb\"><![endif]-->\n<!--[if gt IE 9]><!--><html class...uto.min.2da37c91514a.js\"></script>\n<script src=\"/static/vendor/dropzone.min.1c52d40bf872.js\"></script>\n</body>\n</html>\n\nbin_data_dict = {'bins': []}\ncollections = [('Mixed Recycling (Cans, Plastics & Glass)', datetime.datetime(2023, 11, 10, 0, 0)), ('Non-Recyclable Refuse', dateti...), ('Paper & Cardboard', datetime.datetime(2023, 11, 17, 0, 0)), ('Food Waste', datetime.datetime(2023, 11, 10, 0, 0))]\nbin_types = [<h3 class=\"govuk-heading-m waste-service-name\">\n          Mixed Recycling (Cans, Plastics &amp; Glass)\n          \n   ...\">Bulky Waste</h3>, <h3 class=\"govuk-heading-m waste-service-name\">Batteries, small electrical items and textiles</h3>]\ncollection_info = [<dl class=\"govuk-summary-list\">\n<div class=\"govuk-summary-list__row\">\n<dt class=\"govuk-summary-list__key\">Frequency</...ss=\"govuk-summary-list__value\">\n<p class=\"govuk-!-margin-bottom-0\"><strong>From £36.00</strong></p>\n</dd>\n</div>\n</dl>]\nidx = 4\nvalue = <dl class=\"govuk-summary-list govuk-!-margin-bottom-0\">\n<div class=\"govuk-summary-list__row\">\n<dt class=\"govuk-summary...ass=\"govuk-summary-list__value\">\n<p class=\"govuk-!-margin-bottom-0\"><strong>From £36.00</strong></p>\n</dd>\n</div>\n</dl>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        bin_data_dict = {\"bins\": []}\n        collections = []\n    \n    \n        # Search for the specific bins in the table using BS4\n        bin_types = soup.find_all(\"h3\", class_=\"govuk-heading-m waste-service-name\")\n        collection_info = soup.find_all(\"dl\", {\"class\": \"govuk-summary-list\"})\n    \n        # Raise error if data is not loaded at time of scrape (30% chance it is)\n        if len(bin_types) == 0:\n            raise ConnectionError(\"Error fetching council data: data absent when page was scraped.\")\n    \n        # Parse the data\n        for idx, value in enumerate(collection_info):\n            bin_type = bin_types[idx].text.strip()\n>           collection_date = value.contents[3].contents[3].text.strip()\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/BromleyBoroughCouncil.py:38: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"fixturefunc = <function scrape_step at 0x7f22e8024f40>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f22d4a1b890>, 'council': 'BromleyBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BromleyBoroughCouncil.CouncilClass object at 0x7f22d48bd290>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': None, 'url': 'https://recyclingservices.bromley.gov.uk/waste/6087017', ...}\nsoup = \n<!DOCTYPE html>\n\n<!--[if IE 9]>   <html class=\"no-js ie9\" lang=\"en-gb\"><![endif]-->\n<!--[if gt IE 9]><!--><html class...uto.min.2da37c91514a.js\"></script>\n<script src=\"/static/vendor/dropzone.min.1c52d40bf872.js\"></script>\n</body>\n</html>\n\nbin_data_dict = {'bins': []}\ncollections = [('Mixed Recycling (Cans, Plastics & Glass)', datetime.datetime(2023, 11, 10, 0, 0)), ('Non-Recyclable Refuse', dateti...), ('Paper & Cardboard', datetime.datetime(2023, 11, 17, 0, 0)), ('Food Waste', datetime.datetime(2023, 11, 10, 0, 0))]\nbin_types = [<h3 class=\"govuk-heading-m waste-service-name\">\n          Mixed Recycling (Cans, Plastics &amp; Glass)\n          \n   ...\">Bulky Waste</h3>, <h3 class=\"govuk-heading-m waste-service-name\">Batteries, small electrical items and textiles</h3>]\ncollection_info = [<dl class=\"govuk-summary-list\">\n<div class=\"govuk-summary-list__row\">\n<dt class=\"govuk-summary-list__key\">Frequency</...ss=\"govuk-summary-list__value\">\n<p class=\"govuk-!-margin-bottom-0\"><strong>From £36.00</strong></p>\n</dd>\n</div>\n</dl>]\nidx = 4\nvalue = <dl class=\"govuk-summary-list govuk-!-margin-bottom-0\">\n<div class=\"govuk-summary-list__row\">\n<dt class=\"govuk-summary...ass=\"govuk-summary-list__value\">\n<p class=\"govuk-!-margin-bottom-0\"><strong>From £36.00</strong></p>\n</dd>\n</div>\n</dl>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        bin_data_dict = {\"bins\": []}\n        collections = []\n    \n    \n        # Search for the specific bins in the table using BS4\n        bin_types = soup.find_all(\"h3\", class_=\"govuk-heading-m waste-service-name\")\n        collection_info = soup.find_all(\"dl\", {\"class\": \"govuk-summary-list\"})\n    \n        # Raise error if data is not loaded at time of scrape (30% chance it is)\n        if len(bin_types) == 0:\n            raise ConnectionError(\"Error fetching council data: data absent when page was scraped.\")\n    \n        # Parse the data\n        for idx, value in enumerate(collection_info):\n            bin_type = bin_types[idx].text.strip()\n>           collection_date = value.contents[3].contents[3].text.strip()\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/BromleyBoroughCouncil.py:38: IndexError","steps":[{"name":"Given the council: BromleyBoroughCouncil","time":{"start":1699492590371,"stop":1699492590372,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BromleyBoroughCouncil using None and the None is set","time":{"start":1699492590372,"stop":1699492594894,"duration":4522},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1052-290"},{"name":"thread","value":"2738-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BromleyBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":9},"items":[{"uid":"868b6aac06a2a58f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/868b6aac06a2a58f","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699481269904,"stop":1699481271112,"duration":1208}},{"uid":"32318215f0d145","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/32318215f0d145","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699481291903,"stop":1699481293176,"duration":1273}},{"uid":"a5936f08a8db0b4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/a5936f08a8db0b4b","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699445057634,"stop":1699445058734,"duration":1100}},{"uid":"cddb3a2d6397e53d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1115//#testresult/cddb3a2d6397e53d","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699406129154,"stop":1699406130248,"duration":1094}},{"uid":"fdf528cd890cbfad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1114//#testresult/fdf528cd890cbfad","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699319792244,"stop":1699319793159,"duration":915}},{"uid":"6dd0dc8bd6101e87","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1113//#testresult/6dd0dc8bd6101e87","status":"passed","time":{"start":1699233458763,"stop":1699233462458,"duration":3695}},{"uid":"5ad69e04939afda0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1111//#testresult/5ad69e04939afda0","status":"failed","statusDetails":"ConnectionError: Error fetching council data: data absent when page was scraped.","time":{"start":1699170770668,"stop":1699170771701,"duration":1033}},{"uid":"2173c584c88331c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1112//#testresult/2173c584c88331c1","status":"passed","time":{"start":1699170714141,"stop":1699170718219,"duration":4078}}]},"tags":[]},"source":"13649711af4e1416.json","parameterValues":["BromleyBoroughCouncil","None","None"]}