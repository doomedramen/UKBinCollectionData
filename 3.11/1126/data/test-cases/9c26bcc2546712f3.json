{"uid":"9c26bcc2546712f3","name":"Validate Council Output [NeathPortTalbotCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"68717d64a9b5b73045a4198b6f1e2a64","time":{"start":1699752276784,"stop":1699752317055,"duration":40271},"status":"failed","statusMessage":"ValueError: time data 'Monday, 13\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f4662905080>\nrequest = <FixtureRequest for <Function test_scenario_outline[NeathPortTalbotCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f464f025350>, 'council': 'NeathPortTalbotCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NeathPortTalbotCouncil.py:92: in parse_data\n    bin_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Monday, 13\\xa0November (Tomorrow) 2023', format = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Monday, 13\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Monday, 13\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'","statusTrace":"fixturefunc = <function scrape_step at 0x7f4662905080>\nrequest = <FixtureRequest for <Function test_scenario_outline[NeathPortTalbotCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f464f025350>, 'council': 'NeathPortTalbotCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:75: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:71: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:78: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:65: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:71: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NeathPortTalbotCouncil.py:92: in parse_data\n    bin_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Monday, 13\\xa0November (Tomorrow) 2023', format = '%A, %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Monday, 13\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: NeathPortTalbotCouncil","time":{"start":1699752276784,"stop":1699752276784,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from NeathPortTalbotCouncil using local and the http://selenium:4444 is set","time":{"start":1699752276784,"stop":1699752317055,"duration":40271},"status":"failed","statusMessage":"time data 'Monday, 13\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'","statusTrace":"ValueError: time data 'Monday, 13\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1429-482"},{"name":"thread","value":"2749-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NeathPortTalbotCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":12},"items":[{"uid":"82be1ce53abebfef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/82be1ce53abebfef","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (589, 627)\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x562e6498bfb3 <unknown>\n#1 0x562e6465f4a7 <unknown>\n#2 0x562e646acecd <unknown>\n#3 0x562e646ab26d <unknown>\n#4 0x562e646a9028 <unknown>\n#5 0x562e646a8097 <unknown>\n#6 0x562e6469cd59 <unknown>\n#7 0x562e646c8942 <unknown>\n#8 0x562e6469c776 <unknown>\n#9 0x562e646c8b0e <unknown>\n#10 0x562e646e1c02 <unknown>\n#11 0x562e646c8713 <unknown>\n#12 0x562e6469b18b <unknown>\n#13 0x562e6469bf7e <unknown>\n#14 0x562e649518d8 <unknown>\n#15 0x562e64955800 <unknown>\n#16 0x562e6495fcfc <unknown>\n#17 0x562e64956418 <unknown>\n#18 0x562e6492342f <unknown>\n#19 0x562e6497a4e8 <unknown>\n#20 0x562e6497a6b4 <unknown>\n#21 0x562e6498b143 <unknown>\n#22 0x7fa51d494ac3 <unknown>","time":{"start":1699669148170,"stop":1699669186280,"duration":38110}},{"uid":"a5cfc4ea0f5197bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/a5cfc4ea0f5197bb","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (589, 636)\n  (Session info: headless chrome=118.0.5993.117)\nStacktrace:\n#0 0x55d870118fb3 <unknown>\n#1 0x55d86fdec4a7 <unknown>\n#2 0x55d86fe39ecd <unknown>\n#3 0x55d86fe3826d <unknown>\n#4 0x55d86fe36028 <unknown>\n#5 0x55d86fe35097 <unknown>\n#6 0x55d86fe29d59 <unknown>\n#7 0x55d86fe55942 <unknown>\n#8 0x55d86fe29776 <unknown>\n#9 0x55d86fe55b0e <unknown>\n#10 0x55d86fe6ec02 <unknown>\n#11 0x55d86fe55713 <unknown>\n#12 0x55d86fe2818b <unknown>\n#13 0x55d86fe28f7e <unknown>\n#14 0x55d8700de8d8 <unknown>\n#15 0x55d8700e2800 <unknown>\n#16 0x55d8700eccfc <unknown>\n#17 0x55d8700e3418 <unknown>\n#18 0x55d8700b042f <unknown>\n#19 0x55d8701074e8 <unknown>\n#20 0x55d8701076b4 <unknown>\n#21 0x55d870118143 <unknown>\n#22 0x7fe92ae94ac3 <unknown>","time":{"start":1699578954744,"stop":1699578959891,"duration":5147}},{"uid":"32300b4dfe6982d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/32300b4dfe6982d0","status":"passed","time":{"start":1699492636340,"stop":1699492662015,"duration":25675}},{"uid":"519a4a4c1ff0de87","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/519a4a4c1ff0de87","status":"failed","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: Cannot locate option with value: 10023947752; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception","time":{"start":1699481537685,"stop":1699481552003,"duration":14318}},{"uid":"8a44c2ff773661c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/8a44c2ff773661c4","status":"passed","time":{"start":1699481455950,"stop":1699481479154,"duration":23204}},{"uid":"b45dba061473c059","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/b45dba061473c059","status":"passed","time":{"start":1699445103950,"stop":1699445115668,"duration":11718}},{"uid":"a6831244b9188e62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1115//#testresult/a6831244b9188e62","status":"passed","time":{"start":1699406163303,"stop":1699406174033,"duration":10730}},{"uid":"6e09a501106b2aa2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1114//#testresult/6e09a501106b2aa2","status":"passed","time":{"start":1699319881328,"stop":1699319887233,"duration":5905}},{"uid":"7a90d07bc399556","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1113//#testresult/7a90d07bc399556","status":"failed","statusDetails":"ValueError: time data 'Monday, 6\\xa0November (Today) 2023' does not match format '%A, %d %B %Y'","time":{"start":1699233554454,"stop":1699233560605,"duration":6151}},{"uid":"e3da6c4819dbb5ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1111//#testresult/e3da6c4819dbb5ac","status":"failed","statusDetails":"ValueError: time data 'Monday, 6\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'","time":{"start":1699171029492,"stop":1699171051960,"duration":22468}},{"uid":"a968f9cb681df951","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1112//#testresult/a968f9cb681df951","status":"failed","statusDetails":"ValueError: time data 'Monday, 6\\xa0November (Tomorrow) 2023' does not match format '%A, %d %B %Y'","time":{"start":1699170745216,"stop":1699170756492,"duration":11276}}]},"tags":[]},"source":"9c26bcc2546712f3.json","parameterValues":["NeathPortTalbotCouncil","local","http://selenium:4444"]}