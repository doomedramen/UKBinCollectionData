{"uid":"27cee0523e0abd24","name":"Validate Council Output [TorridgeDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"da903249529007ec357275ac5f075b6c","time":{"start":1699752239654,"stop":1699752242562,"duration":2908},"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc89ca7f1a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc888fa7350>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc888fa7350>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: True","statusTrace":"fixturefunc = <function validate_output_step at 0x7fc89ca7f1a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorridgeDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fc888fa7350>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:102: in validate_output_step\n    raise (err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7fc888fa7350>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"output.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert_that(schema_result, True)\nE           AssertionError: True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:97: AssertionError","steps":[{"name":"Given the council: TorridgeDistrictCouncil","time":{"start":1699752239654,"stop":1699752239654,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from TorridgeDistrictCouncil using None and the None is set","time":{"start":1699752239655,"stop":1699752242560,"duration":2905},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1699752242561,"stop":1699752242561,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1699752242561,"stop":1699752242562,"duration":1},"status":"failed","statusMessage":"True","statusTrace":"AssertionError: True\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1429-482"},{"name":"thread","value":"2746-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorridgeDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":12},"items":[{"uid":"a2360668d82a9b2b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1125//#testresult/a2360668d82a9b2b","status":"passed","time":{"start":1699669275335,"stop":1699669278718,"duration":3383}},{"uid":"78ed849d8b47a293","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1124//#testresult/78ed849d8b47a293","status":"passed","time":{"start":1699579136910,"stop":1699579140312,"duration":3402}},{"uid":"b5176727bb4e5ca5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1123//#testresult/b5176727bb4e5ca5","status":"passed","time":{"start":1699492805305,"stop":1699492808268,"duration":2963}},{"uid":"405ad22cff090202","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1121//#testresult/405ad22cff090202","status":"passed","time":{"start":1699481715064,"stop":1699481718243,"duration":3179}},{"uid":"21ba99cba006663a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1122//#testresult/21ba99cba006663a","status":"passed","time":{"start":1699481548867,"stop":1699481551796,"duration":2929}},{"uid":"55068c873b01a655","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1117//#testresult/55068c873b01a655","status":"passed","time":{"start":1699445156667,"stop":1699445159823,"duration":3156}},{"uid":"b55ddcf55011acfe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1115//#testresult/b55ddcf55011acfe","status":"passed","time":{"start":1699406293957,"stop":1699406296766,"duration":2809}},{"uid":"d658084e51aab0a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1114//#testresult/d658084e51aab0a2","status":"passed","time":{"start":1699320110752,"stop":1699320113491,"duration":2739}},{"uid":"a7095c5b86a0eaa7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1113//#testresult/a7095c5b86a0eaa7","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699233771292,"stop":1699233774261,"duration":2969}},{"uid":"d40d2341ed0e3bab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1111//#testresult/d40d2341ed0e3bab","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699171225567,"stop":1699171228905,"duration":3338}},{"uid":"fb20b5563a3ae7d5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/1112//#testresult/fb20b5563a3ae7d5","status":"failed","statusDetails":"AssertionError: True","time":{"start":1699170947440,"stop":1699170950269,"duration":2829}}]},"tags":[]},"source":"27cee0523e0abd24.json","parameterValues":["TorridgeDistrictCouncil","None","None"]}